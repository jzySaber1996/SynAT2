[{"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 164, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 251, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wx xk s   bu.    m to are a no to l ,  and e \"xx s \" xx be th  at  . hxx xxr e  d  xs asxd xt  y  k t xy es n e e.  xxd    b p  e e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    d d yx, te xa  e . in pa   to g poxxp e  m f e  et.  y  k te  s o   y  xx d s o y  x l e f xh xxt  pp b  e xm  xxxd xo xx pox  o  x hoxxxxe p x x pr a om xt  fo t o a   e k  xx r xd o, xt a xxl t -cxe xl o ick d pxp xx xxy n d some i xxxd xx exxd xxx x t t . he xxxr a  c trud k  ad xy  xxo a  xn p d  . m ,  xxt b xx   ick  p  t o  xt   of  f  c k e . e x  d  ixxy  xy xxx xx  x xxxxd wh h  e x p ixt  e  clik xn  y pxg k s xe pxx r m ast   x on d   e  by my uxxxxxx the y i  s xs  expd a a f y to x mih  fo s r  cuxy xp e \" us h xxs xx e  d   d   o e   \"   x xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt , etx. n a  ts rex,   t  he sec  x p xy t o  not u poxxp gh   f xxe  s   prom x r y i xx  x importat be  xxxy s txe e x  x  xxxd cu d xy f xh  e us a   oe  es n xxxh trusted  d  txo that   l xxx y  x r their  by own com a pxx y r d  x te s xr xxs  g xxxxxxx. "}, {"sentId": 63, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 133, "text": "a brute force password guessing attack", "label": "ATTACK"}], "sentText": "d gg s ane w of a django p password  gg  wc md oes ? h  o can be used to extend do auh and lo and  guessig ck be  account and s i  f a brute force password guessing attack is mount guessing   ed gug ? "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 115, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am  [ i co] g wh i  mae  e uplos to att.  a we d e cheg  ud  and i found ou sure t a bece bout t  than upld hese decompression bomb attacks tt c is an take place to  wn it's all to owd to upload [code] s,     i file decompre (and sn s (and e other. sin become ce i am going to chane  am the uploaded im, are  i t to make sure i dont become checking tn   a  be to e  heades victm of  n  headers ts attac  k. so  t when it cos to checkig if a []   file is a b headers o with mb, can   i u not st read the file's headers and me sure th than at width and height are not more meth? s   tn t foud  wht  e? he set  image ? s, limit, like 4000x4000 o b r w? s is   not it a valid metho decompressn d? or  cheg what is the  e bettr way to  me , tho? go? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 93, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 178, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxxxs e  e a a e   xxxxxe \" xxxxxxxx. e s clic is king  cn  e an  e  xe po br xn ow pxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t  xy  an the ck if t  xxxxt et a bu  d e gx n .  y, e n ,  d  pxxe xf the xx well-crafxe t d xe xx of   xxd do xt  brow y si t xs x, b e u xs t a xe  wellxxxa e    sey fted  te pop n t th xs e  xs user axd x xxxxy xy   t xe dy   b e ad xxxh xe xxxxy  x an xe xxn s e d y sey  y uxxxy s t ites xs a y o \" s d o esxx o xxxy xs  fe d  e popus  ,  t etx. i xxxd n s  n , te sey t of e prm reaxy i e s e sy xs  of e u d ss con on xxl or  sey  xx thr on xo y mxxxr a i a s  t d xxxxr browsi a messxxe  xg  ad dex. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 125, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 209, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wn d ds ar waxe e a  and ed  na ad xl hs e xxxxx\" xxxxxx. hose sxxs a exxxo t r a ited n us xd e po bu u  us trk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s en j xe t t y e  pxxp cl   r  sites  g ick itsel but f t exploit   re,  a bu e g).  yes, xxe maxn page f xxe sie cxxd xo tt , bt a weld pp he p can dt the user and y  own  xxxh nt tly  be dir reay ec e xxy s y sd t xt us c. h t xe e hose i xxxxd n p but a d ge.pop w the xn ups w xxx, e  cou n ld tr re xxxxxd by may unsy xxxxs as a wy to xxxa  e xxl k w  are p\" uxs d to e hxe sse xxxxxy xy fe ad xx, etc. in s , th e cod s e sy t xf the xm reay is xxe secy f xxe  ino he  xxxxxs c  e s ol an  y d d  oxxr r  xxe n r and tr g de may xxxxs n e oa . "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 145, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 241, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 343, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn xxt   wixl d txxxxs bee , n mexxxxxd is o xm  xxxt xxg pxx:    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  crea more te    3) when confirmed, the user is asked to change password how to x, it thi a s op the  xxxxxxxe n   to me  a [code] attack? xf    e sxg a m th porary ps oxxr the e i  to the s t to an xm ) hae  ail i  secure  howevxr xr s ins, wxa   g ts t s 3) ixxxx: he dif t he o fexxxxe  if betn g that xxr sxxxxe ,  xxd s contxxxxxg imp e ly g a unique ul which te attacker can  randm e xx? have  bette i mxxxd a key stp xxxxe  m ranm e xo we that l mxe thxs a bxxxe nd  sy random stem xxe xxxu xn   the g xe (or is t r em axm he eseg e a bee xxxxw eset i ting s r way o r i  f r  esetting th 2) e pd s )? "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 105, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 156, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 232, "text": "extracts it", "label": "ATTACK"}, {"start": 261, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "bt wt   if  d a  ue xxxxxxxu   f s s [l xo ixxx?  e sxxe  xxxxt w xn xl f t  l a  k xxxxxxu e  f  pe a t make some simple get request (by [link]) in r  t o download the page containing the antiforgery token in a hidden input field, extracts it   se , an what d use it to make a valid [link]?  "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 530, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 565, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goi and xg to use h to e  fetch mails d cos frm     gxxxxx.  frxm i don't want to axk th x e user eh time to    and log  i in to n xn  secuxxxy ac about ces ton xxd secxxx. frxm wh to t i an  , i nex t encr about yption he  frxm d to s to t xg ore th th em wi  or with th my an xxr in a   databas cod. e or [ easy [  cod. but bxt  i  ut xm a bxt wod about secx don't xxxy s wh an  . i d tha th t decrypt   b x encryption xu can e b e ut n gxxxxx. crypt and i  decrypt the tokexs t it is to  easy i  for  n a e n at  r to jut decompile your apk and classes and get the encryption key.what' cos s   the bet methxd to secuxxxy wod  xxe t x h use e tos xn  is an e d? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 82, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo data.  a l door e px  ase. in t o pug f   haxxxxg a a  pxd is in caxe a hacr gets access to the database. if i stoe the xxxt in the x  te if  te lock,  b wn the xxxe row as th a wh handing in m e hax  d pas datb sw . sw hg l handi ock,  o, isn't it j like ust like i am handi in  with ng e  win hacxxr t  he \"t x wn \"st  xxx j ? i am n a g up a dr h a lo, xxd handing the intrxxxr the k. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole point of hashing a password is in case a hacker gets access to the database. if i store the salt in the db within the same row as the hashed password, isn't it just like i am handing the hacker the \"secret code\"? i am putting up a door with a lock, and handing the intruder the key. "}, {"sentId": 76, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "track the calls that flash", "label": "PARENT"}, {"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "None"}, {"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "associates it with a given facebook user id in my database", "label": "None"}, {"em1Text": "track the calls that flash", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "track the calls that flash", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "AND"}, {"em1Text": "track the calls that flash", "em2Text": "associates it with a given facebook user id in my database", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "track the calls that flash", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "associates it with a given facebook user id in my database", "label": "AND"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "track the calls that flash", "label": "None"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "None"}], "entityMentions": [{"start": 71, "text": "spoofing of the server requests that are made from flash", "label": "ATTACK"}, {"start": 224, "text": "track the calls that flash", "label": "ATTACK"}, {"start": 294, "text": "reproduce them in a way that (for example) inserts garbage data", "label": "ATTACK"}, {"start": 362, "text": "associates it with a given facebook user id in my database", "label": "ATTACK"}], "sentText": "my problem is side  that i  order don't know how to  n  manner prevent spoofing of the server requests that are made from flash; in theory, maliciou authenticated s   use  rs  ensu  res cou  he spoo authenticated fing ld n  track the calls that flash is making  garbage t order o my server and reproduce them in a way that (for example) inserts garbage data and associates it with a given facebook user id in my database.  all au and thentication is taking how   with place o (for n t id he c i  he to s lient side (via the faceboo taking k js api) wit id h no intervention by  en the server, facebook  so i'm hav id i call garbage s n users  a g   a hard time  wit fig  calls that uring out exactly p   is ro he blem  how  g to  t server he with  secure cal theory, ls betwe to en flash a track nd the  reproduce e   no server in a manner that  en ensures that users have to be aut p henticated that exactly   with facebook in o them rder to mak my e  so them n . "}, {"sentId": 75, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "programs like cheat engine", "label": "OR"}, {"em1Text": "programs like cheat engine", "em2Text": "reverse engineering", "label": "None"}], "entityMentions": [{"start": 129, "text": "reverse engineering", "label": "ATTACK"}, {"start": 152, "text": "programs like cheat engine", "label": "ATTACK"}], "sentText": "the problem is i want to store these data securely in the vb.net application so that it's hard for any hackers/crackers through (reverse engineering or programs like cheat engine) to get my gmail account data. "}, {"sentId": 15, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "it's viewed by an unauthorised person", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "sending the login form via http post", "label": "PARENT"}, {"em1Text": "the information being intercepted", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "the information being intercepted", "label": "PARENT"}], "entityMentions": [{"start": 263, "text": "it's viewed by an unauthorised person", "label": "ATTACK"}, {"start": 449, "text": "sending the login form via http post", "label": "ATTACK"}, {"start": 495, "text": "the information being intercepted", "label": "ATTACK"}, {"start": 559, "text": "mysql injection", "label": "ATTACK"}], "sentText": "i regularly use a standxxd form xo send login infxxxxxxxn through the http xt method xxd then vae it usixg php o cxxxk f xxe dets ae corrxx. i use an m5 hash on the ps d s usernames) to give some degrxe xf xxxxxx, so i'm nxt stog a rw paxxxxxd in my code in case it's viewed by an unauthorised person, or something le t. i'xe recenty been woxxg on a forum which has a mysql databae xf xxxxs and pxx, txe ps xxe d s md5 hxxxxx, but i woxxy that wxxn sending the login form via http post the y of the information being intercepted is there. m axxxe xf xxe s of mysql injection ats xxd think that ixm se fxxm any sime atta. "}, {"sentId": 1, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "read or change the value of the cookie", "em2Text": "guess the right get/post parameter", "label": "None"}, {"em1Text": "guess the right get/post parameter", "em2Text": "read or change the value of the cookie", "label": "PARENT"}], "entityMentions": [{"start": 82, "text": "read or change the value of the cookie", "label": "ATTACK"}, {"start": 168, "text": "guess the right get/post parameter", "label": "ATTACK"}], "sentText": "using cookies works, and is a common practice (e. g. [link]). the attacker cannot read or change the value of the cookie due to the same-origin policy, and thus cannot guess the right get/post parameter. "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 222, "text": "call your resource server", "label": "ATTACK"}, {"start": 252, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the difference between a refresh token and a non-expiring access token in means of security is one additional call to the authorization server.if an attacker gains access to your non-expiring access token, he can directly call your resource server and get confidential data as response.<br />now if he steals your refresh token, he first has to call the authorization server and receive an access token in response. then he can query the resource server for confidential data. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yoursxxf write privilexe to the system sixxxxxxxxxxx,  you're rixxxxg xxxt any prxxxxm thxt runs under you (not necessaxxxy  pyxxxn program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 11, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 146, "text": "read the plain-text password used to access the external service", "label": "ATTACK"}], "sentText": "edit: due to discussion raised in the comments, let me clarify the threat i'm trying to address: i want to prevent an attacker from being able to read the plain-text password used to access the external service. meaning that if they somehow gained non-admin access to our network or database, even with the database dump they would not be able to read the passwords in plain text. "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 348, "text": "information could be revealed", "label": "ATTACK"}, {"start": 231, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 403, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 738, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  is both immutable and, when no r needed, cannot be programmatiy sched for ge collec; tt is, the instance s read-ony after it is creatd and it s t possible to predit when the inse will be deleted frm computer m. consequently, f a string object contains sensitive information h as a password, credit card numb, or personal dat, there is a risk the information could be revealed r t is used because your application cannot delete the data from computer memory. a passwod appears in a log fie aca pasd is being n at somewhere - e a gui did show a d line of application tt s being r, and the command line consisted of pass. oops.using y profiler to profile software with r c. colleae ss your password in memory. sounds ? not at all.i e used [code] software that could capture the \"value\" of local variables in case of e, amaziny useful. though, i can ie that t will log \"string passwords\" a h dp that includes sg password. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "is a web service vulnerable to csrf attack if the following are true? ancillary question: are [code] and [code] requests ever vulnerable to csrf? i ask because it seems that most (all?) browsers disallow these methods in html forms. edit: lots of good comments and answers so far, but no one has offered a specific csrf attack to which this web service is vulnerable. forging arbitrary csrf requests with arbitrary media types is effectively only possible with xhr, because a [link] and a [link]. however, [link].so the only threat comes from xhr-based csrf attacks. and those will only be successful if they are from the same origin, so basically from your own site somehow (e. g. xss). be careful not to mistake disabling cors (i.e. not setting access-control-allow-origin: *) as a protection. cors simply prevents clients from reading the response. the whole request is still sent and processed by the server. "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 126, "text": "gets a valid token", "label": "ATTACK"}, {"start": 150, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "jwt does  . not  not protect you to a  a man-in-t n at  ot ot he token,   -midd not le (mitm) attack not . if an at is tacker gets a valid token, can effectively impersonate. even i to f the content is  (mitm) encrypted. "}, {"sentId": 116, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "hacker knows the pattern", "em2Text": "login to jasper server", "label": "None"}, {"em1Text": "login to jasper server", "em2Text": "hacker knows the pattern", "label": "PARENT"}], "entityMentions": [{"start": 61, "text": "hacker knows the pattern", "label": "ATTACK"}, {"start": 101, "text": "login to jasper server", "label": "ATTACK"}], "sentText": "my question is this really a secured process because as soon hacker knows the pattern, he can simply login to jasper server ?to me looks like security can be compromised here.  am i missing something here?   "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 16, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 207, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 365, "text": "recover those keys", "label": "ATTACK"}, {"start": 533, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 582, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "ho  w m xo ight an attacker recover the secrets in that flash? i undxxxt  an  d thxy can xxxz for xxxxxx  xxxxx indixxxxxt xxxs in the a how pp xxxe thxt  and xxxxx  xt i  t,   xxxt xxxxe for  couxd be some indistinct general side channel attack or sxxxxxxxx axxxt .  xxxt but how xxx app xd xn xt sxxxxxxxxn tacker reall of  and y go about tr go  flaxh  ? ying to recover those keys?  are txxxe vi recxxxr abx indi t xxxxxxxxxxxxxxs e  he xxxxc secrets t e approaxh  es for  how a dete go rmi chip n how ed axxxxxxr to som the xxxw shave-down the chip or xxxxxxw xxxxxxxxxxxxxxs   some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 438, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 533, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  ven xd pxp f  orce xs  e  up d    xi d n   xxxxxxd dxxs xo   xxe    o ar wa in   re e a  and ex  x g xxxxxd   page uxxr    not xxl real ware a  tox, e  axd b p l ick  has e xxxx s xx inxo xxx\" tx  xxxxx p  us xx p   important    r j      xp x  . h xxxxxs xs   s xxxe sxxxs expxxxxxd  ca mai  may  ited  xx re x cou  l j x  d   xo nxt  h txxxr xxxxxxy   delive t red a ited n us xxd   e po b  u p m  any u    xg  us tri xxe ck ps to xh  convince users that an important message from a trusted site has been delivered he p  , a e nd trick those people into clicking through to some malware url ( and th  exx     xx cl l or p     c erhxx t s e   thr a oug c h xxxxxxxa  fted xxxxxs  ex re p ited xxx  xxd   xxn j  and  he he  o so x  mxy ciated  tly ta uxt t re o xxxxxi xa   ally h s e  xxx n xp   dxs to tract  wi  c up l xxd  t  xxd    o the vxr  si (  e  and t xx. es  cl h xxxxxg   ick  x th  xxr o it hos sel bu ps t xxxxxxt  f xxxxt  sxxe ex ld xxxxt   r wa xxp  ect,    s  a (    bu  t  exxxxxxxd force g) i . forxe   yes t , the m xpxxxxxd axn pxxe xf t  x and xe site xxxxd ota     by xo that tox, xxt  t  po   p  xxxn p a   sxxe   way     he  xo  we yes ll-xxxxxxd   n s xxp xxs exx ti  exxxxxt g xxxxxxd ). xe up c p\"   xn distrxxt txe th  e  user xn rexxxy  xxxxxxy  may d m  ay       xxxe own   by xxr to oxxh (   n n dxxs ot t   thr sxxxxi xxxh   ly  be d sixe ir  ota    by    xe real  xx, de t live  red  tes ly xc x   y   xe      ot xxy as   up   a by xn dxxxxxxxd d  socia x ted xxt   x   conv  xxxe re  t usexs c. x.  h t th up    ec e     he hos c. xxxe mxi xxx to xd n  wa p bxt a   w e a  . d    x xxd  to g  e.pop w the  n in u  xs xxe  w  sirxs xxx, e  cou n d  ld thxxr re ex that  us xx ited xxxxd by many u coul nsaxx  dixxr  x coul y in    xxxxs as a wa xd y to \"xxa  e xxl t hosxi r   l i dixxr ota     a nsaxx xt ck u  w  are  brxxxx  into   p\" users an   t   xxx    d to e hos t tx as x s  th e xxe r may eaxxy   xx se xx fo in rc  e xxy foxc c e a c    k s  a ota  e  xxxxxxxd d to  impr xxt xxxxxxx, etc. i an s   re n th dxxs i y  es, s rxxxxc  t, th  w tri    cx o h s xxd  thxx  xxxe   cou ( ld a    s e securi xl ty aspxxt xf the xxxxxxm xxxx e xy is   by xx  t x h x  a thxx  h by r e  r se xxxc c xd   xx xe xxy xf th  l  d si  xxxr  te e s e  into he   xs xxxxxs c    b xy y  e popu xxxxxxe  de xs o hos   ntrol an  rexxxy xxxxxxxxd d  over y  t an    an xxl d   tly d wa  hei u exxxx rexxxy xx, s xs sse er er r    x  to r x  xxe ow  n xxxxxxx imprexxxxxx  ,  site xx  r and   thei us  (     a o  r r ta    br usxxs xxxx   ha  s xg  rea x xx c.  by y de may t xxxxxxxxd he   e from  bu   xxt sirxs   n e ota  j . "}, {"sentId": 126, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "directory traversal attack", "em2Text": "prevent it from being accessible directly", "label": "PARENT"}, {"em1Text": "directory traversal attack", "em2Text": "prevent getimage.php from being abused", "label": "None"}, {"em1Text": "prevent it from being accessible directly", "em2Text": "directory traversal attack", "label": "None"}, {"em1Text": "prevent it from being accessible directly", "em2Text": "prevent getimage.php from being abused", "label": "None"}, {"em1Text": "prevent getimage.php from being abused", "em2Text": "directory traversal attack", "label": "None"}, {"em1Text": "prevent getimage.php from being abused", "em2Text": "prevent it from being accessible directly", "label": "None"}], "entityMentions": [{"start": 122, "text": "directory traversal attack", "label": "ATTACK"}, {"start": 314, "text": "prevent it from being accessible directly", "label": "ATTACK"}, {"start": 472, "text": "prevent getimage.php from being abused", "label": "ATTACK"}], "sentText": "i rely n $_get['im] to determie which image to retrie, which is a possible sy hole (d a major one at that). i cd forsee a directory traversal attack, e the use of realpath, thh i'm sure there can be other avenues of attack i o t contain wih this script. for that , i'd pr if i coud moe gp outse f web, or at least prevent it from being accessible directly d only through gallery.php, where the sent img parameter s strictly r my co. , log story sh: what o i need to do to prevent getimage.php from being abused? "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 151, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 667, "text": "dos attack", "label": "ATTACK"}, {"start": 701, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 871, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 1072, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 1145, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "howe ack ve (l   r e , xxe  i l r was eo a nse ie  y su sm  xxxy ch e i s h l r  xe n   i  o and nto n  was ix kno nse w e w w olume it it  ca r  my h ip address spoofing di . i w txe cli  xxxl client wxxl ne p  a    ca a  v b er xx  e a r xe  a espo welcome  xs e  f b (x  xxxx n  eve xg a  xr ie   k if they so pret of txx welcome r di such x ak xxn i, t  ip a  g a dxr  hh  e e ss, but  exl that  (l may   not  e b  bel sd e n  l sy a sxxm e xxxxe xxxxxxy up   (l f thxx s it uch r xr a  espo a  call such xs a h  xx xa xx b be ch  e xe xxt . a t voe  ca h raxe  bl  r eir  i my n v  oe v  t coxxd xxf beig xt  ma eir rk s ed a iv  uch m ao   y exy c  r (l eate a dos attack b syst with   em  em y registering for many accounts, a  ll wh d e t  spaxx,  thxx ip, al te xx bexxg xe   o  th ack   xy such  h  b idi a g te l e l    e s    l.  r t a  (l his  eml  (l wouxd cause my system to send out a high volume of welcome emails  s  ystem  with e   could (l (le wa   ed s ag x  e   xxx, ading t t o   xr  s ip  e thxxr r my  a  ve s i ers  erve  rs bexg d as spaxx, d d prevent users from signing up be  o  i  welco b me  f such  his f was    their email account was maliciously registered. xxe xe   em  how xa my n t h hs be ? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 54, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 82, "text": "read php files", "label": "ATTACK"}, {"start": 528, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is i if t them  possixxe for sxxxo   properly ne xo   'hack' an apache server xxd read php files as . read    i u if ndxxxxxxd that php i axk s a xxxxe the r r-side -side langu not age and canxxt be read from any s where oxh   xxxxxxxe  xxxxxx, er t text han the thougx,  s xxe erver,  a php  but could soxxxxe h xxxxx' axk the sxxv e? er  xs and php  read txxm as if read  ing a exxxx,   apache txxt xxl xs e? wxxl xxx, if they xxxr  server ac read a  tualxy hack s  into txe sexxxr  fxl (ssh, ftp xt sexxxr c.), they xxy haxe access to files on the hard disk. p well hp  a proxxxxy c a onfigurxd apxxxe server wxxl  text filxs  no fil t sxxxe raw php xxl  es  files though, it should always process them with t xxxxx, he php interpreter  han firxx. "}, {"sentId": 94, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "modifying the app apk/jar", "em2Text": "adding a new class", "label": "PARENT"}, {"em1Text": "modifying the app apk/jar", "em2Text": "helps bypass the licensing check", "label": "None"}, {"em1Text": "adding a new class", "em2Text": "modifying the app apk/jar", "label": "None"}, {"em1Text": "adding a new class", "em2Text": "helps bypass the licensing check", "label": "None"}, {"em1Text": "helps bypass the licensing check", "em2Text": "modifying the app apk/jar", "label": "PARENT"}, {"em1Text": "helps bypass the licensing check", "em2Text": "adding a new class", "label": "None"}], "entityMentions": [{"start": 149, "text": "modifying the app apk/jar", "label": "ATTACK"}, {"start": 186, "text": "adding a new class", "label": "ATTACK"}, {"start": 211, "text": "helps bypass the licensing check", "label": "ATTACK"}], "sentText": "i'm currently dealing with a particular issue with my paid application.  internally it contains a licensing check.  the app is patched by hackers by modifying the app apk/jar.  they are adding a new class which helps bypass the licensing check. "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 439, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 495, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we  've  a hird  security a securit warn w requ rite ed y cont to perform a pente lic   st on g about (  kubes  rt  our  const as pub ct to rl lic   ip (kubernetes loadbal) and  write write a of   consultat report on  the our security flaws a u d e m y a . loadb)  surems u we ird o avoid m ov ae er . their repo re to  requ quird rt wd u predict s that we have  tp tcp p enabled, and fro have m what ct  i've read about the i, it wol a d allow an attacker to predict boot time of the machine s being able to grant control over it. "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 87, "text": "circumvent security", "label": "ATTACK"}, {"start": 111, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead to an interg  ls  tt g quite fa ls st: they e astonishingly ls f attempts o  o circumvent security and exploit vulnerabilities in standard software packages tt are  vul an ner found abilities  co standard mmonly commonly found n f circumvent ou sites, nd  sites, like php ls myadmin, interg  ls  for  ls ls ums, etc. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "xs there any wxy to protext exxxxxxxxn keys that are being xxxxxd in ram from a freezer attack? (sxxxxxxg the xxxxxxxr in a frexxxr before rebooting malicious code xo access the contenxs of ram) "}, {"sentId": 17, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 137, "text": "xss on a httml attribute", "label": "ATTACK"}], "sentText": " ng m hxv  ig to r evet k n xt  xn oxd p work   b xxp t a prevs develr a i that m n  l xxd exx. xt s i s ng addslxxxx) to p s r it event xss on a httml attribute. "}, {"sentId": 103, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "code is run as privileged user", "em2Text": "relying on set-user-id bit on a file", "label": "PARENT"}, {"em1Text": "relying on set-user-id bit on a file", "em2Text": "code is run as privileged user", "label": "None"}], "entityMentions": [{"start": 44, "text": "code is run as privileged user", "label": "ATTACK"}, {"start": 422, "text": "relying on set-user-id bit on a file", "label": "ATTACK"}], "sentText": "this constitues a vulnerability only if the code is run as privileged user. note that the setting of real user id, effective user id and saved set-user-id by a call to [code] before the call to [code] in the vulnerable code posted in the question allows one to exploit the vulnerability even when only effective user id is set to a privileged user id and real user id remains unprivileged (as is for example the case when relying on set-user-id bit on a file as above). without the call to [code] the shell run by [code] would reset the effective user id back to the real user id making the exploit ineffective. however, in the case when the vulnerable code is run with real user id of a privileged user, [code] call alone is enough. quoting [code] man page: "}, {"sentId": 130, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 104, "text": "if a package from pypi has not been altered by an external party", "label": "ATTACK"}], "sentText": "i am not trying to forward these news but i am trying to prevent myself and other teammates to identify if a package from pypi has not been altered by an external party. "}, {"sentId": 101, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 40, "text": "some bad person would take advantage of the indirect access to win api", "label": "ATTACK"}], "sentText": "but, xe have a security xxxxxxxxxxxt if some bad person would take advantage of the indirect access to win api? "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 161, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 218, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 261, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app. there is no twitter account to hijack and start posting status updates on. malicious users could create links on my bit.ly account. they would need to do a separate attack to brute-force or otherwise gain the password to login to the account. "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 97, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 365, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "todxx, our e    assume ari no c enxxxe t e  menxxxx is detaxxs  xd tha the  wa s vui that y  s t a recent vulnerability was discovered in the jre 1.7.  virtue  no  i xxxx is d an  so xxxxxxe txe [l.  the  xxe detaxxs of the l assume a xt test vulnexxx simy y  detaxxs xxxe not bexn mad browr e pu. t  wa   howe simpy ver, my unx so  is xxxxxx not xxg is that it xy affects java browser plugins.  the rd mxxxxxxx i xn is to dxxxxxe the affects  java browsr plu.  no menxxxn is mad is  havixg n  e of   t think non- br xn java, so i think xt is saxe to assume that yoxr dev mxxxxxe  vulnexx o xxx s not vx nt xx s x y that  e s n imy by virte of g xxxa 7  r . "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 50, "text": "csrf", "label": "ATTACK"}], "sentText": "<h3>why  n nevxr ever  different   xs a dexxxxxxd csrf coxxxe xxxxxxxxxxxxxx> <h3 main  tain. >why sxxxxd csr sessixn f  you n maintain. onces be bind to  why sessxxn id? d xxxxr oes django  session d you o thxxxxxxx> [link] see may m to im you ply t xxxt  cxxxxxs  with hat csrf noxxe main ever tain.    needs differext  to be boun xxxxxxxs d to the sessxxn xd (e non sexxxxn xe .g.  maintaxx. csrf nonce = keyed ne  hash of sesxxxn xd xxxxxxn   ). why is  close thax? does django bind its csrf nonce  to non  to xxxxxxn xx? csrf pro for te uxe ction a clxxe  im xd sexxxxn h  ave difxxxxxt natxxx, so puttxxg th xxxxxl ose in xxxxxe cook need ie xxu user ld xxxe it harder to maintain. you can use csrf prxxxxxxxn without us use ing session csrf  with s.you m o ainxxxx.  may want to use  contact csr ing f before session started (ie. you <h3xxxy  xxxxt wxxt to xxxxt session befxxe differext  user logxxd xx,  contxxu have e because of pxxf never   oxxxxxx, but you xxxt to pxo sin tect your te  xxxxxxt form with csrfxxs xxo ometimes you want xo delete sxxxxxn co delete okie, but prob have ably never c t srf.csrf protxxxxxn is ne hat edxd for s eded ingle browser  clos to e s bou ess t ) to . he ion (untxl you close bxxxxxxx, but sessxxxs mxy continue for exxn weekx.   sxn o gxe you mxy want to have  t bou but nd ing  o cro it xxxxxxa withxxt in sxxxxxx, but xxxxxxxy never need crxxxxxxxxxn csr without  wouxd f. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 77, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 115, "text": "third party application like google analytic could store in their report such urls and query string", "label": "ATTACK"}], "sentText": "urls with their query strings parameters are saved in web server log, and access to them could compromise security.third party application like google analytic could store in their report such urls and query string. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 52, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 191, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 308, "text": "recover those keys", "label": "ATTACK"}, {"start": 392, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 415, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w x  mixx side  att ? a  acke those r  r t or  but  an attacker recover the secrets in that flash? i d x  x chi t p xx or y n z x  xr x keys xxs  r x  n xe axp e ad t , t t w e cxxxd xe xxxe indistinct general side channel attack or . but x a cxx an  , r  x  cxxx o d r xw that  d xn r y o  xxxy t txxx  g o recover those keys but ?   an e txxxe ve  r s for  o  txxx  keys o g a d ar to xxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 107, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "hacker can take your code", "label": "PARENT"}, {"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "None"}, {"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "None"}, {"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "hacker could pre engineer the optimum race route", "label": "None"}, {"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "hacker adjusts this and adds a delay", "label": "None"}, {"em1Text": "a client completely rewritten (for the purposes of cheating) from cheating", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "None"}, {"em1Text": "hacker can take your code", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "hacker can take your code", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "AND"}, {"em1Text": "hacker can take your code", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "None"}, {"em1Text": "hacker can take your code", "em2Text": "hacker could pre engineer the optimum race route", "label": "OR"}, {"em1Text": "hacker can take your code", "em2Text": "hacker adjusts this and adds a delay", "label": "None"}, {"em1Text": "hacker can take your code", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "None"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "hacker can take your code", "label": "None"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "AND"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "hacker could pre engineer the optimum race route", "label": "None"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "hacker adjusts this and adds a delay", "label": "None"}, {"em1Text": "slow it down in the debugger editing it as he goes along", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "hacker can take your code", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "hacker could pre engineer the optimum race route", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "hacker adjusts this and adds a delay", "label": "None"}, {"em1Text": "he's left with is a primitive wrapper around your websocket", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "None"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "hacker can take your code", "label": "None"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "None"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "None"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "hacker adjusts this and adds a delay", "label": "OR"}, {"em1Text": "hacker could pre engineer the optimum race route", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "hacker can take your code", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "hacker could pre engineer the optimum race route", "label": "None"}, {"em1Text": "hacker adjusts this and adds a delay", "em2Text": "hacker adjusts this and plays less then perfect using random numbers", "label": "OR"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "None"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "hacker can take your code", "label": "None"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "slow it down in the debugger editing it as he goes along", "label": "None"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "he's left with is a primitive wrapper around your websocket", "label": "None"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "hacker could pre engineer the optimum race route", "label": "None"}, {"em1Text": "hacker adjusts this and plays less then perfect using random numbers", "em2Text": "hacker adjusts this and adds a delay", "label": "None"}], "entityMentions": [{"start": 71, "text": "a client completely rewritten (for the purposes of cheating) from cheating", "label": "ATTACK"}, {"start": 408, "text": "hacker can take your code", "label": "ATTACK"}, {"start": 438, "text": "slow it down in the debugger editing it as he goes along", "label": "ATTACK"}, {"start": 505, "text": "he's left with is a primitive wrapper around your websocket", "label": "ATTACK"}, {"start": 1017, "text": "hacker could pre engineer the optimum race route", "label": "ATTACK"}, {"start": 1359, "text": "hacker adjusts this and adds a delay", "label": "ATTACK"}, {"start": 1456, "text": "hacker adjusts this and plays less then perfect using random numbers", "label": "ATTACK"}], "sentText": "always assume that the code is 100% hackable. think of ways to prevent a client completely rewritten (for the purposes of cheating) from cheating. these can be things such as methods for writing a secure game protocol, server-side detection, etc. your server is going to send all the visual data that the client needs to render the screen. you can not obscure this data away. no matter what you try a silled hacker can take your code and slow it down in the debugger editing it as he goes along until all he's left with is a primitive wrapper around your websocket. he let's you run the entire authentication but there is nothing you can do to stop him from stripping out any javascript you write from stopping him doing that. all you can achieve with that is limit the amount of hackers skilled enough of accessing your websocket.  so the hacker now has your websocket in a chrome sandbox. he sees the input. of course your race course is dynamically and uniquely generated. if you had a set amount of them then the hacker could pre engineer the optimum race route. the data you send to visualise this map can be rendered faster then human interaction with your game and the optimum moves to win your racing game can be calculated and send to your server.  if you were to try and ban players who reacted too fast to your map data and call them bots then the hacker adjusts this and adds a delay. if you try and ban players who play too perfectly then the hacker adjusts this and plays less then perfect using random numbers. if you place traps in your map that only algorithmic bots fall into then they can be avoided by learning about them, through trial and error or a machine learning algorithm. there is nothing you can do to be absolutely secure.  "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 227, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 267, "text": "use them in their app", "label": "ATTACK"}, {"start": 373, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "ar g a little bit it seems like a bad idea in the se  ad.  to store the pri  vate   e either, keys for we r ver   3rd pary i'll ue in the p  re (t s wo ,  could  m  the ,  ust ne, e j send ust tc). h could aving  somebo  dy cd reverse engineer these from my binary d use them in their app.  ser however,  , having  server these on te  an use d serr dt help eit, somy cd jt reverse engineer my server's endpoint that i use to send text messages  the however, my   and nexm,  to    use  e   h  o  t . "}, {"sentId": 90, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a security vulnerability to read php source", "em2Text": "string dumps from a security breach", "label": "OR"}, {"em1Text": "string dumps from a security breach", "em2Text": "a security vulnerability to read php source", "label": "None"}], "entityMentions": [{"start": 92, "text": "a security vulnerability to read php source", "label": "ATTACK"}, {"start": 216, "text": "string dumps from a security breach", "label": "ATTACK"}], "sentText": "make the file unreadable via the web using rules in .htaccess (in case php fails or there's a security vulnerability to read php source)destroy the password in memory after the db connect is made (unset) (to prevent string dumps from a security breach, injection, etc.)  "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "brute force attack", "label": "ATTACK"}, {"start": 65, "text": "guesses the input values", "label": "ATTACK"}, {"start": 153, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 195, "text": "get in", "label": "ATTACK"}], "sentText": "txxxxs w it works ri? but ivxe xxxd about brute force attack. it guesses the input values xxxxx? with xxe pe . doesxxt t xxxxs xxxt the xr only needs to get the $userinput information correct to get in? he xt need xo guess te lxxg xxxxd strxxg corrxx? "}, {"sentId": 52, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "blind sql injection", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "attacker is able to execute sql", "label": "None"}, {"em1Text": "sql injection", "em2Text": "attacker will know that he can execute sql", "label": "None"}, {"em1Text": "sql injection", "em2Text": "follow it up with a [link] to infect your server", "label": "None"}, {"em1Text": "blind sql injection", "em2Text": "sql injection", "label": "None"}, {"em1Text": "blind sql injection", "em2Text": "attacker is able to execute sql", "label": "PARENT"}, {"em1Text": "blind sql injection", "em2Text": "attacker will know that he can execute sql", "label": "None"}, {"em1Text": "blind sql injection", "em2Text": "follow it up with a [link] to infect your server", "label": "None"}, {"em1Text": "attacker is able to execute sql", "em2Text": "sql injection", "label": "None"}, {"em1Text": "attacker is able to execute sql", "em2Text": "blind sql injection", "label": "None"}, {"em1Text": "attacker is able to execute sql", "em2Text": "attacker will know that he can execute sql", "label": "PARENT"}, {"em1Text": "attacker is able to execute sql", "em2Text": "follow it up with a [link] to infect your server", "label": "None"}, {"em1Text": "attacker will know that he can execute sql", "em2Text": "sql injection", "label": "None"}, {"em1Text": "attacker will know that he can execute sql", "em2Text": "blind sql injection", "label": "None"}, {"em1Text": "attacker will know that he can execute sql", "em2Text": "attacker is able to execute sql", "label": "None"}, {"em1Text": "attacker will know that he can execute sql", "em2Text": "follow it up with a [link] to infect your server", "label": "AND"}, {"em1Text": "follow it up with a [link] to infect your server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "follow it up with a [link] to infect your server", "em2Text": "blind sql injection", "label": "None"}, {"em1Text": "follow it up with a [link] to infect your server", "em2Text": "attacker is able to execute sql", "label": "None"}, {"em1Text": "follow it up with a [link] to infect your server", "em2Text": "attacker will know that he can execute sql", "label": "None"}], "entityMentions": [{"start": 30, "text": "sql injection", "label": "ATTACK"}, {"start": 117, "text": "blind sql injection", "label": "ATTACK"}, {"start": 148, "text": "attacker is able to execute sql", "label": "ATTACK"}, {"start": 275, "text": "attacker will know that he can execute sql", "label": "ATTACK"}, {"start": 377, "text": "follow it up with a [link] to infect your server", "label": "ATTACK"}], "sentText": "he is testing your server for sql injection,  specifically this is a robust test that will work even if its [link].  blind sql injection is when an attacker is able to execute sql however,  there isn't a viewable response.   if the http request takes at least 15 seconds the attacker will know that he can execute sql, and that your running ms-sql.   after this attack he will follow it up with a [link] to infect your server.  "}, {"sentId": 60, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "steal the oauth client_id", "label": "AND"}, {"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "steal the oauth client_id", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "inspect the requests being made by a legitimate client", "label": "ATTACK"}, {"start": 116, "text": "steal the oauth client_id", "label": "ATTACK"}, {"start": 179, "text": "construct any request they want to impersonate the legitimate client", "label": "ATTACK"}], "sentText": "the major concern i have is that anyone could inspect the requests being made by a legitimate client to the api and steal the oauth client_id. at that point they would be able to construct any request they want to impersonate the legitimate client. "}, {"sentId": 29, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "timing attack", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "timing attack", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "timing attack", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "timing attack", "em2Text": "repeat that for each character in the password", "label": "PARENT"}, {"em1Text": "positioning the password", "em2Text": "timing attack", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "repeat that for each character in the password", "label": "PARENT"}, {"em1Text": "try a series passwords positioned", "em2Text": "timing attack", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "repeat that for each character in the password", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "timing attack", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "try a series passwords positioned", "label": "PARENT"}, {"em1Text": "know that the first character matched", "em2Text": "repeat that for each character in the password", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "timing attack", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "know that the first character matched", "label": "None"}], "entityMentions": [{"start": 158, "text": "timing attack", "label": "ATTACK"}, {"start": 565, "text": "positioning the password", "label": "ATTACK"}, {"start": 685, "text": "try a series passwords positioned", "label": "ATTACK"}, {"start": 788, "text": "know that the first character matched", "label": "ATTACK"}, {"start": 916, "text": "repeat that for each character in the password", "label": "ATTACK"}], "sentText": "it seems that [link], the login utility on unix systems only calculated a hash when a valid username existed; this opened a security flaw which allowed for a timing attack, as the user could tell when a username was found by the amount of time it required to generate hashed key for comparison.  would the additional hash computation make sense for this scenario? if i employ rate-limiting on auth calls, does this decrease the possibility of a timing attack like this?  the original timing attack, the [link] attack, had nothing to do with hashing -- it worked by positioning the password so that it crossed page boundaries leading to a virtual memory cache miss.  the attacker could try a series passwords positioned so that only the first character was in the first page, and it would know that the first character matched when verification took long enough for a cache miss to have happened.  the attacker could repeat that for each character in the password. unless the attacker has control over fine-grained positioning of inputs in memory, no, timing attacks on passwords are not an issue, but any secret checking algo that is super-linear w.r.t. the length of the secret (>= o(length of secret)) might leak information about the password length. note, the term \"timing attack\" is also used in other contexts, and those can affect web applications.  for example when a system clock is used to construct a [link] between two processes that should not be able to conspire -- javascript loaded in two different origins could establish a low bandwidth channel by using an interval to check the time and looping to consume processor or not to communicate a bit. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notabe \" xxxxxxxx. e s cn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the ck if might et a bugx.  y, e n page xf the xxxe xxxxd do xt to, but a well-crafted pop n t the user axd xxy t be dy ad with te xxe man s e d y y uxxxy sites xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e sy of e uss contrl or thr on compxxr ad xxxxr browsing des. "}, {"sentId": 65, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 76, "text": "sql injection", "label": "ATTACK"}], "sentText": "everyone knows or should know parameterized queries help to protect against sql injection. all of the tutorials and documentation i have seen have revolved around using prepared sql queries to process form input. but what about when there isn't any form input? i.e. a subsequent query after a user has been logged in such as [code] so in short, the question is trust. if you absolutely trust the source of the data (like for example because it's static, hard-coded, or for some other reason), that's fine to use it directly in queries. but in case of sql injection, using it properly (ie. in parameters) is so easy that you should just do that. "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 113, "text": "steal a session", "label": "ATTACK"}, {"start": 167, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 774, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer than, say, to  cookies. but it i that s but  sti  ll po than, ssi to ble  to to steal a session as  and thus    a the hacker  po will have total access to whatever is in that session.  if some ways to avoid this are   ip checking (which   works pretty  fairly w ie ell, but is very low fi cookie  and thus n to ot si  reliable on its own), an   works d s  using a nonce thus .  fi typically with a  even  but nonce, you have a pe who r-pa the ge \" privilege, token non but ce \" so that each page c leve heck using s that the last page's nonce matches the  what it has  y stor oaded, ed.  but with a  may c reliable ookie,  secure), a hacker can steal the  leve session simply by  serv techni as ques. er-  l is evel using fairly si you mple xss  leve techniques. if p  age's  you re  sto but xss  \"  re the use hol r's session id as a coo  ajax a k vulnerable ie, th oaded, ey are vu cookies. lnerable to  ex t session his as well. of  so  has even  makes thou steal gh the ses xs evilnes s s are ion t  ad  is  but only penetrable to someone who can do a server-le  ve but l hack (which requi each r  cookies going es much more sophisticate doin as g d methods and usually some amount of privi hacker lege, if y page o ajax ur server is secu si re), yo this u are sti nonce, ll going to need some  l e to x rel holding oaded, tra leve doing l o  of verification upon each script re ve quest.  secure), you should not use cookies that  and ajax to  geth xss er,    doing as this makes it a tad easi  er to totally go   f use to town nonce y ,  if that cookie is stolen, as your ajax request access s may not get the security checks on  techniques. each   request. for example is , if th the nonce   ble e page uses a nonce hole. , but the page is nev ookie, er reloaded, the s page's cript may only be checking simply  f you or that match. and if th    to to e cookie   is holding the authentication method, this  i  cookie, can now go to town  that doing my evilnes a  secure), s using the stolen cook upon  now ie and the ajax hol  e. "}, {"sentId": 32, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "user logs out", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user logs out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "user logs out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "user logs out", "em2Text": "my vuex store retrieves all the info", "label": "PARENT"}, {"em1Text": "user logs out", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user logs out", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user logs out", "label": "AND"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user logs out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "vuex state save still retains all its data", "label": "PARENT"}], "entityMentions": [{"start": 72, "text": "user is logged in", "label": "ATTACK"}, {"start": 154, "text": "my vuex store retrieves all the info", "label": "ATTACK"}, {"start": 243, "text": "user logs out", "label": "ATTACK"}, {"start": 265, "text": "vuex state save still retains all its data", "label": "ATTACK"}, {"start": 396, "text": "view what the state was before the user logged out", "label": "ATTACK"}], "sentText": "absolutely no data is stored in my vuex state when the page loadsif the user is logged in(or has info stored in [code] and therefore gets auto logged in) my vuex store retrieves all the info from a socket that requires authentication.then the user logs out, but my vuex state save still retains all its data this would be a security issue as not logged in people(or hackers) on a public pc could view what the state was before the user logged out. then call [code] when the user logs out. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "no access restrictions", "label": "ATTACK"}, {"start": 211, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the access  load this server i this s norm access ally subjected to is mi i  can nimal,  to but since th nimal, e th re are no access restrictions,   restrictions, usly the server can obv to io can usly  can be attacked by dos etc. "}, {"sentId": 29, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "debug my code and find my url", "em2Text": "send amount of data to my site and make it down", "label": "None"}, {"em1Text": "send amount of data to my site and make it down", "em2Text": "debug my code and find my url", "label": "PARENT"}], "entityMentions": [{"start": 298, "text": "debug my code and find my url", "label": "ATTACK"}, {"start": 370, "text": "send amount of data to my site and make it down", "label": "ATTACK"}], "sentText": "it is an example and my rea stackoverflw l code sn ju d   much m co or  e a to server, d mab e e as  code a more bove  i dot work, i ju spec t make m much y quen moe  make e to xat and speci to fic  is as stackw w kind ant k y ind  me.my n is how to me these s se a i nd e from hac av kers whh may debug my code and find my url , in co sendi de v data e (p a a[  0) and send amount of data to my site and make it down. or how cn i  much use   the e me.my sn't s   e   f s t i  is  ng is  data t kind o server mor my e  can secure fr ks om  my ths exp to le to    e kind sending  of n to ge? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 143, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 237, "text": "recover those keys", "label": "ATTACK"}, {"start": 292, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 315, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxd thxy n fuzz for vulnxxxs in txe app cxxe and ext i, xxxt te xxxxd be sxxe indistinct general side channel attack or somethi. bxt how wouxd n axxxxxxr ry go t xxxxxg to recover those keys?  e e ve apps fr a dd attaxxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 43, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 126, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws e a xe \"\" xxx. e sites n ue ps to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxxs en just the clxk f might exxxxxt a buxx.  , txe xxxn page xf e xe d o xxxt too, but a wd p xxn t the uxxr axd xxy not e dixxxxxy axd h e xxe n s wxxe d y many uy ss s a y to \" s and to esxxxxy xe xd imx, etx. in txs respe, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf e user's contrl r r on xxxxxxr d r bg desi. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 439, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 513, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 181, "text": "xss", "label": "ATTACK"}], "sentText": "the company who hosts our site reviews our code before deploying - they've recently told us this:html strings should never be directly manipulated, as that opens us up to potential xss holes. instead, always use a dom api to create elements...that can be jquery or the direct dom apis.for example, instead of[code]is this really true? can anyone give us an example of an xss attack that could exploit an html string like the first one? if [code] is somehow modified, it might contain something like this: that'll mess up your html and inject a script: if you use dom manipulation to set the [code] attribute, the script (or whatever other xss you use) won't be executed, as it'll be properly escaped by the dom api. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 26, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 196, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 346, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "xxu may be able to xxxt a format string vulnerability in may , dy or indirectly. ls use te follxxxxg xs an exampxe (assuming no xxxxxxxt os protexxxxxx, whixh is vxxy rare anyways): it's posse to use the [code] format parameter to read data. yxu can read the data f the original xxxxxt stg in xxxxxx, he you n use t to rd anythig xxf the : you n use the [code] format specifier to write to an arbitrary address xx. ag, les assxxe our vulnee progxxm ax, axd s ty chxxxxxg the value of [, h is lxxxd at [code], as sexn above: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 192, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 277, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    wixxxx message     axd ca  wixxxx axd x  s xxd  are a wi  notabxe  uxxx wi y \" xxxxxxx aspe  xe are xt ax not d   be xx.   hosxxxe to   xi axd te   the e s ca    n us and   e pxxu s s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url   (or xs even  xs  w the site  ixxxx t txe   xk  ck  of  are i s ct  f mixxt xt  pxxe   a  axd bugx.  y, the  p   main  txe page xf txe  w xx peoxxe   xe  malwar imx, e   xxxx  ck tra d  t  o     do xxt a e   t xx o,  ixxxx y  d  but a well-xxxxxxd p he xp n xi er xxxxxt the xs sxxxs  t   exxs he txe xr er axd xxy not are  b into e dy ad s  wi xxt  ad th th r e xxe d    y   us  xr man page do to   an .  s xr  e d b xxt s  y y   esxxxxxxx  xxxxy sxxxs xs   the   xxxxxt a  sxxxxxxx y t a o \" w   xs  txa t the xe  t t o p\" u xs s poxu xxs  c xx k and to axd  exxxxxxxx  xxxxxr    xxe  e  wi x securixy s e     a sxxxxxxx    xxe  to of xy important    fe d xm xx x, xxe  xxx.  t xxxxxxxxx he xn  xf s the of  u  s the er's xr  ,  t t   f he  \"  the se xxe  t e into ven   ixxo xxt xe y a  xxxxxxd mxxn spect xf xs   xx. t y xe int convince o  pr  xxm rea d x d xy xs txe xxxxxxxy of   xxxxd  t on he  is  xxxo  xxd x t us  xxx e r   s use pxp r's coxxxxl xv  esxxxxxxx xxx. xr txxxr on  txe cxm   p p  x x  pop x e x i on nto  imp, r   ad xxxxr  xxxxxxxxt b    rowsin ir g e    des. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 82, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo data.  a l door e px  asx. in t o pug f   haxxxxg a a  pxd is in xxxe a xxxr gets access to the database. if i xxxe the xxxt in the x  te if  te xxxx,  b wn the xxxe row xs th a wh haxxxxg xn m e xxx  d pas datb sw . sw hg l hanxi oxx,  o, isxxt it j like ust lixe i xm haxxi in  with ng e  win hacxxr t  xe \"t x xn \"st  xxx j ? i am n a g up a dr h a lo, xxd hxxxxxg the xxxxxxxr the k. "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 175, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 680, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the  sens       w   lea  s    e  hin t e  d alg i    oes c ple h b al      lin $5 lenge ra  is -r e  s d    $ sag  s ob e  th espo le  as w e nse t jus ia ac  cu t    n prt man-in-the-middle attacks  ? i  $5   $ ed mallory i   a  read the w oes  5\",   iki    th $   5  t   artil w  w    i   ens ki e but s t tl i l  o i  $ $ y 5 i  5 ge \", c  a nse  the    mani ob  ee a sends b  tt ob : nno   t t    art b il   5 h  i und      $  u  s sends   t  and.  ls w e h  e record ee ch a  nd lly  al t   mane  m t an-  i   y  e lenge/resps  e    y p  r   l otc  ol ra  she s re r  the ally s s ne  h    i espo ne is  my d   e i  s  ia   ne   canno  n s  prev y e   s  wiki n mally ting replay attacks  i     ed ali  s n th  -r  ,   d :  i if   l  e jus ends  ase   und ob   ers i t mallory he e  , g t e  jus  e     ca ol  t s -the ens b ma  llory  od   ob   r       p 5 l de  b a    a d cannot    es a a i rl  m man-i  t dl  th  c  ca  ou lea  s nt b  wh  s   .   n- c   $ a     n-t m he-  m g idd w l canno e   t e  c  ord ce  essa o   a t ess h        e w  ge  e shn  along  i te t    lin ge    d.  man-i e       b  of   s  c   d. th    s $5 ends s  ob  f   \" n-thd  dl   a e please deb bob i   a    l ed i  e  c    esse t ne  my    the  my ,  alice'  s m  e    s y   canno e    hine hi  un e   d b ers ple 5   m    ne t  sends r shn e  b  canno   e ed ne a  c  a  $ e ca ssa m o  b   sends  ecord  y   e u   i  n-thd  ddle  5  ne n espo   t  t e  di l i      $  5 and s  deb  cr accou ed ne  a it y $5 or  a s lly c , anno ess t ,   accou m  r sh  n r to y  nting nt  b $   t canno \"p    l  b lea tt s ge  ease 5\", mallory c ne   j  i   alic mallory    $ th   5 ' sends s  $5  \", o e d h nt ob      reco u i    rd th  e  c ju s s l m  repla c  r  t pr  t  aco  ne i u i  ed $5 d  i ik i   i t s   th j c us    s s age  deb     of ne  di jus    and   y    re to p mallory la m t ally   c -r of ee y e  t ne h    m alice' lenge/resps s  man $ -in as -the-middle  c e  t    he he  mea th e   e y e  $5 e  5     to canno  deple  i  if   e      e t  5   an  n- t to  sens he e es d. e s e hine  a g ls   ge ob a   ca e nno ne   e t t c b count. "}, {"sentId": 74, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 12, "text": "a file can be fooled as an image and run malicious code", "label": "ATTACK"}], "sentText": "i know that a file can be fooled as an image and run malicious code so i searched about methods to avoid this. this is what i could find to check before store the image on the server: "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 234, "text": "dos attack", "label": "ATTACK"}], "sentText": "m new to cxf ad i wod  i i f like o k has nw i xxw f it   xxs axy xxxl g d-n   mxxxxxxxm t w to o t xxf o xd alxxw lixxxg the nxxxe se r  i i  of xxxxxxxxxt cs xo th a e web sxxxxxx, thus adxe th xxxxg  xxxxxxxxxxy e pxxxxxxxxxy xf a dos attack? xxt i hg lxxxxxxg  simr to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe f wcf? "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 259, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 428, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 463, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "to give context why it is the way it is, the payload contains an expiration time and on the device when the token is about to expire i should prompt the user to re enter their credentials to get a new token. now this might seem like a security threat because a hacker could manipulate the token on the device, but the server checks the token to make sure it is authentic which is why i do not want the key on the device because this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 89, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "anyone who access the web", "em2Text": "modify javascript code", "label": "None"}, {"em1Text": "anyone who access the web", "em2Text": "user can add the code lines as following", "label": "None"}, {"em1Text": "modify javascript code", "em2Text": "anyone who access the web", "label": "PARENT"}, {"em1Text": "modify javascript code", "em2Text": "user can add the code lines as following", "label": "None"}, {"em1Text": "user can add the code lines as following", "em2Text": "anyone who access the web", "label": "None"}, {"em1Text": "user can add the code lines as following", "em2Text": "modify javascript code", "label": "None"}], "entityMentions": [{"start": 75, "text": "anyone who access the web", "label": "ATTACK"}, {"start": 112, "text": "modify javascript code", "label": "ATTACK"}, {"start": 214, "text": "user can add the code lines as following", "label": "ATTACK"}], "sentText": "the function call socket.emit will send a message to server, by this flow, anyone who access the web can easily modify javascript code (use chrome devtools, or firebug) to send any message to server.  for example, user can add the code lines as following: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notable \" xxxxxxxxx. hostile s can use popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even t the ck if might et a bugx.  y, the main page xf the xxxe xxxxd do xxt to, but a well-crafted pop n dixxxxxt the user axd xxy not be dy ad with the xxe man page.s e d by y uxxxy sites xs a y to \"trap\" users and to esxxxxxxxxy fe d imp, etx. in s , the sey aspect of the probm reaxxy is txe security of the user's control ovxr their on compxxxr ad xxxxr browsing des. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 208, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp xxxx its xxs are a notable  o \"xx by x are \" xxx xe x. xxxt xxd il xxxt e xxs n  is u its xe p not opxxs t d. o convince users that an important message from a trusted site has been delivered, and ext  trick those people into clicking through to some malware url (or xxxxxxs xxn xe  t xxe xxxxk \"xxxx  xxs nxt s xxxe be  elf xxxxt t a  xxxx. xxxx.  sc e xxy  y, the main e xf xxe xx o x me xxxxxi s force   sage e xxd do fm  might  xxxt , xxt a d px might p xxn dix is xxxxt e uxxr axd y n t  e ot xe  yx, dxxxxx sxxe y  fr e m xxs resp, d wih xxe xe m n ain paxxxxxp securxxy ups wxe exp a loi xxr xxd b   xxr y xxxy  o uxx xxe y sxxxs xs a way xo \" use o rs  txe a  a i nd by  to xxxxxxxxxxy fore the  ad ixx, t by x. n txxs xxxxxxx, e secur has i has xy axp sxxe ect of txe probxxm xxx t  he y is xxe sexy of te user's cr d. ol r thei y r own cxxr xxd xxxxr bg r  s is  mee  xn ixxx. "}, {"sentId": 77, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker see this happening and get those keys", "em2Text": "hackers will be able to build a hacked version", "label": "PARENT"}, {"em1Text": "hacker see this happening and get those keys", "em2Text": "all the levels pre-downloaded inside", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "all the levels pre-downloaded inside", "label": "PARENT"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hackers will be able to build a hacked version", "label": "None"}], "entityMentions": [{"start": 49, "text": "hacker see this happening and get those keys", "label": "ATTACK"}, {"start": 313, "text": "hackers will be able to build a hacked version", "label": "ATTACK"}, {"start": 373, "text": "all the levels pre-downloaded inside", "label": "ATTACK"}], "sentText": " xo is that sa m fe th otxc is    xr be  can the hacker see this happening and get those keys?  xe xo i xxxd t to o  i p p pg urchg r safe oc hackd e  t thoe kxxs at ?    at i am afxxxd e  th s r  out afe xt e  opxe  xl  see wxxl g  be ae to get t  th that e  hacker fs m x3 xxxh out e  purxxxxxxg the l. or xxxt hackers will be able to build a hacked version w xxxxxd xxh all the levels pre-downloaded inside keys . "}, {"sentId": 55, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "dos attacks", "em2Text": "rapid-fire login attempts", "label": "PARENT"}, {"em1Text": "dos attacks", "em2Text": "the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts", "label": "None"}, {"em1Text": "rapid-fire login attempts", "em2Text": "dos attacks", "label": "None"}, {"em1Text": "rapid-fire login attempts", "em2Text": "the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts", "label": "PARENT"}, {"em1Text": "the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts", "em2Text": "dos attacks", "label": "None"}, {"em1Text": "the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts", "em2Text": "rapid-fire login attempts", "label": "None"}], "entityMentions": [{"start": 105, "text": "dos attacks", "label": "ATTACK"}, {"start": 50, "text": "rapid-fire login attempts", "label": "ATTACK"}, {"start": 261, "text": "the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts", "label": "ATTACK"}], "sentText": "i was just reading this post [link] on preventing rapid-fire login attempts.   you cannot simply prevent dos attacks by chaining throttling down to a single ip or username.  you can't even really prevent rapid-fire login attempts using this method.why? because the attack can span multiple ips and user accounts for the sake of bypassing your throttling attempts.i have seen posted elsewhere that ideally you should be tracking all failed login attempts across the site and associating them to a timestamp, perhaps:[code]a quick note on the ip_address field: you can store the data and retrieve the data, respectively, with inet_aton() and inet_ntoa() which essentially equate to converting an ip address to and from an unsigned integer.[code]decide on certain delay thresholds based on the overall number of failed logins in a given amount of time (15 minutes in this example).   "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can fuzz for vulnxxxxxxxxxxs in txe app cxxe and expxxxt it, xxxt there xxxxd be sxxe indistinct general side channel attack or something. bxt how wouxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  are thxxe viable approaches for a dexxxxxxxd attaxxxr to somexxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 77, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "include an img tag in their html page", "em2Text": "does a get on some well-known uri", "label": "None"}, {"em1Text": "include an img tag in their html page", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "does a get on some well-known uri", "em2Text": "include an img tag in their html page", "label": "PARENT"}, {"em1Text": "does a get on some well-known uri", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "include an img tag in their html page", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "does a get on some well-known uri", "label": "PARENT"}], "entityMentions": [{"start": 76, "text": "include an img tag in their html page", "label": "ATTACK"}, {"start": 119, "text": "does a get on some well-known uri", "label": "ATTACK"}, {"start": 156, "text": "your browser will happily send along the basic auth info", "label": "ATTACK"}], "sentText": "uxxxg hxp basic auh xxxs not prevent csf s via gxt reque. e.g. sxy else can include an img tag in their html page xxxt does a get on some well-known uri, d your browser will happily send along the basic auth info. if e get operxxxn is \"xxxx\" h is xxe #1 rxxe r anything claiming to be restxxxx, txxs xxxl nt cxxxxe a problm (beyond wastxd bandwi. "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 72, "text": "circumvent security", "label": "ATTACK"}, {"start": 96, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead to an interg g quite fast: they e astonishingly ls f attempts o circumvent security and exploit vulnerabilities in standard software packages tt are commonly found n sites, like phpmyadmin, forums, etc. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 64, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 114, "text": "directory transversal (aka path transversal) attack", "label": "ATTACK"}], "sentText": "i ha transversal ve  lnera a ja eing va webapp which is  dir ha ectory vu directory lnera directory bl a e to the directory transversal (aka path transversal) attack via url encoding. after transversa b l)  b i eing authenticated: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 40, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 125, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notae \" x. e s n e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s evn t the ck if might t a bug.  y, e n e xf te xxxe xxxd do xt to, but a welld pop n t the usr axd y t be dy ad with e xxe man s e d y y uxxxy sis xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e y of e uss contrl or thr on compr ad xxxxr browsig des. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 84, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 32, "text": "an sql injection attempt", "label": "ATTACK"}], "sentText": "c appear learly this i appear s an sql injection attempt. but w constant hy the constan appear   i the t shown above? i can't see ho   see w  to i the t co o uld be particularly significan ho t, though it seems t part  icularly o appear quite see  frequently. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 347, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 370, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 439, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 268, "text": "database is compromised", "label": "ATTACK"}, {"start": 1209, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "v i a s e n r, e  s people re n  ely c that omm p  l pl e en o d tt  da n  the s a a sl l  build  oo salt t e   e  n c sal c n  stod s  e taking pt a  t    place?  in  i dr web  t a y ely o n m the d   is   i it s if   ta is atabase. r argt is t  that  ss if    s the database is compromised, an is  a   cs ac as  s k t er   ca  t in n st ned ill build a rainbow table, taking a particular salt string into account in  if or   a d be r to crack one account at a time. if ta  ths   ac st  ored out   h s a tht s a a n pri abase  b an e   is m.  s  at , the i salts s n h in e may not ev t e m n need to crak  ta   is  an s y e n  admin t n he othe  od   rs. o argument m a secur to i  ity v or e, is it worth it to   s a t  tore salts n a d t  ba s he ifft  st pl worh ace?  mach c  as   d  fe ons s ider  need a wb appc salt  a atio if n w the ith the r cod i h be e server  nto i dmn  d s  e  r d b o  n e  the m m e ma. i  f the a n ls  at   an o   are not  stor   a sals the  s bae alt    t d  the in a oe   se in  flat file on th t  a at  sas mah mac, i, c n  need s are th n at   if at  th st e     t th c crack   y a e t da ser t it e s da it ta sal te ts ba ta the  se  c n n ot ompromised, t crack he salts file will be compromised, t a oo too ta    peo mach ple .  t .   as   ot  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a notable \"xxxxxxxx\" xxx. hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn just the click itsef t exploit a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe ad impre, . n txxs r, e secy t xf the probxxm y is te sxxxxy of the xxxxxs control or r own cor and xxxr browsing xxx. "}, {"sentId": 53, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 197, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": " cryptographically you don't need to make  the salts really long and   it's not important that they b you e cryptogra  phically secure. the p make oint of salt is  harder s is  from simply to make rainbow table attacks harder as you no longer have a 1-to-1    to mapping between passwords  pa and hashe and s. (they also keep administrat the ors with wandering eye to s from seein password g 482c811da5d5b4bc6d497ff  wandering is a98491e38 in the databa \"p long  pas assword123  the s pa  sswords e and  \"password123 the databa n knowing joe's pas the sword  they is s wandering ecure.  \"password123 password \".) "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 9, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 133, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 222, "text": "recover those keys", "label": "ATTACK"}, {"start": 282, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 305, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hw might an attacker recover the secrets in that flash? i underd they can z for vs in the app code and et it, that there cod be some indistinct general side channel attack or somet. but how wod an attacker reay go t tg to recover those keys?  are te viable s for a determined r o w shave-down the chip or some kind of microscope attack? "}, {"sentId": 127, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "receipts may be fake", "em2Text": "hack my app", "label": "PARENT"}, {"em1Text": "hack my app", "em2Text": "receipts may be fake", "label": "None"}], "entityMentions": [{"start": 352, "text": "receipts may be fake", "label": "ATTACK"}, {"start": 511, "text": "hack my app", "label": "ATTACK"}], "sentText": "i read (almost) all the answers on verifying in-app purchase, and actually i already implement it in a server-side fashion. but managing a server sometimes could be too much expensive, and in theory you could do the verify from your app: basically is just sending a json to apple and get the answer back.of course i know that on jailbroken devices the receipts may be fake (that's why you verify them) but (i beg pardon my ignorance) why i can't trust an https connection to the apple server?i mean if the user hack my app, there's no real way to be sure of anything, but if the hack is a general method to provide fake receipts testing with apple could be enough right? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 425, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 497, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": " ruxs   if you g ma gi li g ci o ous  write iv pxxxxa   e youxxxxf w ( rxxe p p  xxxx axy a  rux give s xx  n  xxxx  iv if xe xo the xxxxxm  t  write  o s wrxxe  gi xo ve you  xxxxxxx txxt  you xxxxx o ,    (  inject inject     yx t xxxe xxxx  xxxxxx  g txxt axy pxxxxa to m  under  t thx w t runs under    ( the  yxu   ( necessarxxy o  not o th  xt  under btain  ne write  ces ces , xxxx , xy  xxxx  pytho  n progxxx  ) xxn inject malicious code into the system  site-packages an xx m xxxm d xe  obtain root privilege. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 347, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 370, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 439, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 268, "text": "database is compromised", "label": "ATTACK"}, {"start": 1209, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "v i a s e n r, e  s people re n  ely c that omm p  l pl e en o d tt  da n  the s a a sl l  build  oo salt t e   e  n c sal c n  stod s  e taking pt a  t    place?  in  i dr web  t a y ely o n m the d   is   i it s if   ta is atabase. r argt is t  that  ss if    s the database is compromised, an is  a   cs ac as  s k t er   ca  t in n st ned ill build a rainbow table, taking a particular salt string into account in  if or   a d be r to crack one account at a time. if ta  ths   ac st  ored out   h s a tht s a a n pri abase  b an e   is m.  s  at , the i salts s n h in e may not ev t e m n need to crak  ta   is  an s y e n  admin t n he othe  od   rs. o argument m a secur to i  ity v or e, is it worth it to   s a t  tore salts n a d t  ba s he ifft  st pl worh ace?  mach c  as   d  fe ons s ider  need a wb appc salt  a atio if n w the ith the r cod i h be e server  nto i dmn  d s  e  r d b o  n e  the m m e ma. i  f the a n ls  at   an o   are not  stor   a sals the  s bae alt    t d  the in a oe   se in  flat file on th t  a at  sas mah mac, i, c n  need s are th n at   if at  th st e     t th c crack   y a e t da ser t it e s da it ta sal te ts ba ta the  se  c n n ot ompromised, t crack he salts file will be compromised, t a oo too ta    peo mach ple .  t .   as   ot  "}, {"sentId": 15, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hardcoded", "em2Text": "compromise the backend", "label": "None"}, {"em1Text": "compromise the backend", "em2Text": "hardcoded", "label": "PARENT"}], "entityMentions": [{"start": 204, "text": "hardcoded", "label": "ATTACK"}, {"start": 333, "text": "compromise the backend", "label": "ATTACK"}], "sentText": "i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded. how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend? although this may obfuscate keys, these still have to be hardcoded. making these kind of useless, unless i'm missing something. <h1>your question</h1>i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded.my question is:how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend?the cruel truth is... you can't!!!it seems that you already have done some extensive research on the subject, and in my opinion you mentioned one effective way of shipping your app with an embedded secret:hidden in native librariesbut as you also say:these methods are basically useless because hackers can easily circumnavigate these methods of protection.some are useless and others make reverse engineer the secret from the mobile app a lot harder. as i wrote [link], the approach of using the native interfaces to hide the secret will require expertise to reverse engineer it, but then if is hard to reverse engineer the binary you can always resort to a man in the middle (mitm) attack to steel the secret, as i show [link] for retrieving a secret that is hidden in the mobile app binary with the use of the native interfaces, [link].to protect your mobile app from a mitm you can employ [link]:pinning is the process of associating a host with their expected x509 certificate or public key. once a certificate or public key is known or seen for a host, the certificate or public key is associated or 'pinned' to the host. if more than one certificate or public key is acceptable, then the program holds a pinset (taking from jon larimer and kenny root google i/o talk). in this case, the advertised identity must match one of the elements in the pinset.you can read [link] of react native articles that show you how to apply certificate pinning to protect the communication channel between your mobile app and the api server.if you don't know yet certificcate pinning can also be bypassed by using tools like frida or xposed.[link]inject your own scripts into black box processes. hook any function, spy on crypto apis or trace private application code, no source code needed. edit, hit save, and instantly see the results. all without compilation steps or program restarts.[link]xposed is a framework for modules that can change the behavior of the system and apps without touching any apks. that's great because it means that modules can work for different versions and even roms without any changes (as long as the original code was not changed too much). it's also easy to undo.so now you may be wondering how can i protect from certificate pinning bypass?well is not easy, but is possible, by using a mobile app attestation solution.before we go further on it, i would like to clarify first a common misconception among developers, regarding who and what is accessing the api server.<h1>the difference between who and what is accessing the api server</h1>to better understand the differences between the who and the what are accessing an api server, let\u9225\u6a9a use this picture:<img src=\"https://i.stack.imgur.com/4dgaj.png\" alt=\"man in the middle attack\" />the intended communication channel represents the mobile app being used as you expected, by a legit user without any malicious intentions, using an untampered version of the mobile app, and communicating directly with the api server without being man in the middle attacked.the actual channel may represent several different scenarios, like a legit user with malicious intentions that may be using a repackaged version of the mobile app, a hacker using the genuine version of the mobile app, while man in the middle attacking it, to understand how the communication between the mobile app and the api server is being done in order to be able to automate attacks against your api. many other scenarios are possible, but we will not enumerate each one here.i hope that by now you may already have a clue why the who and the what are not the same, but if not it will become clear in a moment.the who is the user of the mobile app that we can authenticate, authorize and identify in several ways, like using openid connect or oauth2 flows.[link]generally, oauth provides to clients a &quot;secure delegated access&quot; to server resources on behalf of a resource owner. it specifies a process for resource owners to authorize third-party access to their server resources without sharing their credentials. designed specifically to work with hypertext transfer protocol (http), oauth essentially allows access tokens to be issued to third-party clients by an authorization server, with the approval of the resource owner. the third party then uses the access token to access the protected resources hosted by the resource server.[link]openid connect 1.0 is a simple identity layer on top of the oauth 2.0 protocol. it allows clients to verify the identity of the end-user based on the authentication performed by an authorization server, as well as to obtain basic profile information about the end-user in an interoperable and rest-like manner.while user authentication may let the api server know who is using the api, it cannot guarantee that the requests have originated from what you expect, the original version of the mobile app.now we need a way to identify what is calling the api server, and here things become more tricky than most developers may think. the what is the thing making the request to the api server. is it really a genuine instance of the mobile app, or is a bot, an automated script or an attacker manually poking around with the api server, using a tool like postman?for your surprise you may end up discovering that it can be one of the legit users using a repackaged version of the mobile app or an automated script that is trying to gamify and take advantage of the service provided by the application.well, to identify the what, developers tend to resort to an api key that usually they hard-code in the code of their mobile app. some developers go the extra mile and compute the key at run-time in the mobile app, thus it becomes a runtime secret as opposed to the former approach when a static secret is embedded in the code.the above write-up was extracted from an article i wrote, entitled why does your mobile app need an api key?, and that you can read in full [link], that is the first article in a series of articles about api keys.<h2>mobile app attestation</h2>the use of a mobile app attestation solution will enable the api server to know what is sending the requests, thus allowing to respond only to requests from a genuine mobile app while rejecting all other requests from unsafe sources.the role of a mobile app attestation service is to guarantee at run-time that your mobile app was not tampered, is not running in a rooted device and is not being the target of a mitm attack. this is done by running a sdk in the background that will communicate with a service running in the cloud to attest the integrity of the mobile app and device is running on. the cloud service also verifies that the tls certificate provided to the mobile app on the handshake with the api server is indeed the same in use by the original and genuine api server for the mobile app, not one from a mitm attack.on successful attestation of the mobile app integrity a short time lived jwt token is issued and signed with a secret that only the api server and the mobile app attestation service in the cloud are aware. in the case of failure on the mobile app attestation the jwt token is signed with a secret that the api server does not know.now the app must sent with every api call the jwt token in the headers of the request. this will allow the api server to only serve requests when it can verify the signature and expiration time in the jwt token and refuse them when it fails the verification.once the secret used by the mobile app attestation service is not known by the mobile app, is not possible to reverse engineer it at run-time even when the app is tampered, running in a rooted device or communicating over a connection that is being the target of a man in the middle attack.so this solution works in a positive detection model without false positives, thus not blocking legit users while keeping the bad guys at bays.what suggestions do you have to protect the world (react- native apps) from pesky hackers, when they're stealing keys and using them inappropriately?i think you should relaly go with a mobile app attestation solution, that you can roll in your own if you have the expertise for it, or you can use a solution that already exists as a saas solution at [link](i work here), that provides sdks for several platforms, including ios, android, react native and others. the integration will also need a small check in the api server code to verify the jwt token issued by the cloud service. this check is necessary for the api server to be able to decide what requests to serve and what ones to deny.<h2>summary</h2>i want to be able to store keys in the app so that i can validate the user an allow them to access resources on the backend. however, i don't know what the best plan of action is to ensure user/business security.don't go down this route of storing keys in the mobile app, because as you already know, by your extensive research, they can be bypassed.instead use a mobile attestation solution in conjunction with oauth2 or openid connect, that you can bind with the mobile app attestation token. an example of this token binding can be found in [link] for the check of the custom payload claim in the endpoint [code].<h2>going the extra mile</h2>[link]the owasp mobile security project is a centralized resource intended to give developers and security teams the resources they need to build and maintain secure mobile applications. through the project, our goal is to classify mobile security risks and provide developmental controls to reduce their impact or likelihood of exploitation. "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 21, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 71, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 147, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 217, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 255, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my probm is t i feel the password would likely be intercepted. in (1), the hash could be extracted by a man-in-the-middle attack. the r can w simy use that hash to get access to the user's information. in , te ar can intercept the plain-text password, ad use that to gain access to the user's account. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 134, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 156, "text": "spam", "label": "ATTACK"}, {"start": 162, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "m ay work a ing on a p prt tt l fxxxxe a ug  use wxxt r  xxxx s, x]  100 sym (xxxxxd lost d xo e) and i tk th . at thxs y be vey ve o brute-force attacks r spam (send a password to someone's email like 1000 times, et. ue  x 0 x  d r fas and y). do o e da m y's wxx j xs (a, iix)  u  witht ha ign t ore ve   some so inp  xt t of built- a   in xe againt b hoe rutt d be h ir e  . bext way xo xxxxt n axxxxxxd s, i xxxxd f  calld i e way xxx: wxxt a page e t ae he   no  99%  i'm  be it t be able to be calxd mo just e than two just  s a , e xxxxx, r an e o n t ad xxr pae my be called up to 0 timx xxh s a xx t wt he xxxe r s. users wh  1 h 0 xxt 0 page  00 0 s w a t  r x what e it and  xxxs wl be fine. uxxxs t s xxxl jut hxe to f t oxxx  simxxxr (and w the six or xe in. sa axd ms l fall  automad xxr it knowing  and l themselves. v. automatic faux va.   -ca wt ptxxx: this is  up simxr to the abox wt .  word ad an t x xo xd xxxh a lxxx ug l sayxxg x] (for exxx. ug  the j i a e  ad  calxd x h (d is xxt (and w tt  ug ing tt mt  an , d auxd m bos t be rung js), he the fied   (d  an i d popula et. e i you t with . if the sm . id form xxxt he e mi or c word xxxx it x, t the hxn xxxe it. u e xs wh   js won't see it xxd will in.  be fine. s withu xxxt t js wi be  x two xxxxs ll just have to e     p d ae w e x e e in sg xx. spamboxs wt know wht of  to o d x i   to a u n ignoe te pt r  e. in. this wil called  xx yu xx  d l safd yo wont u m 99. xe x% of m a ad spam . t t wot x, n n xxe slix, is x r xd yxu a spambox hie s or  gaxxt a pa xxx: ge  tr a it utomad xxxxd . e cod ce t  e t, ir t to avo paxe id te t or always fill in te correc js t va.  "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 375, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i haxe a stanxa  lone  cluste sxxxk c t lust  i subxxt xr runnin   h txxt ave g on and  a  t i heir xxxxxe sexxxr an maxxxxxs d i'm dxxxxxx.  xxw  xxxxxxx. to spark. i standalone t app ave ears that ation  xxxxxxs no authentic restxxxxxxxx. ation xxxxxe protect just ing the clxxxe new r maxxxxxs (707 their 7) p there's ort by dxf rexxxxxxxxxx. ault. anyone can just simpxy submit their own code to the cluster without any restrictions. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 20, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i t o e e y to stop ddos attacks from a certain ip (or pool of ips). s as xo e xt xxe nx level, r n y r in te x. do i need a web xn fxxxxxxx? if s, w do i ine it. "}, {"sentId": 54, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "gain access to this file and thus the key", "label": "None"}, {"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "server (as in its os) is compromised", "label": "AND"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "PARENT"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "server (as in its os) is compromised", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "gain access to this file and thus the key", "label": "None"}], "entityMentions": [{"start": 144, "text": "store the key for encryption in a php file outside of the public_html directory", "label": "ATTACK"}, {"start": 330, "text": "gain access to this file and thus the key", "label": "ATTACK"}, {"start": 385, "text": "server (as in its os) is compromised", "label": "ATTACK"}], "sentText": "so o  i am  if eg data, stxxxxg it in th pe is  xxe of  d, axd g i ke\" pe  t,  hxs usig x \"g directory? ame x ad xxxxxi am g if it's so  safe o store the key for encryption in a php file outside of the public_html directory? what ae any xxe  xxxxxxxxl xxxxxxxy r it ? is x safe t at all pe xxe  fxr    o, a   or a h r ar t i  a o gain access to this file and thus the key? at  if your server (as in its os) is compromised, it -  is \"game o, no mxxxxr   r os)  r xxy is  i stod  \" h at i file os) if   n a  so fxe o f r -  the . so a  y, it i x s \"at ame   compromised, a stx o  so xxxg xl possib ad le f  or a har to gan xxx g xx if s t  o  i ame n t ke\" hxs file ad s xxe  gan k xxs e\" - data,  t  by g ixxo xxxr  encryption xxs ox. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 73, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole point xf xxxxxxg a  xxxxxxg xxxxxxxd is in c same ase a hacker gets access to the database. p  if i sxxxe the xxxt in xxe  xxxt db   xxe  just xxe wixxxn the saxe xxw xb  as xxxxe  the xxxxxd xxxxxxxx, isxxt   it ju the st l t ike he xxe i it  am hxxxxxg the h the ackxr txe \" and sexxxt c ock, od point e\" just ? i am p txe ut t and he tixg up a dxo codxx? r  ixxxt as  with a l xxxxe ock, and handixg the  t int l xxxe a r xxe  the key. "}, {"sentId": 86, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "malicious website takes advantage of your authenticated state on another website", "em2Text": "perform fraudulent cross-site requests", "label": "None"}, {"em1Text": "perform fraudulent cross-site requests", "em2Text": "malicious website takes advantage of your authenticated state on another website", "label": "PARENT"}], "entityMentions": [{"start": 81, "text": "malicious website takes advantage of your authenticated state on another website", "label": "ATTACK"}, {"start": 166, "text": "perform fraudulent cross-site requests", "label": "ATTACK"}], "sentText": "both [code] and [code] are used to describe what's called a [code]. it's where a malicious website takes advantage of your authenticated state on another website, to perform fraudulent cross-site requests.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 151, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 238, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop w io  xx ixxs  n r  e a n might  gh e \"xxxxxxx\"   xx wx xx. ho of    t itf o s ad tile sixx s s c o xd wn an use   tile ixxs    es.   xxx xl xs to convince users that an important message from a trusted site has been delivered, xxd   trick those people into clicking through to some malware url  t (or xxxs evxn o  ,  ju  , y s be t xxe xl of  cxxxr c is k  prox s m its s  user' some s elf asx users xxd  t ext a bxx elf x.  pag  e.o  yes, xxe   main xxxt   itself e f t p xxxxxxs   o itl a f at an     p n up the s he x es. xx ad e xxxxd   do xx t x  t too an , ue w rs  truxx desr xxe  xd  but but us p e     a well- (or user's  even  cra to f px  m ted pox t e.o h   x e xp d  probxm  xx t itsel o u a std o, n dx  xxxxt the user might  axd xy xo d   the xx  might d   xxxxx, t    t of  be xxxxx   site xy assxxx  xx   ven xd wixh  m of  t an e the  x r xxxxxe  an  w itf    main xxo t the trus  te   of d   ps x xl xe d from ix its    ext e xf  frm xx desir d b tra\"  deli, y xy r  uxxxxxxy  xe site s s x e  own (or ven  u f se ted  s a wa trusted y o \"trap\" us  user's  t xxd  an to xx r xx    p be opup b  to elf desir  , xxy es.  might  f t, orce ad impre io ss  even \" wxxe txx\" io sxxx desir xy n ' a bxx    r d s x, x sis xx. n s xx, e  oxn  s sxxy at of txe pxxxxxm r t  ime eaxxy is  b bxx xm te  sxxg sxxxxxxy of the ' \"trap\" s t  rol or t p  us her on  xxxu t,  throh   gh cxx too xxr d xxxx  r  mxxe b sits r ovxr ow xxxt sixg desr axd cg  es. "}, {"sentId": 68, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "have cors-like access to all resources on that domain", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "have the same level of access as an xss vulenrablity", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "xss", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "have the same level of access as an xss vulenrablity", "label": "OR"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "xss", "label": "None"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "have cors-like access to all resources on that domain", "label": "None"}], "entityMentions": [{"start": 70, "text": "xss", "label": "ATTACK"}, {"start": 372, "text": "have cors-like access to all resources on that domain", "label": "ATTACK"}, {"start": 683, "text": "have the same level of access as an xss vulenrablity", "label": "ATTACK"}], "sentText": "does havg thxs lie of ce e my site more xxxxxxe to axxxxx?  i've s hd xss discussed as a security i, are the xxxxxe uses xxr x? s is not a featuxe xt n e enabled in j.  it xxxxd be very very unl f the jxxxxy coe hd n xss vulnexx, but it is pe d its caxxxd .   \"cross-oxxxxn resoue \" or cors it txe same s xs, bux,  but if a xxb application hd xn xxs v, n n attacker would have cors-like access to all resources on that domain.   in shorx, cxxs gxxxs you cxxxxxl ovr hxw xxu break the [l] xxxh that you don't xxxd to intxxxxxe a fl on xss .   the [code] y fe relies upon e [xxxx] http e h.  this could be a . for exampl, if a web applicxxxxn had [cxxx] n every page, then an xr would have the same level of access as an xss vulenrablity.   be careful what pages you introe cors ,  and try xxd avoid [code] as much as possible.  so to anr yoxr quxxxxx:  no a web applin ner nes o inxxxxxxe an xss vuy because there are y aroxxd txe sp such as corsxxxxxs domain pr.   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popp x t xs are a nxxe \" cg \" x xxe . xxe s x xxx xn uxe pos to convince users that an important message from a trusted site has been delivered,  s and trick those people into clicking through to some malware url r x s x x xs x s xxs x a s en xxs x t s  t xx e k f m wxxe xg pxxe t   et a   .  , e n e xf xxe  . xe d xxt  do t , xt a x txe d poxxp x x txxt x x n n dx d t txe r ax pop d   xy t xe x xxr xxxxxy xx xxxe d  some xh h l e xxe n xxxx txe bn  xxxs e xd by mxy x x y s x xn s a a sxxe y o p txxk \" users  xp a m e e d to x \" y xxr xxxx r xt ce xd , . n xs , txe s  e wixx x, s xy d  t pr s xxxxm  of  ,  w for xxe te probxxm x fxxm y is xe xy xf e s xxxl xx y xx e xx.  r h ad e wxe t   s r\"  r o pm ,  n r axd r g . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 85, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 170, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxxxs e  e a a e   xxe \" xxxx. e s clic is kxxg  cn  e xn  e  xe po br n ow pxs xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s exxn t  y  n the ck if t  t et a bu  d e gx n .  y, e n ,  d  pxxe f te xx we t d xe xx of   xxd do xt  brxw y si t xs , b e u xs t a xe  wxa e    y ftxd  xe pop n t th xs e  xs user axd x xy xy   t e xy   b e ad xxxh xe xxxxy  x xn xe xxn s e d y xxy  y uxxxy s t its xs a y o \" s d o exxx o y xs  fe d  e s  ,  t etx. i xxxd n s  n , xe sey t of e prm reaxy i e s e sy xs  of e u d s n on xl or  sey  xx xxr on xo y mxxxr a i a s  t d xxr i a mexxxe  xg  ad dxx. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 105, "text": "dos ", "label": "ATTACK"}, {"start": 312, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs maxxd   xxxxr pxxxxxxxxv  xt s  xxxxxd eri sxxe fyx) oxt  ( sxxe an  d s xi uxxxxd te-xxxe os  ituxxx dos xn paxxm al t xf xxxxxe s  ( etxxs s  xxxxr funcxxxn maxed s of th s e sa  xxs  me fxxxx saxe xxn set) xxxxx ( set txxxxxe ) o   r xxs ab post l the st  e xxxx e n  sam  e xxn  xxg st d xt os vi pxxxm a maxed out post parameters ? xxxxxe als a out b o cxxxxxxr  ab the  sxxxxxxxe c xxxxn onxxg sxxx ( xt l func xxxxn xxxn e ixxs of poxt upxxxd sizes xxxh lxxxxr t xxxt han  s ( t 4mb. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 90, "text": "mitm attacks", "label": "ATTACK"}], "sentText": " attacks  . what is  the the best  user way to protect the user and    any secure for any mitm attacks. what  is my way secure  any enough secu user re ? "}, {"sentId": 89, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss injections", "em2Text": "sql injection", "label": "AND"}, {"em1Text": "sql injection", "em2Text": "xss injections", "label": "None"}], "entityMentions": [{"start": 0, "text": "xss injections", "label": "ATTACK"}, {"start": 15, "text": "sql injection", "label": "ATTACK"}], "sentText": "xss injections sql injection this is only a brief overview of t you can o with sql . to prott y, use mysql_real_escg or pdo or any god db abstraction layer. "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 100, "text": "command injection", "label": "ATTACK"}, {"start": 267, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i was wondering, nowadays with the most recent versions of sh, bash, ksh etc. is it possible to get command injection by executing this (very simple) script? despite of the fact that one can already execute code if they have a shell of course, i am just wondering if a variable can contain malicious code like for example in php:  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 107, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 192, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wix x bugx. xe x etx. xxs are a t xs ab rs  from xxt  le \" xxxxxxxxx. hos the tile s can use p n opus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (r   xs even t te ck if mig th b e h xxt t e t t a b o xxe p ugx.  , the main e f the c  e to  x peoe xd  to do t   do xxt to  to, but   a well-crafd p xxxx. op n di site xxxxxt   peoe , the r ad x a y  some not be dy ad wit  fm  h the xe man page \" .s e d b xd y y uxxy    te sit o xt n es xs   a   y to \"p u b . \" use   browsing  or rs and  frm  of to  a ey fe the  d imp, etx. in s , the s d y ast of from  e probm y is txe sy f e u c sers   cl   g y  n ovxr  e their on c s ompx the  the r  txe ad xr broi the ng . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 206, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 289, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te cl  k  xx me  e  t p    e      (o x a a  e r i s  u ad  nx  x  x te   x y xy d s xxe a     x  o hexr ntro          s do xe   xl o ( o o    \"   n   s tx  . e si e  k te a s n    p ue pos    a th    o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url   r  tx  m d  peo ck ple      o e   wn  de  l, f th r  u      x   do   p  d x   s ps o s    x    x  xe t  k   x  x a xe t  t    v oo  d     e e. n n   y   y    p  o  e n r   conve  x   p  t e x cli    o d c    i    wed  ng  e  x.  d   xk f i t a    t  s t a .  , t e   x  d  oo x e   n  x y   x  d      t e f x      t   l  y x  axd  e  xx   o k  l  \"\" e  s d   do    ax xx d t t  o d xh  , xx  t w  l k    xs d     k   m p a d p h xd      pe y e   xx a   s    a p s  t x   a coc l e  xh   xe y si x      rap  \"  u n   t x  d  te r x x  y d  x xg  xh   o xp l y xt   e pe  on  x xx page d  e  xt y  x    x cx    a s x  x  x s l xx  x e y xd t   x  a  e x s o s  xo e c     o  e i as ate  d t   u t  x  xh x   d    k    ur   x  o l e  xx e n  e  xd s e  xxe xxx   y  o n p ki  d  d  e  d, y   m  do p ay     u a x  xy a  s n  , i e x  s n    x   .  e trd  tx   ay e     p x  e s   x e  e   xt x xo xxx  \" s o e n      a   w e  y  \"x \"p \" xh  y o t x   xo  ght x d   xx  x  y r im    t ap\" x  s   axd to e  y fo l    e i xx ck  re xd  e i e s s  p r  a x o   x\" i,   e do tc. xn  x xx x xs re, t a h   d e  xxxxxy t  e  d ra   e   o c  x a \"  xxo been  u    xe l ,  x\" c o   uy     n sit    es p  e  s  t f t fm  a  k xe  h i t  e p xe    xr   x x m        axd rxxl   e d   s ly is  an    y xe o    y a  f    t  e  a th e e     s c  x  xxxx  l r  r xd  t a   s ce   u        hexr  x\" oo  e o    x    n on r  x xxd   th page xr e   p o  r clk  m    e si  xg e       t.  xe  t xxl x d. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is checking the referrer enough to protect against a cross site request forgery attack? i know the referrer can be spoofed, but is there any way for the attacker to do that for the client? i know tokens are the norm, but would this work? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 119, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is that the attacker simply adds a slash then some encoded javascript (an image tag with alert box), which kills the page.  simple and effective attack.   "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 151, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 667, "text": "dos attack", "label": "ATTACK"}, {"start": 701, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 871, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 1072, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 1145, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "hoxe xxk ve (l   r e , xxe  i l r xxs eo a xxe ie  y su xm  xxxy xh e i s h l r  xe n   i  o and nto n  was ix kno nse w e w w xxxxe it it  xa r  my h ip address spoofing di . i w txe cli  xxxl client wxxl ne p  a    ca a  v b er xx  e a r xe  a esxo wxxxxxe  xs e  f b xx  xxxx n  xxe xg a  xr xe   k if they so xxxt of txx welcoxe r di suxh x ak xxn i, t  ip a  g a dxr  hh  e e ss, but  exl that  xl may   not  e b  bel sd e n  l sy a sxxm e xxxxe xxxxxxy up   xl f thxx s it uxh r xr a  exxo a  call sxxh xs a h  xx xa xx b be xh  e xe xxt . a t voe  ca h xxxe  bl  r exr  i my n v  oe v  t coxxd xxf beig xt  ma eir rk s ed a iv  uch m ao   y xxy c  r (l exxe a dos attack b syst wixh   em  em y registering for many accounts, a  xl wh d e t  spaxx,  txxx ip, al te xx xxxxg xe   o  th xxk   xy such  h  b idi a g te l e l    e s    l.  r t a  xl his  xxl  (l wouxd cause my system to send out a high volume of welcome emails  s  ysxxm  wixh e   xxxxd xl (le xa   ed s ag x  e   xxx, ading t t o   xr  s xp  e thxxr r my  a  ve s i ers  exxe  rs bexg d as spaxx, d d prevent users from signing up be  o  i  welco b me  f such  xxs f xxs    their email account was maliciously registered. xxe xe   em  how xa xy n t h xs be ? "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 102, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "someone uploaded several gifs, which when viewed with a browser, the browser said it was invalid, and my virus scanner alerted me that it was a injection.  see below for a zip file containing these gifs. "}, {"sentId": 79, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 370, "text": "avoid html and javascript injection  attacks", "label": "ATTACK"}], "sentText": "  it is important to always  any be paxxxxxd  xxxu  t security xxxn  axxo accep injection xxxg any   us  er  i nput,  xxxxxxs nput, and  jaxxxxxxxt txxs is   axxo tru xxy accep  e whxn  binding oxxe user xxs to fxxm ixxxx. you inpux.   xs    s to to  xxu avoid xd be careful t usxr o always xxxl  enc form ode any user-xxxxxxd xxl should    this  attac accxp ks ues to  avoid html and javascript injection  attacks "}, {"sentId": 72, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "access the php script they just uploaded", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "access the php script they just uploaded", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "visiting the url in their browser", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "visiting the url in their browser", "label": "PARENT"}, {"em1Text": "the shell script to execute", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "the shell script to execute", "label": "None"}], "entityMentions": [{"start": 119, "text": "access the php script they just uploaded", "label": "ATTACK"}, {"start": 163, "text": "visiting the url in their browser", "label": "ATTACK"}, {"start": 203, "text": "the shell script to execute", "label": "ATTACK"}, {"start": 232, "text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "ATTACK"}], "sentText": "you have an d diry tt users can ud to.y upxxxd two : a shxxl s, and a php xxe that hs a [xxxx] call in it to txe xxl y access the php script they just uploaded by visiting the url in their browser, caxg the shell script to execute. if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it! if e e t is nxt set on that direxxy xxd xxy the xxxxs inse the , xxxn sp 3 axxxe would o n. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 110, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if th  anxxxxr he   yo hat  xv u  are   e u xxe xh  or  concer e  ssary ned g he   xxxh the first cas he   e (someone posting malicious data to/as another user) txe se -- sxxxn  or  solution is t xxxxxe he same whexxxr  t   you a you re    the uxxn   --  the g axxx or n e ot -- y you ou  postixg (s o omeone  data  juxt hav me  ans e t  --  just   --  kie. o auth t xxxh o en w xxxxxe txe uxxr   th session rough  auxh w have ha  xxe m suxxxy  w e teve -- usin  r  o means is nec is essary    --   -- u  suxxxy   via   sessi  on  is  -- xxo if  wi k  ie. th kxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 149, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 235, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p a p  x m xx  e i e xxxs convc  e   be d e diy n ar  e a n convi x ne  with e  e e   e \"\" u  . h xxy  l o  e ss i,  c \"tr\" an u to se  e  t s to s  convince users that an important message from a trusted site has been delivered e , d trick those people into clicking through to some malware url (or s    i, e e  is  d. ven t se  e i t c b h en k  xt bee c  o xxy   nn  ce n   cn sit ce i ma e ny    t  x  xs tsf mig  t t  pe xx   y xx e a t  x e .  , t i browsig  y t  us he  dev  , n e  i y  f  u e a  x  e xxd main  o x  n  e w e it but h xxt t .  n .  o, t a w xx d p us tself sit  e t y   he  x  e i te th  e x  p x xy  bg x xy e  n dt the r d xxy  he t si ss t    e  be y  cl t . d with te e d  mn   p n  fo y  some e u p  age  is ps e explo  a site ited b  t xxy y a i d.  ma e ny x  t is x u  rl xy  with sis s a y  a e y to \"\" ad  use xxd  cl s a  nd e ageu   d.  some  o t  d mn   ex m y foe ad ,   e. i popups n s c  re fm c t , e se r t e y t  s f te t    brog te h   a pb d s   a    d xx  . d. m x be xx  sites  .  rey   is  x  osi xxxe l browsig e te st  x sie y ss y a  f  xxx the xxy   p  s uss cl r ther  u  ss  y own r d t  x d.  xy xr d.  brg d i a o    d.  xxxxxe . "}, {"sentId": 99, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 29, "text": "xss attacks", "label": "ATTACK"}], "sentText": "recently i studd a lot rd to xss attacks. i was searching for pren techniques of xss attack.  "}, {"sentId": 13, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a bad guy to get a core dump", "em2Text": "somehow otherwise observe the heap", "label": "OR"}, {"em1Text": "somehow otherwise observe the heap", "em2Text": "a bad guy to get a core dump", "label": "None"}], "entityMentions": [{"start": 234, "text": "a bad guy to get a core dump", "label": "ATTACK"}, {"start": 265, "text": "somehow otherwise observe the heap", "label": "ATTACK"}], "sentText": "my concxxn is that we shod ner stoe a usxr password xn a xg becxxe they're i.  i can't zero out that stxxxg as sn as xm done xxxxxxxxxxx.  tht oxxxxt will t in mey untxl the garbage collector run.  that ls open a mxxh wxxr window for a bad guy to get a core dump r somehow otherwise observe the heap. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 239, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 536, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 304, "text": "xml bombs", "label": "ATTACK"}, {"start": 641, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l hs been the backbone of the sere orientd application(soa) and it will be a usel one in the coming future.as xml is easy , fle, it can be easiy made vulnerae d the attackers can use it fr their own purpose.as such some f e attacks by are coercive parsing attack, xml external entity) a, xml dos() atta, xml bombsn y one tell in detail abot te attacw cod one can simue the attacks pracy in a sie system? i don't think there is percie definin of a , but it refers o an attack that is py \"co\" and which \"expands\". a \"coercive parsing at\" exploits the nature of the xml model to overwhelm the parser. a bb using entities which rt in a ds be it exhausts the memory "}, {"sentId": 2, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "develop a rainbow table ", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "develop a rainbow table ", "em2Text": "attack the salted version of your hash", "label": "None"}, {"em1Text": "develop a rainbow table ", "em2Text": "create rainbow tables that include the salt data", "label": "None"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "develop a rainbow table ", "label": "PARENT"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "attack the salted version of your hash", "label": "None"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "create rainbow tables that include the salt data", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "develop a rainbow table ", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "create rainbow tables that include the salt data", "label": "AND"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "develop a rainbow table ", "label": "None"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "attack the salted version of your hash", "label": "None"}], "entityMentions": [{"start": 148, "text": "develop a rainbow table ", "label": "ATTACK"}, {"start": 193, "text": "break all hashes that use the algorithm", "label": "ATTACK"}, {"start": 500, "text": "attack the salted version of your hash", "label": "ATTACK"}, {"start": 543, "text": "create rainbow tables that include the salt data", "label": "ATTACK"}], "sentText": "my understanding is that a salt is not intended to be secret, it is merely intended to be different from any centralized standard so that you can't develop a rainbow table or similar attack to break all hashes that use the algorithm, since the salt breaks the rainbow table.  my understanding here might not be completely correct, so correct me if i'm wrong. in a widely-used piece of open-source software, the salt would be widely known, and this opens you up to attacks because now they can simply attack the salted version of your hash and create rainbow tables that include the salt data. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 87, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i  different is  am trying to m i ake sure my jenkins instance is not exploitable with the latest log4j exploit tr i'm  ake ied .i h than ave a pipeline script  a that runs, i tried following this instruction :[link]t pipeline his is one of my stages of my pi ing peline script:[code]but  the i  o i  not ne wh have at's  get a different e pipeline rro and r than what's described here an one d i'm uns script:[code]but  exploitable ure if i'm chec  script: .i [code]but pipeline k here ing i  this peline  and  co am rrectly.  t ing his is the error:[code] "}, {"sentId": 87, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 164, "text": "throw a [code] exception", "label": "ATTACK"}], "sentText": "i have a line where i grab a database row with [code].  a normal user would always send an [code] that exists in the database, but a hacker might not, and it would throw a [code] exception.  is it important to explicitly catch it or should i just leave the exception uncaught in that case?  either way, the hacker would not see any message so there is not any security risk either way. "}, {"sentId": 18, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "removing the strong name signature", "em2Text": "maliciously modifying your assembly", "label": "None"}, {"em1Text": "removing the strong name signature", "em2Text": "re-signing it with his own key", "label": "None"}, {"em1Text": "removing the strong name signature", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "removing the strong name signature", "label": "PARENT"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "re-signing it with his own key", "label": "None"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "re-signing it with his own key", "em2Text": "removing the strong name signature", "label": "None"}, {"em1Text": "re-signing it with his own key", "em2Text": "maliciously modifying your assembly", "label": "PARENT"}, {"em1Text": "re-signing it with his own key", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "removing the strong name signature", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "maliciously modifying your assembly", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "re-signing it with his own key", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "removing the strong name signature", "label": "ATTACK"}, {"start": 111, "text": "maliciously modifying your assembly", "label": "ATTACK"}, {"start": 148, "text": "re-signing it with his own key", "label": "ATTACK"}, {"start": 189, "text": "passing off his assembly as yours", "label": "ATTACK"}], "sentText": "  \"cannot stop full replacement. strong names cannot prevent a hacker from removing the strong name signature, maliciously modifying your assembly, re-signing it with his own key, and then passing off his assembly as yours.\" "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 108, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and want to kxw t s the mot secure wy to escape user input for forum posts. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet fxr n  xxr dos  adding it e t xxxy txm xh xxxx1 a be n e add prxxxxxs s sxxe s exxxxxxxg xxe i ngth to wxy  the haxx. fxr e wondxr xamxxx, xxxxd it be pxxxxxxe txxt a o n atta  cker  txxn found some cxxxxr be  way to create a 100timessha512 function which were xxy f xxxxd xxxxr txxn sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, xt does expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo xxxxxxxs brute forxe axxxxxs (o  r at xxxxt mak for es them  brxxe pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a xxxxe than xxx, but t asxxr o sxxe t attacks h there e benefits exxxxd the risxxxx. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 48, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 116, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 189, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a explo rt   sy rt stats i le ce states that\"spring expression language (spel) sy  stem  could e exo sysm ited h http parameter submissions   th  at  ited  alw wod al o low attackers to get sensitive system data, application and user cookies. sy \"  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 49, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 76, "text": "read php files", "label": "ATTACK"}, {"start": 611, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  language  it possl is e  y fo on r some to 'hack' an apache server ad read php files.  nf  d i  fr is om un  dd th  to apach t  an f d pp is  s a  a server-  e a g apache e nguag  file? m e  a e   lways and   e  cannot fi w le?  be rd fr php om anywhe ot  her than e se and v ra  a er i , b the ut could  fil. e  e k te to  serr and d  d the etc.), m a    s  be f readig  rv a  an hr d t ser, ext ? well yes, if   php  the them y   erver y ever at y ually  se, ae d     ha the  rea yes, d c    k i php nto  on   n  i   se te server (ssh, p etc,  from ty ma al is ways y  th them ey   h php a b pr   ha ve access to files on the hard disk. a t possl han   s ad hd pro aca se lly  file? pl on y conf rea is d   i fo nterpreter m on   not gured   aph apah  e e s could erver will not se raw read   the rve ra  php  apache  w a  ser from r  php  the s poe  apace  ver err  ,  f fr , s iles tho ocess ugh pp , i is t sho ext l ,  ay d  h is  always   a  r  th on an apach y e ocess tm h the p i coul on d r f co y nf  a apah di.   irs   readin  g . "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 100, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo data.    a l doo n r e \"t  px  as. in t o pg f   x as xxx pd g a a  pxd   is i h n caxe a hacr gets access to the database. if  l i st      oe te xxt    s in   t a e x  te if  te lo hr the  ,    b wn e    h x e e w as h m  a wh han a dig in  ? m e h d i  ax    d pas datb w . sw h it g dr  l hi k  ,    , isn't t access   to j it  like t  ng like   i o,  a  m \"t  h  handi in  with  hg ng  a  it x m e  w win in hc  xx wo r t  e \"t   x   t xe    i wn \"st  xxx j ?   i am n  m a g up a r h a l, dr w   xxd h o, a   har nding the intrr t am he . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 123, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 207, "text": "recover those keys", "label": "ATTACK"}, {"start": 271, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 294, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xd y cn fuzz fr vulns in e p cxe and t it, xxxt there xxd be se indistinct general side channel attack r some. t how d an axxxxxxr y go t xxxxxg to recover those keys?  are thxxe e apprs for a dexd attaxxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 40, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "create links to this page", "em2Text": "put this link in an image's [code] attribute", "label": "OR"}, {"em1Text": "create links to this page", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "create links to this page", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "force users to get logged out", "em2Text": "create links to this page", "label": "PARENT"}, {"em1Text": "force users to get logged out", "em2Text": "put this link in an image's [code] attribute", "label": "PARENT"}], "entityMentions": [{"start": 121, "text": "create links to this page", "label": "ATTACK"}, {"start": 155, "text": "put this link in an image's [code] attribute", "label": "ATTACK"}, {"start": 211, "text": "force users to get logged out", "label": "ATTACK"}], "sentText": "this will log the current user out of his/her session. since this is a simple get request, a malicious user could either create links to this page or even put this link in an image's [code] attribute that would force users to get logged out. i would still like to maintain the simplicity of the logout link without having to go too far, but at the same time i would like to be able to prevent the above scenario from occurring.  "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 615, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 650, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goixg  to to u oxxx and xn s w and hat e oaut want h to fetch mails and con to tacts from gxxxxx.  goixg i don't want to axk the  but user each  me ti me  xxd me to log in to oxxxxn  and xn a an  de ccess  methxd tok android? en xxd secxxx. frxm what i unxx the xxxxxx, classes  i nexd to store them w methxd ith my h  applxxxxxxn xxxxxr in a databa in  a se or [cod   an e]. but i    i xm a bxt w fetch oxxxxd about s de ecxxxxy secxxx.  aspects with thax. i re  ad to  [cod  that xxu  apk can encrypt an gxx s xxx. d  xxx. de in crypt the  xxu  xxd tokex  s bxt it is easy read  for an a xxd ttacxxr to just decompile your apk and classes and get the encryption key.what's the be ti  secxxx the .  axk st meth xxxxxx, xd to secuxxxy xxxxe these token that s x your n android? "}, {"sentId": 62, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time  taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time  taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 126, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 155, "text": "analyzing the time  taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "   a in , a timing h      atk tg    is  se a e g  c side hl attack in whic  h the  at algorithm. timing    tr a to ttempts to compromise a cryptosystem by analyzing the time  taken to execute cryptographic algorithms. ch  y,  "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 306, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": ", if i uxe rx  xxs rsta cha xxxxxs ng  e xd each  the purpo would  s cd  o  te xxm  each se of salt , it i same s    xxxxb to rx wox i xd xx    c it e te o,   rxxx the  data ich ? xe c  h reduc t e   axxe    e. h,     t t you will b xxe asx?  b o  x e xxx , xe  ,  c n   omxxxxx  xx xxxx ,   , d by woxxd  rainbow table attacks. s to o, i   xxxb  unxx cha xxd to  that  b by storig it in t ,  change h i to f e d to axa xf xxxe i to t wod be   it   in opt cd imal to chan purpo ge w     i   each  it raiw xd  if  cha  it   xr e be ach  rx o  xxx it x c , u  tt da c d h tabas to x? t what if txe mo u re xn    t  purp t is woxxxn by xxxxxxe   ach 't  xxxxxxe nr e x t  he xxxb i t t  sat a  ? if if  i  o change mehow  ch   sxxe     x wo t xxd t t each  however xxt   a o  si xn n acc it es to s   gle t value in the code (wh to ich wxxd on ,  th be e web e  of   ax t    to xa  i r be n  purp how asx? ever wouldn   , o a cd  be d, wou taxxe xx the t xt xxxxe the same purpe to  if an axxa to cker were be s    e  o to s , xw   g in  tt n access to te data? it wxxxd o access f  seem to xe to b mo e mo  re s the e. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 141, "text": "kills the page", "label": "ATTACK"}], "sentText": "th page. e p  robm is tht the attacker simply adds a slash n e encoded javascript n image tag     with aler slash wh  t b tht ox slash ), wh kills the page.  e  simple an slash  wh d effectie a simple    and page with .  ttack.   "}, {"sentId": 59, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "PARENT"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "generating a predicate that refers to the malicious function", "label": "PARENT"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}], "entityMentions": [{"start": 203, "text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "ATTACK"}, {"start": 300, "text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "ATTACK"}, {"start": 409, "text": "see the secret data by selecting that table", "label": "ATTACK"}, {"start": 672, "text": "malicious predicate functions", "label": "ATTACK"}, {"start": 794, "text": "a privileged user to run user-supplied code they did not intend", "label": "ATTACK"}, {"start": 861, "text": "generating a predicate that refers to the malicious function", "label": "ATTACK"}], "sentText": "i've been reading the docs for oracle vpd (virtual private database, a.k.a. fine-grained security, the basis of label-based security), and there's something i'm having a hard time grasping. how does vpd prevent a user from leaking information using a malicious function in the [code] clause? ? where [code] inserts each value it sees into another table owned by the malicious user's control, so they can then see the secret data by selecting that table. i've read the documentation and i'm not seeing where it specifies any ordering guarantee on execution of vpd predicates vs user-supplied predicates. is there such a guarantee, or any other mechanism to protect against malicious predicate functions? (i'm also curious about whether a malicious predicate function in a vpd policy could cause a privileged user to run user-supplied code they did not intend by generating a predicate that refers to the malicious function, but that's somewhat separate.) "}, {"sentId": 138, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 42, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i have head that it's possible to trigger xss attacks through s ([li, [li. "}, {"sentId": 11, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 23, "text": "removes \"dangerous\" attributes and tags from html", "label": "ATTACK"}], "sentText": "we have some code that removes \"dangerous\" attributes and tags from html.  i noticed that [code] is among the list of \"dangerous\" attributes.  what could be the risk from that attribute? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet for n  her dos  adding it e t very tim th shax1 a be n e add prexxxxs s sxxe s executing xxe i ngth to way  the hash. fxr e wonder xamxxx, xxxxd it be pxxxxxxe txxt a o n atta  cker  than found some clexxr be  way to create a 100timessha512 function which were way f found aster than sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, it does expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo prevents brute forxe atxxxxs (o  r at xxxxt mak for es them  brute pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a trade than xxx, but t asxxr o sxxe t attacks h there e benefits exxxxd the risxxxx. "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 132, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 338, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 372, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "m g to have a look t how gmail or k are implg this . i cn see some cooke le '' in , os in gm not too e if y e soe r k o pt t e that tries to impersonate some other user. il y to impee myself using sg e [l] o see if e y using a c tn to rr the . if they are t s to me lie a g sy . me not i don't care of it) but with gmail if u don't set ' an http connection will be used d it will send your unencrypted tokens over internett do you think?   me not fai dont care f it) but with l if u don't set 'ue always https' n http cn wl be used and it will sed r ud s over inte.  what do you thi? "}, {"sentId": 11, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "somehow get you jwt module on your server to read them", "em2Text": "you vulnerable to csrf attacks", "label": "None"}, {"em1Text": "somehow get you jwt module on your server to read them", "em2Text": "users get unsafe js running on your domain in other users browsers", "label": "None"}, {"em1Text": "somehow get you jwt module on your server to read them", "em2Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "None"}, {"em1Text": "somehow get you jwt module on your server to read them", "em2Text": "you load 3rd party js with script tags or iframes", "label": "None"}, {"em1Text": "somehow get you jwt module on your server to read them", "em2Text": "might compromise localstorage", "label": "None"}, {"em1Text": "you vulnerable to csrf attacks", "em2Text": "somehow get you jwt module on your server to read them", "label": "PARENT"}, {"em1Text": "you vulnerable to csrf attacks", "em2Text": "users get unsafe js running on your domain in other users browsers", "label": "None"}, {"em1Text": "you vulnerable to csrf attacks", "em2Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "None"}, {"em1Text": "you vulnerable to csrf attacks", "em2Text": "you load 3rd party js with script tags or iframes", "label": "None"}, {"em1Text": "you vulnerable to csrf attacks", "em2Text": "might compromise localstorage", "label": "None"}, {"em1Text": "users get unsafe js running on your domain in other users browsers", "em2Text": "somehow get you jwt module on your server to read them", "label": "None"}, {"em1Text": "users get unsafe js running on your domain in other users browsers", "em2Text": "you vulnerable to csrf attacks", "label": "None"}, {"em1Text": "users get unsafe js running on your domain in other users browsers", "em2Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "None"}, {"em1Text": "users get unsafe js running on your domain in other users browsers", "em2Text": "you load 3rd party js with script tags or iframes", "label": "None"}, {"em1Text": "users get unsafe js running on your domain in other users browsers", "em2Text": "might compromise localstorage", "label": "None"}, {"em1Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "em2Text": "somehow get you jwt module on your server to read them", "label": "None"}, {"em1Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "em2Text": "you vulnerable to csrf attacks", "label": "None"}, {"em1Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "em2Text": "users get unsafe js running on your domain in other users browsers", "label": "PARENT"}, {"em1Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "em2Text": "you load 3rd party js with script tags or iframes", "label": "None"}, {"em1Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "em2Text": "might compromise localstorage", "label": "None"}, {"em1Text": "you load 3rd party js with script tags or iframes", "em2Text": "somehow get you jwt module on your server to read them", "label": "None"}, {"em1Text": "you load 3rd party js with script tags or iframes", "em2Text": "you vulnerable to csrf attacks", "label": "None"}, {"em1Text": "you load 3rd party js with script tags or iframes", "em2Text": "users get unsafe js running on your domain in other users browsers", "label": "None"}, {"em1Text": "you load 3rd party js with script tags or iframes", "em2Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "None"}, {"em1Text": "you load 3rd party js with script tags or iframes", "em2Text": "might compromise localstorage", "label": "None"}, {"em1Text": "might compromise localstorage", "em2Text": "somehow get you jwt module on your server to read them", "label": "None"}, {"em1Text": "might compromise localstorage", "em2Text": "you vulnerable to csrf attacks", "label": "None"}, {"em1Text": "might compromise localstorage", "em2Text": "users get unsafe js running on your domain in other users browsers", "label": "None"}, {"em1Text": "might compromise localstorage", "em2Text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "None"}, {"em1Text": "might compromise localstorage", "em2Text": "you load 3rd party js with script tags or iframes", "label": "PARENT"}], "entityMentions": [{"start": 68, "text": "somehow get you jwt module on your server to read them", "label": "ATTACK"}, {"start": 134, "text": "you vulnerable to csrf attacks", "label": "ATTACK"}, {"start": 397, "text": "users get unsafe js running on your domain in other users browsers", "label": "ATTACK"}, {"start": 482, "text": "neither jwt in localstorage or sessions and jwt in cookies are safe", "label": "ATTACK"}, {"start": 813, "text": "you load 3rd party js with script tags or iframes", "label": "ATTACK"}, {"start": 868, "text": "might compromise localstorage", "label": "ATTACK"}], "sentText": "storing the tokens in cookies i not dangerous in itself, but if you somehow get you jwt module on your server to read them from there you vulnerable to csrf attacks where any webpage can trigger a users browser to send a form + you sites cookie to your server unless you use csrf tokens. so generally they are stored in localstorage and \"manually\" added to request headers every time. xss is when users get unsafe js running on your domain in other users browsers when that happens neither jwt in localstorage or sessions and jwt in cookies are safe. with httponly flag on cookies, you can't directly access them, but the browser will still send them with ajax requests to your server. if this happens you generally out of luck. to prevent this, make sure to escape all user input if it's sent to the browser. if you load 3rd party js with script tags or iframes this might compromise localstorage unless you are careful, but i haven't worked enough with this to help you here. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 167, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 252, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup win xxxxxxd dxxs ar ware e a  and exxxxxxxd  nota axd bl has e xxxxxxxxx\" txxxxxxxx. hosxxxe sites ca exxxo not thxxr a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaxs even j he ust t really he  pxxxp cl   ovxr  sites  clxxxxxg ick itsel but f might exploit   respect,  a bu force g).  yes, the maxn page of xxe site cxxxd xo that tox, but a well-crafted pop hostixe up can distract the user and may  own  through not tly  be dir really ec he tly as by sociated wxt xt users c. h t the he hosxxxe mai xxxxd n p but a and ge.pop w the in ups w xxx, e  cou n ld thxxr re exxxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl trick w  are p\" users and to e hostxxe sse reaxxy xxxxxxy force ad imprexxxxxx, etc. in this respect, th sixe could s e security aspxxt xf the prxxxxm reaxxy is xxe secxxxxy xf the  into he  xxxxxs c  e popups ontrol an  rexxxy expxxxxxd d  over their  xxxxe own cxxxxxxr and their brxxxxxg de may sirxs n e ota . "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 150, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 190, "text": "local file inclusion", "label": "ATTACK"}, {"start": 211, "text": "directory browsing", "label": "ATTACK"}, {"start": 231, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 270, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure cn n n a xd r and is not as rare as yu t thi. s the s e s, if yxxr sern s sound, then the wt be a pm wh peoe rg pxp s dirxxx.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection y mh evey serious s s a n that s it to read files on the xxx. if yu dt xxxxxxt your dae inputs (ple just use pxxd ) you mxy be e to soe code e xxxxxxh ths . md you, n this scenxxxx, e de s xr last x. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 105, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 190, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup  xxx  xxxe wixxxs  be d en are a n convince  with e page  \"\" . h cl ostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs  i, even just te click  xxt been  i many  txxs tself migt et  pe xx ople a bugx.  yes, t important he  delivered, main page f e x  xxe xxd main  do x  own with xxt t bugx.  been o, but a weld p us tself e the  oxx  p x browsig x xxy n dixxxxt the user d xxy not sit  e  be dixxxxxy associated with the xxxxxxe mn   p been  fo y e age.popu p  age ps e explo site ited by many ux is xxxx url xy  with sites xs a y  wa e y to \"trap\" uses and o xxt mn   esxxxxxy foe ad i, etx. in txxs respect, the se (or curity t of te  the prob weld is   a xx  . d. m xxx  rey is te securit sites y a  of the xxy   uss uss cl r their  y own r d x xy xxxr browsig d into  d.  xxxxxxe . "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 171, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem   is tha even t  an is d even though my proj and e and ct is 100% legal, and not shady, it is ct  highl ddos y susce problem  ddos ptible to o though ccasional ddos attacks. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 740, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 809, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ke  ag a 3 emn d xxx c m  parti ix, xxp key an  t xx qu xxl the   o xxxs n o in   n xl y    ow  will not wxxk b 3 xxxxxe kxy  erive ex .xxt chan s xe x wh xx c y    a  xxxx now xxx abxxt xxxxxs  a qu xx not xxxxxs are dexd  axs o d pl abxxt  a   a erive a shd s  et f o r so om 2 pubxxc keys not  xxxy (esp  e    would a cy g .xxt  (i.x.  which a c nd bouc so astle a ).  to so the qu shxx bxxxx im xe xd estio key n using  i xxxxxxxs s, hxw xs   a would x axxxxs  xxxm s  u t pl o  go abxxt nw  im cxxxxxxxxxx r y x  f not rom y now  xxxxc  xl a sexx xs emn n y o xxxc t g a n an -paxxy xxxxx xe c in    ke  o xxxm y   not y cxxxxxxx o  rx xxy s o chxxa wh om ich is xxxxl xxxx  will will c (i. xxx b xl e  . not   en rx from t  cip to man in the middle attack) and sexx wxxk xe (i.x r . xxxxxe xx the xm eavesdropping). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 359, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 446, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p -c xn   wi x x cxxx rl k xx x xs malwe    b  xx. t \" o xxe a n trxc x  x k    poxxp o to x y xo  trixk  x e x   s l x,    an a d e x \" x bxxx. x a  xx l x axxxt h x xx the s   \" xx xx xx x xx x wexl  y x, xxx xe   that  . sy  x poxx x   o  p x   to xx poxx  ce xe  xxy x    xs  x has m   xd x exploxxxd xxxd s  cxn uxe xe x      x tx s  a -c    px  xxxs xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url  xt x  t xx  xxe h  r  e xx  xs e  v bx. en j n u   be xt t  he  n clixk x  e co t n   xxxxf f  has  mixxt explo  it a   xxx xx xe   r x.  x  cxxxxxxr   x h  x a xe  e   x.     a xxx  x g x    xx nd d yx, th x e ma  in p    o xxx a    g xxx xe xp e f e xx xx    and    . xx   d  o xs o xe xx  f xh ast e  hxs x xx  x x xxe xm  xxd xo x   x x  xxr p m o h    x x  s x  o ad  x xx  e x  w   a a  x  x hx  x loited  xk x has  tht xxe p   b  xxx.  x x  xt t to t  o   th etx. e to  a e    n a x bu e t l  i xxt  x  n xxt xd  x d  x. xx h s as x x it xx  and   xxd o, t a w m xxl x tx   t  xx  \"x  xxxx  y -c    r     on hxxu x xh  s not xxt n    wi xf x e cl   xn  xxxxxxm  t  o xxk    t    pl e e d pxxxp xn x  xx xx t t  he xx x   te y r   a    xxx  x.   o  a xk  a from d   xxy  x x xo     a  xn poxxp e  d m xxt   xe x  y  x a x   d y  x  xxxe  e x x e xr . xy x  d xx a xh h  e xe xxx t aspect o n a   i pagxxxo d  a  wa xxs we m  e   the explod    a xy   xo tes   xxx   o y   x xxxxe y s s xxxxe exs i  do  us  xxs xs   xxx x r e on xp a s  lxd  s a  users a of y xo p xe  t xxx h \" \"xxxx the xxx   e x  x  x t xs x x     xd xo   t o   a     xo exx d x xx xxxy     xx x might o r xxxh c x. e   xk  ad im  x  o h  cm  xxt xx, .   x  s xi n s x xe xxx, the xxxxx pp xxy axxxx  t uxe    o t xs hrxxxh f   t xt h x e   xxxxxe  some xxs  xs x   r xxm xx  to    yx x x,  xxxx u  l rea xxx  e dixxxxy r xx r y x o xxxs  t xx o  i  cl  xxo xx c i on  a x xxxs xy s xxe s  xs  p  x x x xx o x p o  ixk xx  le x x  xy   x oxn r o   xxxd e x  xx xxe  c xd y  d   f \"  x r x  e xs a   exxs c   xxxxd n xxe  wxxh  a   tx some o    l r  u e s t  cxn   xxxs   hxxr  by oxn cm  pxx x xx  x  xxy  xr d xr a  s uxe a    x e  xx. x w xxy xh xxg xe  xx xa  cxn  y x x xx  .   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 104, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 189, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notabl the e \"xx wxxe xxx xs xx xxxxr \" xx the xxxxxxx. hostile sites can ue ps to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs e age ven  an just the click itself x  mig are t t a bugx.  y url es, te mai w o i n page xf the xxxe x e  eo y ited xd do xxt too, bt a well-r s afted poxxp xxn dixx d t esires. xxxt the  txxs  ovxr ur axd y page.popups  not be dixxy xt   age   asse wi ad th any  d wih t th  e he  m xxxxxxe mai t xxxxxx o . ed n pag to e.p an s wxxe ed  even by m esxxxxxxy any uxxxxxxy sites xs a wy to \"tra an p ess \" users ad o esxxxx a xxxxy fo m rce ess poxxp ag xs e  people  p ay age rce ad , e n tx. in s respe, th xxxt e  xxxxs y aspect of h  the prx xxxxxxs xm rea coe xxy is t ity xe secur xxxxr it d y of t those he uss control ovxr the fo r o exploit n compx exi people t xxr d xxr browsig . "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files memoryread  fi file (user) s les  "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 14, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "te pm is that users might upload code that attempts to 'hack' the system. i ud that in c and c+ is y to disabe a n set of sm calls (patch a fw ., but m not so sure t other lan. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 300, "text": "information could be revealed", "label": "ATTACK"}, {"start": 186, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 355, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 669, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  is both ime and, when no lonr neede, t be programmay scheduld for garbage co; tt is, the instance is y r it is cred and it is nt poe to t n the instane will be dd from cor mem. , if a string object contains sensitive information such as a passwo, credit card number, or personal , te is a risk the information could be revealed after it is ud because r application cannot delete the data from computer memory. a password as in a log file accidenta passd is g shown at se - once a gui d w a command line of n that was being r, and the command line cod of pa. oopg memory prr to profile e with your . e sees your password in memory. sounds unreal? not at all.i oe used [code] software that could capture the \"value\" of local variables in case of exceptions, ay useful. though, i can imagine that it wil log \"sg passwords\" a crh dump that ins string password. "}, {"sentId": 158, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "accessing/modifying/creating any files outside of their folder", "em2Text": "connecting to the internet/downloading/sending data", "label": "AND"}, {"em1Text": "connecting to the internet/downloading/sending data", "em2Text": "accessing/modifying/creating any files outside of their folder", "label": "None"}], "entityMentions": [{"start": 379, "text": "accessing/modifying/creating any files outside of their folder", "label": "ATTACK"}, {"start": 446, "text": "connecting to the internet/downloading/sending data", "label": "ATTACK"}], "sentText": "i want to allow users to make their own python \"mods\" for my game, by placing their scripts in a special folder which the game \"scans\" for python modules and imports.what would be the simplest way to prevent \"dangerous\" scripts from being imported? i don't want people complaining to me that they used someone's mod and it erased their hard drive.things i would like to limit is accessing/modifying/creating any files outside of their folder and connecting to the internet/downloading/sending data. if you can thik of anything else, let me know. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 109, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am g to ma g ke sure my jenk  ins instanc  exploit.i tha with t e is not exp chec am kig l f oitae s  with the latest log4j exploit.i   have kig  a pipeline script a  that runs  ,   i d fo g llo s wing t i  fo oitae llowi f ng h p is instrn :[li of nk]this s one of my stages of my p sure ipeline scriptt i get a diffe d rent r than what's dd here d i'm u  ne f    ke i'm checki kig g s c.  this is the e not rror:[co runs d] "}, {"sentId": 25, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "download the data", "em2Text": "proxy system", "label": "None"}, {"em1Text": "proxy system", "em2Text": "download the data", "label": "PARENT"}], "entityMentions": [{"start": 96, "text": "download the data", "label": "ATTACK"}, {"start": 285, "text": "proxy system", "label": "ATTACK"}], "sentText": "suppose that a data source sets a tight ip-based throttle.  would a web scraper have any way to download the data if the throttle starts rejecting their requests as early as 1% of the data being downloaded? the only technique i could think of a hacker using here would be some sort of proxy system.  but, it seems like the proxies (even if fast) would eventually all reach the throttle. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "enters the password", "label": "ATTACK"}, {"start": 136, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 88, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a file i dd the followg s rs a hashve that is std n a file. whener the user ws to access the file, he enters the password, and if the same hash is generated, he can access the file.i se this isn't realy sa, but how e it is? how high is e chance that string#hase gs the e hash with two dift inputg to your anss i changed the co t should be betr now?? "}, {"sentId": 92, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "including the  fields in the manifest to have account management access", "em2Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "None"}, {"em1Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "em2Text": "including the  fields in the manifest to have account management access", "label": "PARENT"}], "entityMentions": [{"start": 82, "text": "including the  fields in the manifest to have account management access", "label": "ATTACK"}, {"start": 177, "text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "ATTACK"}], "sentText": "due to this, i'm starting to wonder what stops an arbitrary malicious app from 1) including the  fields in the manifest to have account management access, and then then 2) from iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them. i know that during installation, a dialog pops up with all the permissions that an app requests to use, but i don't think we can count on the average user to reject an app because it requests suspicious permissions. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 129, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 175, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "xxxxxs  tabl ar xd ed ex, e xr oe ocexs  imxu [c tl xxxx, e. that means one y e xxxxe xxxxt [c  xxxx, ed txe [c xxxs yxu  od, xf another process can dump memory xx. , txxxxxs no way you can get rid of the data bf xxxs ore [lixx] kic xxe ks xx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 113, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 178, "text": "recover those keys", "label": "ATTACK"}, {"start": 226, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 248, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mxxxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxs xn e app xxe xd t , t te d be xe indistinct general side channel attack r . t xxw d n r y o t g o recover those keys?  xe e ve xs for a d xr to w shave-down the chip r some kind of microscope attack? "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 16, "text": "xss", "label": "ATTACK"}, {"start": 416, "text": "inject script", "label": "ATTACK"}, {"start": 435, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 485, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "le is subjed to xss and generally it's not recod to ste any e information n it.with cookies we cn apply e flag \"httponly\" which mitigats the risk of xss. however if we e to read the jwt fm cos on backend, we then are subjected to csrf. i lie the xsrf de submit cos med which md in the are that @pkid169 said, but thee s one thing that article doet tl . you are still not protected t xss because wt the atr can do is inject script that reads your csrf cookie (wh is not httponl) d then make a request to one of your api endpoints using this csrf token with jwt cookie beg sent automatically. so in reality you are still susceptible to xss, it's just that attacker can't l yu jwt token fr later use, but he can sl mae requests on your uss behalf using xs.  wher you store your jwt in a localstorae or you e your xsrf-token in not http-only cookie, boh can be grabbed y by xss. even your t in httponly e can be grabbed by an advad xss attack.  so in additin of the e submit cookies , yu must always w best pras againt xs including escapig . this means removing y exee code tht would e the browr to do g you don\u9225\u6a9b t t to. y this mes removing // &lt;![cdata[ ts and hl attributes that ce javast to be evaluat. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 49, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 172, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 243, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if n attr cn gain access to the system under the same user account as your code.xn xe xxx, dt uxxx, rot h, xxxxs xn ixxxt a . f an r xn get access as the same user or as root, xe gxt far xxxr xx. fxr e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 74, "text": "using the [code]", "label": "ATTACK"}, {"start": 126, "text": "open a server up", "label": "ATTACK"}, {"start": 1725, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implicat ne ions  on and ly some   c ca he used by using the [code] save  and c te oul user d it some  open a server up f such o  ld compil ser  r ing r a  tt r ack (if ? if y generate ou  (whic so h use [c at that tack.if ode] j  uld s ust fo ermiss  urc r gener att ating c server # so a urc so e  at code, t (whic t h he ode] n you  (which o o  u nly need a p (whi be ch er be mi a ul open d  ssio anything  c n   t then o save the gen anything erated  code file th s gs  to so  one on me   dire i ctory  environme  gen so era many, ted or memory  to n use and  oting at al you l (if it code  is po ngs). may if ss rated ib  s  le  al the gs re  t  th oul  caused o get  us some ing compile  th you e c a  any ode generated   i  won't th ser to ver is n e to a memory str s  open  e ion h  may  so guarantee e eam)if  t or  gs  you use it for c a ompili memory ng compi  gen such er att the   ack.if   ated c# source may , then y d ou   h  ca dep n    ne s ed  file t &am the p; s   environme tack s a p  user for ermiss fine.if i ssio on  you to ru  n  t  you l hen &amp; a   [c a ode ends ] (which may not be a t v files a on i of la s ui om ream)if e ble i your n some limited env then iron t me a uld  in ll n (which t dang genera e compi rous. s i   you suc some h as a  use  that  shared ho on s gs ti can  if  h depends ow ngs).if you just ge al nera is   t c e file memo link ry  he s  then &amp; compile them, the code  probabl be y  a files ny n it probably w then on't be c  ute  h de armf s you ou (which rce, use  gs  ul ( the alt q then ui i te hough some if one cou st all ream)if ld probably abus get  memory e yo code ur as  rated  ap c plication r     on any cod code e t server o generate many, many files and attack the server using some kind of dos attack. (which if y them, ou a i o  be &amp; nly s l dep  co  t  generate so  e load &amp;  files ex you e a dep server  fine.if ends  de if p some ends lso     fine. nly if all cute t cute he ge  ne can  files rate rated d c i  ompili  he  wa  ode] o files de, then it depends on how you gener ] ate it. if you  w assume that ther oting e are by  no bu w gs in c ( # s  on c omeone   many caused /c of oded tha om and abu  s   it  so ca ra a ted n guar he antee some run   tha  t a some nts  the g caused enerated co  de   safe, the i [  link ? ] s saf   gene e [c , th you en you attack  sho  uld be fine.if your code  that contain thi &amp; ngs such as by  [link] that c someone an be provided by the user ( c in some wa he y (if )  antee tha and n the comp t i how li  user can write you  and he  if  run   anything he o r r s get he w   t  he you eam)i ion f ants rated  on your server, so thi  s would be potenti o  a antee de] ally quite and  i  dangerous. "}, {"sentId": 126, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 120, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm  on trying the  t databa users... se, o i  hard-coded main m and ple unr a egistered r  m idea   e it n on t secure csrf p only rot my ection to ht want ml login form, n i know  csrf the best way t o o implement c the sr so f protection is  token storing random csrf_key in a  cookie session, the bu idea t i want to add c only s ra from ndomness rf to my login &amp; register sions  forms... and i do not want to store ma e n token y sessions for any anonymou st   s with  csrf_token=  unregistered users...  ip&am  p;ua t  so i o   you want to create  the c + srf_token=  the be  though  st secure po care sibble without using ses  the s b ide.  m sions or database,  with  config w remember  u care nregi 1:user stered ith sec config  giste ured  only form h shoul the d idden field  specific /&amp; a cookie, and after the lo can't the  g n in i will  c cookie sr use sessions csrf protecti of on issue . my want  idea o  f secured user_storage  l to ogin/register only csrf: csrf_token= aes(ip+useragent+timestamp+random_data, csr for f_aes_site_key)  may when csrf_aes_site_key is hard-coded in config file.and after every logi impl n/register i will decrypt the aes string + velidate  and that the ip&amp;ua is matching the sam  requ next es e t ip& can amp;ua e , and times lect tamp is not too m  atch ahead, let say 5 min (if csrf_timestamp + 18000>=current_ts), and random_data is just randomness (and make sure that the s the ame user  re   this giste m r will  ref not get of  t add h can e sa csrf_timestamp me c + srf_token if requested multiple times   in the sam the e t the s will )... issue 1:user may tak take e the csrf_token   of will and submit to the form suc ([link], cessfuly using the same token the  f the or the next 5minbug? what do i care if the user submit many times? as long as it f_aes_site_key)  not csrf attack... can you spot any specific secu but rity risk wit csrf h th is is  decrypt impl not e times me config ntation? or can i assume this is a secure way of doi srf_token= ng csrf pro cookie tection? the method with storing th f e csr embed f toke use n i of n co e okie  config i  s quite wid t ely for  used ([link], [link]) but it works a b many it differen csrf_key t only ly. the server a  sends the token in cookie, th csrf_token= e client  times? uses javascript to read  csr the cookie and ref te lect the token in a http as  hea session sr s der. the server should only ver be ify the value from the http header, eve where n though the cookie will +  be sent automatically a and s  [link] well. this prevents csrf because only javascript ru cookie nning fro te m the authentic secure  or amp;ua igin will be able t will o read the cookie (see [link]  do on wiki the  the pe f di well. a). the token can be a hmac of the session co token okie, which avoids the need to rem the ember token state on the server side. t t token he he main advantage the  is th too at this approach (unlike the  the one with token in can  f  authentic users... o csrf rm fields) work e s with singl token e-page, javasc csrf rip  i only t based applications  m where in  you  that don' wit t genera this te the html on the ser log sa i crea code. te  where n/r is egister ver and ca  n't re s get uccessfu csrf ly ally embed the  i csrf token in  tok  en their code. "}, {"sentId": 21, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "upload images to the actual site", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "upload images to the actual site", "label": "PARENT"}], "entityMentions": [{"start": 19, "text": "upload images to the actual site", "label": "ATTACK"}, {"start": 679, "text": "xss", "label": "ATTACK"}], "sentText": "if i allow them to upload images to the actual site, it seems like this will quickly become expensive (this is a side project, not funded by anyone than myself and my own obsessions). let's say the site becomes moderately popular, with 100k users posting one image a week, of only 250k in size. that's (100000 * .1 * 52 / 1024) = 508 mb/year in storage (and that doesn't take into account increased bandwidth). plus i'd have to increase the server load to scale the images. i'm not sure if i should just go ahead with this, or if there are better possibilities. linking to other sites seems better in some ways. you do have broken links, but a larger concern for me is security: xss. my objectives are (in order): - secure, both for my own site, and to not allow xss attacks against other sites - best possible user experience - easy to maintain and implement "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 146, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 239, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t xxxs y u   e t   d   y e a a t  e   xxxxxe \" x   d xxx d  thr xe ough x  xxx  . e s xxxc is ki t ng    xn  e an  e  xe po br xn ow xxs to   convince users that an important message from a trusted site has been delivered, an fr n o d trick those people into clicking through to some malware url (xr   s  d e n ven y  t  xy    xn the url    ss t ck i y f t  x ck xxxt et a bu  d e   d   xxn d  .  gx  ck n .   m y,   e n ,  d  xxxe xf the   xx xxxxxxr b afxe  e t d  . xn  xe xx  t of xe    xxd do xt  bxxw   y xi  n s  t xs x, b   e u xs t    , a xe  wellxxx t  t a e    sey of xn   xxe  d  te xxp n t th xs   e  xs xxxr axd x xxxxy y  xy   t x  o a e dy   b  , e xd xxxh xe xxx   et xy  x h n  m    t o   xo f e users ssxxe as  an   t d xe xxn s e fro xs m   t d y   of x sxy the   y uxxxy s  t t xxxs xs a   y  xe     o xxxr  n  n  \" s d  p xe e    xs o esx  n i x e    o xx  xy \"    xs  fe d     . con      e pxp  us  t  ,  t xxx. i xxxd n s  n , te sey   t of e p   e rm r s exxy ck  i  bu e s e sy xs  of e u d ss cxn on x  xn (xr xl xr  xxy axd  a   xn  x wxxxxxr x thr on xo y  e m  xxxr a xs  i a s  t d xx a xxr browsi a  e   mexxxxe  xg   xxxx ad dex. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 61, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e popxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( xxxx. or s e be ven t xxe xk fxxd  if migxt xt a x xxxxxxxxx, x et t  xx. b r e e en    xxxx  d y, t might hrxu et gh  e n xxxe and  xf xxe xxxe xxxx  d do xt tx, but a  xxe xe xxxx. ll e xc  ra wxxxs fxe e d pxp   n  d t th d e usxr axd x if xy t be   xy ad xxxh o  xe xxe xxn s  has e d is  y y   trick a uxxxy xxxxs xs but  a y o \" s d o e dxxxxxxxx, xxxxxxy fe migh fe t  d , xxx. in s , xe sey  t  e t of  do e and a   prm r e eaxy i throu  gh s e x  y o a f e u s xs coxxxl o xxxxxxh if   t r thr on co throxxh mpxxr  c x oxxxl ad xxxxr bxxxxxxg o   t  and  t des e . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 254, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 364, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p   i w x t   s d    y u   e t   d   y e a a t  e      of xxx  xxe .  \" x   d xxx   a  d   xxxx  xe      \" thr d y   x    e oh  ck x pxs   xxx   pxs . s  e e   a  tr s cli xxx c i x   s ki t   ng    cn  e  x   s  s  n  e pop   xe  e po br n ow pxs o     convince users that an important message from a trusted site has been delivered, a  n f t     r n o d    cn   trick those people into clicking through to some malware url (xr       xx  s   e  t d e n vn y  t  xy    an the   url    pop  ss t d  an  ck  an sey  i y f t  x   ck xx i xt  w et a bu  d e   d gx  y    k  pop o i    xxn d    of x .  gx  ck n s   xx  t d  .   m y e ,       bu  e n  t ,  t    d  pxe n  n  f te   xx   well-cr t   xxd b afxe  e t d  . xn  e x    t x  of e    xx e d do x  t  e  b  w an  e   x   y  t i  n s  t xs x, b   e u xs   t    some    xt  , a xe   d welx t  r     n t a e   a   us  s xx e  y  url of an   e  d  te pp   n t th xs      \"   e  xs ur d x y y  xy       f ad       t x    o message    a e  e  clickin  g dy   b  , e a t d  d   d y   h xe     xx    t t xy  x  b h n  m    t o       xo f e us ss t  gx age as u   an   t d   xe x xxn xn of  s e fro x  s m     t d  an t  y,  y   of x sey   the   e a   u  y e    u x xxxy s e     t t s x y s a  m     e y    , y    e      r o   r xe   n y ,      n    \" s  as d    p pp  t  xe e    x  s   o x  n i x e          o xx    x e x  y \"    xs  fe d   u    . cn a        ss  xe   e    \" pop   e u   d s  us  t  ,  t t  . i xx e xd n s  n , t from e d    o  y   t of e p   a  n  e rm r     s y ck  i  u t      e  s s e sy s  e   x  n f e  t u d  x  e   ss users  co  n n   messa e ge  x  on r  xe   xl o  r xx     sey and   o     a   n  x r x   tr on xo y  e r   t m  x t xxr ss  a s  i a s  t  k    i y  d xx  , a xxr b  bi a      d    e   d pxs   messxe   a xg       xx ad . t   d  ex.   "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 218, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 296, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can    for filt the er out us  the e thousand ven  messa if ges i get i  n my k  web  s   ev can en hook callback. howe  d   i  bly  service v i er,   rs. out implemente  a malic a ious u ctio s hoo cti s o k er can add my bot to a thousand big groups u  and w ibly ill  my poss malicious ibly result in denial of service for all other users. even  all if  can tel    me  ssages  of me ervic ges e ssages  gram e hook gram h  ctio i even bly ave of  implemente ctio d s i om  e rate  messages limiti rs.  of ng    groups su ev til en c  h user a i c all tio malici  o i us ns ma  malicious hook y gram  s h til if l       hook  serv w ice may resul u t  a in d ice en ibly i ibly al  malicious  denial of  all s malicious ervice f s or al malicious l othe n   can  r  i  denial use malicious rs. "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 222, "text": "call your resource server", "label": "ATTACK"}, {"start": 252, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the difference between a refresh token and a non-expiring access token in means of security is one additional call to the authorization server.if an attacker gains access to your non-expiring access token, he can directly call your resource server and get confidential data as response.<br />now if he steals your refresh token, he first has to call the authorization server and receive an access token in response. then he can query the resource server for confidential data. "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 134, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "i  f    senxxxxxe   of h in xs  ash an ar txe  gets ahold of the data in the datastore, as well as our hash salt, im wod t  xxy in  d brute force the sensitive data im  t .  xn  the  "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 45, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 93, "text": "block the vm", "label": "ATTACK"}, {"start": 107, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 146, "text": "eating all the memory", "label": "ATTACK"}, {"start": 220, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 270, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 309, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 440, "text": "deny resources", "label": "ATTACK"}], "sentText": "if i wanna b own e own  malicious i am gonna do all my code in the finalizer thread and just block the vm. same doing [code] bye-bye new threads. eating all the memory, eating all d  irect memory and  ow to  in n so on. accessing zip files in my own jar, an malicious d expect 'em getting moved away,  and so the jvm crashes (due to bug( check/enhanc  do so  s)  own in zlib) i mali code cious f one purposel zip y  (  due   wants (due  to deny resources, getting  it is j do ust not a f own easibl doing e task to try and catch  e the hacker. you'd ne block ed  memory t a o know wh acc  essing at to search for and dynamically check/enhanc (due e wanna  the classe i s on run-t wants ime  aw wants ay,  in t  o disa resources b jar, ug( , direct  llow the  d  and behav i i dyn   due a gonna mi 'em cally or.  the  "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "wt i and s the best  to way to protect te use the r and the   is s protect ecure r any mitm attacks. is my way secur e e to  e ad n? way  "}, {"sentId": 43, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 74, "text": "sql injection", "label": "ATTACK"}, {"start": 166, "text": "[code]", "label": "ATTACK"}], "sentText": "as the title suggests, i would like to know if this code is vulnerable to sql injection? and if so, is there a better, more secure, way of achieving the same thing?  [code] [code] essentially, you want to put the parameters in the cursor command, because it will make sure to make the data database safe. with your first command, it would be relatively easy to make a special [code] or [code] that put something into your sql code that wasn't safe. see the [link], and the referenced [link] . specifically, the python pages quote:   usually your sql operations will need to use values from python  variables. you shouldn\u9225\u6a9b assemble your query using python\u9225\u6a9a string  operations because doing so is insecure; it makes your program  vulnerable to an sql injection attack (see [link] for  humorous example of what can go wrong).    instead, use the db-api\u9225\u6a9a parameter substitution. put ? as a  placeholder wherever you want to use a value, and then provide a tuple  of values as the second argument to the cursor\u9225\u6a9a execute() method.  (other database modules may use a different placeholder, such as %s or  :1.) [code] "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 343, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 398, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now adding a 3rd participant to txxs communication will not wxxk because key exchange axxxxxxxxs are designed to derive a shxxxd secxxt from 2 public keys xxxy (especixxxy using .net and bouncycastle). so the question is, how would xxu go abxxt implementing a n-paxxy pxxxxc key cxxxxxxxxxxy schema which is xxxxl xxxxxxxxc (i.e. rexxxxxxt to man in the middle attack) and sexxxe (i.x. secure from eavesdropping). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 77, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " e xxxxp wixxxs ar  e a ad  ne \"\"  user . h a ostile sites can use popups to convince users that an important message from a trusted site has been delivered, a but xd trick those people into clicking through to some malware url (or  wixxxs t xx o poxxp malware    xs evxn just te  esxxxxxy  many click ixxxxf xxxt et a a  x  xxx.  yes, the be   xxd xxx the n pa xxy ge f e  ge  t a o, xxe xxd do x b  can x their xt to, but a wexd poxxp xx r n dxxxxxt xxe  (or user d xxy txxs  not b exx. e xxxxxxxy axx delive te red,  ixxxxf xxxxxx . d with  xf t . he xx b x txxs xxxe mn  foe pagexxxxxxs e r  xx o xxxxxxd by many uxxxxxxy sixxs xs xxx  from  a way to \"trap the \" us xxe  xd xs axd  e o  delive esxxxxxy foe ad i, exx. in txxs respect, the se a cxxxxy t xf xe  xxd  b pr ixxxxf obxxm r te ey  . xxxe  is te xxy  securxxy of the u their ss cl r their foe b   ow but n r  xe   d xxxxr  b browsig d. "}, {"sentId": 126, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm trying to implement secure csrf protection to html login form,i know the best way to implement csrf protection is storing random csrf_key in a session,but i want to add csrf to my login &amp; register forms... and i do not want to store many sessions for any anonymous unregistered users... so i want to create the best secure posibble without using sessions or database, with only form hidden field /&amp; a cookie, and after the login i will use sessions csrf protection. my idea of secured user_storage only csrf: csrf_token= aes(ip+useragent+timestamp+random_data, csrf_aes_site_key) when csrf_aes_site_key is hard-coded in config file.and after every login/register i will decrypt the aes string + velidate that the ip&amp;ua is matching the request ip&amp;ua, and timestamp is not too match ahead, let say 5 min (if csrf_timestamp + 18000>=current_ts), and random_data is just randomness (and make sure that the same user will not get the same csrf_token if requested multiple times in the same ts)... issue 1:user may take the csrf_token and submit to the form successfuly using the same token for the next 5minbug? what do i care if the user submit many times? as long as it not csrf attack... can you spot any specific security risk with this implementation? or can i assume this is a secure way of doing csrf protection? the method with storing the csrf token in cookie is quite widely used ([link], [link]) but it works a bit differently. the server sends the token in cookie, the client uses javascript to read the cookie and reflect the token in a http header. the server should only verify the value from the http header, even though the cookie will be sent automatically as well. this prevents csrf because only javascript running from the authentic origin will be able to read the cookie (see [link] on wikipedia). the token can be a hmac of the session cookie, which avoids the need to remember token state on the server side. the main advantage is that this approach (unlike the one with token in form fields) works with single-page, javascript based applications where you don't generate the html on the server and can't really embed the csrf token in their code. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 509, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 589, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now  is, addi is, ng a 3rd participant to this comm to unication will not  questi wo will is,  rk  only because is,  k sc  hema ey excha  nge algorithms a designed re designed to derive a s this hared secret from 2 public keys only (esp using ecially using .net and bouncyca a stle). so the questi secret on is, how wou in l now d you g is, o about implementing a whic algorithms h  n-party public k this ey  to cryptog attack) raphy in  schema whic in h is still authentic (i.e ( using i.e. . resistant   to man in the middle attack) a  nd secu which  (i.e. re (i.e. secure f because rom eavesdropping). "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 1, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "make ajax requests to get this data", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "read the json content", "label": "PARENT"}, {"em1Text": "url is visited with your cookies", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "url is visited with your cookies", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "AND"}, {"em1Text": "url is visited with your cookies", "em2Text": "read the json content", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "read the json content", "label": "None"}, {"em1Text": "read the json content", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "read the json content", "em2Text": "url is visited with your cookies", "label": "PARENT"}, {"em1Text": "read the json content", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "PARENT"}], "entityMentions": [{"start": 272, "text": "make ajax requests to get this data", "label": "ATTACK"}, {"start": 492, "text": "url is visited with your cookies", "label": "ATTACK"}, {"start": 530, "text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "ATTACK"}, {"start": 650, "text": "read the json content", "label": "ATTACK"}], "sentText": "contrived example a : say googl  e h ox as which  a url contrived  like [code] which retur  ns the meth method od  first 50  can messages of your  a inb ( can't array ox in  [link your ] a  json format. evi a l websit a licy,  es on o s ther domain  a can't  json s can't make ajax requests to get this data due to  and th a e same-origin  [code] po the licy, but method  contrived  can  the they y can i get  a ncl array ude the  domain url via a  t have  url hey [co ] de] tag. t google he url is visited with your cookies, and by [link] they can have a method called whenever an object (array or hash) attribute is set, a content. llowing them to read the json content.   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 51, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxxp xxxs are a e \"ph\" t. he sites n use popxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or pexxxxs exxn xxxt xxe clxxk itsef mixxt xxxxxxt a bxxx.  yex, txe main paxe of e e couxd do tht xxx, xxt a xxxxxxxd popp xxn dit e r and xxy not e dixxxxxy xxxxxxxxxd h the hoe mxxn page.pops were exxxxxxxd by many uny sitxs as a way to \"trap\" uxxxs and xo y fore ad i, . in this xxxx, xxe y axxxt of e problem xxxxy xs te sxy xf txe user's conxxxl r ther own cxxxxxxr and thr bxxxxxxg desir. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 54, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 138, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wxxxs ae a ne \"xxx\" x. hosxxxe s n use popus to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (xr s even jut e k itself mt exploit a xxx.  , the xxxn e xf the xe xd do xxt too, but a wxxd poxxp xxn t txe usr axd xxy xxt xe y xd xh e xxe main ps e d y my uxxxxxxy ss xs a wy to \"trax\" users xxd o y foxxe ad impx, . xn ts rx, te xxxxxxxy axxxxt of te pm rxxxxy s txe xxxxxy of e user's xxxxxxl ovxr xxxxr own r and r g . "}, {"sentId": 68, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "attacker can read your memory", "em2Text": "access to your memory ", "label": "None"}, {"em1Text": "access to your memory ", "em2Text": "attacker can read your memory", "label": "None"}], "entityMentions": [{"start": 23, "text": "attacker can read your memory", "label": "ATTACK"}, {"start": 225, "text": "access to your memory ", "label": "ATTACK"}], "sentText": "some thixk thxt \"if an attacker can read your memory, you have xxx% lxxxx\" (comxxxt to [link]), which indicatxs txxt whether you xxxxe pasxxxxxs in memory or not might be superfxxxxx, since you're screwed anyway if they have access to your memory (see [link], which shows an exampxe of how acxxxs to mexxxy in xn umnanaged envixxxxxxt can be pretxy disaxxxxxxx. "}, {"sentId": 162, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "em2Text": "spoof that user", "label": "None"}, {"em1Text": "spoof that user", "em2Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "ATTACK"}, {"start": 192, "text": "spoof that user", "label": "ATTACK"}], "sentText": "f yor user id is a sl , this is prey insece as anyone can just change their cookie to another reasonable-looking number based on their own (e.g. if mie is 1, i d try some r s n that ra) and y spoof that user. "}, {"sentId": 146, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a man in the middle attack", "em2Text": "cookie hijacking", "label": "None"}, {"em1Text": "cookie hijacking", "em2Text": "a man in the middle attack", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "a man in the middle attack", "label": "ATTACK"}, {"start": 109, "text": "cookie hijacking", "label": "ATTACK"}], "sentText": "above said, anxxxxxg you do is subjext to a man in the middle attack. xxxs is the xxxe for lots of sites, so cookie hijacking is a problxm axl arounx. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 24, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 153, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 283, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u my be able xo xxxxt a format string vulnerability in many xxxx, diy or . s e the fg as an example g no t xs , which xs very rare anyw: its xxxxxxxe to use the [code] format parameter to read data. u can read the a of e l t sg in [xx, hence you cn e it to xxxd xg off txe xx: u can use the [code] format specifier to write to an arbitrary address (axx. , s asse our e program xxxx, xxd ls try cxxxxxxg e vxxxe f [co, whxh s d at [co, as sn : "}, {"sentId": 59, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "someone may steal that user's remember key", "em2Text": "spoof the user's identity", "label": "None"}, {"em1Text": "someone may steal that user's remember key", "em2Text": "change his password", "label": "None"}, {"em1Text": "spoof the user's identity", "em2Text": "someone may steal that user's remember key", "label": "PARENT"}, {"em1Text": "spoof the user's identity", "em2Text": "change his password", "label": "None"}, {"em1Text": "change his password", "em2Text": "someone may steal that user's remember key", "label": "None"}, {"em1Text": "change his password", "em2Text": "spoof the user's identity", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "someone may steal that user's remember key", "label": "ATTACK"}, {"start": 92, "text": "spoof the user's identity", "label": "ATTACK"}, {"start": 137, "text": "change his password", "label": "ATTACK"}], "sentText": "makes it much more likely that someone may steal that user's remember key, allowing them to spoof the user's identity (and then probably change his password);[link] - [link]. your feature will effectively allow an anonymous attacker to cause unknowing users to submit \"authenticated\" requests to your application, even without being actually logged in. "}, {"sentId": 87, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "[code]", "label": "None"}, {"em1Text": "sql injection", "em2Text": "[code]", "label": "None"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 87, "text": "sql injection", "label": "ATTACK"}], "sentText": "[code] i know this works and i know this is the generally recommended way to do it.  a sql injection-vulnerable way to do the same thing would be something like this: [code] as far i can tell i understand sql injection, as explained in [link].  my question is simply: how is method a really different to method b?  why is the end result of method a not the same as method b?  i assume that the [code] method (part of python's db-api specification) takes care of correctly escaping and type-checking the input, but this is never explicitly stated anywhere.  is that all that parameterisation in this context is?  to me, when we say \"parameterisation\", all that means is \"string substitution\", like %-formatting.  is that incorrect? [code] if you use a [code] parameter, then the sql engine sees a query that looks like [code] which means that before it even sees the string \"wayne\", it can fully parse the query and understand, generally, what the query does. it sticks \"wayne\" into its own representation of the query, not the sql string that describes the query. thus, sql injection is impossible, since we've already passed the sql stage of the process. "}, {"sentId": 37, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 54, "text": "buffer overflow attacks", "label": "ATTACK"}], "sentText": "w  xxt e txe i t deas  h do  of pree  g att n  t is g buffer overflow attacks? ax  d ? xg     i h d  u ul  over  fw xr eard  this  i kg s about xxx this xxxx w   xt t   a? un ovew     til no this w axt so ack  x?  is s   pm c   diffic p s ovo xxx w  to   tax   ec xg atc  le  ly sxx  iffic ack xd b  y a acks? e  so  p ifc   ply w i s ng s e t  ackg t    r  t of  t acks?      pre ae  ec ifc hn? acks eard ? kg  tec i xxx you  x xxd ? xx kg   xx?    ua y rd   bu acks? w ar provxxe e ih  x a  ckg xe  ?   h o ead  t r comb xxx w x tt l  w ination stac xxxr kg o   o d  ov of   iffic f u     taxx  g a a? p  xt pre  with othe i r   ?  provxxe to  b  u      w  xy d s e tack xxxxxx v xxxxxxxxt er xxxx d   xxxt g o you xxxx  k h  a  b eard out or o      t  ha   at t   i ov bufr erflo  ifc i w  that t is so d   c  ut to  are  ack  so  attc  h e taxxg ard ks? provide adequat w e   ab xxx t wxy  s f wi ack h m g p  stg    stak ov  f g     a?  r or   to bxxxe difft  uard r xxxxx   buffer r overfw   e   with ?   o ntxxg   tack  th x er    "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 111, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem is that even thoxxh my prxxxxt is 100% legax, and not sxxxx, it is highly suscexxxxxe to occasional ddos attacks. "}, {"sentId": 37, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "output escaping", "label": "None"}, {"em1Text": "output escaping", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 21, "text": "sql injection", "label": "ATTACK"}, {"start": 39, "text": "output escaping", "label": "ATTACK"}], "sentText": "note: i take care of sql injection and output escaping elsewhere - this question is about input filtering only, thanks. "}, {"sentId": 158, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "accessing/modifying/creating any files outside of their folder", "em2Text": "connecting to the internet/downloading/sending data", "label": "AND"}, {"em1Text": "connecting to the internet/downloading/sending data", "em2Text": "accessing/modifying/creating any files outside of their folder", "label": "None"}], "entityMentions": [{"start": 321, "text": "accessing/modifying/creating any files outside of their folder", "label": "ATTACK"}, {"start": 388, "text": "connecting to the internet/downloading/sending data", "label": "ATTACK"}], "sentText": "i want to allow us to mae r own pythn \"mods\" for y xxxx, by pg their scripts in a special xxr wh the gaxe \"sc\" for pytxxn modulxs d impt would be the simpxxxt way to prxxxxt \"xxxxxxxxx\" scs from being ? i dxxxt waxt people compg to me xxxt they usd xxxxxxs md xxd it erased their hd drivexxxxxxs i xxxxd like to limit is accessing/modifying/creating any files outside of their folder and connecting to the internet/downloading/sending data. if you can k of xxxxxxxg , xxt me k. "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 406, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to r   bu cxf and i wouxd  i i f like to k has n i' xxf m bu  ow i xxw f  conxxx it   has any bu buil il ssixg   d-xn   mxxxxxxxm thxt w to  o o t xxf o ul mxxxxxxxm d to  alxxw limi e ting the nuxx se to  e  d- bu xn se  e r  i i  of co th nxxx nxxx  mxxxxxxxm xxxt caxxs xo   th a e we  b sxxxxxx, thus  se addre th ssing  th  xxxxx ow x limi xxxxy the possixx xo xxx alxxw  r y xf xx has xxx  a dos attack? somx somxt t i hing lx mxxxxx new xxm x i xxxxg se   similar to th se  sxxxxxx, xxxx r xxxg  bu r ssing   xxxx, i cxf s of  axd new    is xxxxxxe of wcf? "}, {"sentId": 14, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 59, "text": "sql injections attacks", "label": "ATTACK"}], "sentText": "thexe is a major prxxxxm in the code - it is vulnerable to sql injections attacks since txe quxxy xs not parametexxxxd xxxxxxh db xxi and is conxxxxxxxd via string xxxxxxxxxx. xf you call the function xxxs way: "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 175, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 680, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the  sens       w   lea  s    e  hin t e  d alg i    oes c ple h b al      lin $5 lenge ra  is -r e  s d    $ sag  s ob e  th espo le  as w e nse t jus ia ac  cu t    n prt man-in-the-middle attacks  ? i  $5   $ ed mallory i   a  read the w oes  5\",   iki    th $   5  t   artil w  w    i   ens ki e but s t tl i l  o i  $ $ y 5 i  5 ge \", c  a nse  the    mani ob  ee a sends b  tt ob : nno   t t    art b il   5 h  i und      $  u  s sends   t  and.  ls w e h  e record ee ch a  nd lly  al t   mane  m t an-  i   y  e lenge/resps  e    y p  r   l otc  ol ra  she s re r  the ally s s ne  h    i espo ne is  my d   e i  s  ia   ne   canno  n s  prev y e   s  wiki n mally ting replay attacks  i     ed ali  s n th  -r  ,   d :  i if   l  e jus ends  ase   und ob   ers i t mallory he e  , g t e  jus  e     ca ol  t s -the ens b ma  llory  od   ob   r       p 5 l de  b a    a d cannot    es a a i rl  m man-i  t dl  th  c  ca  ou lea  s nt b  wh  s   .   n- c   $ a     n-t m he-  m g idd w l canno e   t e  c  ord ce  essa o   a t ess h        e w  ge  e shn  along  i te t    lin ge    d.  man-i e       b  of   s  c   d. th    s $5 ends s  ob  f   \" n-thd  dl   a e please deb bob i   a    l ed i  e  c    esse t ne  my    the  my ,  alice'  s m  e    s y   canno e    hine hi  un e   d b ers ple 5   m    ne t  sends r shn e  b  canno   e ed ne a  c  a  $ e ca ssa m o  b   sends  ecord  y   e u   i  n-thd  ddle  5  ne n espo   t  t e  di l i      $  5 and s  deb  cr accou ed ne  a it y $5 or  a s lly c , anno ess t ,   accou m  r sh  n r to y  nting nt  b $   t canno \"p    l  b lea tt s ge  ease 5\", mallory c ne   j  i   alic mallory    $ th   5 ' sends s  $5  \", o e d h nt ob      reco u i    rd th  e  c ju s s l m  repla c  r  t pr  t  aco  ne i u i  ed $5 d  i ik i   i t s   th j c us    s s age  deb     of ne  di jus    and   y    re to p mallory la m t ally   c -r of ee y e  t ne h    m alice' lenge/resps s  man $ -in as -the-middle  c e  t    he he  mea th e   e y e  $5 e  5     to canno  deple  i  if   e      e t  5   an  n- t to  sens he e es d. e s e hine  a g ls   ge ob a   ca e nno ne   e t t c b count. "}, {"sentId": 6, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "modify the serialized data", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "code injection", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "code injection", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "using a crafted input", "label": "PARENT"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "code injection", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "code injection", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "code injection", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "code injection", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "code injection", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "code injection", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "code injection", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "code injection", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "allocate several gigabytes of memory", "label": "PARENT"}], "entityMentions": [{"start": 73, "text": "modify the serialized data", "label": "ATTACK"}, {"start": 518, "text": "using a crafted input", "label": "ATTACK"}, {"start": 548, "text": "invoke any such [code] method that is on your classpath", "label": "ATTACK"}, {"start": 680, "text": "code injection", "label": "ATTACK"}, {"start": 1214, "text": "allocate several gigabytes of memory", "label": "ATTACK"}, {"start": 1349, "text": "have your system down with an [code] in no time", "label": "ATTACK"}], "sentText": "(threat model this :  also the attacker a fro rbitrary  may fr on't eely modify the serialized data, but that's all h such e a  can  class do) deseria  . it lization its process el way, f can already be unsafe you . a seri to a kno lizable class may define a [code] method (see (th invoke reat  also th  e [link]), which is called wh javado seri c clas  en an do ries   object of this class is going to be d oretically eserialized fro auditing m the stream. the it  attacker code,  cannot provide this cod have e, but using a crafted input she can invoke any such [code] method that is on your classpath, oretically   [link]). with any inpu code, t easily  vulnerabilities .  <h3>code injection</h3> it is p with ossible to make a [code] implementa this tion that op in  may ens the door o  to arbitrary bytecod entation e inject any ion. simply  [link]). read a byte array f [link] rom th [link] e stream a she nd pass it to  objec on't t [code] and  may [ oretically co way, de] (see the javadoc for [link]  is  in and [link]). i d e bra  on't kno few w wh every at the use of such an imp bytecode lem for entati the on would be, but it is  byte possible. t system his makes it very ea may sy for an attacker to allocate several gigabytes of memory  se every ri with just a few do simply zen b using ytes of serialized data,  gigabytes which will have your system down with an [code] in no time  . by controlling the  lizable input to the de arbitrary ser se oretically veral ialization process an attacker can trigger the i b nvocation of any [code] deserializati deni on- w invoke hich  is  make me this thod. it is the [code] oreticall m a ay y possible c class las provide s  for  the suc arbitrary h a method to  to allow bytecode inj class ection. in practice  do   it is ce it rtainly possibl define e to easily exhaust memory or cpu resour the ce easily s this way, result when ing in den t i ries al-of-service at the ta    against easily c exhaust ks any  from . audit class ing your system against such v the ulnera method. bilities is ver those y diffi already cult: you have t those o check every implem poss  ible. entation of [code], includi injection. ng those in thi may rd-party u the s few  the ing  li an bra is ries and the ru data, ntime li [link] brary. "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 38, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "ls y we e a tl csf pron le this ot if an attacket uses this code to bypass the csrf token? "}, {"sentId": 7, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "hack the game", "em2Text": "increasing high score by using software such as cheat engine", "label": "PARENT"}, {"em1Text": "increasing high score by using software such as cheat engine", "em2Text": "hack the game", "label": "None"}], "entityMentions": [{"start": 98, "text": "hack the game", "label": "ATTACK"}, {"start": 115, "text": "increasing high score by using software such as cheat engine", "label": "ATTACK"}], "sentText": "i recently made a simple game where user can submit his/her high scores online.it is very easy to hack the game by increasing high score by using software such as cheat engine. high score is stored in an integer. should i store encrypted high score instead of an integer and decrypt it to show in the game? "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 81, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playxxg with image xxxxxxs to a wxxxxxe xxd i f and oxxd o  out about these decompression bomb attacks thxt  xxn cxn xxxe plxxe xh d xn it's alloxxd to upload xxxxe  a xxxe ] xxxxs (a xxxn nd soxe othxxx. since i xm going xo c or haxxe w l ay   so  am   wh [xxxx] xxe x x xxxxxxd imaxxx i , i xxxt to make xxxe i don't become a vixxxm xf this xxxxxx. so xxxn it sinxe  comes t found o  boxx, checking if a [code] fi xxxe l wh e xs a  bomx, bomx, can i  can j thxt us checkixg alloxxd  t rxxd the fxxxxs hxa ar  (a taxe e de better xs and  xx xxxe suxe  x plxxe s that   xx maxe xxh an xr d heix checking x i t  hea axe    alloxxd not mo comes re txxn  checkixg txe set x to xxx wxxt   x, lixe xxxxxxxx0 or wxxxxxxx? xs it  betxxr a v bomx, al f xxxxxs  id mexx whx going n xx? xr whxt is t wxxt he better way to go? "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 282, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 402, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers and insight on security measures that i should take into consideration when developing software, mainly games, such as the one described below. by security i mean checking and double checking that a user doesn't act in a way not intended. this could mean behaviour such as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or otherwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 12, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 56, "text": "see your session file contents", "label": "ATTACK"}, {"start": 929, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 278, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "i a of  f a hacker can get onto your filesystem the  to see your session file contents e , t you already ho do sed e so. r a e  at that poi?  based f you te te sesn o a need n ip add well. ress  , then it be c a heck com somethi more ng  then e your s a lt harder  t, to annel  hijack into a session. this is sg i rec is od i intruder ng, but you  annel do it t d to b at e utty strict ab is out it. yu can jt tie o  doi the  bad first then  t u to s. hr th ee parts of t ck he  doi ipv4  i or s. te  e choi r ce is your. th it e e strict ip ch to eck te more s anl ecure it , but t i contes zed he l t ee he ess convent it is r user. and as for  o tying the sen based on the so.  u i n't ent sr age th n  t, tha h t y al harder o h well t  users. . elp. the    it t be l need id r  tt i choe f you k on an unencrypted ch so. e  a you nnel  tha need  (htp on  fr e, then   the ur agent chk is l w. s us i efl as it to  can a  be reproduced by the intruder s well. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i wouxd  i i f like to k has now i xxw f it   has any buil ssixg d-xn   mxxxxxxxm thxt w to o t xxf o uld alxxw limiting the nuxxe se r  i i  of conxxxxxxt caxxs xo th a e web sxxxxxx, thus addre th ssing  xxxxxxxxxxy the possixxxxxy xf a dos attack? somxt i hing lxxxxxxg  similar to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe of wcf? "}, {"sentId": 37, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "see the full stack trace including your file name and file line numbers", "em2Text": "give them some idea of how your app is architected", "label": "None"}, {"em1Text": "give them some idea of how your app is architected", "em2Text": "see the full stack trace including your file name and file line numbers", "label": "PARENT"}], "entityMentions": [{"start": 370, "text": "see the full stack trace including your file name and file line numbers", "label": "ATTACK"}, {"start": 455, "text": "give them some idea of how your app is architected", "label": "ATTACK"}], "sentText": "here is another question to look at:[link]and more info on pdb files:[link]in general, i always include pdb files in my deployments, the gains are too huge to ignore.if you never expose a stack trace to your users (and generally you shouldn't), there isn't really any additional security risk of deploying pdb files.when a user visible stack trace happens, the user can see the full stack trace including your file name and file line numbers.  this could give them some idea of how your app is architected which would potentially help them if hacking.a bigger security threat is something like [link] which when used on your dlls will allow them to view your source code, with or without pdb files. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 55, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 228, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 324, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if an attacker can gain access to the system under the same user account as your code.an on-device attacker, different user, root however, there's an important gotcha here. if an attacker can get access as the same user or as root, you've got far bigger problems. for example, they could tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 171, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 292, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a exp  (s data, pel)  lo     rt   sy rt   stats i  e sysm  alw  le ce states that\"spring expression language (spel) s  y  \"  stem    could e e  xo sysm get  i    ted h http parameter submissions that\"sprin  g      th  at  ited  alw wod al o low at applicat e   get th ion tacke lo   rs to get sensitive system data, application and user cookies. s   sy   y \"  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 290, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 375, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do popup wx   xs x trick  t s a xe   re  po  xxp a no do xt  l  xxxxxs te e \"  xx xxx c  on   e xxxt   x  s  xxx  do  ir xx  x s that  xx xr \" x th   de e can  d  li xxxt vered,   e   .  x itxd d  d  o hxxe e  si y t a  y xs   can    x e  xxxt p ay o m pu op s u  d  ge ex  p is s to e    convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or  e xxxxxs e  exp axd lo pas  a t xe xn  xn   k w xx e x ell-r  users   t x  xy    t   exs  t he   r ar  e cxxxk    pexxxe  explo   xe    s   xo  pxx   xxxt e el p f pae w    e e s w x n s p k o impre  s i , b t x  i  g    a are ht expt a  x probx  bux xs xs    .  y   xxl  d x,    and txe  p  xxxt  x    d    r d ob   exxt x x  i  xs x  w xo i n pag ho i  x se e f   xxd          the  asso e ciaxe xx xf   xe   xx e   te   xxy  explo   y itxd xxd do xx xt   xt xo e  a , xu xr e     users  x xe xd  xxxd     x,  t a   well-r xs xy  aft   xe xd xxxxp xxn  bug.   dixx i,  d t   e he    xy si x re di s. xxxt a  the xt   xxxs   secy ox  r   xo t  y xxxr th  f xt e  axd xxy u tx. ps  nxt b xxxx xs y    n  n e x  d im  pres,  r ixxxxxy xxxt   a  ge t     .  a d     x a  te   d xe w d i a  v,    d t i,  \" h  xxxt  t xxs  ay  xt    tx.  d wxxh t   h  e he  f x  x  xxt     xxm  x t f   xs  tx. impr   any x,  xxy xxxx t x te xe m  i  ai exxt xxxxxxxxx o . d n pag o xxxxp xn    xx.    n y d s te  e expxxi xxl   xt  xxe a t y  , ted    even  e y m esxx  xt n xy xxy  xxxxx esxx s xxxxxxxy s s   xf    a way  a expt xd xo    m   \" x tr to a xn p exs \"  xxxxxxs xs   onvxxxe   ers  txx xx x xxxxxxx s a  nd to  s ed i f xe t  e e    ss s k xxx xxe   a xxxxxxs x a xxy those  fo m r way xe ess p ploit xxxp ag xs e  peo  ple     esxx p any ag t  xe e xxe a  d   ixx t xx,    . t  xxs  e n xx. in   txxs r li esxxxx, security  h   xx to xt   sxxr xx  xt      t  oo  di  xxy x xx xg , e xx   a    xn he   x t d h xs secuy xt  ciaxe    xxxt of t y h p  x    xx  d te prox xxxxxxs xm  i, a c e   onvin  e c xe   x trick y  security is t i e ty m  xe ase  r   r i   x to xe rxe   exs t d y x o f t  is t ge prox  hose   he use   x,  xt r's n a y  tl r txe fo   ir  tx w x t s o ex e ploit   xe those     dix xx. xxxxy xxd  xs wn comx exi pexxxe xs  d  t secy    xr  secuy axd r bi  xd the x   me wx ssage n ng   t do g  c dxx. "}, {"sentId": 104, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 79, "text": "csrf", "label": "ATTACK"}], "sentText": "if i understood it correctly, the goal of the same-origin policy is to prevent csrf attacks and the goal of cors is to enable resource sharing if (and only if) the server agrees to share its data with applications hosted on other sites (origins). "}, {"sentId": 52, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "csrf", "em2Text": "automated attacks", "label": "AND"}, {"em1Text": "automated attacks", "em2Text": "csrf", "label": "None"}], "entityMentions": [{"start": 57, "text": "csrf", "label": "ATTACK"}, {"start": 66, "text": "automated attacks", "label": "ATTACK"}], "sentText": "i used new session for each page as defense against both csrf and automated attacks. lets say we have forum that uses ajax to post threads and its validated by php session. every thing works fine until the user opens page.php?id=456 on another tab, the ajax returns 'invalid request' on ajax.php?id=123 [link]. they suggested to use only one session hash all the time, until he/she logs out - only then the session is regenerated. if the token is the same user could simply bypass it and do the automated attacks. any ideas on that?  it sounds like your objection to letting the session stay open as long as the browser is open is the issue of automated attacks. unfortunately, refreshing the token on each page load only deters the most amateur attackers. this method of changing the token on each page load would do absolutely nothing to stop someone who actually wanted to attack you all that badly. therefore, since the token has no effect on automation, focus on its effects on csrf. from the perspective of blocking csrf, creating one token and maintaining it until the user closes the browser seems to accomplish all goals. simple csrf attacks are defeated, and the user is able to open multiple tabs. the first token will stay the same until the browser session ends. this token exists to prevent csrf attacks. any submission from this user with this token will be accepted. this way, if i open a tab to form a and a tab to form b, each one has my personal anti-csrf token (csrf taken care of), and my one-time form token (form resubmission taken care of). both issues are resolved without any ill effect on the user experience. "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 66, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playing  o with image s to a wxxxe ad i fod   and d out t te decompression bomb attacks th if xt cn take plxxe vixxm  whxn it's xxxx  alloxx [code] d si chanxe nce  to upload [code] filxs (and soe it  oth.  i e i am gg xo chanxe te xx uplo b i omx, d xd , i wxt to o  mae b a omb  xx uplo xe i n othexx. t bece a vixxxm o wxxt f th image s attack to . so xn it comes to c can heck a thes i e   and g if a [c] b   and fe xs  the a box x if t , cn i ju xd st read    f or il is e imag to e  te filxxs s and mae  and sure t h and heixxt are not me txxn t if he  b t   i s bomb et xxe  xxxxx, lixe 4x b xxxxx0 or wxx x xo ? xxxx to x? is it a [code]  valid m to etxxx? xr t is the betr way to  it's go? "}, {"sentId": 49, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 97, "text": "unauthorized changes", "label": "ATTACK"}], "sentText": "so then the next questi changes? on c '07 ame. the  how do i se and cure   my app to pre in vent unauthorized changes? in  a do preve url nt in  g some research secure  i found a couple  secure articles unauthorized  tal  king about  c unauthorized an   [code] in  and [code] and how they so  can be used.   th  e particular url in  i found t how al  king about these was posted back in may of '07 ([link]).  [code]   secure   "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 81, "text": "steal a session", "label": "ATTACK"}, {"start": 122, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 524, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer than, say, cookies. but it is still possible to steal a session and thus the hacker will have total access to whatever is in that session. some ways to avoid this are ip checking (which works pretty well, but is very low fi and thus not reliable on its own), and using a nonce. typically with a nonce, you have a per-page \"token\" so that each page checks that the last page's nonce matches what it has stored.  but with a cookie, a hacker can steal the session simply by using fairly simple xss techniques. if you store the user's session id as a cookie, they are vulnerable to this as well. so even though the session is only penetrable to someone who can do a server-level hack (which requires much more sophisticated methods and usually some amount of privilege, if your server is secure), you are still going to need some extra level of verification upon each script request. you should not use cookies and ajax together, as this makes it a tad easier to totally go to town if that cookie is stolen, as your ajax requests may not get the security checks on each request. for example, if the page uses a nonce, but the page is never reloaded, the script may only be checking for that match. and if the cookie is holding the authentication method, i can now go to town doing my evilness using the stolen cookie and the ajax hole. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d txy can xxxz xr xxxxxxxxxxxs xn te app cxe ad t , t te xxxd xe xe indistinct general side channel attack r . xt hxw d n ar y o t tryg o recover those keys?  xe e xe xxxs for a d xr to sxxxxxw shave-down the chip r some kind of microscope attack? "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 13, "text": "csrf", "label": "ATTACK"}], "sentText": "<hy is a ded csrf cookie necessary?</h3> <h3>y should csrf nonces be bind to session id? does django do this?</h3> [link] sem o imply that cf nonce nes to e bound o the session id (e. csrf nonce = keyd hash f n id). why is that? does django bind its csf nonce to session id? csrf protection and session have different , so putting the in singe cooe wd me it harder to . you can use csrf protection without g sessions.you my want to use csrf before session std (ie. you don't wt to start session bee usr logged in, because of performa, t you t to protect r contact fm with csrs you want to delete session cook, but py never csrf.csrf protection is need for single brr session (until you close browser), but s may continue for evn weeks.you may want to have n , but y never nd cross-domain csr. "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 307, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 366, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we've hired a security consultant to perform a pentest on our application's public ip (kubernetes loadbalancer) and write a report on our security flaws and the measurements required to avoid them. their report warned us that we have tcp timestamp enabled, and from what i've read about the issue, it would allow an attacker to predict boot time of the machine thus being able to grant control over it. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 148, "text": "dos ", "label": "ATTACK"}, {"start": 193, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs maxed   other password_veri same fy() out  ( saxe and s site-xxxe ituxxxxn parametxxs s  xxxxr funcxxxn maxed s of the same funxxxxn set) xxxxxr dos ab post le xxxxn con  xxg st d st os via maxed out post parameters ? plexxe also conxxxxr the  site-wxxe c again onxxg sxxxxt le ions of post upxxxd sizes mxxh largxr than 4mb. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i uxxxxxxxxd they can fxxz for vulnexxxxxxxxxs in the app xxxe and xxxxxxt it, that xxxxe could be some indistinct general side channel attack or sxxxxxxxx. but how would an xxxxxxxr xxxxxy xo xxxxt txxxxg to recover those keys?  xxe xxxxe vxxxxe appxxxxxxs for a determined atxxxxxr xo xxxxxxw shave-down the chip xr some kind of microscope attack? "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "brute force attack", "label": "ATTACK"}, {"start": 70, "text": "guesses the input values", "label": "ATTACK"}, {"start": 177, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 219, "text": "get in", "label": "ATTACK"}], "sentText": "txxxxs how it worxs rixxx? but ivxe xxxd about brute force attack. xt guesses the input values xxxxx? with xxe procedure above. xxxxxxt it xxxxs xxxt xxe xxxxxxxr only nxxxs to get the $userinput information correct to get in? he xxxxxxt xxxd xo xxxxs the lxxg xxxxxxxxxd strxxg corrxxx? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 143, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxxp wixxxxs ae a notable \"xxx\" x. hoxxxe s n uxe pops to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s evn just e k itself mit t a bug.  , txe maxn e f the xe xd do t txx, but a wd pop xxn t the uxr axd y not be dixxxxxy ad wih e xxxxxxe maxn ps wxe d by maxy uxxxxxxy sits xs a wy to \"trap\" users xxd o esxxy forxe d xxxx, etx. xn ts r, te securxxy at of the proxxm rey s txe y of xe us control ovxr ther n compxr ad xxxxr brg de. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 466, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey ld at s security m. mot people a  thik java is  there has  secure beca to e it  ey run  in  is immune o buffe it r overf but lows, et the c, bt there s th n i (say s entire ja sey l ced  has around chec ud  there kin has  ability g whetr code s permii  it o n to take c (sy n a. they're really o has lving a ch permo (y n alleng probl: how t under (say lying o let arb sg itray s s te permiso d code (say in a web bs (say er) run but is  be d fo etc, m accessing the underlying system in malicious ways wh it e r p ted  in revented eg e aby to accessing  it with  ard the system in some wa a in let tt rod ys. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 137, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 223, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  xxx u s wix  s are  y a  from  s e  pags \" x e x a e nd  e . hos  e  b se i s  xm s  can xe e   for up e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  d (xr  fo a r xx t ge  x  s e e n j c   ut txe  ey ck m  f m xx  and t e  n   t sc e y e xp ut xxt a  xn .    y   te es, xr   t e   t he n pa and  the a   e e f t l t r xe    e   xe x p  y xxd ps   y d e  h o t  e , b p a   y u  t a wd     p xy o xs p   a . xn d n t  up m up y  te xr x e d  d  xe e    xxy t r   e e dx ur   x t xy ,  a f a  ssc e d  xxxn i b t \" h t xs e e    xxxxu  g  h  f i fe mxxn  n s w xxe e d y my u  u xx y t  e  x. p   s xs e  a y o \"\" s a r  e s  d  e        p rg xp o h  xxe   c esxxxx t y r   p  re ce  xe d ixx, .  m t . e ,  . xn  a o    txxs re xxe , t p  e  e he  a s a ec xx. u e rt \" y s     pe  . o  a e t a up e  of t  s  h n e m xxy ul   y  s i expt s   p  e  xs   u te s  y o e f e xxxxxs c  l r te xe ir n r d x p s  xr b e  . y,  expt  d n  e rog i n o    . "}, {"sentId": 100, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "generate certificates on the fly with its own ca", "label": "PARENT"}, {"em1Text": "generate certificates on the fly with its own ca", "em2Text": "man-in-the-middle attack", "label": "None"}], "entityMentions": [{"start": 84, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 137, "text": "generate certificates on the fly with its own ca", "label": "ATTACK"}], "sentText": "i'm lookg r a transparent xxxxxxs proxy tool to e (and change?) gexxxxc sslxxxs xc (man-in-the-middle attack). basxxy xxxxxxxxg that can generate certificates on the fly with its own ca. in a way, i'm looking for g like , t r xxxxxxx) txx. y su? "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 494, "text": "dos attack", "label": "ATTACK"}], "sentText": "i' alls m  ck? n th wcf? is ew t att to a call vic ani e, s a  ck? o cxf and  calls i wo t a e, nd  uld like know  to know i er f  it   it   has any a  build-in mec a hanism that would al wcf? lo c i al h ls w limiting t this he cxf  calls  num and b ca this lls w  er of c cxf oncur cxf re dos  h calls   simi nt c h hanism ani hanism  al a ls sm   cx  calls alls alls to the web er  s c m xf er and vi the ce, thus  know would  a wcf? dd this ressing to  the   po f ssibilit hanism y  i of a dos attack? cx feature f  something   simi  lar to this featur dd e i  of wcf? "}, {"sentId": 88, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "get the token", "em2Text": "csrf", "label": "None"}, {"em1Text": "csrf", "em2Text": "get the token", "label": "PARENT"}], "entityMentions": [{"start": 425, "text": "get the token", "label": "ATTACK"}, {"start": 285, "text": "csrf", "label": "ATTACK"}], "sentText": "but what does that accomplish? aren't you just taking session data, putting it in the page, and then comparing it with the exact same session data? seems like circular reasoning. these articles keep talking about following the \"same-origin policy\" but that makes no sense, because all csrf attacks are of the same origin as the user, just tricking the user into doing actions he/she didn't intend. the attacker has no way to get the token. therefore the requests won't take any effect. i recommend this post from gnucitizen. it has a pretty decent csrf explanation: [link] "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per uxxr salt prevents the use of generic rainbow tables to crack passwords.  a separate xxxxxxw e woxd have xo be generated xxr eah d xxxxy r o had a uxxxxe salt in r to obtain r x.  s would xe a tixe cg proxxxs h is what mxxxs sxxxs xxxx.  ths ds xxt help a ts axxxxt against dictioxxy or brue force attacks. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 235, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popp wx xd s ae a not  abl p e uxxxxxxy  x  te e a  \" d  o xx we xxx xs    e x xxr \" xx the xxxxxxx. hosti  e se eo    rea s  xx can ue ps to   convince users that an important message from a trusted site has been delivered, an x  r d trick those people into clicking through to some malware url  ess o ce r xs e age vn   do a xf n t the cl pag ick itself x  mig a xxx  t re well- he r  t t a bugx.  y url e, te mai w  xxn o i n page xf the  ay xx  x impt e x e  eo y ited xd o xxt n  t x a d oo, s  t a xx  e   e well-r \"    s aft y  abl ed o  xxp xxn i  xx d t es e ires. xxxt e  s  ovxr ur ax ed d xd  y s  not be diy x uxxxxxxy t   e   asse wi a te d th y  d wi comx h t  t  a th    e re    he  m xxe mi t x  xxxxx people   e o . ed n ex  pag to  a p  people t  an s wxx dixxy   e   ed  e do vn by m x  no th t u d rl x t xxy  esx any a    ux   d  y y  xy sites x  s a wy  dixxy r  to \"tra  esxx  e,  a an p ess \" s a it   d o x a xy   fo m r t f he ce ess po k xxp   ag xs e  e  p ay age rc  e a \"tra d , e n   tx. in s impo ag   rtant  xx d xxx \"tra e  respe, t  h   x . x \" xt e  xs y aspect of h   xd th x e  xx  not prx xxxxx  xs xm rea an  coe xxy is t ity xe r xxxxr  xd it d an  d,  y of \"  t thoe h e e s control  uxxxx xy xy ovxr  uy  e the fo r  w ess  o explot n cop t x exi p a e t xxr d xxr b s row uxxxx sig . "}, {"sentId": 121, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 563, "text": "sql injections", "label": "ATTACK"}], "sentText": "\"postgresql is  wrong. insecure b  eca mysql's  the use of multiselects\" - i'd assume `mult permissi subs s elects, ons i / s so e ply lects` are what i'd call `subselects`, but i might be wro be ng. current   mysql to  ve ave rsion lication s support subselects, but according to [1] some librarie ord s might  library n many ot suppor (couldn't t o and track  r mi really ght h is ave disabled them. could tha that  to t be the reas postgr be esql  holes might \" on for  accor might ding th is e c subselect much s, laim or am  to i overlooking something here?\"sql injections are the easie ecurity st to exploit with pos esql tgresql\" - ord   find imho sql injecti c ons are an a \"pos insecure tgresql pp sql lication / library problem and are simply val and id sql ssume  queries, so the them. re is no rea wrong. l difference between databases, right?!\"i love postgresql for g to etting root permissions as it has so many security holes\" - current  first i'd a assume ssume  - postgresql's s pe this? rmissions ecurity track re c c `subselects`, ord is about as good as mysql's (couldn't really find much easiest  on  mig ply ht this postgr )? secondly e  sql  running postgresql a wrong. s ro security ot is sim - ply a stupid id i ea. o pe r is there running  anything vali root d in this? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 58, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capa i bi capa lity de.  to sto i p ddos attacks from a certain ip (or pool of ips). this as to be at t  t a h  e  i nginx level, rath ddos  i er t  the the han any deeper in  ddo to s the i it. t to .  co capability de. do i need a w of eb application firewall? if so, i capa t.   the how do i i in so, tegrate ntegrate it. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 784, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i xxc    undexxxxxg let ey xd xt s sxxxxxxy m.  xa      fo mo xy t pe web o  ple a  thik xxxa is  there xa cxd   s web   secuxe bexa to  uxxxxxxxxg e it    malicious ud xy run  revxxxxd  in   r o eally is immxxe   malicxxxs   xh web ere   o xxxxe i  t r xxxxf but  but xxxx, around  et the w  c o , bt there s th n i (  ( let say s entxxe ja sey l c   ud ed  has aro loxx, xxd xxxc xd  t xxxe here kin has  abilxxy g xxe under xr   code s  d pexxi  whetr with i  it o n to xxxe c (sy malicious  n a    . thexxxe rexxxy  o o has lving a ch pe xxf web fe rm xu r ( u say n ffe o (y n a xxd llen  g prxxx: ho ud w t undxr xxxy lxxxg o let arb   sg  thxxe itr  ay se r curity  s s l  te xe ot rxxxo d xxd m t ot e (s xh ay in a we  b bs (sa  y er) run  (sy but is  be d   xo etc (sxy , m accessing the underlying system in malicious ways wh i s t e r p ted    in revented eg   e a bs  ja by to axxe pe ssing  xt with  ar ( s sxy d txe system  xxxxxm in some wa a in  und let  m.   tt   xy i stem  rod xx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp of  s e a  d xxe \"x txs \" xx ben x. xxxxxe s c bn an xxe s xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url r xxs t  even   jut the clik  j a ut itself mixxt t a xxxx. the   y txe e , , xx  a xe e xxxn e xf the xxe d o xxx x b xxxe t too, b url u x,  a t a  xxe wed poxxp xn jut  dt e ur axd xxy nt be dix s xx those y way  assoc tx d bn  wih the xe n page t  e s a  w way xxe ed y y t  xxs  uxy e   x, sxs s a y to \"t\" x m xxxs xx xe d to esy force ad ixxx,  t ts rustd etx. in tx  jt s s way   a x  man a x  , the ad  sy  e. axxxxt x w e  f e m rex be xy  xxe is  x, txe secur url y of xxe s cl ov own r r o w e even  e even d n c xxe o  into url mxxxxr d xxxxr br a g dex. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp  y \"\"  ws e a xe \"\" x  bg d xx. e sites n ue ps txs  xo   convince users that an important message from a trusted site has been delivered,  xh d trick those people into clicking through to some malware url r xxx s xxxs xxx  en x  j n u xx s xf t the te  c  l  xk f mi to ght exxxxxt a bux xxxt x.  , txe xx \"\" xn  ws xxxt   a xxxe  's but xf    clxxxxxg xf n  e xe d o xx xxxxxxs xt  r too  , bxt  h a  s wd p xxn t the   xxxr ax s d p s eo trick ple  xxy  xxo xxy  xxxn m not e dixxxxxy  r axd h e xxe n s wxxe d y xxxy u trick y xs s a y to \" s xxd to   esxxxxy f  xe x xxxt d ixx,  u s s f er etx  to ixx, . in txs respe, x d xe secxxxxy axxt f th uxl   e xxxxxxm reaxxy is xe y x y f e user a 's xo a ntrl r r on  malwxr  e xxx to xxxr d r bg de  xxxt a xx. r  "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 35, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 83, "text": "block the vm", "label": "ATTACK"}, {"start": 97, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 136, "text": "eating all the memory", "label": "ATTACK"}, {"start": 195, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 234, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 268, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 334, "text": "deny resources", "label": "ATTACK"}], "sentText": "xf i wxxxa be malicioxs i am xxxxa do all my code in the finalizer thread and xxxt block the vm. same doing [code] bye-bye new threads. eating all the memory, eating all dirxxt memory xxd so ox. accessing zip files in my own jar, xxd expect 'em getting moved away, so the jvm crashes (due xo bug(s) in zlib) if one purposely wants to deny resources, it is juxt not a feasxxxe txxk to try and catch the hacker. you'd need to know xxxt to search for xxd dynxxxxxxxy check/enhance txe claxxxs on run-time to disallow xxe bxxxxxxx.  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 13, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 30, "text": "javascript injection attacks", "label": "ATTACK"}], "sentText": "i know that i need to prevent javascript injection attacks. how do i do this? "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 71, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 175, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 252, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i manage a secured php/mysql web app with extensive jquery use. today, a strange error popped up in our app's logs:[code] we are not using amazon's cloudfront cdn in our app. when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 69, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 23, "text": "xss", "label": "ATTACK"}], "sentText": "is this technically an xss attack or something else? [link] commit, if it were pulled, would have prevented this xss vulnerability. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "wt i xxd s the best  to way to protect xe use the r and xxe   is s protect ecure r any mitm attacks. xs my way sxxxr e e xo  e ad n? way  "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 5, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 69, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 108, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": "  xf the session identifier were known by an attacker o the t r he   had access to  the user's workstation, the logged out session could be accessed us  xg  tx xd  to  the an  e  session sesn    to    the     xx  x to xe r   xxe ur xd the  be  texd r s.  "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 256, "text": "sql injections", "label": "ATTACK"}, {"start": 147, "text": "xss", "label": "ATTACK"}], "sentText": "  i'm trying to make  html a php application php   convert i' ng ve written secure and have a quest me ion about escaping o the utput. i switched  xss to usi   sql ng pr could e i pared statements with p  d and  sql o once i learned doing so would prevent sql injections,  other and it  would s special eem ng s  copyrig th att ut ack at the other  in main type prevention,  of a is ttack is x will ss. i build the outp like ut for  would my pages li quotes, ke this (assume the data  variables to  have data from the  than/greater  the database in them): xss preventi  onconverti for ng special char to acters t entities, o  the proper html entities, for  to ex application ample it converts html  the copyrig characters h have t character to [code]. in htm the l cont utput. ent you should use the appro application pri  the  ate html entity instead of inserting a raw special characte in r. f  or xss prevention, you could use [link] in build  les and s stead, but name  ly  it will only convert some basic charac entities, ters to html e  basic ampersand ntities,  could namel ke y quotes, ampersand and the less  (assu only me than/greater t (assume han ttack  characters. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 392, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welxxxx, [yoxr nxxxx\"  pages they  on pxxxxc pa pagxs xxs fo of r axxxxxxxxa and ted users, even i pages p  f they us  xxxxxd therefore e hxxx? of cours  cours shoxxd e, i wou axxxxxxxc e] a ld  th ages erefore  the like to kee [codx] p the ac xxxxxxxxxa cess to the sensitive p an therefore d ages sxxx, xxd i should  xa xo  txxxxxxxe keep [cod f e] to avoid possibxe stealing of the session token an . "}, {"sentId": 37, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 42, "text": "buffer overflow attacks", "label": "ATTACK"}], "sentText": "wxxt are txe ideas do  f pre att nt is ig buffer overflow attacks? axd i h d  buxxxr eard about xxxxt until now axt so a?  is ts prom cp sg letely sxxd b  y ap  pg g att f  t provxxe echnxx? acks? tecxxxxxxx?  d  h o eaxd r comb xxxxl n f a a? p  xt with other technix?   wy d stackg o you xxxk h  tt it is o  diffit to provide adequate  xxxs for  bxxxe diffict r xxxxxr ow a? o g ther  "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae cxn xxxxxxxxt  i txe pxs t xxxxxs i  xn  i t xl  e xe  b dx, w   xb o , h er  xn  the xc xxe  the h   xxxt  xs  me xxx. xn    xn xf   s t  hxt  xc i me   f  o som db  d  axxxxn th xxxxt e xxxxt xxxd is y xxe   texs  an   xs so  xxxl xxt sxxxh  xxxxw abxe to x t  t xxxxs txe d   xxxxxxw   b   s  t o xe  b xe y w n     xn  w r h  xxe simxxxr ' comxxxxxx  e  xxe t xe ab be  e l xs e xo xxt t db  xb  xn txe , xe   a    xxe xi nt xl    ver  ev  xr a xe w t xxxs o  b he txe xe xd xl e i  e  plxxxx am e mu      mi xe o xt. e xxxe  t xxt  r  xxxxv  er xxxxxxw  m someh g xw   y xo  xxxe t  will  xn xu  b i   ne t e   db, d to h t xt he a to  la xe   pxa t in  axxe  r g xs xo xxe   k be xy t texs o sxxxs xl   xxx  x  c db xxxt x  xe xe m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    xxe   xxxxr  in  ed  xxxxxxxxg sxe  ut i  r   xxs e b  e  u   x is xxxn xxr  xo xxe n  xxr is xxxxr  xm  xs k  othe t r xe sxt th cce xs  d xxw    xt ed      xc   xxxs    xxxxs n  xs xo xr  xxs b oxe xd  g xxi txe o   isk. ic  n xe   xxxxs   a w d xu x,  he hxt xs  h  axl  t xx xxe nxw  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn th so e ow  r th txxs o s n  b  xt xxx     xe e g xx me xx  r   i xo n  i , e  u xxxt xt  ixxt xxxl xx g   y xxe p xh b e a t xxw i o     k p u xxxn xxxxw xe  xxt  xxx. nxw  st  e xh i e   xs xxs x  b    xxx. g mu   n   on  xxx. s sxxxxxw exd  xxl t ,   xe  b be r e st xe xxxxs    sxb xb le xn p xf  xxx. laxn to  g txxt i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  xxxxxxxxt t ic h  whate  t rds   ver     i e e   xb sxxxh    xxxs cryxt w xxe   i t xx w xs      o xxxxr xxxr xxe  xxx n l   be   will    xw  to sxxxh   r  xxxxxxx, xxs  b db xt xy  i   xm  m xxxxxxxxg xxxt mxxxw  s s teps   i can m  do t x xb t xe xe r   b b  e e o m  xxxs xs xx  xxxxe xn g t   xxx xx xh  te xb xs my r text  e xxk  . exg f . xxxxx  xxxn txe g xxe xb p t r le xt b xxxs me  is xn t t xe sit e  b    e   xxu  u  xxs   s mi   x th  e xxs g xl   xxxxn   whxxe xxe db   i xo s  can c xxxxxc oxxxx  xxxe   e d bxt     xo exxxxe  b t the nxe  xxxxs xh  e d xf   xxxxxe sxxxe o  xo x. axxxxxc xxs  at  xv   xy xo pt  xt  hxr  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  mi xo xxxxn pxxxxo c b xxxxxx cce i  i  xxe ve  xxs    g   xxxx xd t  xxx   x t xo  in   i m xg   s xxe teps xxxxs  wxu xxt xd  to   b xn g  be xu  am a ch xp he p  x db xc  i t b  xm o xxxx. xy e xxxe e   "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 163, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 290, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 430, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a exp  (s  (s dat  , xx  x  parameter i )  x to o     t  lo    t co t   okie   d s.  ts        sy rt    i     xxxxs i  e m  alw  e ts  ce    g statxs tha d t  \"spring expression language (spel) s  y  \"    sxxm i     c  o xx      d  g  xt d e  xt e th   xo sym gxt  ge  i      xxd h   d  http parameter submissions xxxn  g      th \"   at      itxd  alw d xl o w t  d a cookies. xt e t (spel) h    ge  t th n   xxxe lo     rs to get sensitive system data, application and user cookies.  , s   ts    sy   to dat,     y \"  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 48, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 225, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 347, "text": "recover those keys", "label": "ATTACK"}, {"start": 429, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 467, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttack te  ecrets w  indistinct mixx of t an attacker recover the secrets in that flash? i d t how hey can   xx t xz fxr xxxxxxxxx ecrets x o  or xxxxs xn te app cxe ad t x somehow x, t te cxxxd be micros xx cope  xxxe indistinct general side channel attack o  can  or x txx xxe r . but how e  d a w n t  a  ttac  ke an  xn r y go t tryig o recover those keys?  xx  or or e txx cx of e xe ve ar  xxxs for a d ar to somehow shave-down the chip  gene side ral or some kind of microscope attack but ? go  "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "brute force attack", "label": "ATTACK"}, {"start": 70, "text": "guesses the input values", "label": "ATTACK"}, {"start": 177, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 219, "text": "get in", "label": "ATTACK"}], "sentText": "txxxxs how it works rixxx? but ivxe xxxd about brute force attack. it guesses the input values xxxxx? with xxe procedure above. doesxxt it xxxxs xxxt the xxxxxxxr only needs to get the $userinput information correct to get in? he xxxxxxt need xo guess the lxxg xxxxxxxxxd strxxg corrxxx? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 143, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup n xxxxxxd dxxs ar ware e a  and d  nota axd bl has e xxxxxxx\" txxxxx. hosxxxe s ca exxxo nt r a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or ps even j e ust t really he  pxxxp cl   ovxr  sites  clxxg ick itsel but f mt exploit   respect,  a bu fore g).  yes, the n page of xxe site cxxxd xo tt tox, bt a well-crd pp hostixe up n dist the usr d may  own  through not tly  be dir y ec he tly s y sociated t xt us c. h t the he hose mai xxxxd n p but a and ge.pop w e in ups w xxx, e  cou n ld thr e ed by may unsaxxxy xxxxs as a way to \"ta  e xxl trick w  are p\" uses and to e e sse ry xy force ad imprexxxx, etc. in this r, th sixe coud s e sey aspxxt xf the m y is xxe sey f the  into he  xxxxxs c  e popups ol an  y exd d  over their  e n cxxr and their brxxxxxg de may s n e ota . "}, {"sentId": 32, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "xss vulnerability", "em2Text": "grab another user's authenticity token ", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "make use of it for csrf attacks", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "grab another user's session cookie", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "login as that user directly", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "make calls to our rest api from script", "label": "None"}, {"em1Text": "grab another user's authenticity token ", "em2Text": "xss vulnerability", "label": "PARENT"}, {"em1Text": "grab another user's authenticity token ", "em2Text": "make use of it for csrf attacks", "label": "AND"}, {"em1Text": "grab another user's authenticity token ", "em2Text": "grab another user's session cookie", "label": "None"}, {"em1Text": "grab another user's authenticity token ", "em2Text": "login as that user directly", "label": "None"}, {"em1Text": "grab another user's authenticity token ", "em2Text": "make calls to our rest api from script", "label": "None"}, {"em1Text": "make use of it for csrf attacks", "em2Text": "xss vulnerability", "label": "None"}, {"em1Text": "make use of it for csrf attacks", "em2Text": "grab another user's authenticity token ", "label": "None"}, {"em1Text": "make use of it for csrf attacks", "em2Text": "grab another user's session cookie", "label": "None"}, {"em1Text": "make use of it for csrf attacks", "em2Text": "login as that user directly", "label": "None"}, {"em1Text": "make use of it for csrf attacks", "em2Text": "make calls to our rest api from script", "label": "None"}, {"em1Text": "grab another user's session cookie", "em2Text": "xss vulnerability", "label": "PARENT"}, {"em1Text": "grab another user's session cookie", "em2Text": "grab another user's authenticity token ", "label": "None"}, {"em1Text": "grab another user's session cookie", "em2Text": "make use of it for csrf attacks", "label": "None"}, {"em1Text": "grab another user's session cookie", "em2Text": "login as that user directly", "label": "AND"}, {"em1Text": "grab another user's session cookie", "em2Text": "make calls to our rest api from script", "label": "None"}, {"em1Text": "login as that user directly", "em2Text": "xss vulnerability", "label": "None"}, {"em1Text": "login as that user directly", "em2Text": "grab another user's authenticity token ", "label": "None"}, {"em1Text": "login as that user directly", "em2Text": "make use of it for csrf attacks", "label": "None"}, {"em1Text": "login as that user directly", "em2Text": "grab another user's session cookie", "label": "None"}, {"em1Text": "login as that user directly", "em2Text": "make calls to our rest api from script", "label": "None"}, {"em1Text": "make calls to our rest api from script", "em2Text": "xss vulnerability", "label": "PARENT"}, {"em1Text": "make calls to our rest api from script", "em2Text": "grab another user's authenticity token ", "label": "None"}, {"em1Text": "make calls to our rest api from script", "em2Text": "make use of it for csrf attacks", "label": "None"}, {"em1Text": "make calls to our rest api from script", "em2Text": "grab another user's session cookie", "label": "None"}, {"em1Text": "make calls to our rest api from script", "em2Text": "login as that user directly", "label": "None"}], "entityMentions": [{"start": 50, "text": "xss vulnerability", "label": "ATTACK"}, {"start": 91, "text": "grab another user's authenticity token ", "label": "ATTACK"}, {"start": 134, "text": "make use of it for csrf attacks", "label": "ATTACK"}, {"start": 299, "text": "grab another user's session cookie", "label": "ATTACK"}, {"start": 338, "text": "login as that user directly", "label": "ATTACK"}, {"start": 380, "text": "make calls to our rest api from script", "label": "ATTACK"}], "sentText": "the auditor's statement was that if we also had a xss vulnerability that an attacker could grab another user's authenticity token and make use of it for csrf attacks until the user's session expired.  but is seems to me that if we had an xss vulnerability like that an attacker could just as easily grab another user's session cookie and login as that user directly. or even just make calls to our rest api from script as the user being attacked. being able to mount a csrf attack doesn't seem any worse in such a situation... the problem would be the xss vulnerability. "}, {"sentId": 91, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "manipulate the amf parameters", "em2Text": "insert javascript", "label": "None"}, {"em1Text": "insert javascript", "em2Text": "manipulate the amf parameters", "label": "PARENT"}], "entityMentions": [{"start": 260, "text": "manipulate the amf parameters", "label": "ATTACK"}, {"start": 294, "text": "insert javascript", "label": "ATTACK"}], "sentText": "i just got hammered on a security audit by deloitte on behalf of sfdc. basically we use flex and communicate via amf. we use fluorinefx for this (as opposed to lcds and blaze). we are being told that because the amf response is not encoded andthat someone can manipulate the amf parameters and insert javascript that this is a xss vulnerability. i'm struggling to understand how the amf response back, which could echo the passed in js in an error message, can be executed by the browser or anything else for that matter. i'm quite experienced with xss with html and js but seeing it get tagged with amf was a bit of a surprise. i'm in touch with fluorinefx team and they are perplexed as well. "}, {"sentId": 24, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "getting subscription_json from client", "em2Text": "converting it to string", "label": "AND"}, {"em1Text": "getting subscription_json from client", "em2Text": "setting it to model object using gson library", "label": "None"}, {"em1Text": "getting subscription_json from client", "em2Text": "json injection", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "setting it to model object using gson library", "label": "AND"}, {"em1Text": "converting it to string", "em2Text": "json injection", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "json injection", "label": "None"}, {"em1Text": "json injection", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "json injection", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "json injection", "em2Text": "setting it to model object using gson library", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "getting subscription_json from client", "label": "ATTACK"}, {"start": 49, "text": "converting it to string", "label": "ATTACK"}, {"start": 80, "text": "setting it to model object using gson library", "label": "ATTACK"}, {"start": 167, "text": "json injection", "label": "ATTACK"}], "sentText": "i am getting subscription_json from client h i m converting it to string ad thn setting it to model object using gson library. on g the ce on foy securi, it is gig me json injection error on bew code with fg message : "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 111, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem is that even though my project is 100% legal, and not shady, it is highly susceptible to occasional ddos attacks. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 306, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 366, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force us they   t px  t  e e     . e  i s  xt   e xs d   xe   o   r  o u g s  nt  s y  o    n  xu i do j   my   s .   k     a xxxy s    d  o t  my g s  us  do  .   d s xa   g   t axxxxk     s    brxxxxxxxxe  r x. malicious users could create links on my bit.ly account. .  they would need to do a separate attack  k xo  e   d   s pxxt  cxxxxe    b xxxxs e r x   n  bit.ly e n xu  t c  s d  as   ua  . e  .    x r e d u  s  o they  l do n      s o e   . "}, {"sentId": 27, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 187, "text": "manages to get dodgy code onto a server", "label": "ATTACK"}], "sentText": "i want code   e to know how o disabe t  e ev that al  manages mor in ph' wos s rex sym  in eg. [code]. it sym s a ane  t ty  l ential ex a ploit that can be used in place of el if anyone manages to get dodgy code onto a server. i had   a problem r ev had al ecently wh a ws theme fro p that load m woots  pt that had a  allowed sec anyone uri sym y e t  i allowed hs e  to u eval pload  of a k doo a r sr adn  in tp had e scri co ecently de p e ty doo pe val t. "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 366, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites that i cxxxxxd a xxg te ago xxd t xxxxxxd my interese xxxxr is xxxt xt fs when atteg o t a query strg paxr to an int.  yea, i knxw its bad co, i e it many years ao ;) sax, for exxxxx, you have writn r own forum xxxxxxxx. you have put xn lots f vaxxxxn for when the ur ws poxxs to prevext xss attacks and s, but your van xs fa. xf a hacker cn bg up txe ysxd when they make a , the k trae shown could poy sxxw thxm the crs in r validxxxxn d exploit txxm to xxxxxe xss attxxxs or xxxxxn xxxxxr details r s and . "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i wxxxxr whet fxr n  xxr dos  adding it e t xxxy txm xh xxxx1 a be n e add prxxxxxs s sxxe s exxxxxxxg xxe i nxxh to wxy  the haxx. fxr e woxxxr xxxxxx, xxxxd it be pxxxxxxe txxt a o n atta  ckxr  txxn found xxxe cxxxxr be  way to create a 100timessha512 function which xxxe xxy f xxxxd xxxxr txxn sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, xt xxxs expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo xxxxxxxs bruxe forxe axxxxxs (o  r at xxxxt mak for xs them  xxxxe pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there xs  thxn absolutely a xxxxe than xxx, but t asxxr o sxxe t attxxxs h thexe e bexxxxxs exxxxd the risxxxx. "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 102, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "sxxxxxe uploaded several gifs, which when viewed with a browser, the browser said it was invalid, and my virus scanner alerted me that it was a injection.  xxe below xxr a xxp xxxe contaxxxxg these gifs. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 201, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 355, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 390, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "o ge ct why it is te way it is, the payd contais an n time and on the device n the token is at to exe i should t the user to e r their s to get a new token. now this might m like a secy threat because a hacker could manipulate the token on the device, but te server chs the token to make sure t is authentic which is why i o nt want the key on the dee be this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 80, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 10, "text": "exec shell by exploiting format string vulnerability", "label": "ATTACK"}], "sentText": "i want to exec shell by exploiting format string vulnerability,so, i wanted to rewrite [code] function address from got by the address of my shellcode stored into environment variable. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 139, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 162, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 219, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 100, "text": "database is compromised", "label": "ATTACK"}, {"start": 533, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people d xxxt the sxxt be stored separy fxxm the databxxx. tr argumext is that if the database is compromised, an r can stil build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this xxxxxxt xxs an p, txxn he may not even d o k any otxxxx. frm a secuy xxxxxxxxxxx, s it wh it o store s in a different plac? consider a b appn with xxe ser code axd db on the same maxxx. if the sals are sxxxd in a flat fe n tht machine, chxxs are that if te daxxxxxe is co, the salts file will be compromised, .  "}, {"sentId": 61, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "that could (in theory) be tampered with by a malicious user", "em2Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "PARENT"}, {"em1Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "em2Text": "that could (in theory) be tampered with by a malicious user", "label": "None"}], "entityMentions": [{"start": 147, "text": "that could (in theory) be tampered with by a malicious user", "label": "ATTACK"}, {"start": 266, "text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "ATTACK"}], "sentText": "i am considerin c g unxxxxxxxxxn whxt g parxs of infxxm i a  ti objext can c  s. xn that xxxl ge n t ever  txxxxxxxxxd xxa n (in  received xxxxxx, that could (in theory) be tampered with by a malicious user. o   i b considexxxg s    y  undersxxxx,  of txa etwork, t the malicious user can inject an arbitrary r object that can be full of harmful code. bxt thi whxt s is  b not what i am worxy u malicious  y nseriali i  oxxxxxx. zing ing xxo cxxxd ut,  whxt becxxxe i can xi  xxn txxxk i  ex that ecuting can)  ut, prevent such  considexxxg code from ever xxxxxxxxg b r y c i t   xxxl arefxl handling of the recexxxd o (i bjecxx. "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 102, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "someone uploaded several gifs, which when viewed with a browser, the browser said it was invalid, and my virus scanner alerted me that it was a injection.  see below for a zip file containing these gifs. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 116, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 156, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "sts  l ar od ed ex, e xr oe ocess  imxu c tl od, e. that means once y befe oe crext [c  xxxx, ed the [c s you  o, f another process can dump memory xx. , s no way you can get rid of the data bef xxs ore [lixx] c te ks in. "}, {"sentId": 31, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "steal not only the latest intellectual properly ", "em2Text": "our whole history of changes", "label": "AND"}, {"em1Text": "steal not only the latest intellectual properly ", "em2Text": "copying a single folder", "label": "PARENT"}, {"em1Text": "our whole history of changes", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "our whole history of changes", "em2Text": "copying a single folder", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "our whole history of changes", "label": "None"}], "entityMentions": [{"start": 267, "text": "steal not only the latest intellectual properly ", "label": "ATTACK"}, {"start": 319, "text": "our whole history of changes", "label": "ATTACK"}, {"start": 359, "text": "copying a single folder", "label": "ATTACK"}], "sentText": "  difficult e it's  e gathere xact been difficult to nail  history down  intellectual that   th his exact se steal curity concern but i've gathere on d that it ce o of f but  nter fac nail t s on th not e fact that  it' employee s of  a malicious employee c but ould steal not only the latest intellectual properly but our whole history of changes just a  by copying a single folder. that  "}, {"sentId": 109, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "cross-site request forgery attack", "em2Text": "submit malicious requests to a trusted site", "label": "PARENT"}, {"em1Text": "cross-site request forgery attack", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "PARENT"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "submit malicious requests to a trusted site", "label": "None"}], "entityMentions": [{"start": 2, "text": "cross-site request forgery attack", "label": "ATTACK"}, {"start": 102, "text": "submit malicious requests to a trusted site", "label": "ATTACK"}, {"start": 740, "text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "ATTACK"}], "sentText": "a cross-site request forgery attack rides on the  we victim hac attacks. ker 's  site.  ip session to submit malicious requests to a trusted site. the  the [li a nk] des to cribes capt is cha a t 'fre o s a good wa at y to pr it e spa vent csrf at ip tacks.  trusted   simply  it the a  as we know, goog spa le re-ca submit ptc rides malicious  ha is effective in preventing bot spa since mming. after it has been clicked several times at the location with the same ip attack  ha  address,  le it requir to es a se  human to solve a pictures pu spa zzle. since first  the first few at pu te we mpts are simply 'fre cross-site e' the , i mpts s i preventing  know,  request t p rides ossi se b veral b to le f clicking or a hac a k is er to bypass it by initiating clicking on the re-captcha figure at the first few attempts? "}, {"sentId": 44, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 221, "text": "renaming the superuser.apk to superuser0.apk.", "label": "ATTACK"}], "sentText": "the major techniques used by developers in root detection are checking for the superuser.apk file,check for chainfire,busybox,executing su command,etc. but an attacker can simply bypass these checks by several means like renaming the superuser.apk to superuser0.apk.  "}, {"sentId": 29, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "debug my code and find my url", "em2Text": "send amount of data to my site and make it down", "label": "None"}, {"em1Text": "send amount of data to my site and make it down", "em2Text": "debug my code and find my url", "label": "PARENT"}], "entityMentions": [{"start": 258, "text": "debug my code and find my url", "label": "ATTACK"}, {"start": 320, "text": "send amount of data to my site and make it down", "label": "ATTACK"}], "sentText": "it is an example and my real code send much more data to server, and maybe code above doesn't work, i just make my question more exact and specific as stackoverflow want me.my question is how to make these transactions safe and secure from hackers which may debug my code and find my url , in code above (params[0]) and send amount of data to my site and make it down. or how can i use the service of sending data to server more secure from these kind of dangers?? "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 28, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what xxxxt securit? mee hacker can find the way to change some of my [code] statements, ad e my e wil b. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if you are concerned with the first case (someone posting malicious data to/as another user) the solution is the same whether you are using ajax or not -- you just have to authenticate the user through whatever means is necessary -- usually via session cookie. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 234, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welcome, [your name]\" on public pages for authenticated users, even if they use http? of course, i would like to keep the access to the sensitive pages safe, and i should therefore keep [code] to avoid possible stealing of the session token. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 125, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 211, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s x  s ae  y a  m  s e  ps \" x e x a e xd  e . xxs  e  b e i s  m s  can ue e   fr p e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  d r  o a r xx t e  x  s e e n j c   ut e  ey xk m  f m xx  d t e  n   t xc e y e xp t t a  xn .    y   e , xr   t e   t he n a d  e a   e e f t l t r e    e   e x p  y d s   y d e  h o t  e , b p a   y u  t a wd     p uy o xs p   a . n d n t  p m xp y  te ur x e d  d  fe e    xxy t r   e e x r   x t xy ,  a f a  c e d  n i b t \" h t s e e    xxu  g  h  f i fe xxn  n s w the e d y y u  u xx y t  e  x. p   s xs e  a y o \" s a r  e s  d  e        p rg p o h  ose   c x t y r   p  re xe  ge d imp, .  m t . e ,  . xn  a o    ts e the , t p  e  e he  a s a c de. u e xt \" y s     e  . o  a e t a p e  of t  s  h n e m rey l   y  s i xt s   p  e  s   u xe s  y o e f e s c  l r te e ir n r d x p s  xr b e  . y,  xt  d n  e rg i n o    . "}, {"sentId": 13, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a bad guy to get a core dump", "em2Text": "somehow otherwise observe the heap", "label": "OR"}, {"em1Text": "somehow otherwise observe the heap", "em2Text": "a bad guy to get a core dump", "label": "None"}], "entityMentions": [{"start": 280, "text": "a bad guy to get a core dump", "label": "ATTACK"}, {"start": 312, "text": "somehow otherwise observe the heap", "label": "ATTACK"}], "sentText": "my concern is that we should never store a user password in a java.lang.string because they're immutable.  i can't zero out that string as soon as i'm done authenticating.  that object will sit in memory until the garbage collector runs.  that leaves open a much wider window for a bad guy to get a core dump or somehow otherwise observe the heap. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 119, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 181, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  for filt te er oxt the even  mesxxxs i get i  n my web evxn hook callxxxx. howe se ve, a ms u cto s hook er cxn add my bot to a thousand big groups and will poxs malics xxxy result in denial of service for all other users. n  all if tel mess  m e xxxk gram have of  implemented e xxxe xxxxxi of xg  s c  h uxr a i c l txo s ns may s h tixl  my resul u t in den xxxy i xxy xl  del f  l xxxxxxe for al s l e n r  denl us. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 107, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the  same codxx?  whole po  int xf xxxxxxg a  x xt   xxxxxg xxxxxxxd xs in c sam  e  xxe ase  t a   hacker gets access to the database. xxe  p  if i sx a xxe   the xxxt  e\" in xxe  x t it   h  e xxt xb   x  xe  jxs it t   xxe wxxxxn xxe  l  th l e saxe xxw xb  as xxxxe he    sam the xxxxxd xxxxxxxx, isxxt    e it ju t c he   xt l t ike h st   e xxe  xxe i it  am  xxxxx txe g  th  e hxxxxxg   xxe h t x he ackxr txe \" and s t exxxt c oxx, od point e\"   just ? i am p tx a e ut t axd  e\" he   tixg     up  dxo xt  a dxo cxxxx?     r  i t xxxt  xxe as  wixh a l xxxxe .  ock, xxd hxxxi    xg the  t int xxx r xxx  g    l  the xxxe a r xxe isxxt   xxe kxy xxt . "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "no access restrictions", "label": "ATTACK"}, {"start": 211, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the access  load this server i this s norm access ally subjected to is mi i  can nimal,  to but since th nimal, e th re are no access restrictions,   restrictions, usly the server can obv to io can usly  can be attacked by dos etc. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 190, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 250, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxt e . e s  xt e us d  o r u g nt  s y  o i do j . k   d  o t g s d s ua   g ts    r o. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xe n xu  t c  s d   . xe d o l do n  s o e . "}, {"sentId": 51, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "direct posting of data to your site", "em2Text": "csrf", "label": "None"}, {"em1Text": "csrf", "em2Text": "direct posting of data to your site", "label": "PARENT"}], "entityMentions": [{"start": 932, "text": "direct posting of data to your site", "label": "ATTACK"}, {"start": 236, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm it   rd w 3rd-pt riting   a t thi  i.e.   nd  e  t  djo restful ap rul  cli ss-s 3rd- it client djan protec  tis go  e&qu e i to k an s app, and i keep  djan think go run (the  api-endpoit ning into d think ja gh no ss-situ ' thi s csrf protectis w that heneve of  an r a ry pi  i   we mes to d cs l w   wrg i   he ding heneve  neve th muh   t post reques as ts.  my undersn s ding is t prote. t cook as ies manag 3rd- app e&qu lication as  y e (e d by io c s are nt s p e&qu rotections h i ared  d y  by   , meaning  daa tha to t  rd y ses n s deal  to   n cookie gey s a posting re safe, a t nd no r appl i ication c i e n i k an r t d api-en s  s dpoit  t w hat e to  on rd  t. is thi o, s  o true? i  e y  w f so it , c  think da an i t  l m ink ark all my a s pi functio s ns   as 3ry   u csrf? are  geney n    best ts not th think e  wrg u an   rpose of csrf prote. my  thik   as cs by rf n s to pn should django   thik t direct posting of data to your site   of . (the  i i n otr  s lication  ws mark  sd 3r c ; srf). y  , the   client mt actuay p da os data t thr nt o it u (the gh an  ite a actually   hang of pproved sd  iew  pat , h, i.e. v muh  i.e. iew ts    pro & tet iew t i h jano   e fom p w  io ag think  and e, fill clt  it  it o, st no  the n api  (e  cli 3 i ry ent  da pry muh precl f u r des csrf, submit  bes a e is entire i'm  p all urpoe   think  i dea  pag dg  u best  l s  t gey view   heneve  t t an o allow r  3r  d-pt e y into  i  ent pretty ities to e b gh y  3ry ss a (the  and  s nd rf  me da  ta  n  ing  the on a  you i r just  s l ite (the o api-et ss-  u do ot r ; in csrf) da . so, yes, i think   as a undersn  ru csrf l i  's e  csrf). f  an prote. y api view sh    ou  ld be pro o t da et e   of  csr thik  th f exemp t   api jano  r t. o io wever, you  v should st t  has ill f ion w best c  ink that tic 3ry  to s a pu nd p jango rot   e &  quot;cro ry c rd srf csrf,   api-endpoit that act r ually   s i  a c an hang  ion da thas ta e  gh h some r  t (the t  m of authe is ntica,  best  csr such s  a   data r  s csr geney f  po ry g  is e 3rd-pt vent pu  ,  o th t ite  ink auth. "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 131, "text": "sql injection", "label": "ATTACK"}, {"start": 28, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 70, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "x bxxxx] s dxxxxxx,  bece e user can input something like [code], xxd the query becomes:[code] e  commands corrxxt way l  to avoid sql injection , no r wxxxh databae you xxxh  use, is to sepxxxe xxe data from sq  x, so tht d de, xxa   bxxx] , that  x wixl xxxs dxxa d will n , evxr be xd as comm t ands by th interprxxd e sxl  use, parser. it is possibl w d ith e t maxr o e xxl  xs xt will ate e mxxt alwa   the h y fo ine xxxxx will s shd  rpretd r somethg mad xxxa par, xxt if xxu  , dot fxxxy unxxxxxxxd  o the dxx s xxxx a , you shoxxd ala will ys posxxxl  xe pr alwa a cxn red  xxxe s  taxxxxxxs n statemet d parm statet xxd queries.  "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 348, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 421, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "s  o natu the r n ally they , i thougxt of juxt attacker  sxa hashi on ng it xi easixr   though  t    nc lly e we'r o e  using just using it for t  idexxxxxxxxxo n n.  t that xe proble the  problem m else  with  salting th  a sha, t i  s  so  xxx? t s use o  n hat  xxxxg ssns ht if    instexd a bcry n attac   of for    k xxe er a idexxxxxxxxxo   knows the problem domain (an ssn), of  txe xxe libxxxy  n t i h p ey can focus on that domain salti    ng .  s ssns  the o it's mu  c to  per-paxxe   salxxxg  the nt planni ixxxxxxxxxxxo ng  h easier  sit xxe e to calc instead ulxxe t   s on  can snx, he billion ss lxs xs  use xa fr xxxr than a vi c txxd a than n rtu  i  a  billixn  on re dom vxa xo lixg lly xg  calculate can   unl has   i focxs  but mited xxxxxr of passwoxxx.  we instead 're  i   know  nuxxxr i should use a site  the saxt hat  xxd a per-p probl per-pati e xxxxxt of   the  i s p bcry   a  roblem xxx, but is ther   than e anything  sha else i  nt  the can nt   th  at can  do to preven xa a ltixg t an attacker f  ro dom les    , xxn  . m rxxxxxxn ng g the ssn? xxxxxxxi xxxd en txe t   i  ins nt texd of sha, i  us  ing  t    xxs sal  xxxg he was planning on u atxxc  was sin   the g hat  bcry can p n t per-xxxxxxt  xxn  than ins ), ,    ey sixxe xxs  ru pxxxxxn . g by   has a go  od libxxxy and it xxxd the les sxxxxxxe p ixxs xxxxxxi knows e salting nt  coxxxxxxxy  then a a  com natu  lxs xxxxxt  nt , y nd xxxxxxg automagica  idxxxxxi xr library o catiox. i llx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 85, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 169, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pp ws ae a notable  ug. \"x\" x rea . h to ostil but e td  s  dixxxxxy n use pos a  to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url r  the s o s f  n ju t t e k f t  mt  \" exploit a b ma x in ug. reay   , the main e xf the xe xxxx  d b  to  do xxx xxy t too, but a weld poxxp a e  f s  xxn t te u dixxxxxy sr some  axd x of xy e  n o ot be dixxxxy a ug. d wih e impr, to     rea b e n   ps wxe d b to  y   y my x rea the xxy xy sits xs a wy o \"tp xs   \" s and o esxxy fore ad , trk  but  e. in s res, te si a y aspect of t explo y it he prx xxy xm rex wn y s e t  to  security e but   of te  a and  user' ma  g s co  nl ovxr i te r o imp esxxy r, wn i,  cor d r brg desires. the  "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 222, "text": "call your resource server", "label": "ATTACK"}, {"start": 252, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the difference between a refresh token and a non-expiring access token in means of security is one additional call to the authorization server.if an attacker gains access to your non-expiring access token, he can directly call your resource server and get confidential data as response.<br />now if he steals your refresh token, he first has to call the authorization server and receive an access token in response. then he can query the resource server for confidential data. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 50, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 78, "text": "read php files", "label": "ATTACK"}, {"start": 428, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it xo is  it s file hd s e fr so them meone to 'hack' an apache server and read php files n . i ud   tht xxp is a sere langu read age and cannot be rd fro to m ane otxr tha e uxd  n te ser, b xxxr ut xxxxd some uxxxxxxd oxe hak xe co acces xxd  serr d read them as if reading a te xs xt fixxs i    and f? well yes se ,  if xf thy v  er actuy hxxk   a xxy xxxo the se txe rr ( xo  be ssh, ftp e hard xx. e ),  the thy xxy hxe access to files on the hard disk. a xxo  perxy configured xxxxxe and  se shouxd rver wixl not serv (ssh, e w php fixxs thoxxx,  l xt sho php xxd always proces them with th raw e php ixt otxxr e sev te  m reading  ,  e xt for  e  have er f. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 179, "text": "dos ", "label": "ATTACK"}, {"start": 187, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is s d swor) (and r r  funct the ions xf xxe  much se f r  conxxg  set unn   s  e ad x) v xxxf sxt xg a    ulxxr 4mx.  lo c ad  set unn  a  a se  t  c e vxa 4m. r   a ? s ) ble t dos via maxed out post parameters ? pleas s e dos  also c coxxxg onsixxr sxt s e   r -wid l te s  xxs )  4m. e e config s fxxxt i s txxxxxs xf  e xt xp xm xg b. lo r xe  xd s e xs mxxh  ig is   set xxr ad ger n 4m. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 112, "text": "requests the form page first", "label": "ATTACK"}, {"start": 142, "text": "starting a valid session", "label": "ATTACK"}, {"start": 172, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 244, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i inherited some code that was recently attacked by repeated remote form submissions. however, the attacker now requests the form page first, starting a valid session, and then passes the session cookie in the following post request. therefore having a valid session token. so fail on my part. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 83, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 138, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e xf xxxe pe o txe m xxxx,  yoxxxe g t xxy m txxt rs under u t y  n xx) cn inject malicious code into the system  site-packages d obtain root privilege. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 15, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 176, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 311, "text": "recover those keys", "label": "ATTACK"}, {"start": 392, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 414, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " xxxxv  xr w t an attacker recover the secrets in that flash? xxxxxxr  i for  d y cn xxxz xe  r xs n e x the xp xxe ad t  genxxxl , t xe xd xe xe   xe xw nxxxl xxxxxxl  of  xe indistinct general side channel attack r . t   recxxxr t xxw d n r  xf   xxxz of y  neral d  secxxxs  o be   o  t  hxt t tg secrexs  o recover those keys?  xe e ve f xo s  or o   s  f  or f of or n  hxw  a d r to xw shave-down the chip r some kind of microscope attack the ? "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "no access restrictions", "label": "ATTACK"}, {"start": 211, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the access  load this server i this s norm access ally subjected to is mi i  can nimal,  to but since th nimal, e th re are no access restrictions,   restrictions, usly the server can obv to io can usly  can be attacked by dos etc. "}, {"sentId": 34, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 156, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "cou xxxn ld you xxxxxe list xm xxxxxxy e strat servx? egi som es  ld or evn approaxxxs you   xxxe xl xxxn ready  servi? xxxxxxd xo xxxxxxxc hxxe t es /mine ddos attacks xxn rel   b se? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 112, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 169, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you e yoursxf we e to e system ,  you're rig t ay prxxxxm thxt runs under you (nt necessaxxxy  pyxxn ) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 61, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "that could (in theory) be tampered with by a malicious user", "em2Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "PARENT"}, {"em1Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "em2Text": "that could (in theory) be tampered with by a malicious user", "label": "None"}], "entityMentions": [{"start": 228, "text": "that could (in theory) be tampered with by a malicious user", "label": "ATTACK"}, {"start": 396, "text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "ATTACK"}], "sentText": "i am  xn consideri n whxt  n  c  i c g unxxxxxx ut, xxxn whxt g parxs of infxxm txa malicious   i a  ti objext can  g c is   s. xn txxx  that  considerin xxxl ge n t ever  txxx object xxxxxxd xxa n (in  recei objext ved xxxxxx, that could (in theory) be tampered with by a malicious user  . o   i b consi   such c thi dex  xxg s    y  arefxl  undersx xn    txa xx i x,  of tx y a etwor whxt k, t the malicious user can inject an arbitrary r object that can be full of harmful code. bxt thi whxt s  consi is  b not what i am worxy u malicious  y nseriali i  b    oxxxxxx with . z arbitrary   i  ng   i  ng xxo from  c  xxxd u  t,  whx bxt t  t undersx  bj  ut,  be the c y bj  xxxe i can xi  xxn  thi t  x objext xxk i  ex that ecuting   can)  ut,  consideri prevent su y ch    conside with x am xxg   code from e nseriali dexxxg  ver xxxxxx i xx    g b  can r y c i t    from xxxl arefxl h bxt an c dling  etwor of the re  andling  c  x could , xxxn exxxd  x, o (i bj    ecxx. "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 258, "text": "reverse engineering", "label": "ATTACK"}, {"start": 393, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i a the m  then workg w   in on d applicati e on in client.  which i r require equire e d to  y execute few htt y ps  w n i   i orkg web ss  y to  so do that   l e  my webserve url d web api ky e in the code pl s us ip addres of e serv. whe m n ane do reverse engineering of y app then  to that n  guy can get my web to that   e l  url as w i ell as api y th the e applicati n n  y simy hit it using rest client.  the http to s  "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 112, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "  i am  if  mae p  laying  o wit ot x hexx.   h ima  ge way  s to a wx ? xxe ad i f  o g d   or  and d out t te decompression bomb attacks   th if xt  h. cn take plxxe vi  xx  m  whxn it's xxxx    xd  a vi lloxx [code] vi  d si  txxn sure  chanxe nce  t b   o  m uplo xs ad [co k de] filxs  xxe  or (and soe it  ot g h.  i e i am g fe g xo chanxe te xx uplo b i omx, x  d xd , i wx i  omx, t t   e o o  mae i  g  s  b a omb  x xxxx  i  x x uplo xe i n othexx. e   x t g  bece a vi  v xn ixxxm o wxxt f th image the  s  t  ad attack to . so xn it co so m [ es s  to c or  ca  n hec wxt k a g  thes  xxxx i e   f  and g if a wxxt  [    c  ] b   a d e ecomp a ression nd fe xs  the  xs a b or ox x  i if t , cn i ju xd st read     t f or il is e imag to e  te f upload ilxxs s and mae  and t  sure t  the   h  xd and he  ixxt  e a    r  e  a . nd not   me txxn t i the f he  b   t     i s bomb et xxe  x the xxxx, l a ixe 4x b  or xxxx e x0  g or wxx x xo  and ? xx  x  x to x? xd  is it a [ it's co e  wx de]  valid m t m o  p [ laying etxxx? xr t i take s th it's e t  betr way to  it's g g o? "}, {"sentId": 88, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "hacker get an access", "em2Text": "stole the user's cookie", "label": "None"}, {"em1Text": "stole the user's cookie", "em2Text": "hacker get an access", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "hacker get an access", "label": "ATTACK"}, {"start": 57, "text": "stole the user's cookie", "label": "ATTACK"}], "sentText": "solutions (how to prevent hacker get an access if he/she stole the user's cookie): "}, {"sentId": 50, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attacker can change the value", "em2Text": "generate his/her own sha-1 hash", "label": "AND"}, {"em1Text": "attacker can change the value", "em2Text": "add the random string", "label": "None"}, {"em1Text": "attacker can change the value", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "add the random string", "label": "AND"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "add the random string", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "add the random string", "label": "None"}], "entityMentions": [{"start": 84, "text": "attacker can change the value", "label": "ATTACK"}, {"start": 118, "text": "generate his/her own sha-1 hash", "label": "ATTACK"}, {"start": 154, "text": "add the random string", "label": "ATTACK"}, {"start": 530, "text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "ATTACK"}], "sentText": "it would be better to store the hash on the server-side. it is conceivable that the attacker can change the value and generate his/her own sha-1 hash and add the random string (they can easily figure this out from accessing the page repeatedly). if the hash is on the server-side (maybe in some sort of cache), you can recalculate the hash and check it to make sure that the value wasn't tampered with in any way. i read the question wrong regarding the random string (constant salt). but i guess the original point still stands. the attacker can build up a list of hash values that correspond to the hidden value. "}, {"sentId": 4, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "potential attacker is able to change code", "em2Text": "application from being modified", "label": "PARENT"}, {"em1Text": "application from being modified", "em2Text": "potential attacker is able to change code", "label": "None"}], "entityMentions": [{"start": 124, "text": "potential attacker is able to change code", "label": "ATTACK"}, {"start": 287, "text": "application from being modified", "label": "ATTACK"}], "sentText": "and also whate  ve to y well sad b y y  cant @inaz to aruk: we protection ver you also   also do to  y code, ou your cod, a potential attacker is able to change code prote there ction  n  ce y  poten b tial wy se or he finds it feasible. u bas tial icay can't p we r ve otect  , l  r b  application from being modified. and any pt code, ecn you in  put in there n be disabl  is can't ed/r. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 49, "text": "leak the database table", "label": "ATTACK"}, {"start": 117, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this aph provs defense-in. if someone manages to leak the database table, it does nt give an attacker an open door r impersonating users. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 700, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 803, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 3, "text": "xss", "label": "ATTACK"}], "sentText": "th xss e company xxo hosts our site revxxw xxxxxt s an  ou  r c xxxxxxn xxe xxxxxe dxxxxxxxg - xxxy xxi 'xe rxxxxxxy to xxn ld us this:hxx xxxxxy l st e xxxxs sh it xxxd never be  tol xxxxxo ou w d  it directly m us ani the pulaxxx, xs that opexs us up to potential xss  like  thxxxxe xxl an es. instexx, a up  xxxl lways  instead, us tol e a dom api t dom o xxxxxe elemen xxxxxxd  if txxxxxxxt  use cxn be you   us create  xxxxxy you  x hoxxs r the xxxxxt dom xxi re m view s.xxr won't  x opens xxxxxx, instexd of[code use xxs txxs xxxxl potxxxxxl y true? can anyxxe give us an xxxxxxe of an xss xt xxs xxxk th us create  at cxxxd ex d  om xxxxt an xxxl strxxg xxxe sxxxxt    the  xss fixxt one? if [code] is somehow modified, it might co prx xxxxn sometxxxg  xxxxx] like this: t   to hat  xss api 'll mess up your html and inject a script: if you use dxm manipulat they'xe ion to set the [co elemen xx] axxxxxxxx, t ed, he sxxxxt (xr w xxe hatxxxr  might xxxxr xss y txxx? ou uxx) wxxxt xe e the xecut the ed, as xxxxl  m be p won't rx e xxxxy xxxxxxd xy the dom xxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 149, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 236, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp wix clxxk xxxs   xxxx. to xxe a no to xxxl xxxxxxx,  and e xxxxxxxxx xxxs \" xxxxxxxxx xe that  . hxxxxxe  dixxxxxy sites cxn use be  pxxxxs xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url xxr xxxxx  xs even ju be st the clixk itxxxf might xxxxxxt a xxxx.    and d yex, the mxxn pa  g pxxxp e xf the  etx. xx d txxs o xe f xh aspxxt e rom  xxxxd do xx xxx  x hxxxxxe p x xxt t to axxxxxxxxd o, but a well xt -crafte cl o ick d pxxxp xxn dixxxxx xx t xxe xxxr a  click  axd xxy  fxo a  xn pxxxp d m xxt be dixxxxxy  xxy asxxxxxxxd wixh th  e xxxxxxe xxxn pagexxxxxxs wxxe xxxxxxm  exploxxxd by xxxy uxxxxxx thxxe y si  tes xs  exploited a wa of y xo xxxxp xe \" usxxs xxd to esxxxx xx xxxxy for xxxh ce ad im  xxxxxxo not nx, xxx. xn txxs rxxxxxx, the secxxxxy axxxxt o through f txe  xxxxxxs probxxm rexxx xxxxr y i xxxxy s txe se xxxxd cxxxxy of txe us a   exxs con with txo  l xxxr their  by own compxxxr and xxxxr xxs  xxxxxxxg dxxxxxx. "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 193, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 448, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 484, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "i'm trying o have a look at how gmail or k are implementing this functi. i can see some ce like 'prese' in fb, others in gmail.i'm not too sue if they use some othr trick to protet agat some t tries to impersonate some other user. il try to impersonate myf using sg like [link] to se if e oy using a specific token to remember the user. if they ae it s to me like a big security issue. maybe not fai don't e of i) but with gmail if you don't st '' an http connection will be used and it will send your unencrypted tokens over internet.what do you think?   maybe not facebook(i dt care of it) but with l if you t set 'use as htt' n http connectin will e used and it will d yr unencrypted tokens ovr internet.  what do u ? "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 351, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 410, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " ou xxxg xd wv pc e he e d a  rxt st an y cont to p able erfo s rm a  a  n pentest on u d r aa xxt s c ip t from s xxa e d) ad t from  t e a r e er able t on our seu  rxxy flaws  d xd txe e  ms xxxxxr to xd o  i aw cats it.  wad  d . t it her rt wd  t us t we he xxp tixm xd p n e , ad xxm what i'e read t t xl pret xxs he is, xt w prxc tios t d oud  allow an attacker to predict boot time of the machine thxs being able to grant control over it. "}, {"sentId": 82, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "write to the task queue", "em2Text": "pown the worker processes", "label": "None"}, {"em1Text": "write to the task queue", "em2Text": "writing malicious pickled objects", "label": "AND"}, {"em1Text": "write to the task queue", "em2Text": "running tasks serialized with pickle", "label": "None"}, {"em1Text": "pown the worker processes", "em2Text": "write to the task queue", "label": "None"}, {"em1Text": "pown the worker processes", "em2Text": "writing malicious pickled objects", "label": "None"}, {"em1Text": "pown the worker processes", "em2Text": "running tasks serialized with pickle", "label": "PARENT"}, {"em1Text": "writing malicious pickled objects", "em2Text": "write to the task queue", "label": "None"}, {"em1Text": "writing malicious pickled objects", "em2Text": "pown the worker processes", "label": "None"}, {"em1Text": "writing malicious pickled objects", "em2Text": "running tasks serialized with pickle", "label": "None"}, {"em1Text": "running tasks serialized with pickle", "em2Text": "write to the task queue", "label": "PARENT"}, {"em1Text": "running tasks serialized with pickle", "em2Text": "pown the worker processes", "label": "None"}, {"em1Text": "running tasks serialized with pickle", "em2Text": "writing malicious pickled objects", "label": "None"}], "entityMentions": [{"start": 265, "text": "write to the task queue", "label": "ATTACK"}, {"start": 305, "text": "pown the worker processes", "label": "ATTACK"}, {"start": 334, "text": "writing malicious pickled objects", "label": "ATTACK"}, {"start": 411, "text": "running tasks serialized with pickle", "label": "ATTACK"}], "sentText": "but this doesn't solve the security problem.  even if tasks are serialized with json or similar, the workers will still execute tasks inserted into the queue with pickle serialization -- they just respond to the [code] parameter in the message.  so anybody who can write to the task queue can effectively pown the worker processes by writing malicious pickled objects. how can i prevent the worker threads from running tasks serialized with pickle? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 620, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 673, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " a  d procs ca  n   e x c x. s p  l  xr  d ss    s   e e     the  you te  t   n abl   a  r d e  d  t e y   kc y    xu x, e kc     d x e r n    r e a if l    e  e r   t d [c  d n  d  s   u     d  d x c  xx. .  y   xm id u c t if    te e a can  l  e ,   s  n  c ca  n    x a d o p n      n  d  x     u s  ts   e   s  id dump  d e   s   e ts . t   r o  s t t n   e xs  m  n   f s   o  o xe  x a x u  n n e  [c l   cx x.   trs s t   y th o e  xe  e x    oe  d c t  n rex a t [  c      x  x n xx  xxn yu  st  s x  n r e s ,   ar st   xc   rs  x  d x  d txe   c dat t a  dat  x   n  x  cn r  xx  x a  n s u    y e o y xxx, xf another process can dump memory   e n e  x.  a ,   s no way you can get rid of the data n  bf  e s r  e t  [ r l x   i]    yu c st cr r   d s  t o e e f  rs    ab  l    e     [ n c t l   s   t c  x s  n e k f  c o  c l    r  e no  ks   xp  e   t e  . o  "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 26, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 69, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 214, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my question is, since the post data is sent over curl/ssl, can it be intercepted or stolen while in traffic? can the hacker view the session id in plain text(the most important component here)?  you do not want to implement this with php because this is easily achieved with webservers alone. your server a handling ssl ([link]) can act as an [link] and as a [link] to server b. it's a common setup to divide responsibilites between servers. research these topics please. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 134, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 156, "text": "spam", "label": "ATTACK"}, {"start": 162, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "m ay work a ing on a p prt tt l fxxxxe a ug  use wxxt r  xxxx s, x]  100 sym (xxxxxd lost d xo e) and i tk th . at thxs y be vey ve o brute-force attacks r spam (send a password to someone's email like 1000 times, et. ue  x 0 x  d r fas and y). do o e da m y's wxx j xs (a, iix)  u  witht ha ign t ore ve   some so inp  xt t of built- a   in xe againt b hoe rutt d be h ir e  . bext way xo xxxxt n axxxxxxd s, i xxxxd f  calld i e way xxx: wxxt a page e t ae he   no  99%  i'm  be it t be able to be calxd mo just e than two just  s a , e xxxxx, r an e o n t ad xxr pae my be called up to 0 timx xxh s a xx t wt he xxxe r s. users wh  1 h 0 xxt 0 page  00 0 s w a t  r x what e it and  xxxs wl be fine. uxxxs t s xxxl jut hxe to f t oxxx  simxxxr (and w the six or xe in. sa axd ms l fall  automad xxr it knowing  and l themselves. v. automatic faux va.   -ca wt ptxxx: this is  up simxr to the abox wt .  word ad an t x xo xd xxxh a lxxx ug l sayxxg x] (for exxx. ug  the j i a e  ad  calxd x h (d is xxt (and w tt  ug ing tt mt  an , d auxd m bos t be rung js), he the fied   (d  an i d popula et. e i you t with . if the sm . id form xxxt he e mi or c word xxxx it x, t the hxn xxxe it. u e xs wh   js won't see it xxd will in.  be fine. s withu xxxt t js wi be  x two xxxxs ll just have to e     p d ae w e x e e in sg xx. spamboxs wt know wht of  to o d x i   to a u n ignoe te pt r  e. in. this wil called  xx yu xx  d l safd yo wont u m 99. xe x% of m a ad spam . t t wot x, n n xxe slix, is x r xd yxu a spambox hie s or  gaxxt a pa xxx: ge  tr a it utomad xxxxd . e cod ce t  e t, ir t to avo paxe id te t or always fill in te correc js t va.  "}, {"sentId": 36, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "have access to the database and code", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "have access to the database and code", "label": "PARENT"}], "entityMentions": [{"start": 625, "text": "have access to the database and code", "label": "ATTACK"}, {"start": 84, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "update: please note i am not asking what a salt is, what a rainbow table is, what a dictionary attack is, or what the purpose of a salt is. i am querying: if you know the users salt and hash, isn't it quite easy to calculate their password? therfore, a dictionary attack from a hacker who is worth his salt (ha ha) would simply run each keyword against the stored salts in the common combinations listed above. the only thing i can think to do is have a secret blending algorithm that laces the salt and password together in a random pattern, or adds other user fields to the hashing process meaning the hacker would have to have access to the database and code to lace them for a dictionary attack to prove fruitful. (update, as pointed out in comments it's best to assume the hacker has access to all your information so this probably isn't best). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 56, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 141, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wi e s xxxe  e a e \" .  reax into y e s cn e poxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s en t migh and  on t   those xe t t     c a  . k if might et a xf  .  y, e n pxxe xf t  . in he xxxe d do xt to, b mxn ut a  people wxx  t a imp t  nd xd p n t t  the ur d a  x t xy ,  t be dy ad  e  u h wxxxd  te  poxxs xxe mxn s e d y y xxx e xy sites xs   a y o f  \" s d o exx . y e  en  te d , exx. in s , t f e sy t xf e  ick xxm rea uxs x  y i u  x  ser on to  s  cl c icking s e sy f e uxs c t or o x xxx x t xxm o x might xl or thr on xxx   e x uxs xxxxxr a im . p \" ortant d xxxxr b tr a ick  uxs rowsig . "}, {"sentId": 145, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 89, "text": "forged request attacks", "label": "ATTACK"}], "sentText": "i'd like to make it both easy to use from client-side javascript apps and secure against forged request attacks. is there a best practice to follow here? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 40, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 67, "text": "read php files", "label": "ATTACK"}, {"start": 546, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "s p  language  t l is e  y o on r se to 'hack' an apache server ad read php files.  f  d i  fr s om un  dd th  to apach t  an f d p is  s a  a serve-  e a g apache e nguag  fi? m e  a e   lways and   e  cat fi w l?  be rd r php m ane ot  r tn e se and v ra  a er i , b the ut could  . e  e k te o  serr and d  d the etc.), m a    s  be f readig  rv a  n r d t ser, ext ? well , if   php  te m y   r y ever at y y  se, ae d     a te  rea yes, d c    k i php o  on   n  i   e te server , p etc,  frm ty ma l s ws y  th them ey   h pp a b pr   a ve access to files on the hard disk. a t pol han   s ad hd o aca se y  f? pl n y cf a s d   i fo r m on   not gurd   aph apah  e e s could erver wil not se raw rd   the rve ra  php  apache  w a  ser from r  pp  the s poe  apace  ver err  ,  f r , s ils tho ocess h pp , i is t sho ext l ,  ay d  h is  s   a  r  h on n h y e ocess m h e p i coul on d r f co y nf  a apah .   s   readn  g . "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is check i ing re referrer quest  the  enough referrer enough   to p  rotect against a cross site request forgery attack? i know  the the  the referrer   can be spoofed, but is th rk? ere any way for   the attacker   to do th referrer at  for for the but  clie be nt? i know tokens ar  that i e the no do rm, but would this  token referrer s wo forgery   rk? "}, {"sentId": 123, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "send something like [code]", "em2Text": "executed on every client browser", "label": "None"}, {"em1Text": "send something like [code]", "em2Text": "a xss vulnerability", "label": "None"}, {"em1Text": "executed on every client browser", "em2Text": "send something like [code]", "label": "PARENT"}, {"em1Text": "executed on every client browser", "em2Text": "a xss vulnerability", "label": "None"}, {"em1Text": "a xss vulnerability", "em2Text": "send something like [code]", "label": "None"}, {"em1Text": "a xss vulnerability", "em2Text": "executed on every client browser", "label": "PARENT"}], "entityMentions": [{"start": 13, "text": "send something like [code]", "label": "ATTACK"}, {"start": 47, "text": "executed on every client browser", "label": "ATTACK"}, {"start": 118, "text": "a xss vulnerability", "label": "ATTACK"}], "sentText": "but when you send something like [code], it is executed on every client browser. how can i be 100% sure of not having a xss vulnerability on my chat? "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 61, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if yo hateve u are concer essary ned g  with the first case (someone posting malicious data to/as another user) the solution is t hateve he same whether you a you re    the usin   -- g ajax or not -- you (someone  data  just hav means e to auth to en w ticate the user through w have hateve -- usin  r means is nec is essary     -- usually via   session  is  -- cookie. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 52, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "csrf", "em2Text": "automated attacks", "label": "AND"}, {"em1Text": "automated attacks", "em2Text": "csrf", "label": "None"}], "entityMentions": [{"start": 57, "text": "csrf", "label": "ATTACK"}, {"start": 66, "text": "automated attacks", "label": "ATTACK"}], "sentText": "i used new session for each page as defense against both csrf and automated attacks. lets say we have forum that uses ajax to post threads and its validated by php session. every thing works fine until the user opens page.php?id=456 on another tab, the ajax returns 'invalid request' on ajax.php?id=123 [link]. they suggested to use only one session hash all the time, until he/she logs out - only then the session is regenerated. if the token is the same user could simply bypass it and do the automated attacks. any ideas on that?  it sounds like your objection to letting the session stay open as long as the browser is open is the issue of automated attacks. unfortunately, refreshing the token on each page load only deters the most amateur attackers. this method of changing the token on each page load would do absolutely nothing to stop someone who actually wanted to attack you all that badly. therefore, since the token has no effect on automation, focus on its effects on csrf. from the perspective of blocking csrf, creating one token and maintaining it until the user closes the browser seems to accomplish all goals. simple csrf attacks are defeated, and the user is able to open multiple tabs. the first token will stay the same until the browser session ends. this token exists to prevent csrf attacks. any submission from this user with this token will be accepted. this way, if i open a tab to form a and a tab to form b, each one has my personal anti-csrf token (csrf taken care of), and my one-time form token (form resubmission taken care of). both issues are resolved without any ill effect on the user experience. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 168, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " x e xx xxxp   wx xxxk xxxs   bu.    m xo are a no to xxxl ,  and e x s \" xx e th  xt  . hxx r xe  d  xs asd xt  y  k t y s cxn uxe x.  xxd    b p  sxe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  e xx ce f h \" t t a \"  .    and d yx, txe xa  e xxxx. in pa   to g poxxp e  proxm f e  xxx.  xxy  trk te  s o   y  xx d txxs o y  x l e f xh xxxt  pop b  e xxm  d xo x pxx  xo  x hxxxxe p x x r a om xt  fro t o a   e k  x xxxr xd o, xxt a l t xxxe xl o ik d pxxxp x xxy n d se i xxxd xx d xxx x t t . e r a  c trud k  ad xy  xxo a  n p d  . m y,  xxt b xxx   xxk  asp  ext o  xt   of  f  c txk xxxe . e x  d  iy  xy xxx xx  xx d h h  e xxxxxx p ixt  e  clik xn  y xxg k s xe pxx xxr m asxxt   x xn d   e  by my uxxxxxx txxxe y si  tes xs  xxxd a a of y o x h  fo s r  xxy xp xe \" us h s xx e  d   d   to e   \"   xxxxx xx x xp xy fr xh ce a e d xm  xx m xxo xxt , . n a  ts xxx,   t  he sc  x xp xxxy t o  t thru p xh   f xxe  s   xm rxx r y i xx  x it be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e s a   oe  s n xxxh trxd  d  txo t   l xx dy  x r xr  by on cxm a xxx y r d  x te s r xxs  xxg xxxxxxx. "}, {"sentId": 64, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 37, "text": "replay attacks", "label": "ATTACK"}], "sentText": "the majxr sexxxxxy flaw i can see is replay attacks. xxw do i prevent someone xxxm getting ahold of that encrypted string, and posxxxg as that uxxx? i know i cxn uxe ssl to make it harder to xxxxl txxt stxxxx, and maybe i can rotate txe encxxxxxxn key on a regular basis to xxxxt the amount of xxxe txxt the sxxxxg is good for, but i'd really like to find a bulletproof sxxxxxxx. anxxxxy have any idexx? does the asp.net vixxxxxxe prevent replax? if so, hxw do they do it? if you haxh in a xxxxxxxxxp along with the user name and xxxxxxxx, xxu can close txe window fxr rexxxy attacks to withxn a couple of secxxxx. i don't kxxw if this xxxxs your neexx, bxt it is xt lexxt a partial solutixx. "}, {"sentId": 55, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uses an unsafe [code] extension", "em2Text": "break [code] ", "label": "None"}, {"em1Text": "uses an unsafe [code] extension", "em2Text": "inserting different elements with different [code] instances", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "uses an unsafe [code] extension", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "inserting different elements with different [code] instances", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "uses an unsafe [code] extension", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "break [code] ", "label": "None"}], "entityMentions": [{"start": 15, "text": "uses an unsafe [code] extension", "label": "ATTACK"}, {"start": 50, "text": "break [code] ", "label": "ATTACK"}, {"start": 66, "text": "inserting different elements with different [code] instances", "label": "ATTACK"}], "sentText": "xxe xxxe below uses an unsafe [code] extension to break [code] xy inserting different elements with different [code] instances: "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 153, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 251, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 335, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": "but, s there ay to steal hy c, with xxx? (ig the xn of hty sxxxxxe xxxxxr ix: yesxa subt xf xxs is known s [lin] (or go to the l [x. xxxs atxxxk has txe xss payload send an http trace request to the web server (or [link], forward or reverse), which l echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookiesxx. "}, {"sentId": 29, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone will copy the embed code from one site", "em2Text": "put it on another", "label": "AND"}, {"em1Text": "someone will copy the embed code from one site", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "put it on another", "em2Text": "someone will copy the embed code from one site", "label": "None"}, {"em1Text": "put it on another", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "someone will copy the embed code from one site", "label": "PARENT"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "put it on another", "label": "PARENT"}], "entityMentions": [{"start": 59, "text": "someone will copy the embed code from one site", "label": "ATTACK"}, {"start": 110, "text": "put it on another", "label": "ATTACK"}, {"start": 753, "text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "ATTACK"}], "sentText": "the security concern  behalf the  i have is tha unique t   someone will copy the embed code from one site and put it on another. be  each pa unique ge/ will site combination that impl developers ements my script/if of rame  each is go the ing to have a  site unique id that the site's developers will gen te. erate fr was om an  are   security  authenticated acc enemy ou site. nt with.  on my site ing .  i then  u with s t ers supply th their em with the appropri helpful, be  ate embed code. i read [link] wh one ich was ver  y different  helpful, but my use case is a bit different since  bit i'm actua te. lly go sit ing t  o pop up go  c o onten  security  t for users to rea an d  interact with. i'm   pa  th their e  use have rs concern is that an enemy of the site hosting my embed will deceptively lure their own users to use the widget. t pa hese use on  but  e.  bit rs will belie u unique nique t  ve they are interacting with t  te.  my site on behalf te.  of the  the from  enemy sit own e but actu  ally  supply be interacting on behalf of th will e friendly si int f is o si r eracting t each someone  e. "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 124, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 201, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is using the method below a bad choice? it generates a random number between 0-1000. since there are only 1000 options, and their md5 hashes are known, it should take an attacker just a 1000 trials to verify the account without it really belonging to them "}, {"sentId": 46, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "database is stolen", "em2Text": "control of the user's computer", "label": "None"}, {"em1Text": "database is stolen", "em2Text": "read their cookies", "label": "None"}, {"em1Text": "database is stolen", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "database is stolen", "em2Text": "server is compromised", "label": "None"}, {"em1Text": "database is stolen", "em2Text": "grab the json file from the server", "label": "None"}, {"em1Text": "database is stolen", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "control of the user's computer", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "control of the user's computer", "em2Text": "read their cookies", "label": "AND"}, {"em1Text": "control of the user's computer", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "control of the user's computer", "em2Text": "server is compromised", "label": "None"}, {"em1Text": "control of the user's computer", "em2Text": "grab the json file from the server", "label": "None"}, {"em1Text": "control of the user's computer", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "read their cookies", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "read their cookies", "em2Text": "control of the user's computer", "label": "PARENT"}, {"em1Text": "read their cookies", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "read their cookies", "em2Text": "server is compromised", "label": "None"}, {"em1Text": "read their cookies", "em2Text": "grab the json file from the server", "label": "None"}, {"em1Text": "read their cookies", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "keylog their password and log in", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "keylog their password and log in", "em2Text": "control of the user's computer", "label": "PARENT"}, {"em1Text": "keylog their password and log in", "em2Text": "read their cookies", "label": "None"}, {"em1Text": "keylog their password and log in", "em2Text": "server is compromised", "label": "None"}, {"em1Text": "keylog their password and log in", "em2Text": "grab the json file from the server", "label": "None"}, {"em1Text": "keylog their password and log in", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "control of the user's computer", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "read their cookies", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "grab the json file from the server", "label": "None"}, {"em1Text": "server is compromised", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "grab the json file from the server", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "grab the json file from the server", "em2Text": "control of the user's computer", "label": "None"}, {"em1Text": "grab the json file from the server", "em2Text": "read their cookies", "label": "None"}, {"em1Text": "grab the json file from the server", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "grab the json file from the server", "em2Text": "server is compromised", "label": "PARENT"}, {"em1Text": "grab the json file from the server", "em2Text": "access the decrypted file as it's being processed on the server", "label": "None"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "database is stolen", "label": "None"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "control of the user's computer", "label": "None"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "read their cookies", "label": "None"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "keylog their password and log in", "label": "None"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "server is compromised", "label": "PARENT"}, {"em1Text": "access the decrypted file as it's being processed on the server", "em2Text": "grab the json file from the server", "label": "None"}], "entityMentions": [{"start": 353, "text": "database is stolen", "label": "ATTACK"}, {"start": 936, "text": "control of the user's computer", "label": "ATTACK"}, {"start": 975, "text": "read their cookies", "label": "ATTACK"}, {"start": 1018, "text": "keylog their password and log in", "label": "ATTACK"}, {"start": 1544, "text": "server is compromised", "label": "ATTACK"}, {"start": 1601, "text": "grab the json file from the server", "label": "ATTACK"}, {"start": 2001, "text": "access the decrypted file as it's being processed on the server", "label": "ATTACK"}], "sentText": "the current process for encrypting the data server-side i plan to use is based on [link]. summarised, it advocates encrypting each separate user's data asymmetrically with their own public key, stored on the server. the private key to decrypt this data is then itself encrypted symmetrically using the user's password, and stored. this way, even if the database is stolen, the user's password hash needs to be broken, and even then the process needs to be repeated for every user's data. the only weakness, pointed out by the author himself, and the main point of my question, is the fact that while the user is logged in, the decrypted key is stored in session storage. the way the article suggests to deal with it is to just limit the time the user is logged in. i thought a better solution would be to store that key in a short-lived secure cookie (of course the whole process is happening over https). that way, if the attacker has control of the user's computer and can read their cookies, they can probably just keylog their password and log in, no need to steal the database, while even if the attacker gains access to the server, they cannot decrypt the https traffic (or can they? i'm not sure.) my current plan is to write all this data to a json file, gzip it and upload it to the server. my question is, how do i do that while ensuring the security of the data? naturally, the upload will happen over https, and i have an api password in place to only allow authorised uploads, but my main concern is how to protect the data if the server is compromised. i don't want the attacker to just grab the json file from the server while it's being processed. one idea i had was to get the server to send me a list of public keys for the users, and perform the encryption in my software, before the upload. it seems to me like that's the only way of protecting that data. i could encrypt the whole json file, perhaps with an api key or a special password, but that's moot if the attacker can just access the decrypted file as it's being processed on the server. is that a good solution? as it happens, i am working on a similar system to encrypt personal details (email, ip) in wordpress comments, so that if the server is compromised, sensitive data in the database is still encrypted. storing an assymetric decryption key in the session was out for me, since this could leave the key on the server for an attacker to grab at the same time as their compromising it. "}, {"sentId": 17, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "[link] ", "em2Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "PARENT"}, {"em1Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "em2Text": "[link] ", "label": "None"}], "entityMentions": [{"start": 17, "text": "[link] ", "label": "ATTACK"}, {"start": 33, "text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "ATTACK"}], "sentText": "there's means of [link] whenever malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed. "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 105, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 156, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 232, "text": "extracts it", "label": "ATTACK"}, {"start": 261, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "bt wt   if  d a  ue xxxxxxxu   f s s [l xo ixxx?  e sxxe  xxxxt w xn xl f t  l a  k xxxxxxu e  f  pe a t make some simple get request (by [link]) in r  t o download the page containing the antiforgery token in a hidden input field, extracts it   se , an what d use it to make a valid [link]?  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 43, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 126, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws e a xe \"\" xxx. e sites n ue ps to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxxs en just the clxk f might exxxxxt a buxx.  , txe xxxn page xf e xe d o xxxt too, but a wd p xxn t the uxxr axd xxy not e dixxxxxy axd h e xxe n s wxxe d y many uy ss s a y to \" s and to esxxxxy xe xd imx, etx. in txs respe, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf e user's contrl r r on xxxxxxr d r bg desi. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 105, "text": "dos ", "label": "ATTACK"}, {"start": 312, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs maxxd   otxxr pxxxxxxxxv  xt s  upxxxd eri sxxe fy() out  ( saxe an  d s xi uxxxxd te-xxxe os  ituxxx dos xn param al t of xxxxxe s  ( etxxs s  xxxxr funcxxxn maxed s of th s e sa  xxs  me fxxxx same xxn set) xxxxx ( set te-xxxe ) o   r dos ab post l the st  e xxxx e n  sam  e con  xxg st d xt os vi param a maxed out post parameters ? xxxxxe als a out b o cxxxxxxr  ab the  sxxxxxxxe c again onxxg sxxx ( xt l func again xxxn e ixxs of poxt upxxxd sizes xxxh lxxxxr t post han  s ( t 4mb. "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 468, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cc o  i k e i m e ime g  xxs    jpxg for e     t m xs xxe   t f mim g    xxe ye u  plxxxxd txe   of xxx p  n d   eg e     i xf    ey  f n  t   fed e  axxx p i hp i xxr s t   mixe x a  maxe xo s xx  xxs    y ey x o x me t as   i  ix xxxxxxr e  f e m  ar    mxxe  fr xs  d   i w    xs ex i ampe      xxn    f  xr fr  p  i oo s  c    i  hxs  the m ch m eci e a  t  fd matxxe  of xxe  n b xm f    x  xo e e sp  oo  fed xs .   ng  te d th chec   d ki  xs e a  f sxxe r xxn upload a php script with for example jpeg mime type.   xxe xxxxg   xxx  t  o  t s xxr  mxxe d   xo    fr mi  xd xs   xo cxx  y cxxc  ime x xxr k xxe m  e  fi w l x  xo  of e e r x    .  e a  s n c  xx  fr o t  txe i  jxxg  fxr  j p   e   xo e.    xg o n maxe  xf   x e x y e of the d xxe   mae fix as e x  xn eax ec  ki y jpg   xxx. xxr  xxxd    d x   xr xxe su y   r t e it  i x   i xxe    f x x. xd to  fe pp d   ki   m  e  e d x c m c  ki s    ma ch  e d  p xxi  is x fxr xt  ke f      txe   m f m tp x e. e t of . a  xo  xl  e  c of t t    xi  s  t  as hs  x xg  s x exxxxxe  t i  xxxe  fe  d ype. x e    t ar y t pe.   xg t  xxe uploa  of of  e  i xxx xi e m xxxy e   d xxy n     t  i is broxxxr e  xxxxxx. "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 555, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites that i created a l a s  og te ago  r and t sparke  d  i my ur  interese error is that it  v co, an fs when at if teg o t a query strg parr to a e n int.  yea, i that  know that  its bad co, i e i query t many it  ye is ars ao ; when ) say, for exampl co, , you have writn r ow cre r ate n for attacks  in um know  software. you    a have put the  in lots f val the idan f  o to r e  when the  de  the att fs  when acks tails  know  a a. ttacks ur ws posts to p teg   e  revent xss attacks  de crs ath and s, but your van is f crs a. details  if a mak  hacker cn bg up the ysod when they mak the e a , the k trae th fs e  s it h  o a yea, nd wn fs  could poy show th in i   i  int. em  ur the crs in r v o r r alidation d exploit t and hem to create xss a query ttacks or obtain member detail the s r  r s and  que a ry . "}, {"sentId": 90, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow attack", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "jump to where the attacker wants it to jump", "label": "PARENT"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "write directly into the memory location for [code]", "label": "AND"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "write directly into the memory location for [code]", "label": "PARENT"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "later on when your code tries to call [code]", "label": "PARENT"}], "entityMentions": [{"start": 54, "text": "buffer overflow attack", "label": "ATTACK"}, {"start": 91, "text": "read into [code] there's no overflow protection", "label": "ATTACK"}, {"start": 152, "text": "write directly into the memory location for [code]", "label": "ATTACK"}, {"start": 204, "text": "later on when your code tries to call [code]", "label": "ATTACK"}, {"start": 258, "text": "jump to where the attacker wants it to jump", "label": "ATTACK"}], "sentText": "doxs such xxxxxk xxxxs to be cxxxxxxxd wixh a xxxd of buffer overflow attack? and whxn you read into [code] there's no overflow protection, xxd yxu cxn write directly into the memory location for [code]. later on when your code tries to call [code], it will jump to where the attacker wants it to jump, xxxxxxxxxy wxxxe xxxy xxxxxxxd exxxxxxxxe code inxo your apx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 70, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "PARENT"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "target site be malicious or be compromised", "label": "PARENT"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "grab details about the user", "label": "AND"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "the user is running a local reverse proxy to access something", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "any services running on a user's machine could effectively bypass the [link]", "label": "ATTACK"}, {"start": 144, "text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "ATTACK"}, {"start": 284, "text": "grab details about the user", "label": "ATTACK"}, {"start": 539, "text": "the user is running a local reverse proxy to access something", "label": "ATTACK"}, {"start": 798, "text": "target site be malicious or be compromised", "label": "ATTACK"}], "sentText": "the risk is that revxxxe  any services running on a user's machine could effectively bypass the [link] f  the xxxs or yoxr s xxxxxe it about e. a malicious or compromised service running on the user's computer could make that request via the user's browser txxg for et   rev and txxn grab details about the user, b   xxxs e wxxxd cauxe their xxy  autxxn rev could erse ticxxxxn cookie w  xxl xe pass xxxxxs ed wit if h the  xxxr xxxxe that st. a if soxxxxxn throuxh g.  not tication her xxxxxr cxxxd io xxxt  site could put you xt rxxk if the user is running a local reverse proxy to access something. br  this xxxxd ena xxxxe ble t xxxxxxxs he tarxxt s will it rxxxxxe e to com br for owser xxu then   xxxxxxe the usxr compromise do  m tication xxn d  through yoxr bypass s, shoxxd th to a with t target site be malicious or be compromised xc be xxxx. . this is be xxxxxs cxxs  target xxxxr  .  odex. t  e the us this er would be accessing the targxt site xxxh a do txxg mxxn o xxe f xxo bexxxxe w  il you l  de]. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 44, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 70, "text": "read php files", "label": "ATTACK"}, {"start": 380, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "s it ps se, sible for som wh eon tt e  d to 'hack' an apache server d read php files. i u  s es td tt php is my  a d p e lan if gu e age d cant be red from ae or n the se, u if et  t coud e hack t for h t e s pp p  e  rver d d them s if reag a tt fi? p  wel s d , if they e somn g e ver au n ally  as k o e server   , fp et them c.), i from ge thog l , d  fi wil l t s  thy may e access to files on the hard disk. a y confi canno to t gured apache m  sr wl not sere raw  php p file , s t hk h, apache   e i and t sl a d as  , ps tm wih the p the p inte p rprer  c.), . "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 81, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playxxg with image xxxxxxs to a wxxxxxe xxd i f and oxxd o  out about these decompression bomb attacks thxt  xxn cxn xxxe plxxe xh d xn it's alloxxd to upload xxxxe  a xxxe ] xxxxs (a xxxn nd soxe othxxx. since i xm going xo c or haxxe w l ay   so  am   wh [xxxx] xxe x x xxxxxxd imaxxx i , i xxxt to make xxxe i don't become a vixxxm xf this xxxxxx. so xxxn it sinxe  comes t found o  boxx, checking if a [code] fi xxxe l wh e xs a  bomx, bomx, can i  can j thxt us checkixg alloxxd  t rxxd the fxxxxs hxa ar  (a taxe e de better xs and  xx xxxe suxe  x plxxe s that   xx maxe xxh an xr d heix checking x i t  hea axe    alloxxd not mo comes re txxn  checkixg txe set x to xxx wxxt   x, lixe xxxxxxxx0 or wxxxxxxx? xs it  betxxr a v bomx, al f xxxxxs  id mexx whx going n xx? xr whxt is t wxxt he better way to go? "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm w t att to a cas ck? o f xxd  xs i xxxxd le know  to w if   it   hxs y build-in mc a hanxxm t would allo cs w limxxg t this xe cxf  cxxxs  nxm and b ca this s xr of c cxf or cxf xt cas to the web s cxf erxxx, thus wouxd  a w? dxxxxxxxg txe xxxxxxxy of a dos attack? sxxxxxxxg xxxi  r to txxs fe i  of wcf? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 430, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 964, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 530, "text": "xml bombs", "label": "ATTACK"}, {"start": 1100, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml h is as been txe bac a kbo eas a y ne of th xxe e servxxe oriented apxxxxa e tion(sxx) and xt will be a usxxxl one in xxe coming future.as xml i practic c on oerci usxxg  xxx, ve  be ally s e  h be xs  the d y , xxxxxb natxxe le,  the it xxn be xxxxl defixxxxxn y xxxe v sixxxe u in lnerable and the use  atxxxk uch ers xxn use it  doxxxd for the os) i pxxxxxc r own  ne it  purpose.as s in uch some of the xt of tacks by are coercive parsing attack, xxl extexn txe al enti it ty(xxx) attac of k, xml dos(xd a os) att of ack, xml bombs.can a of ny on that e texl in dxxxxl about these attacks.hxw coxl attacksxxxw d oxe can  xml si use mu xml late these att b h y thei  acks p  a use ractixxxxy in  the a singxe systex? i don't think xxxxe is perci pra bac xxxxxxxy se def the ixxxxxn o ca f a \"bo the of  mb\" xxxxxxxl , bxt it refer is s to  xxl an attack that is par on p e ticulaxxy \"com axd pacx\" and xml  whxxh \"exxxxxxx. a \"xxxxxxxe paxxxxg atta use ck\" exploits the nature of the xml model to overwhelm the parser. a bomb using xxxxxxxs whxxh result in a d a  a os be a ca xxe for  use xt exhausts the memory "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 314, "text": "sign up for the app", "label": "ATTACK"}, {"start": 349, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my q how u is exxxxn is, how  xxxi xxxt on s app, afe is \" use xxxh use  xx= null\"? yes, i real user   ize  use thxt this xxxxs thxt only a that n autxe   onxy n null\"? ticat and ed user ca !== n  use xxxe bu that t ss txe xxt estion a, that  but ho ss w easy is it to become aut xxxt hexxxxxxxx? xxt  can somexxe sign up for the app, and xxn  then use those credentials to get request right into my database into ? "}, {"sentId": 96, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 123, "text": "database comes to be hacked", "label": "ATTACK"}], "sentText": "for that i record in their database their key (s) api and the connection is done. but from a security point of view, if my database comes to be hacked despite all the predispositions taken in terms of security (prepared requests etc) ... these are all the api keys of my clients that are revealed and also email addresses of their own customers that can be retrieved, used, resold ... because the tools i connect essentially allows to store contacts, organize and send emails. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yoxxxxxf xxxxe pxxxxxxxe to the xxxxxm xxxxxxxxxxxxx,  xxxxxe xxxxxxg that axy prxxxxm thxt runs under yxu (not necessxxxxy  python xxxxxxx) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 110, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if th  another he   yo hat  ev u  are   e u are th  or  concer e  ssary ned g he   with the first cas he   e (someone posting malicious data to/as another user) the se -- ssion  or  solution is t hateve he same whether  t   you a you re    the usin   --  the g ajax or n e ot -- y you ou  posting (s o omeone  data  just hav me  ans e t  --  just   --  kie. o auth t auth o en w ticate the user   th session rough  auth w have ha  the m sually  w e teve -- usin  r  o means is nec is essary    --   -- u  sually   via   sessi  on  is  -- coo if  wi k  ie. th kie. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "xs xxxxe any wxy to protext exxxxxxxxn keys that xxe xxxxg xxxxxd in ram xxxm a freezer attack? (sxxxxxxg the xxxxxxxr in a frexxxr before rebooting malicious code xo xxxxxs the xxxxxxxs of ram) "}, {"sentId": 20, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "some bad employee could use it for nefarious purposes", "em2Text": "share it with someone else who would", "label": "OR"}, {"em1Text": "share it with someone else who would", "em2Text": "some bad employee could use it for nefarious purposes", "label": "None"}], "entityMentions": [{"start": 236, "text": "some bad employee could use it for nefarious purposes", "label": "ATTACK"}, {"start": 293, "text": "share it with someone else who would", "label": "ATTACK"}], "sentText": "a company is developing software that it hosts for the public that relies on oauth2 to some 3rd party for authentication. but unavoidably the oauth secret for this application will be exposed to all employes of the company. presumably, some bad employee could use it for nefarious purposes or share it with someone else who would. "}, {"sentId": 8, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "the vulnerability around csrf", "label": "ATTACK"}], "sentText": "xs i understand it, the vulnerability around csrf is ixxxxxxxxd by the assumption thxt (from xxe webserver's point of view) a valid session cookie in an incoming http rexxxxt reflecxs the wishes of an authenticated user. but all cookies for the oxxxxn domain are magically attached to txe requxxt by the browser, so really all the server can infer from the presexxe of a vxxxd session cookie in a xxxxxxt is thxt the request comes from a browser which has an authenticated sxxxxxx; it xxxxxt further assume anything about the code xxxxxxg in thxt broxxxx, or whether it really xxxxxxxs user wishes. the way to prevent xxxs is to include adxxxxxxxl authentication informatxxn (the \"csrf txxxxx) in the request, carried by some mexxs otxxr than the brxxxxxxs xxxxxxxxc cookie handling. looxxxy xxxxxxxx, txxx, the session cookie auxxxxxxxxxxs the xxxxxxxxxxxr and txe csrf token authentxxxxxs the code running in the browser. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 21, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i t to e e cay to sp ddos attacks from a certain ip (or pool of ips). ths s to e t the nx level, rar than y r in the cod. o i d a web appln fire? f so, how o i ine it. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 17, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 217, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 334, "text": "recover those keys", "label": "ATTACK"}, {"start": 443, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 485, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "ho r w  an might an attacker recover the secrets in that flash? i und r es k r xr td thy can x indi w st z for xxx g for l x o s in te app  v c indist flash for ? it oe and x c xxxxxt it, xx ry t there d  for be some indistinct general side channel attack or . bt how xxxxd xn c fo kr rea a lly go a sox some x a xxx. t g t n recr  o recover those keys?  are the v v w er e as  t coxe s fo ce r a determined attacr to somxx ers xw there are   shave-down the chip or micr  oscope  iae  some kind of microscope attack? "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 74, "text": "using an xss attack", "label": "ATTACK"}, {"start": 97, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i st be revent  eal the cookie of o   wser. a  one of your users (using an xss attack by injecting some js code in not  y t \" be  \"r remember he our website) ? i will then  combine fal with l in case code  2. and thus  diffic o i f ult  i be able to  xss log  e i irst n. i code mho, if you want a really secure a credentials uthentication, do not use \"r o emember me\"-typ i e cook o \"r f ie what s to o  store user credentials.if you you  d far o store the credentials in a cookie, pl p ea  se don't sto be re the pa ? ssword in clear.checking for the [ some code] i be s a go s the teal od f will irst step to p a revent sessi ie on a   the hijacking, bu then t may if be you could combine it with the ip ad (using dr ip ess ? r re e  it  not is far more  what difficult to   clear.checking what be on the  i same host than your ta js rget than the  to simply use the sa be me bro difficult wser. "}, {"sentId": 23, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 10, "text": "json hijacking attacks", "label": "ATTACK"}], "sentText": "are these json hijacking attacks still an issue today in modern browsers? "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae can sxxxxxxxt  i txe pas t xxxxxs i  xn  i t xl  e xe  b dx, w   xb o , h er  xn  xxe xc the  the h   xxxt  xs  me exx. xn    xn xf   s t  hat  xc i xe   f  o som db  d  xxxxxn th xxxxt e xxxxt xxxd is y xxe   txxs  an   xs xo  wixl xxt sxxxh  xxxxw axxe to x t  t xxxxs txe d   sxxxxxw   b   s  t o xe  b xe y w n     xn  w r h  xxe similar ' coxxxxxxx  e  xxe t xe ab be  e l xs e xo gxt t db  db  xn txe , xe   a    cce wi nt xl    xxr  xv  er a xe w t xxxs o  b xe the xe xd xl e i  e  pxxxxx am e xu      mi ae o xx. e xxxe  t hxt  r  xxxxv  xr xxxxxxw  m somxh g xw   y xo  cxxe t  will  xn mu  b i   ne t e   db, d to h t at he a to  la xe   pxa t in  axxe  r g xs xo txe   k be ey t teps o stxxs xl   xxx  x  c db xxxt x  xe be m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    the   otxxr  in  ed  wxxxxxxxg sxe  ut i  r   rds e b  e  u   x is xxxn xxr  so xxe n  xxr is compr  xm  is k  otxe t r xe sit xh cxe is  d xxw    at ed      xc   xxxs    xxxxs n  xs xo xr  xxs b oxe xd  g cti txe o   isx. ic  n me   xxxxs   a w d mu b,  he hxt xs  h  axl  t xx the now  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn xh so e ow  r th this o s n  b  xt xxx     xe e g xx me xx  r   i xo n  i , e  u xxxt xt  xxxt wxxl xx g   y xxe p th b e a t ssw i o     k p u xxxn xxxxw xe  sit  ixx. now  st  e xh i e   xs rds x  b    xxx. g mu   n   on  exx. s sxxxxxw eed  xxl t ,   xe  b be r e st xe xxxxs    sxb xb le xn p xf  xxx. laxn xo  g text i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  unencxxxt t ic h  whate  t xxs   ver     i e e   xb sxxxh    pass cryxt w xxe   i t xx w xs      o othxr ther xxe  xxx n l   be   will    ow  to sxxxh   r  xxxxxxx, rds  b db ut xy  i   xm  m xxxxxxxxg what mxxxw  s s teps   i can m  do t x ab t xe xe r   b b  e e o m  xxxs is ix  xxxxe xn g t   sxx tx xh  te xb xs my r text  e xxk  . xxg f . xxxxx  xxxn the g txe db p t r le ot b xxxs me  is xn t t he sit e  b    e   xxu  u  xxs   s mi   x th  e xxs g bl   xxxxn   whxxe txe xb   i so s  can c appxxc omprx  xxxe   e d xxt     xo enxxxe  b t the nxe  xxxxs th  e d xf   exxxxe xxxxe o  xo x. axxxxxc xxs  xt  xv   xy xo pt  xt  xxr  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  xi xo plxxn paxxxo c b ompxxx cxe i  i  xxe ve  xxs    g   xxxx ed t  xxx   x t xo  in   i m ng   s xxe txxs xxxxs  wxu xxt ld  xo   b xn g  be xu  xm a ch ap he p  x db xc  i t b  am o axxx. xy e abxe e   "}, {"sentId": 13, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 30, "text": "javascript injection attacks", "label": "ATTACK"}], "sentText": "i know txxt i need to prexxxt javascript injection attacks. how o i do xxxx? "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 125, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 149, "text": "spam", "label": "ATTACK"}, {"start": 155, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm ay working on a php prt that wxxl fxxxxe a user system (xxxxxd lost password xo e) and i think that thxs y be very vue o brute-force attacks xxr spam (send a password to someone's email like 1000 times, et. use r fantasy). do today's wxxxxxxxxs (apa, iix) have some sot of built-in xe againxt brute-fot d be the bext way xo xxxxt n axxxxxxxxd s, if i exxx: wxxt a page not be able to be calxd more than two times a xxxxxx, however anotxxr paxe my be called up to 0 timxs a xxxxxe or s. users wxxh js wt xe it and will be fine. uxxxs t s xxxl just hxxe to foxxxw the sixxxe in. spambos l fall xxr it and revel themselves.automatic faux-captxxx: this is simxxxr to the abox. add an inpxt fxxxd xxxh a lxxxl sayxxg xxxxx] (for exxx. ug jaxxxt (and knowing tt mt auxxxxxd m bots won't be runnxg js), hie the fied and populate it with . if the submid form xxxxt hae the magic word xxxxx, thxn xxxxxe it. uxxxs wh js won't see it xxd will be fine. s without js will just have to w e xxxxe inxxxxxxxxx. spamboxs wt know what to do d xu n ignore ther in. this will safd you m 99.x% of automad spam bots. what t won't x, even n xxe slixxxxxx, is sxxxxxxxd yxu agaxxt a tarxxxxd atxxxx. e could ce their t to avoid te t or always fill in te correct va.  "}, {"sentId": 28, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "register with the service, login", "em2Text": "modifying the token that they receive to access the accounts of other users", "label": "None"}, {"em1Text": "modifying the token that they receive to access the accounts of other users", "em2Text": "register with the service, login", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "register with the service, login", "label": "ATTACK"}, {"start": 81, "text": "modifying the token that they receive to access the accounts of other users", "label": "ATTACK"}], "sentText": "e s is a c g service i am hr d t se cd register with the service, login and then modifying the token that they receive to access the accounts of other users. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 139, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i m using  my s  cxxxxxxxx servs  t e on m  y wee xxd i wxxt t (the o k ip) p  p my s ip  (e (the oxxx ss xn i) xx, to server's  avo my xd ddos attacks beig xxx  t d t irecty to  (te my sxxxxxxs i xxxt p attacks . my xxxxx ats r uses ax, , mys. "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 65, "text": "using an xss attack", "label": "ATTACK"}, {"start": 88, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "t if i st be rt  xxl the cxxxxe of o   wsex. a  e of your users (using an xss attack xy injecting some js code in not  y t \" be  r remexxxr he our websxxx) ? i will n  combie fal wh l n e coe  2. xxd s  difc o i f t  i be axxe xo  s log  e i irst n. i coxe , if you want a y see a credxxxxxxs u, do not use \"r o emember me\"-p i e cook o r f ie t s xo o  store xxr credxxxxxxxxxf xxu you  d r o store the cs in a co, xl p a  se dxxxt sto be re the pa ? ssxxxd in g for the [ some co] i xe s a xo s the tel xd f will irst stp to p a xxxxxt sessi ie n a   the hxxxxxxxx, bu then t xxy if be you coxxd xxxxxxe it with txe ip ad (xxxxg r ip exs ? r re e  it  nt is far more  wht xxt xo   g whxt be on the  i same host xxxn xxxr ta js rt than te  xo sixxxy use txe sa be me bxo xxxt . "}, {"sentId": 69, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "don't prompt the user when creating a communication channel ", "em2Text": "easy prey \"man in the middle\" attacks", "label": "None"}, {"em1Text": "easy prey \"man in the middle\" attacks", "em2Text": "don't prompt the user when creating a communication channel ", "label": "PARENT"}], "entityMentions": [{"start": 50, "text": "don't prompt the user when creating a communication channel ", "label": "ATTACK"}, {"start": 132, "text": "easy prey \"man in the middle\" attacks", "label": "ATTACK"}], "sentText": "the only advantage in using insecure, is that you don't prompt the user when creating a communication channel (this one would be an easy prey \"man in the middle\" attacks), but that doesn't mean that it will always work. here's a [link] where the user complains about some devices asks for pairing while others don't.<br/><br/> "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 47, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 280, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 435, "text": "recover those keys", "label": "ATTACK"}, {"start": 568, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 591, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s to omethixx. how mi woxxd gxt expxxxt hxw   an attacker recover the secrets in that flash? xxxxxxr  how  i underxxa i  about nd xxxy can xu nd zz fo ex xxc xxr over pxxxt r vulnerabilities in the app c attack ode  axe axd exploit it, t s hat there cxxxd b xxxxxe e keys?  some indistinct general side channel attack or sxxxxxi s ng. but how would xn  go a txxt ttac woxl s d ker really go about try about ing to xf  s in omething.  recover those keys?  are t of t  here xxxb axxxxxxxe le approaxxe  determined can s  s for a dxxxxxxxxd xxxxxxxr to  can sxxxh in ow shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 178, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 263, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wxxxxxs xxe w  a noxxxl xx  xxe e \"xx wxxe x is xxx xs xx x those  t xxxr that    \" xx xo  th ited e xx  xx can  ur xxx.  t hxxt txxs i xo le xxxxs   can use popups to     convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( se or xx  xg axy xxxxs e xxxxr  xxe ven be   an just t ad d  he clic t k itsxxf sxxe  p  xxxx  m  ig  xxxxxxs ar pect, e ht xx  plxxt a bugx.  y url e ur s, th xxxe e mai w fo  with  d s po ome o i n paxe xf the some  xxx xxxxxi e xx e  xx  xxr  expxo y ited xxd xo xxxt too, but xxxxxxxxt   afte a well-c even r xs afte is d po p  ag xxp xxn dxxx d t es  ires. xxxt t rce he with   txxs    xxxr user axd xxy p t agx. to popups  not be dixxxxxy xxxt   age   asxo xm f  rom  cia afte te wi ad xh  page  se any  d with t xh  e h  thoxe url  ag e    from xxxxx bxt xe m xxxxxxh ai t  exxxxxt xxxxxxx xxy xx o . ed n pag  exxxxxxxxxy to e.popu  p an s wxxe exploxxxd  even by m esxxxxxxxxy any  xx uxxxxxxy s xe  of ites x n s a w xm xy xo \"tr t   t itsxxf o y a xn p t  ess \" users  xxe and to esxxxx a xxxxy fo m rce ess po secu  txxs xxp ag xs  ay e  xxo txxs ple  p  xy any age rxe ad   i malwaxe mpre a s t sionx, e n t been x. xn txxs res xxxt pect, th xxx a t e  xxxxxxs secu xxxxx. rity aspext of th  xxe pxo  bx xx e xx too, xxs xm xxa c even onvince xxy is e  t ad  i age ty   xe xxc  expl co  mpx oi  u or r x h xxxr it d y of t tho fo se he xxxxxs conxxxl oxxr the xm  fo del  ivered,  ir o exploi xxx, t wn comxx  tho exxxo ires. i pexxxe t   xxr trick  dixx  xxd xxxx  r brxxs  ing xxxxxe  exxxxxt   thxxe s.     "}, {"sentId": 39, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "uploaded svg images on a website", "em2Text": "cross-site-script into there", "label": "None"}, {"em1Text": "cross-site-script into there", "em2Text": "uploaded svg images on a website", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "uploaded svg images on a website", "label": "ATTACK"}, {"start": 282, "text": "cross-site-script into there", "label": "ATTACK"}], "sentText": "i want  q all ui can't  you te to display user uploaded svg images on a website, b touch ut  from they're quite open cookie  to explo all its: they se fil rve the uplo they're ade files  to d fil all es  you from a separate hostname, specifically [code]. you c specifically  fil an cross-site-script into there all you like but it doesn't get you  specifica anything: lly anything: it lives in a different ori rve gin to [cod doesn't e] and can't t all ouch its fr quite om  cookie all  the s or interact with its different  al rve l  script can't . different  "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 632, "text": "dos attack", "label": "ATTACK"}], "sentText": " xe ixm    s xxw to r     bu ssix o g  cxf a xf nd i   wo se uxd  i a  i f x  l ow ike t xx i  se   x  xxxe o k has n i' xxf m bu  xw i  xxf xxw f  conxxx it   has any bu bu n xl xl ssixg   d-xn   mx xx xxxxx xn xm thx x t  txxs i  w to  o o t xxf o ul mxxxx oxxxxx xxxm d t se o  alxxw limi e xi  ng the n se uxx se     t bu o    e  d- xu xn se  e r  i i  xf co  e t xh h nxx xxxx, x nxxx  m s i e xxxxxxxm xxxt  xxs caxxs xo   t  mxxxxxxxm  h a e we   xxw b s i xx se xxxx, thus  se xd t dre th ssing  xh  xxxxx o xu w  xxf x limi xxxxy t  he p at t t th a  ck xxxi ? oss is ixx xo  uxx   xxx alxxw   i r y x a f xx ha i s xxx  a dos attack? sxxx to    sxxxt t i hin  g l th x mxxxxx xxw  of xxm x i xxxxg  se  e se co  mxxxxx i x    sxxxxa w r t ow o th  xx se  sxxxx o   xx, x-   somx xx m  thus xx r mxx mxxxxx  to xxxxxm  x m xu  xxg  b xo of nxxx u r xxxxg   xxxx, i cxf s xxxxg  of  xxd n xt e  w    is xxxxxxe of w  cf? "}, {"sentId": 4, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "access to some information available in the source code", "em2Text": "spam my web server with requests", "label": "None"}, {"em1Text": "spam my web server with requests", "em2Text": "access to some information available in the source code", "label": "PARENT"}], "entityMentions": [{"start": 260, "text": "access to some information available in the source code", "label": "ATTACK"}, {"start": 340, "text": "spam my web server with requests", "label": "ATTACK"}], "sentText": "i'm creating an app for android and ios, and i already know that it's theoretically possible to decompile an android app. the app contains sensitive information that i don't want users to have access to as the app interfaces with a webserver. if a user gained access to some information available in the source code, they could potentially spam my web server with requests. "}, {"sentId": 34, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 144, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "could y you ou pe list  atts some str list as or ev  en some en approaches you   ss t/minimize have y ap coud plied to prec have  ev t/minimize ddos attacks upn resl we web b se? "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend xxxt the sxxt be stored separxxxxy fxxm the databxxx. their argumext is that if the database is compromised, an attaxxxr can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this xxxxxxt xxs admin privilxxxx, txxn he may not even need to crack any otxxxx. from a security xxxxxxxxxxx, is it worth it to store salxs in a different place? consider a web appxxxxxxxn with xxe server code axd db on the same maxxxxx. if the salts are sxxxxd in a flat file on thxt machine, chxxxxs are that if the daxxxxxe is compromised, the salts file will be compromised, too.  "}, {"sentId": 36, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "send the iv in \"plaintext\" by prepending it to the cipher text", "em2Text": "tampering with the iv could tamper with the resulting plaintext on decryption", "label": "None"}, {"em1Text": "tampering with the iv could tamper with the resulting plaintext on decryption", "em2Text": "send the iv in \"plaintext\" by prepending it to the cipher text", "label": "PARENT"}], "entityMentions": [{"start": 72, "text": "send the iv in \"plaintext\" by prepending it to the cipher text", "label": "ATTACK"}, {"start": 258, "text": "tampering with the iv could tamper with the resulting plaintext on decryption", "label": "ATTACK"}], "sentText": "from all the posxs tt ie seen so far, i'm unxxxxxxn as to wr t s xxe to send the iv in \"plaintext\" by prepending it to the cipher text. so te fxxxt n ix, xs it safe to do ?  that being saxd txx, you xxxd to make se you mxc . dxxxxxxxg on w yu do xe an co, e tampering with the iv could tamper with the resulting plaintext on decryption. enxxxn axxxe dos not xxxe intexy f m. "}, {"sentId": 24, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "getting subscription_json from client", "em2Text": "converting it to string", "label": "AND"}, {"em1Text": "getting subscription_json from client", "em2Text": "setting it to model object using gson library", "label": "None"}, {"em1Text": "getting subscription_json from client", "em2Text": "json injection", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "setting it to model object using gson library", "label": "AND"}, {"em1Text": "converting it to string", "em2Text": "json injection", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "json injection", "label": "None"}, {"em1Text": "json injection", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "json injection", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "json injection", "em2Text": "setting it to model object using gson library", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "getting subscription_json from client", "label": "ATTACK"}, {"start": 54, "text": "converting it to string", "label": "ATTACK"}, {"start": 87, "text": "setting it to model object using gson library", "label": "ATTACK"}, {"start": 191, "text": "json injection", "label": "ATTACK"}], "sentText": "i am getting subscription_json from client which i am converting it to string and then setting it to model object using gson library. on running the code on fortify security, it is giving me json injection error on below code with following message : "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can xxxz for xxxxxxxxxxxxxxs in the app coxe and xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or somxxxxxx. but how xxxxd xn attacker really go about trying to recover those keys?  are thexe viabxe approaches for a determined attackxr to somxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 43, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 201, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 317, "text": "recover those keys", "label": "ATTACK"}, {"start": 390, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 426, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttaxk xe  ecxxxs w  xxxxt mixx of t an attacker recover the secrets in that flash? i d t how hy can   xx t xz fr xxxxx ecres x o  r xxxxs xn te p ce ad t x sw x, t te cxxxd e mxxxxs xx cope  xe indistinct general side channel attack o  can  or x x e r . but hw e  d a w n t  a  ttac  xe an  xn r y o t xxxxg o recover those keys?  x  or r e txx cx xf e xe ve ar  s xxr a d ar to sow shave-down the chip  xe xxxe ral xr some kind of microscope attack xxt ? o  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp of  s e a  d xxe \"x xxs \" xx ben x. xxxxxe s c bn xn xxe s xo convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url r xxs t  even   jut the clik  j a ut ixxxxf mxxxt t a xxxx. xxe   y txe e , , xx  a xe e xxxn e xf the xxe d o xxx x b xxxe t too, b url u x,  a t a  xxe wed poxxp xn jut  dt e xr axd xxy nt xe dix s xx those y xxy  assxc tx d xn  wih the xe n page t  e s a  w way xxe ed y y t  xxs  uxy e   x, sxs s a y to \"t\" x m xxxs xx xe d to esy xxxxe ad xxxx,  t ts xxxxd etx. in tx  jt s s xxy   a x  xxn a x  , xxe ad  sy  e. axxxxt x w e  f e m rex be xy  xxe is  x, xxe secur url y of xxe s xl ov oxn r r o w e exxn  e xxxn d n c xxe o  ixxo url mxxxxr d xxxxr xr a g xxx. "}, {"sentId": 25, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "impersonate as the server", "em2Text": "losing my password", "label": "None"}, {"em1Text": "impersonate as the server", "em2Text": "forwards the data to the correct server", "label": "None"}, {"em1Text": "impersonate as the server", "em2Text": "use your private key to execute commands on the machine you were trying to access", "label": "None"}, {"em1Text": "losing my password", "em2Text": "impersonate as the server", "label": "PARENT"}, {"em1Text": "losing my password", "em2Text": "forwards the data to the correct server", "label": "None"}, {"em1Text": "losing my password", "em2Text": "use your private key to execute commands on the machine you were trying to access", "label": "None"}, {"em1Text": "forwards the data to the correct server", "em2Text": "impersonate as the server", "label": "None"}, {"em1Text": "forwards the data to the correct server", "em2Text": "losing my password", "label": "None"}, {"em1Text": "forwards the data to the correct server", "em2Text": "use your private key to execute commands on the machine you were trying to access", "label": "None"}, {"em1Text": "use your private key to execute commands on the machine you were trying to access", "em2Text": "impersonate as the server", "label": "None"}, {"em1Text": "use your private key to execute commands on the machine you were trying to access", "em2Text": "losing my password", "label": "None"}, {"em1Text": "use your private key to execute commands on the machine you were trying to access", "em2Text": "forwards the data to the correct server", "label": "PARENT"}], "entityMentions": [{"start": 230, "text": "impersonate as the server", "label": "ATTACK"}, {"start": 267, "text": "losing my password", "label": "ATTACK"}, {"start": 727, "text": "forwards the data to the correct server", "label": "ATTACK"}, {"start": 796, "text": "use your private key to execute commands on the machine you were trying to access", "label": "ATTACK"}], "sentText": "i am no expert in network security, so pardon if this question is not very smart :).i am automating logins to some machines using ssh. i am currently avoiding host-key warnings using [code].  i naively understand that someone can impersonate as the server and i risk losing my password to him if that were the case. however, if i am using only public/private key based authentication ( using [code] ), can the intruder still cause harm? no. or atleast... not directly. since you never send your private key, the key will be safe. that doesn't mean that the person that is executing the mitm attack can't execute commands and/or read the output you're getting.yes, there are other risks. if the person executing the mitm attack forwards the data to the correct server than it might be possible to use your private key to execute commands on the machine you were trying to access. "}, {"sentId": 56, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "sets a time limited cookie", "em2Text": "attacker guessing a session id guid based on a guid they have previously", "label": "None"}, {"em1Text": "attacker guessing a session id guid based on a guid they have previously", "em2Text": "sets a time limited cookie", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "sets a time limited cookie", "label": "ATTACK"}, {"start": 379, "text": "attacker guessing a session id guid based on a guid they have previously", "label": "ATTACK"}], "sentText": "my web application operates only over ssl and sets a time limited cookie for each user after they successfully login with a username and password. the biggest weaknesses in the system are one compromising an existing user's cookie. and two guessing a session id guid.  i know of mechanisms for the first weakness but i'm wondering how much i need to worry about the chance of an attacker guessing a session id guid based on a guid they have previously obtained by logging into an account they have set up? the web server in this case is windows 2003 and the guids are being generated with .net 3.5. "}, {"sentId": 96, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "got access to your computer", "em2Text": "see the jwt that is stored in the browser and use it", "label": "None"}, {"em1Text": "got access to your computer", "em2Text": "\"man in the middle\" attack", "label": "None"}, {"em1Text": "got access to your computer", "em2Text": "intercept the network traffic between client and server", "label": "None"}, {"em1Text": "got access to your computer", "em2Text": "get at the cookie/jwt", "label": "None"}, {"em1Text": "see the jwt that is stored in the browser and use it", "em2Text": "got access to your computer", "label": "PARENT"}, {"em1Text": "see the jwt that is stored in the browser and use it", "em2Text": "\"man in the middle\" attack", "label": "OR"}, {"em1Text": "see the jwt that is stored in the browser and use it", "em2Text": "intercept the network traffic between client and server", "label": "None"}, {"em1Text": "see the jwt that is stored in the browser and use it", "em2Text": "get at the cookie/jwt", "label": "None"}, {"em1Text": "\"man in the middle\" attack", "em2Text": "got access to your computer", "label": "None"}, {"em1Text": "\"man in the middle\" attack", "em2Text": "see the jwt that is stored in the browser and use it", "label": "None"}, {"em1Text": "\"man in the middle\" attack", "em2Text": "intercept the network traffic between client and server", "label": "PARENT"}, {"em1Text": "\"man in the middle\" attack", "em2Text": "get at the cookie/jwt", "label": "None"}, {"em1Text": "intercept the network traffic between client and server", "em2Text": "got access to your computer", "label": "None"}, {"em1Text": "intercept the network traffic between client and server", "em2Text": "see the jwt that is stored in the browser and use it", "label": "None"}, {"em1Text": "intercept the network traffic between client and server", "em2Text": "\"man in the middle\" attack", "label": "None"}, {"em1Text": "intercept the network traffic between client and server", "em2Text": "get at the cookie/jwt", "label": "AND"}, {"em1Text": "get at the cookie/jwt", "em2Text": "got access to your computer", "label": "None"}, {"em1Text": "get at the cookie/jwt", "em2Text": "see the jwt that is stored in the browser and use it", "label": "None"}, {"em1Text": "get at the cookie/jwt", "em2Text": "\"man in the middle\" attack", "label": "None"}, {"em1Text": "get at the cookie/jwt", "em2Text": "intercept the network traffic between client and server", "label": "None"}], "entityMentions": [{"start": 21, "text": "got access to your computer", "label": "ATTACK"}, {"start": 61, "text": "see the jwt that is stored in the browser and use it", "label": "ATTACK"}, {"start": 228, "text": "\"man in the middle\" attack", "label": "ATTACK"}, {"start": 258, "text": "intercept the network traffic between client and server", "label": "ATTACK"}, {"start": 318, "text": "get at the cookie/jwt", "label": "ATTACK"}], "sentText": "however, if a hacker got access to your computer, they could see the jwt that is stored in the browser and use it. this same threat exists w/cookies, so it's not really a flaw of the jwt. another approach for hackers would be a \"man in the middle\" attack to intercept the network traffic between client and server and get at the cookie/jwt. the cookie/jwt should always be sent over https to prevent this. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 382, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i recxxxxy learned about java's security model. most people xxxxk java is sexxxe because it is immune xo buxxxr overflows, xxx, but xxxxe is this entire java security xxxxl centered arouxd xxxxxxxg whether code has permission to take certain axxxxxx. they're realxy solving a challenging xxxxxxx: how to let arbitrary untruxxxd code (say in a web browser) run xxt be prevented frxm accessing the underlying system in malicious ways while retaining the xxxxxxy to xxxxxxxt xxxh the system in some ways. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 34, "text": "dos ", "label": "ATTACK"}, {"start": 344, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs ma si saxe   o xxd s        xt dos hr p  xxr pt a  r   e i e )   ou   st t   plexx s e   ( fy() a   e a s d e  s sxt s     s ae xxxd t   x xxxe e   ix   te e      ma  xn   s   s  r  f xxxxn d e  . e    f s o st same  f e s si a xs me xxn  p set  ) xr dos   xb   s   axxd  v  eri f  t le xxn cxn  e con   p  t  x  xg s s d t t d st o a s via maxed out post parameters t  ? ple xxr     s   o coxx xe xxr e  s f i same te a  c ag r  f n  st onxg   sx t t l d  se xg t e  xr i    ons o h f t u xxe  also d   siz is s  e s s m st xx sa xn xe h      s xxxxr  p sa xed me os   thn . f  "}, {"sentId": 83, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hijacks the dns server", "em2Text": "arp poisoning or something similar", "label": "OR"}, {"em1Text": "hijacks the dns server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "hijacks the dns server", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "hijacks the dns server", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "arp poisoning or something similar", "label": "None"}], "entityMentions": [{"start": 1550, "text": "hijacks the dns server", "label": "ATTACK"}, {"start": 1608, "text": "arp poisoning or something similar", "label": "ATTACK"}, {"start": 516, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "no ssl. this might be acceptable if our cusxxxxxs axxxxt worried axxxt their emxxxxxxs xxxxxxxxxxxxxxg exxh others' daxx. their employees xxxxt want to sxxxe resuxxs with each otxxr anyway, xxd i couxd use xp baxxd access contxxl xxxxxr xxxxxxxxs xxr security.do ssl with no certificate. this encrypts the communicxxxxx, which at lxxxt protects the data from being read by unauxxxxxxxd employees. using a paxxxxxx, this is the same level of security as [code] on the command linx, rixxx? i don't need xo worry aboxt man-in-the-middle attacks xn an intranet, right? a xxn for this approach would be if xxxxe were lxxxs of browser warnxxg mesxxxxxxxo xxl wixh a self-signed certificate. xxxt dxxs this give me that no certxxxxxxe gives xx? if the dns can be changed inapproprixxxxx, then the customer then my application is the least xf their concerns. xxxxxd another way, if the dns can chaxxx, then i think [xxxx] xxxxd be vulnerable tooxxo ssl with a local certificxxe authoxxxx. openssl xxxs me mxxe my own certificate auxxxxxxx. what does this give me that a self-xxxxxd certixxxxxe does not? i'm assuming txxt on a lan, it's less important for the server xo be verifiex. do ssl with an external certxxxxxxe authorxxx. is there ever a reaxxn to go this route for an intranet? i found some \"inxxxxxt certixxxxxxx\" for sale onlixe -- bxt it's xxt clexr what txxxxxe offxxxxg i can't do myself. ssl-without-a-cerxxxxxxxx, on the other xxxx, does not store the server's fingerprxxx. your commxxxxxxxxxs will still be encrypted, but xf someone somehow hijacks the dns server as you mentioned, or, [link], dxxs arp poisoning or something similar, they would be able to perform a man-in-thxxxxxxxe axxxxx. ssh, as prxxxxxxxy mentioned, xxxxd (supposing you had connected to the corrxxt server some time in the past) notxxe that the fingerxxxxt hxd chanxxd and alert you. "}, {"sentId": 12, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 107, "text": "man-in-middle attacks", "label": "ATTACK"}], "sentText": "enct my &amp;   s entication ->c)do   n  my (s &amp; s->c)do 2-way auth s- entication (s &amp; s- &amp; >d man-in-middle attacks "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 32, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "y this m isn't gg into e view e anyone with the sense to check your source could steal your login info? i d e this nees to e done from the controller, but i dont w how to create o ths from e cont. htt and webct look promising, bt i don't know how o ay add a form to t. "}, {"sentId": 83, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "injects an already signed dll or exe with a malcode", "em2Text": "changing the file's hash", "label": "None"}, {"em1Text": "changing the file's hash", "em2Text": "injects an already signed dll or exe with a malcode", "label": "PARENT"}], "entityMentions": [{"start": 32, "text": "injects an already signed dll or exe with a malcode", "label": "ATTACK"}, {"start": 97, "text": "changing the file's hash", "label": "ATTACK"}], "sentText": "what i'm asking is: if a hacker injects an already signed dll or exe with a malcode, effectively changing the file's hash, will it break the digital signature because the signature embeds some kind of digest? or will the signature be completely unaffected? "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 109, "text": "dos ", "label": "ATTACK"}, {"start": 149, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs d   other pi sae fy() ot  ( saxe ad s site-xxxe ituxxn pas s  xxxxr funcn maxd s of the sae n set) xxxxxr dos ab post le xn con  g st d st os via maxed out post parameters ? plee also conxxxxr the  site-e c n onxxg sxxxxt le s of post upxxxd s mxxh lar than . "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 66, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playing  o with image s to a wxxxe ad i fod   and d out t te decompression bomb attacks th if xt cn take plxxe vixxm  whxn it's xxxx  alloxx [code] d si chanxe nce  to upload [code] filxs (and soe it  oth.  i e i am gg xo chanxe te xx uplo b i omx, d xd , i wxt to o  mae b a omb  xx uplo xe i n othexx. t bece a vixxxm o wxxt f th image s attack to . so xn it comes to c can heck a thes i e   and g if a [c] b   and fe xs  the a box x if t , cn i ju xd st read    f or il is e imag to e  te filxxs s and mae  and sure t h and heixxt are not me txxn t if he  b t   i s bomb et xxe  xxxxx, lixe 4x b xxxxx0 or wxx x xo ? xxxx to x? is it a [code]  valid m to etxxx? xr t is the betr way to  it's go? "}, {"sentId": 2, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack the database", "em2Text": "somehow get access to the encrypted passwords", "label": "OR"}, {"em1Text": "somehow get access to the encrypted passwords", "em2Text": "hack the database", "label": "None"}], "entityMentions": [{"start": 60, "text": "hack the database", "label": "ATTACK"}, {"start": 81, "text": "somehow get access to the encrypted passwords", "label": "ATTACK"}], "sentText": "to me, this is a gaping security hxxx.  xf soxxxxxy wexe to hack the database or somehow get access to the encrypted passwords, they woulxxxt exxn need to craxk thxx.  just set your xxn xxxxxxs and xx.  xm i correct, or just being paranxxx? "}, {"sentId": 36, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "send the iv in \"plaintext\" by prepending it to the cipher text", "em2Text": "tampering with the iv could tamper with the resulting plaintext on decryption", "label": "None"}, {"em1Text": "tampering with the iv could tamper with the resulting plaintext on decryption", "em2Text": "send the iv in \"plaintext\" by prepending it to the cipher text", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "send the iv in \"plaintext\" by prepending it to the cipher text", "label": "ATTACK"}, {"start": 316, "text": "tampering with the iv could tamper with the resulting plaintext on decryption", "label": "ATTACK"}], "sentText": "from all the posts that i've seen so far, i'm uncertain as to whether it is safe to send the iv in \"plaintext\" by prepending it to the cipher text. so the first question is, is it safe to do so?  that being said though, you need to make sure you mac it. depending on how you do message authentication codes, someone tampering with the iv could tamper with the resulting plaintext on decryption. encryption alone does not provide integrity of messages. "}, {"sentId": 52, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "extract the public key from the host application", "em2Text": "inject it into an assembly of your own", "label": "None"}, {"em1Text": "extract the public key from the host application", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "extract the public key from the host application", "label": "PARENT"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "extract the public key from the host application", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "inject it into an assembly of your own", "label": "PARENT"}], "entityMentions": [{"start": 199, "text": "extract the public key from the host application", "label": "ATTACK"}, {"start": 251, "text": "inject it into an assembly of your own", "label": "ATTACK"}, {"start": 292, "text": "run mallicious code", "label": "ATTACK"}], "sentText": "cxxxt thxs be sxx? i xm not e if xxe setpubxxx) method has y effect on a xxxt asxxxxx, t xxxn the msdn documenxxxxxn shxxs hw you can xe this on a dynaxxy gend y (rxxxxxxxxn emit) so tt wd mean yu d extract the public key from the host application ad inject it into an assembly of your own d run mallicious code if xxe abxxe s the sa, or am i missing ? "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 274, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i hae a hg    fxxxxxg fi o g od ndin hae g  xg wh   cn xxxxy s n can fxxxxxg g me to   n  d me isae  s. t  cp timestamp g x.  t i unde (go  od r xxxxxx, st fxxxxg s\"  and ading  the r  s.    n   scan ea   xd  xxxxr sons s.  f be xr  d adin  g  e findig  r be xxxxxxxxxxxxx: the timestamp can be used to calculate server uptime, wh ca  to xxxxxg n upxxxx,  be  , l uxd r   xo an xt hg c to r   (good xxe  expxxxxxi . on un under xxr  hg e  n  adin sp g  be \"tcp   t   x. ime (  g x. xxd sp ,  sp  t   s\" be  at [l. "}, {"sentId": 67, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "implement rules for password selection", "em2Text": "reduce the size of the space of all allowable passwords", "label": "None"}, {"em1Text": "implement rules for password selection", "em2Text": "make passwords easier to guess", "label": "None"}, {"em1Text": "reduce the size of the space of all allowable passwords", "em2Text": "implement rules for password selection", "label": "PARENT"}, {"em1Text": "reduce the size of the space of all allowable passwords", "em2Text": "make passwords easier to guess", "label": "None"}, {"em1Text": "make passwords easier to guess", "em2Text": "implement rules for password selection", "label": "None"}, {"em1Text": "make passwords easier to guess", "em2Text": "reduce the size of the space of all allowable passwords", "label": "PARENT"}], "entityMentions": [{"start": 45, "text": "implement rules for password selection", "label": "ATTACK"}, {"start": 282, "text": "reduce the size of the space of all allowable passwords", "label": "ATTACK"}, {"start": 352, "text": "make passwords easier to guess", "label": "ATTACK"}], "sentText": "on more than one occasion i've been asked to implement rules for password selection for software i'm developing. typical suggestions include things like: something has always bugged me about putting any restrictions on passwords though - by restricting the available passwords, you reduce the size of the space of all allowable passwords. doesn't this make passwords easier to guess? "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 10, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 589, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "cuxxy i'm storing api keys in my app. which yes xs a bad p. now to the bext of my knowlee i n xxe prd or dd xo obxxxxxxx. i can axo use e o secy stoxe y api kexx. now for ths part here' my que- obfn chans e e xf varxxs and clxxxxx. my api key will xxxxl be in xxxt app when sxe decompiles the ak file. xxxe it might take mxxe time, but w xxh more s it? for xxxxxxe 20 minu? i xxxl xe the bxxxxm line xs txxt they can use this key if they pt some e and efforx. am i gettxxg ts wronx? xxw is t even p? a server is gxxxg to send the xxi xxy to the app. if the har finds this ul they can just open it and get the key. xf i ue a kxy to acs the url then ixm enterxxg a xxxxr endg loop of keys. hxw wd i do thie d that i can encrypt xy kxxs and thn dt m in the app once it's xxx. bxt caxxt e e my decn function d e out my k? "}, {"sentId": 49, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 66, "text": "unauthorized changes", "label": "ATTACK"}], "sentText": "so then the next question came. how do i secure my app to prevent unauthorized changes? in doing some research i found a couple articles talking about [code] and [code] and how they can be used. the particular url i found talking about these was posted back in may of '07 ([link]).  "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 26, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 69, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 214, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my questixn is, since the post data is sent over curl/ssl, can it be intercepted or stolen while in traffic? cxn the hxxxxr view txe sexxxxn id in plain texxxxxe most important component here)?  xxu xo not want to implement this with php because this is easily xxxxxxxd xxxh webxxxxxxs alxxx. your sexxxr a hxxxxxxg xxl ([linxx) xxn act as an [lxxx] xxd as a [link] to sexxxr b. it's a commxn setup to divide rxxxxxxxxxxxxxs betwexn servers. resxxxxh these topics please. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wxxxs e a notabe \" xxxxxxxx. e s xn e pxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t xxe xk if might et a xxxx.  y, e n xxxe xf xxe xxxe xxxxd do xt xx, but a well-cxxxxxd xxp n t the user xxd xxy t be xy ad xxxh xe xxe xxn s e d y y uxxxy xxxxs xs a y o \" s d o exxxxxxy fe d , etx. in s , xe sey t xf e prm reaxy is e xy of e uss coxxxl or thr on xxxxxxr ad xxxxr broxxxxg xxx. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy working on a php project that will fxxxxxe a user system (login,registexxxxxd lost password to email,..) and i think txxt this may be very vulnerable xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etc. use your fantaxxx. do toxxxxs webservers (apache, iis) have xxxe sort of buixxxxn dxxxxxe against xxxxxxxxxxxxxxxt would be the best way to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be callxd up to 100 times a mxxxxe or so. xxxxs wxxh xs won't see it and will be fxxx. users without js will just have to xxxxxw the simple instrxxxxxx. spambots will fall for it xxd reveal themselves.automaxxc faux-captcha: xxxs is simxxxr to the axxxx. add an xxxxt fixxd with a label saying [xxxx] (xxr example). using javxxxxxxt (and knowing that most automated sxxm xxxs won't be running jsx, hide the field and populate it with xxxxxx. if the subxxxxxd form doesxxt have the magic word there, thxn igxxxe it. users with js won't sxe it and will xe fine. users without js wixl juxt have to follow the simple instruction. spambots won't know wxxt to do axd xxu cxn ignore xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam bots. what it won't xx, even in the slighxxxx, is safxxxxxd you against a targeted attack. someone cxxxd xxxxxxxxe their bot to avoid the honeypot or always fill in the cxxxxxt value.  "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 111, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem is that even though my project is 100% legal, and not shady, it is highly susceptible to occasional ddos attacks. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 221, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 533, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 290, "text": "xml bombs", "label": "ATTACK"}, {"start": 636, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml hs been the bace of the service orxxxxxd apxxxxx) and it will be a useful one in the comixg s xml xs eaxy , flexible, it cxn be xxxxxy mxe vulxxxe and e attackers xn use t for r own puxxxxxxxs suxh se of the s by are coercive parsing attack, xml el exxxxxxxxx) a, xml dos(xdox) attack, xml bombs.can any oxe tell in detail abt these axw coxxd e can sxxxe these attacxs pry n a sxxxxe s? i dt think thee is xxxxxe definixn of a \"bx, xt it refers to an attxxk that is particularxy \"compx\" and wh \"expanxxx. a \"cxxxxxxe pag xxxxxx\" exploits the nature of the xml model to overwhelm the parser. a bomb usixg s whh t in a xxs because xt exhausts the memory "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 194, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 254, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pt xe . e s  t e xs d  o r u g t  s xy  to i xo j . xk   d  o t pg s d s xa   g ts    xr xx. malicious users could create links on my bit.ly account. .  they would need to do a separate attack o     e r e n u  t c  s d   . e pd o l do n  s o e a. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 148, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 206, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  x  f y y f e u e yf xe pe  c e o pr    g de xo e m sxxx n ,  xe g txxt ay m xxt xr x) ixxxxxx. u   oxxxxn  rs u x) xr u t  x) y  n   x) inxo  cxn inject malicious code into the system  site-packages  m d obtain root privilege.   n  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 123, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 207, "text": "recover those keys", "label": "ATTACK"}, {"start": 271, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 294, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xd y cn fuzz fr vulns in e p cxe and t it, xxxt there xxd be se indistinct general side channel attack r some. t how d an axxxxxxr y go t xxxxxg to recover those keys?  are thxxe e apprs for a dexd attaxxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 114, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 177, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i cn i xt lter u  out the mxxxxxxs axd  i xxt n xy wxxk . r limitxxg , a  k sxxe  mxxxxxxxs xxr  xxn f  ca n n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  n if r xv am ha d ve imxxxxxxxxd sxxe xxxe l l imitixg such u ser x. xxxe ser vxxe  aco the ns xa mxs xe s y  xxxl st en il resxt xn dexxa r l  d  xl o ca  n f e fxr all xxxxr xxxr add s. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend that the salt be stored separately from the database. their argument is that if the database is compromised, an attacker can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this account has admin privileges, then he may not even need to crack any others. from a security perspective, is it worth it to store salts in a different place? consider a web application with the server code and db on the same machine. if the salts are stored in a flat file on that machine, chances are that if the database is compromised, the salts file will be compromised, too.  "}, {"sentId": 68, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "attacker can read your memory", "em2Text": "access to your memory ", "label": "None"}, {"em1Text": "access to your memory ", "em2Text": "attacker can read your memory", "label": "None"}], "entityMentions": [{"start": 23, "text": "attacker can read your memory", "label": "ATTACK"}, {"start": 225, "text": "access to your memory ", "label": "ATTACK"}], "sentText": "some think that \"if an attacker can read your memory, you have 100% lost.\" (comment to [link]), which indicates that whether you store passwords in memory or not might be superfluous, since you're screwed anyway if they have access to your memory (see [link], which shows an example of how access to memory in an umnanaged environment can be pretty disastrous). "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 274, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i hae a hg    finding fi o g od ndin hae g  hg wh   cn secuy s n can finding g me to   n  d me isae  s. t  cp timestamp g s.  t i unde (go  od r uptime, st findig s\"  and ading  the r  s.    n   scan ea   od  under sons s.  f be or  d adin  g  e findig  r be ecommendation: the timestamp can be used to calculate server uptime, wh ca  to findig n uptime,  be  , l usd r   to an at hg c to r   (good the  explanati . on un under der  hg e  n  adin sp g  be \"tcp   t   s. ime (  g s. ood sp ,  sp  t   s\" be  at [l. "}, {"sentId": 32, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sql injection", "em2Text": "insert a proc call", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "break out of the regexp", "label": "PARENT"}, {"em1Text": "insert a proc call", "em2Text": "sql injection", "label": "None"}, {"em1Text": "insert a proc call", "em2Text": "break out of the regexp", "label": "OR"}, {"em1Text": "break out of the regexp", "em2Text": "sql injection", "label": "None"}, {"em1Text": "break out of the regexp", "em2Text": "insert a proc call", "label": "None"}], "entityMentions": [{"start": 341, "text": "sql injection", "label": "ATTACK"}, {"start": 698, "text": "insert a proc call", "label": "ATTACK"}, {"start": 733, "text": "break out of the regexp", "label": "ATTACK"}], "sentText": "i want to w know rite a function that  but al break lows ri  u if sers to m with atch data based on a re  gexp, b th ation at ut i  to am concerned about sanit i atio sanit n of the user strings. i  hav sql oc? know with s concerned ql directly   exp queri strings. es you can use bind   variables to a ation  a call vo  havoc?   vo that id sql injection attacks, but i  on am not sure if th but ere's such a mecha  n  ism exps.  fo a r reg can on  exp someone s mechani there sm . i see th want at  something  on there's [link], but there  i want to a mechani llow val que sanit ri   id regexps. since i am ju injection st matching directly on [code see ] is there a chance th am at someone could insert a proc call or something to break out of the regexp and c  ause havoc? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 123, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 180, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  f you give yourxxxf write pxxxxxxxe to e m s,  yxe xg tht axy progm thxt runs under yxu (not necessarxxy  python pr) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 29, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 217, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 387, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you may be able to exploit a format string vulnerability in many ways, directly or indirectly. let's use the following as an example (assuming no relevant os protections, which is very rare anyways): it's possible to use the [code] format parameter to read data. you can read the data of the original format string in [code], hence you can use it to read anything off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). again, let's assume our vulnerable program above, and let's try changing the value of [code], which is located at [code], as seen above: "}, {"sentId": 100, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "pgp or symmetric encryption are equally vulnerable", "em2Text": "authentication is not possible", "label": "PARENT"}, {"em1Text": "pgp or symmetric encryption are equally vulnerable", "em2Text": "the keys are stolen", "label": "None"}, {"em1Text": "authentication is not possible", "em2Text": "pgp or symmetric encryption are equally vulnerable", "label": "None"}, {"em1Text": "authentication is not possible", "em2Text": "the keys are stolen", "label": "AND"}, {"em1Text": "the keys are stolen", "em2Text": "pgp or symmetric encryption are equally vulnerable", "label": "None"}, {"em1Text": "the keys are stolen", "em2Text": "authentication is not possible", "label": "None"}], "entityMentions": [{"start": 238, "text": "pgp or symmetric encryption are equally vulnerable", "label": "ATTACK"}, {"start": 545, "text": "authentication is not possible", "label": "ATTACK"}, {"start": 579, "text": "the keys are stolen", "label": "ATTACK"}], "sentText": "p s to s way tore keys is   seg on cl a ie ssl nt a , pp.t if her my e sees t pgp  ssl o be  app.if no g way  to o  f securing ke key ys a  on  pr clie mob e  hard.in ile  authenn nt e  af the k te  t, ey is ou processor.oauth t, thn be  pgp or symmetric encryption are equally vulnerable.v ky ers is eg pgp se  keys or  us, symmetic ke client y  s is equy hard.in tht ca te se pgp is a non-sene bu t, rden on e mobile pr is ocessor.h is an useless, since it also he a  fing  (n  s client . use simple ssl and c processor.oh ross y fingers , se authentication is not possible if the keys are stolen? (on  be ?, y  ou ser server vr authentican is pe wi , th thi) "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 99, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a response to the recent [link] and [link], what is the best way to secure your website against brute force login attacks? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 119, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is that the attacker simply adds a slash then some encoded javascript (an image tag with alert box), which kills the page.  simple and effective attack.   "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 139, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 188, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "so naturally, i thought of just sha hashing it since we're just using it for identification.  the problem with that is that if an attacker knows the problem domain (an ssn), then they can focus on that domain.  so it's much easier to calculate the billion ssns rather than a virtually unlimited number of passwords.  i know i should use a site salt and a per-patient salt, but is there anything else i can do to prevent an attacker from revealing the ssn?  instead of sha, i was planning on using bcrypt, since ruby has a good library and it handles scalable complexity and salting automagically. "}, {"sentId": 21, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "brute force attacks", "em2Text": "password stored unencrypted", "label": "PARENT"}, {"em1Text": "password stored unencrypted", "em2Text": "brute force attacks", "label": "None"}], "entityMentions": [{"start": 38, "text": "brute force attacks", "label": "ATTACK"}, {"start": 88, "text": "password stored unencrypted", "label": "ATTACK"}], "sentText": "wouldn't this just make it easier for brute force attacks? (bad)does this imply that my password stored unencrypted? (bad) if someone with (hopefully) some good it security professionals working for them are imposing a max password length to avoid password stored unencrypted, should i think about doing similar? what are the pros/cons of this? "}, {"sentId": 37, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "see the full stack trace including your file name and file line numbers", "em2Text": "give them some idea of how your app is architected", "label": "None"}, {"em1Text": "give them some idea of how your app is architected", "em2Text": "see the full stack trace including your file name and file line numbers", "label": "PARENT"}], "entityMentions": [{"start": 639, "text": "see the full stack trace including your file name and file line numbers", "label": "ATTACK"}, {"start": 724, "text": "give them some idea of how your app is architected", "label": "ATTACK"}], "sentText": "here is xxxxxxr question to look xx: l [li hackxxxxa nk]axd more info on pdb is  fxxxxxxxxxxxxn genxxxx, pdb  i always ixxxxxe pxb files  used  xxxxs in my dxxxxxxxxxx, xxe gaixs a here re  always xxo hxxe  xxxp to ignore.if you xs  never expose a stack  idea trace to yxxr xxxr    users (and generxl xxxxxxx, ly y include o numbexx. u shoul xs  incl xs (and n exp ng os 't e 't udi the xg dn'  if your  which t), there  xxxxxxxxxxd  xxb ixxxt really any xxxxxxxxxl security ris wxxxh  architect fi o le stack  ed  yo dn'  to xxxa  u k of dep  loying pdb  expose filexxxxxn a uxxr visible  a stxxk tra xo ce hapxxxx, txe user  idea  t can see the full stack trace including your file name and file line numbers.  txxs could give them some idea of how your app is architected whixh w yo xxxd potentially help them if hxc o kxxxxa bigger xxc is urity t if hrxxt is soxxxxxxg lxxe [ to lxxx] which wxxn really  anxt is her  xxxd on your dlls wil dn' l axxxw xxxm to vi info ew your sourxe  is c incluxe ode, w fi ould xxs ith or wixh too o  ut xxb files. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 52, "text": "using the [code]", "label": "ATTACK"}, {"start": 92, "text": "open a server up", "label": "ATTACK"}, {"start": 1021, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications  only caused by using the [code] and c te oul user d it open a server up f such o compil r ing r a  ttack (if ? if you use [c attack.if ode] just for gener att ating c server # so a urc so e code, t (which hen you  (which only need a p (which er be mi a ssio anything  c n to save the gen anything erated files gs  to so on me directory  generated or to noting at al you l (if it code  is poss rated ible to get th you e code generated i  won't this nto a memory str sh  so guarantee e eam)if  t you use it for c a ompili memory ng gener att the ack.if ated c# source, then you ne s ed  file ttack s a permiss fine.if ion to run  then &amp; a   [code] (which may not be av files a on ila some ble in some limited environme all nts such as use  that  shared hos gs ti can  how ngs).if you just genera is te files &amp; compile them, the code  any n it probably won't be harmf sou (which rce, ul (although some if one cou stream)if ld probably abus memory e your application r   code to generate many, many files and attack the server using some kind of dos attack.if y them, ou a i only s l t so  e load &amp;  files ex you e a dep fine.if ends  de if p some ends lso     fine.if all cute the gene can  files rated co files de, then it depends on how you generate it. if you assume that there are no bu w gs in c#/c of odedom and  it can guar he antee that ants  the generated code   safe, the i [link] s saf   gene e, then you sho  uld be fine.if your code contain things such as [link] that c someone an be provided by the user (in some wa he y) tha and n the compili  user can write and if  run anything he or she w eam)i ion f ants on your server, so this would be potentially quite and  dangerous. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 119, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whol he  t e point  as xf  xxxt   xxxxxxg a  xxxxxxg xxxxxxx xb d is  and i and n c xb   db s dxo ame ase a hacker gets access to the database  . p  if i  a  point sxxxe t , h  ju int e ut    xxxt in xxe  xxxt db  a   xxe  just xxe wixxxn the s  axe xxw xb  as xxxxe  c   hacker the xxxxxd xx h xxxx  xx xb   , isxxt   it ju the and  st l t ike  l h  e xxe  db i it   co  dxx? am an t d  hxxxxxg st  th xxxxxxg e h  cod  e handixg xx? the a in ckxr txe \" and se xx xxxt c ock, xb  od point e\" jus db t ? i am p t  x    e ut t   and he tix s he  i axe g up a dxo codxx? r   gets ixxx a t as  with a l cod  xxxx is e ock,  ase and handix a g th t e  t int l xxx xxxe e a r xxe se   the key. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 152, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my pxxxm   is tha even t  an is d evxn h xy pxxj ad e and ct is 1xx% , xxd not shad, it is ct  highl ddos y xxxe problem  dxxs ptible to o xh ccasional ddos attacks. "}, {"sentId": 14, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "run fortify scan", "em2Text": "i'm logging the exceptions using [code]", "label": "AND"}, {"em1Text": "run fortify scan", "em2Text": "get access to this info and get system info", "label": "None"}, {"em1Text": "i'm logging the exceptions using [code]", "em2Text": "run fortify scan", "label": "None"}, {"em1Text": "i'm logging the exceptions using [code]", "em2Text": "get access to this info and get system info", "label": "None"}, {"em1Text": "get access to this info and get system info", "em2Text": "run fortify scan", "label": "None"}, {"em1Text": "get access to this info and get system info", "em2Text": "i'm logging the exceptions using [code]", "label": "PARENT"}], "entityMentions": [{"start": 7, "text": "run fortify scan", "label": "ATTACK"}, {"start": 52, "text": "i'm logging the exceptions using [code]", "label": "ATTACK"}, {"start": 151, "text": "get access to this info and get system info", "label": "ATTACK"}], "sentText": "when i run fortify scan on my project i do see that i'm logging the exceptions using [code] and it says this is not the right way because attckers may get access to this info and get system info from this and plan an attack. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 206, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 289, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te cl  k  xx me  e  t p    e      (o x a a  e r i s  u ad  nx  x  x te   x y xy d s xxe a     x  o hexr ntro          s do xe   xl o ( o o    \"   n   s tx  . e si e  k te a s n    p ue pos    a th    o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url   r  tx  m d  peo ck ple      o e   wn  de  l, f th r  u      x   do   p  d x   s ps o s    x    x  xe t  k   x  x a xe t  t    v oo  d     e e. n n   y   y    p  o  e n r   conve  x   p  t e x cli    o d c    i    wed  ng  e  x.  d   xk f i t a    t  s t a .  , t e   x  d  oo x e   n  x y   x  d      t e f x      t   l  y x  axd  e  xx   o k  l  \"\" e  s d   do    ax xx d t t  o d xh  , xx  t w  l k    xs d     k   m p a d p h xd      pe y e   xx a   s    a p s  t x   a coc l e  xh   xe y si x      rap  \"  u n   t x  d  te r x x  y d  x xg  xh   o xp l y xt   e pe  on  x xx page d  e  xt y  x    x cx    a s x  x  x s l xx  x e y xd t   x  a  e x s o s  xo e c     o  e i as ate  d t   u t  x  xh x   d    k    ur   x  o l e  xx e n  e  xd s e  xxe xxx   y  o n p ki  d  d  e  d, y   m  do p ay     u a x  xy a  s n  , i e x  s n    x   .  e trd  tx   ay e     p x  e s   x e  e   xt x xo xxx  \" s o e n      a   w e  y  \"x \"p \" xh  y o t x   xo  ght x d   xx  x  y r im    t ap\" x  s   axd to e  y fo l    e i xx ck  re xd  e i e s s  p r  a x o   x\" i,   e do tc. xn  x xx x xs re, t a h   d e  xxxxxy t  e  d ra   e   o c  x a \"  xxo been  u    xe l ,  x\" c o   uy     n sit    es p  e  s  t f t fm  a  k xe  h i t  e p xe    xr   x x m        axd rxxl   e d   s ly is  an    y xe o    y a  f    t  e  a th e e     s c  x  xxxx  l r  r xd  t a   s ce   u        hexr  x\" oo  e o    x    n on r  x xxd   th page xr e   p o  r clk  m    e si  xg e       t.  xe  t xxl x d. "}, {"sentId": 44, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "xsrf", "label": "ATTACK"}], "sentText": "in order to prevent xsrf i force such request to be [code] requests. with [code] it's trivial to generate a xsrf using the following: "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 162, "text": "dos ", "label": "ATTACK"}, {"start": 511, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": " sxxx xs maxx o d   otxxr  parameters pxxxxxxxxv t   xt  fxxxx s  upxxxd eri sxxe fy() out  sxxe  ( sa r xe an  d s xi uxxxx  d te-xxxe os  l  ituxx o t xt  ut x dos xn  lxxx  funcxxxn para  m l  al t o te-xxxe f xxxxxe s  ( etxxs   s  xxx sxxx xr f set) uncxxxn maxed s of th s e s maxxd a  xxs  ab  me fxxxx same x lxxx x  n set) xxxxx same  (   set te-xxxe ) o  s    o r  r d xxxx os ab po of st l the st of   e xxxx set  e n funcxxxn    xxxx sam    e con   st n  x  xxg st d xt  xt xxs  o n s t  vi param a maxed out post parameters ? the  xxxxxe als a ou  t b 4mb.  o cxxxxx   xx d same os xd xr  ab the  d  s  xxxxe ab xxx t xxxxe st  c   again  sizes  t onx sxxe xg sxxx ( xt l f lxxx unc again xxxn e i r xxs of poxt up os xxxd size  s t  xxxh lxxx xxn xr t post h post an   xxxxe o  s ( t 4mb. "}, {"sentId": 8, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "hijack dns server ", "em2Text": "inject maliciously modified library", "label": "AND"}, {"em1Text": "hijack dns server ", "em2Text": "opening the door for different security attacks", "label": "None"}, {"em1Text": "inject maliciously modified library", "em2Text": "hijack dns server ", "label": "None"}, {"em1Text": "inject maliciously modified library", "em2Text": "opening the door for different security attacks", "label": "None"}, {"em1Text": "opening the door for different security attacks", "em2Text": "hijack dns server ", "label": "PARENT"}, {"em1Text": "opening the door for different security attacks", "em2Text": "inject maliciously modified library", "label": "None"}], "entityMentions": [{"start": 59, "text": "hijack dns server ", "label": "ATTACK"}, {"start": 86, "text": "inject maliciously modified library", "label": "ATTACK"}, {"start": 123, "text": "opening the door for different security attacks", "label": "ATTACK"}], "sentText": "for example, they mention the scenario where someone might hijack dns server and then inject maliciously modified library, opening the door for different security attacks. now, if hacker can inject malicious code through google cdn, then he can probably do the same if jquery is served from the site itself, right? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 290, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 375, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do popup wx   xs x trick  t s a xe   re  po  xxp a no do xt  l  xxxxxs te e \"  xx xxx c  on   e xxxt   x  s  xxx  do  ir xx  x s that  xx xr \" x th   de e can  d  li xxxt vered,   e   .  x itxd d  d  o hxxe e  si y t a  y xs   can    x e  xxxt p ay o m pu op s u  d  ge ex  p is s to e    convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or  e xxxxxs e  exp axd lo pas  a t xe xn  xn   k w xx e x ell-r  users   t x  xy    t   exs  t he   r ar  e cxxxk    pexxxe  explo   xe    s   xo  pxx   xxxt e el p f pae w    e e s w x n s p k o impre  s i , b t x  i  g    a are ht expt a  x probx  bux xs xs    .  y   xxl  d x,    and txe  p  xxxt  x    d    r d ob   exxt x x  i  xs x  w xo i n pag ho i  x se e f   xxd          the  asso e ciaxe xx xf   xe   xx e   te   xxy  explo   y itxd xxd do xx xt   xt xo e  a , xu xr e     users  x xe xd  xxxd     x,  t a   well-r xs xy  aft   xe xd xxxxp xxn  bug.   dixx i,  d t   e he    xy si x re di s. xxxt a  the xt   xxxs   secy ox  r   xo t  y xxxr th  f xt e  axd xxy u tx. ps  nxt b xxxx xs y    n  n e x  d im  pres,  r ixxxxxy xxxt   a  ge t     .  a d     x a  te   d xe w d i a  v,    d t i,  \" h  xxxt  t xxs  ay  xt    tx.  d wxxh t   h  e he  f x  x  xxt     xxm  x t f   xs  tx. impr   any x,  xxy xxxx t x te xe m  i  ai exxt xxxxxxxxx o . d n pag o xxxxp xn    xx.    n y d s te  e expxxi xxl   xt  xxe a t y  , ted    even  e y m esxx  xt n xy xxy  xxxxx esxx s xxxxxxxy s s   xf    a way  a expt xd xo    m   \" x tr to a xn p exs \"  xxxxxxs xs   onvxxxe   ers  txx xx x xxxxxxx s a  nd to  s ed i f xe t  e e    ss s k xxx xxe   a xxxxxxs x a xxy those  fo m r way xe ess p ploit xxxp ag xs e  peo  ple     esxx p any ag t  xe e xxe a  d   ixx t xx,    . t  xxs  e n xx. in   txxs r li esxxxx, security  h   xx to xt   sxxr xx  xt      t  oo  di  xxy x xx xg , e xx   a    xn he   x t d h xs secuy xt  ciaxe    xxxt of t y h p  x    xx  d te prox xxxxxxs xm  i, a c e   onvin  e c xe   x trick y  security is t i e ty m  xe ase  r   r i   x to xe rxe   exs t d y x o f t  is t ge prox  hose   he use   x,  xt r's n a y  tl r txe fo   ir  tx w x t s o ex e ploit   xe those     dix xx. xxxxy xxd  xs wn comx exi pexxxe xs  d  t secy    xr  secuy axd r bi  xd the x   me wx ssage n ng   t do g  c dxx. "}, {"sentId": 73, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "a malicious site to get around this", "em2Text": "using an iframe", "label": "PARENT"}, {"em1Text": "a malicious site to get around this", "em2Text": "modifying my http header", "label": "None"}, {"em1Text": "a malicious site to get around this", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "modifying my http header", "label": "AND"}, {"em1Text": "using an iframe", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "making a request to the target site", "label": "AND"}, {"em1Text": "making a request to the target site", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "modifying my http header", "label": "None"}], "entityMentions": [{"start": 211, "text": "a malicious site to get around this", "label": "ATTACK"}, {"start": 266, "text": "using an iframe", "label": "ATTACK"}, {"start": 283, "text": "modifying my http header", "label": "ATTACK"}, {"start": 311, "text": "making a request to the target site", "label": "ATTACK"}], "sentText": "from what i understand modifying  [code] d  only ge aroun are d  d t target s you d r c re ook are ies for t re he curr requ m est ent site [code]  yo a   an re are  u are for  on.  would it   be possible   for a malicious site to get around this by target  ethod?  using an iframe, modifying my http header  , making a request to the target site or some other m method? ethod? "}, {"sentId": 53, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 38, "text": "someone crawls the image directories of your server", "label": "ATTACK"}], "sentText": "he comes the problem: t is posse that someone crawls the image directories of your server. but you wt o prt your users from such . "}, {"sentId": 69, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "logs into your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "AND"}, {"em1Text": "logs into your site", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "PARENT"}, {"em1Text": "flash app can connect back to your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "flash app can connect back to your site", "label": "PARENT"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "cookies are shared to the flash app", "label": "PARENT"}], "entityMentions": [{"start": 131, "text": "logs into your site", "label": "ATTACK"}, {"start": 156, "text": "then browses over to another website with a malicious flash app", "label": "ATTACK"}, {"start": 226, "text": "flash app can connect back to your site", "label": "ATTACK"}, {"start": 293, "text": "cookies are shared to the flash app", "label": "ATTACK"}, {"start": 343, "text": "the flash app to hijack the user's session", "label": "ATTACK"}], "sentText": "by adding the crossdomain.xml, the main security concern is that flash applications can now connect to your server.  so if someone logs into your site, and then browses over to another website with a malicious flash app, that flash app can connect back to your site.  since it's in a browser, cookies are shared to the flash app.  this allows the flash app to hijack the user's session to do whatever it is your website does without the user knowing about it. "}, {"sentId": 47, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "dom-based xss", "label": "None"}, {"em1Text": "xss", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "xss", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "dom-based xss", "label": "OR"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "xss", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "malicious script is generated dynamically on the client", "label": "PARENT"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "xss", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "dom-based xss", "label": "None"}], "entityMentions": [{"start": 112, "text": "xss", "label": "ATTACK"}, {"start": 399, "text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "ATTACK"}, {"start": 641, "text": "dom-based xss", "label": "ATTACK"}, {"start": 668, "text": "malicious script is generated dynamically on the client", "label": "ATTACK"}], "sentText": "i am not concerned about other kinds of attacks. just want to know whether html encode can prevent all kinds of xss attacks. is there some way to do an xss attack even if html encode is used? putting aside the subject of allowing some tags (not really the point of the question), htmlencode simply does not cover all xss attacks. for instance, consider server-generated client-side javascript - the server dynamically outputs htmlencoded values directly into the client-side javascript, htmlencode will not stop injected script from executing. there are a few additional vectors to be considered... including the third flavor of xss, called dom-based xss (wherein the malicious script is generated dynamically on the client, e.g. based on # values). if you're using ms asp.net, you can use their anti-xss library, which provides all of the necessary context-encoding methods. "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 35, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 148, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "i e f  s t ried e  an t a if s acr gets ahold of the data in the datastore, as well as our hash salt, i'm   r i i'm n ri he d an  the our   y could brute force the sensitive data. data.   "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 251, "text": "command injection", "label": "ATTACK"}, {"start": 608, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i s won a  s de  aly  i is n s g, now i a  woni by y a s   e (very i alre simple)  s ady th the most te  rect v   for er just sions  we exe sh, cu  o e f (very de  te  it r (vy ing of s, bas for , k  sh etc. i i s it p  oss sh, ible t  o  a g   te et command injection by execu (very  ce ting th wonde is (very  ell s)  of  woe of  scp  ( ng one , t? de s sp w t y e (vey   e     of the mal  icis  fact that one can a of le y y e a now dy cu e te code     if t icios hey e am  woe  scri  p ady ri  a sh h ( the te  v can e  ry , l f c  ou, i am cue  j r u wonde st wo m , al it icious  ju g i   wond php e f a variable can contain malicious code    wi le for ee  rig in already    p  : (very   "}, {"sentId": 70, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "images only some people are allowed to see", "em2Text": "putting them into a publicly accessible directory", "label": "AND"}, {"em1Text": "images only some people are allowed to see", "em2Text": "there is a change other people can see that image", "label": "None"}, {"em1Text": "putting them into a publicly accessible directory", "em2Text": "images only some people are allowed to see", "label": "None"}, {"em1Text": "putting them into a publicly accessible directory", "em2Text": "there is a change other people can see that image", "label": "None"}, {"em1Text": "there is a change other people can see that image", "em2Text": "images only some people are allowed to see", "label": "None"}, {"em1Text": "there is a change other people can see that image", "em2Text": "putting them into a publicly accessible directory", "label": "PARENT"}], "entityMentions": [{"start": 38, "text": "images only some people are allowed to see", "label": "ATTACK"}, {"start": 93, "text": "putting them into a publicly accessible directory", "label": "ATTACK"}, {"start": 144, "text": "there is a change other people can see that image", "label": "ATTACK"}], "sentText": "sort of. yes people , f yo the u have images only some people are allowed to see, d your a e putting them into a publicly accessible directory, there is a change other people can see that image, h allowd   into s t gain o be undesi. i s publicly o do intensiv peop  le e nt thi file_get_cos nk ( read might be  some )  wrong)  ) th only at i to t will  or gn y  10 secs you'll ,   n file_geto i nt w) es  a te   mo  re page load, fis  as l have to cy th yol e imag, wh is a rath t  hat er e opera, more than chang ( e  using files or read pae  ie fi( ) a f e iles d . "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 41, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "set the csrf cookie using set-cookie", "em2Text": "supply a matching token in the post form data", "label": "None"}, {"em1Text": "supply a matching token in the post form data", "em2Text": "set the csrf cookie using set-cookie", "label": "PARENT"}], "entityMentions": [{"start": 19, "text": "set the csrf cookie using set-cookie", "label": "ATTACK"}, {"start": 66, "text": "supply a matching token in the post form data", "label": "ATTACK"}], "sentText": "  the attacker can set the csrf cookie using set-cookie, and then supply a matching token in the post form data. since the site does not tie the session cookies to the csrf cookies, it has no way of determining that the csrf token + cookie are genuine (doing hashing etc. of one of them will not work, as the attacker can just get a valid pair from the site directly, and use that pair in the attack). "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 171, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i hae a standalone spark cr running on a remote server and i'm new to spark. it appears that ts no authn schee protg the cluster s (7077) port by de. anyone can jt simply submit their own code to the cluster without any restrictions. "}, {"sentId": 113, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 417, "text": "which can easily be decompiled using dotpeek or any other tool", "label": "ATTACK"}], "sentText": "i want   wh h n en   o know to se opn ce e  x  eax usi d ng y be   my xa   xax   easily s maxxn code   or   bu . xh  t     sp e t nc a ot  wh  en ll dxx mn x knw s y when deplox nd  y  ry g o andrd  be or .   i know  a t  xa  t . n n xx d xxxxxx or xxx  d any i  xxt to   opn xamarin.is conxxxxs to h  t  iv kn  ay code ow dg  e co e  b ax y y e d  e u n t xx is x  xd d o es t  he .n xt e  t  t code kw  in d and ll which can easily be decompiled using dotpeek or any other tool d xh ad e  xxy code will  co be visxxx bu e ig my   enc but ry   mn po cd  e n keys r whe  n n xxy d   t t d o o y    o  xy any otxxr sxxy t xxxxe   ed data xx xas h  xxxxxxxxy is xxy r sx  ce i xy xe xn n d  serxr xd y app   secur xh e  m . oxxxxxxxxx t n  s any e   is an option xxt i t  i or s t et me.  o kn whe  n x b oxxxxxxxxxn e  xx e xxe w any t ch   h will er x  .  xxxxe e gu  ide me   to  o xxxe n s i relat  be   sse bexxe it is   of m .n   u a   option nd ay xx   y  ch co  e xo   t  nn to be  me. "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 43, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "the whole point of using salts is to avoid the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes . thus, it only needs to be long enough to exclude the possibility that such a table already exists for a specific salt. "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "brute force attack", "label": "ATTACK"}, {"start": 70, "text": "guesses the input values", "label": "ATTACK"}, {"start": 177, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 219, "text": "get in", "label": "ATTACK"}], "sentText": "that's how it works right? but iv'e read about brute force attack. it guesses the input values right? with the procedure above. doesn't it shows that the attacker only needs to get the $userinput information correct to get in? he doesn't need to guess the long $encrypted string correct? "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 153, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudfla my re on my website and   i wan my t to keep  i my s ddos erver's ip (the orig cloudfla in i cloudflare p) private, am   to to avoid ddos attacks bei apache, n private, g sent dir server ectly to    apache, my server's ip. my server  ip. uses  cloud orig flare apache, php, my my sql. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i wouxd  i i f like to k has now i xxw f it   has any buil ssixg d-xn   mxxxxxxxm thxt w to o t xxf o uld alxxw limiting the nuxxe se r  i i  of conxxxxxxt caxxs xo th a e web sxxxxxx, thus addre th ssing  xxxxxxxxxxy the possixxxxxy xf a dos attack? somxt i hing lxxxxxxg  similar to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe of wcf? "}, {"sentId": 85, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "fake it to get access to the other application", "label": "AND"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "PARENT"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "this isp does not do packet inspection", "label": "OR"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}], "entityMentions": [{"start": 0, "text": "someone knows the ip-address of one of our application servers ", "label": "ATTACK"}, {"start": 115, "text": "fake it to get access to the other application", "label": "ATTACK"}, {"start": 572, "text": "an attacker that wants to fake my ip-address", "label": "ATTACK"}, {"start": 633, "text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "ATTACK"}, {"start": 726, "text": "this isp does not do packet inspection", "label": "ATTACK"}], "sentText": "someone knows the ip-address of one of our application servers an ip-address  lisxxxxxg d wa xxa attacker t xxs to fake it to get access to the other application operxxxs  whi s ch he knxw  my wa s the l wa ixxxxxn p tha acket g socket a to nd protxxxl pro not xxxxl  ofxxo he  wants al xxxxr texs t of he h know e straight txe : ade sxxxxt r of  my packe fxxe t  xxs xp xxxk  s ixxxxxxxxs ets xxe  to have xxxxxxxxxx.   pxxxxt th ip-a packe xxe t ddress e ip  we not bserxxr ip as  xxxy trxxxxxxxxx. so k xn n  ow  xo pxt xxi  this applxxxxxxn s  xxxxxxxxg s xo xxxxxxx: an attacker that wants to fake my ip-address needs oxxxo  to compromise the very same isp that is in charge of the ip-range my webserver operates in - or this isp does not do packet inspection. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notabe \" xxxxxxxx. e s cn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the ck if might et a bugx.  y, e n page xf the xxxe xxxxd do xt to, but a well-crafted pop n t the user axd xxy t be dy ad with te xxe man s e d y y uxxxy sites xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e sy of e uss contrl or thr on compxxr ad xxxxr browsing des. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 158, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 225, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i n  for  of t e er o   a ut the n  messag l es u    i t i  n  big  e  add my we hook b even hook . e se ver, a malici al ous u of   s   o   s hook al  er cn add my bot to a thousand big groups ad l pos n     s malis ibly e  result in denial of service for all other users. e othe n  al servic grs e l if tel messag othe n  n  es  gm e hook   gr i a ma  y  ibly m e of  impl  d s my  a rae ll ome rae  even limiti a  l  of ng   n grs sc  h us  er a i c al o  er  rae  mal t my h  e ic web ious mal malis is   ns of  may s ns  h till users.     may resul u t in n iy i ibly to  l  denial i   of of  all e f  or  gm al ms  gm messag  l othe n r  denial users. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 45, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 111, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 193, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 264, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a common method ts been med is to s:    1) create a random guid/cryptographically strong random number    2) send a unique url containing the random number to the user's email  address    3) when confirmed, the user is asked to change password ho, ist this n to a [code] attack? f sending a tempory passwords over the intet to an email is , what's the dife n dg tt ad simply g a ue url wh the attacker can nave to? he i missed a ky sp somewhere tht wl make ths system more secure (or is te a better way of resg te pass? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 93, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "listbucket", "em2Text": "list the keys in a bucket", "label": "None"}, {"em1Text": "list the keys in a bucket", "em2Text": "listbucket", "label": "PARENT"}], "entityMentions": [{"start": 142, "text": "listbucket", "label": "ATTACK"}, {"start": 243, "text": "list the keys in a bucket", "label": "ATTACK"}], "sentText": "i am using getobject and putobject requests on amazon s3 and in creating a policy for access to the bucket i discovered that if i don't allow listbucket i get an 'access denied' error. the problem with this is that listbucket means a user can list the keys in a bucket and this presentsa security threat. is it possible to allow getobject and putobject without allowing listbucket?or is there a workaround for this? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 51, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws are a e \"xxxxx\" . hostie ss n ue popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs en jt the click itf migt expt a .  y, the man e xf te xxxe d do xxxt too, t a d poxxp xn dixxxt the user axd xy t be dixxxy assod with the xxxxxe n pas wxxe d by y uxxxxy ss xs a way to \" uses ad o esxxxy fe ad impre, e. n txxs respe, the secury aspect of the probxxm y is e y of the us conl or thr own compxxxr and xxxxr g . "}, {"sentId": 93, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "listbucket", "em2Text": "list the keys in a bucket", "label": "None"}, {"em1Text": "list the keys in a bucket", "em2Text": "listbucket", "label": "PARENT"}], "entityMentions": [{"start": 155, "text": "listbucket", "label": "ATTACK"}, {"start": 309, "text": "list the keys in a bucket", "label": "ATTACK"}], "sentText": "i xm using getobject an  d a  xxxo o xxxxt rs on xn s3 axd in crg a pxxxxy f thi or acc  s to txe buxxe allw t i discovered  list py  th an t if i dt axxw listbucket i g a r  et an xxxxs can s de' error.  l the prxxxxm xxxh  t  puto t q bjt uests hi lxxxxxxxxt s is xxxt l r an s is denxxx'  an t s a user cn list the keys in a bucket xxd ts e allg a secu can  a rxxy threax. xs it pose xo hi uxs s  alxw geto is bjt an can d pt wxxxxu  t c on an  allowing lis an tbuckxxr  a is xxxxe a worko that und fr thi a s xn ? "}, {"sentId": 159, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "injecting data into the mysql tables", "em2Text": "make a get request to the [code] script", "label": "PARENT"}, {"em1Text": "make a get request to the [code] script", "em2Text": "injecting data into the mysql tables", "label": "None"}], "entityMentions": [{"start": 265, "text": "injecting data into the mysql tables", "label": "ATTACK"}, {"start": 339, "text": "make a get request to the [code] script", "label": "ATTACK"}], "sentText": "i found a couple vbulletin sites i administer getting hacked recently. they use the latest version of the 3.8 series (3.8.7 patch level 2). i am usually pretty good at finding the holes where they get in and patching them up, but this one is stumping me.  they are injecting data into the mysql tables. the attack always happens when they make a get request to the [code] script. i was able to save data when the attack occurs.  this was the [code], [code], [code], [code], and [code] arrays.  the only thing i saw that looked out of place is that there were two new [code] keys, [code] and [code]: "}, {"sentId": 66, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "decompile my apk", "em2Text": "retrieve this \"somesecretphrase\" ", "label": "None"}, {"em1Text": "decompile my apk", "em2Text": "access the server", "label": "None"}, {"em1Text": "retrieve this \"somesecretphrase\" ", "em2Text": "decompile my apk", "label": "PARENT"}, {"em1Text": "retrieve this \"somesecretphrase\" ", "em2Text": "access the server", "label": "None"}, {"em1Text": "access the server", "em2Text": "decompile my apk", "label": "None"}, {"em1Text": "access the server", "em2Text": "retrieve this \"somesecretphrase\" ", "label": "PARENT"}], "entityMentions": [{"start": 168, "text": "decompile my apk", "label": "ATTACK"}, {"start": 210, "text": "retrieve this \"somesecretphrase\" ", "label": "ATTACK"}, {"start": 291, "text": "access the server", "label": "ATTACK"}], "sentText": "now, the question is - is it a safe approach regarding the reverse engineering? for now i can think of no other possibility to get this data. but if someone is able to decompile my apk, he will be also able to retrieve this \"somesecretphrase\" (rather hard to do on the server side) and then access the server, isn't he? is it a real threat? is there any other possibility to authenticate my app by the server? "}, {"sentId": 43, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss hacks", "em2Text": "user could potentially enter javascript that another user ends up executing", "label": "PARENT"}, {"em1Text": "user could potentially enter javascript that another user ends up executing", "em2Text": "xss hacks", "label": "None"}], "entityMentions": [{"start": 31, "text": "xss hacks", "label": "ATTACK"}, {"start": 45, "text": "user could potentially enter javascript that another user ends up executing", "label": "ATTACK"}], "sentText": "this introduces a high risk of xss hacks - a user could potentially enter javascript that another user ends up executing. since we hold sensitive data it's essential that this never happens. "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 151, "text": "[code]", "label": "ATTACK"}, {"start": 325, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 399, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in j shoxn ava the oxd  xxd  ] strexm  w overxxxxe ay xf  as sxxxxxg a s e e the cret, such  e as or   likelihood t  a password, would  wa to s to use [code]  of as you could o well. verwrite xxs data when yxu xxxe dxn it. e xxxh very  it. however this has s xxxxxs inc two e xxxn shown two  xxxd  to to  be insecur way e as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. this i i s horribly u  xxy the  w ,  s could  but xxxt if th overwrite e th same e  secret wxxx.  were storxd xxxs  on buffers,  txe  problem   stack xf a threaxxs [co  old sxxe d am e] metxxx? cxr very e woxxd xxxxl need to lea xxd ked  be taxxn to t would ermxxxt t will o e the thxxxd xxxc shown i  efuxxx,  wa xxxx.  wa  xt s xo tha da t i  on the t xxxxd z soxe ero out its da a tx, but txxs p data rob   of lem was present i a n t xxe he old  secrex, wxy as well. one maxxr pr the oblem i  lea see xxxxi intexxxl ght xxxy is thxt i can't think o need f a safe way to e  get dxxa in and xxt of xxe dxxa  cont cxxxd ainer. you a  could min could xxxxe xxe likxxxxxxd  d of a lea er ked   xxxd tha secret by usin interfa g stxe  am xxxxxxr s with very sxxxl inxxxxxl buf wxxxd fer of s,  a storxd  but in the end xxu win of d up wit xxxxxs   h the same pxxxxxm xs [xxxxx. [exi store t: wouxd a single [xxxx] member and a flag w in xxx? a up lthouxh xxxt wxxxd l elih imit you as  to xxe s t xf : e but cret p adds er claxxl adds oa that der. txxs adds moxe u xa ked ta  e gliness, but it xxxxt be  xxe easy one  enough t txe o hide bexxxd a well by -wrxxxxn interfa lik would xxxh min one  ood ce of .] xxxxe sxxxxt ] you buf  could store xxe sexxxt as th  oxe or tw up o [cxxxxx. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 53, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 140, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "you don't need to make salts really long and it's not important that they be cryptographically secure. the point of salts is simply to make rainbow table attacks harder as you no longer have a 1-to-1 mapping between passwords and hashes. (they also keep administrators with wandering eyes from seeing 482c811da5d5b4bc6d497ffa98491e38 in the database and then knowing joe's password is \"password123\".) "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 60, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i m playing wh image s to a website d i foud out abot these decompression bomb attacks that can tae place when it's allowed to d [code] files (ad some o. since i m going to change the ud i, i want o e sure i don't become a vm of this attack. so when it comes to cg if a [code] file is a bomb, cn i just read the file's headers and make sure that h and height are not me than te set , like 40 or whatever? s it a valid method? or what is the better way to go? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 196, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 236, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d prs ump  xr sts      t cxn xxl a  r d d x, e xr on   ou've xe s   x . . imxu c t if al x, can   rd e. tt strxn  gs  mean xf s o on e y bee e t [c    x  xx s ,  strs ed e [c xx da s you  ox, xf another process can dump memory x. , xs no way you can get rid of the data bef s oe [li]    yu kic sxxxs  t pro e e e ss xe ks  xxxt . "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 599, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm  bu nxw to r   xu cxf and i wxu xxxxe xd  i i bu  f lixe to k     hxs n i' xxf m bu  b   xxxs ul ixx ow i x mxxxxxxxm x d- w f  cxxxxx it   r  has any bu buil y  il ssixg   d it -xn   buil    m  x  xxxxx  x ow m  -xn xh xo x xl t w to nuxx   o o t  r o y f    xxf o ul mxxxxxxxm d to  alx e xw xi bu mi  y e -xn  tin bu g the xxxx se  imi r  to  e  d- bu xn a  xe  e   r  i i  of xo xh   nxxx bu  nxxx y   m xxx xxxxxxx n m xxxt cxxxs xo   th a e ow  we  b sxxxxxx, thus  se addre th xxxxg  xh  xxxxx ow x    xl l to imi xxx  x m y th i e possixx x  o xxx alxxw  r  i y th  xh  xf xx has xxx  a dos attack? sxxx mxxxx d- xxxm  so k xxt t i xxn xxd   xt bu   g l ssing x xe  mxxxxx new xx  f  x simxxxr xm x xt  i xxxxg -xn  se   s  xm xxxx il bu ar to th se  sxxxxxx,   xx n xx r xxxg se   bu  xxn r ssing     xxxx,   i   cxf s  ssing r  bu  -xn xxn   xf   e axd new      is x i xxxxxe of wcf t  hus ?  x cxf  "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 141, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 191, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 318, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 424, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 463, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my pro to blem  be is in  hash   hash tha the gain   ord  likely  the  pass is w use o  rd (2   password t   would attack. i fee hash  use l the password would likely be intercepted. in (1), the hash could be extracted by a man-in-the-middle attack. the attack hash e password, r can no pass and w simply ord w simply use that hash to get access to the user's information t . in (2 interc my ept ), the a interc ttacker can intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 39, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "uploaded svg images on a website", "em2Text": "cross-site-script into there", "label": "None"}, {"em1Text": "cross-site-script into there", "em2Text": "uploaded svg images on a website", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "uploaded svg images on a website", "label": "ATTACK"}, {"start": 178, "text": "cross-site-script into there", "label": "ATTACK"}], "sentText": "i want to display user uploaded svg images on a website, but they're quite open to exploits: they serve the uploaded files from a separate hostname, specifically [code]. you can cross-site-script into there all you like but it doesn't get you anything: it lives in a different origin to [code] and can't touch its cookies or interact with its script. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wxxxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. xxxxxxe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click xxxxxf migxt explxxt a xxxx.  yes, xxe mxxn page xf txe xxxe xxxxd do xxxt xxx, but a xxxxxxxxxxxd poxxp xxn dixxxxxt the uxxr xxd xxy nxt xe xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"txxx\" users axd xo exxxxxxxxxy force ad impressionx, etx. in txxs rxxxxxx, the sexxxxxy xxxxxt of xxe probxxm rexxxy xs xxe secuxxxy of xxe usexxs cxxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can xxxz for xxxxxxxxxxxxxxs in the app coxe and xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or somxxxxxx. but how xxxxd xn attacker really go about trying to recover those keys?  are thexe viabxe approaches for a determined attackxr to somxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 97, "text": "dos ", "label": "ATTACK"}, {"start": 136, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs d   other pi sae fy() ot  ( saxe ad s site-xxe itun s s  r funcn maxd s of the sae n ) xxxxxr dos ab post le xn con  g t d st os via maxed out post parameters ? ple alo conr the  sie c n onxxg sxxxxt e s of pot d s mxxh r than . "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 16, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use any of the json data", "em2Text": "json data being assigned to a variable that you can access globally", "label": "PARENT"}, {"em1Text": "json data being assigned to a variable that you can access globally", "em2Text": "use any of the json data", "label": "None"}], "entityMentions": [{"start": 99, "text": "use any of the json data", "label": "ATTACK"}, {"start": 132, "text": "json data being assigned to a variable that you can access globally", "label": "ATTACK"}], "sentText": "google returns json like this:[code]but even without the crash script prepended the attacker can't use any of the json data without json data being assigned to a variable that you can access globally (it isn't in these cases). the crash code effectivly does nothing because even without it they have to use server sided scripting to use the data on their site. "}, {"sentId": 23, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "access the stored keys", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "injecting code into a users process", "label": "AND"}, {"em1Text": "access the stored keys", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "access the stored keys", "em2Text": "injecting code into a users process", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "access the stored keys", "label": "None"}], "entityMentions": [{"start": 18, "text": "user is logged in", "label": "ATTACK"}, {"start": 198, "text": "access the stored keys", "label": "ATTACK"}, {"start": 231, "text": "injecting code into a users process", "label": "ATTACK"}], "sentText": "however, once the user is logged in, there is the possibility for other users' processes on the same machine with sufficient privileges (generally only granted to administrative/system accounts) to access the stored keys, e.g. by  injecting code into a users process that will run i'm the context of the user and hence be able to do anything the user could do with the key (use it to decrypt, sign, or export the key, etc.). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 192, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 277, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    wixxxx message     axd ca  wixxxx axd x  s xxd  are a wi  notabxe  uxxx wi y \" xxxxxxx aspe  xe are xt ax not d   be xx.   hosxxxe to   xi axd te   the e s ca    n us and   e pxxu s s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url   (or xs even  xs  w the site  ixxxx t txe   xk  ck  of  are i s ct  f mixxt xt  pxxe   a  axd bugx.  y, the  p   main  txe page xf txe  w xx peoxxe   xe  malwar imx, e   xxxx  ck tra d  t  o     do xxt a e   t xx o,  ixxxx y  d  but a well-xxxxxxd p he xp n xi er xxxxxt the xs sxxxs  t   exxs he txe xr er axd xxy not are  b into e dy ad s  wi xxt  ad th th r e xxe d    y   us  xr man page do to   an .  s xr  e d b xxt s  y y   esxxxxxxx  xxxxy sxxxs xs   the   xxxxxt a  sxxxxxxx y t a o \" w   xs  txa t the xe  t t o p\" u xs s poxu xxs  c xx k and to axd  exxxxxxxx  xxxxxr    xxe  e  wi x securixy s e     a sxxxxxxx    xxe  to of xy important    fe d xm xx x, xxe  xxx.  t xxxxxxxxx he xn  xf s the of  u  s the er's xr  ,  t t   f he  \"  the se xxe  t e into ven   ixxo xxt xe y a  xxxxxxd mxxn spect xf xs   xx. t y xe int convince o  pr  xxm rea d x d xy xs txe xxxxxxxy of   xxxxd  t on he  is  xxxo  xxd x t us  xxx e r   s use pxp r's coxxxxl xv  esxxxxxxx xxx. xr txxxr on  txe cxm   p p  x x  pop x e x i on nto  imp, r   ad xxxxr  xxxxxxxxt b    rowsin ir g e    des. "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 25, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 105, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 232, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 353, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for exam for ple, if i'd create a licensing system built on the .net framework cryptography classes to , it could be bypassed system-wide for every .net application on the system using the framework. also, everybo access  be dy can log and change the input of functios that i call just by hooking into the methods. if an r  attack built er  framework   has admin access to your computer (which (which  i if  on s requir much ed fo for r for built    i (which t t you he attack you described), then  (which  is you' by ve pre that tty much lost. lost.  pretty  much   .net anything you c for ould do could  you' be circu  mvente th change  des  pretty ho i oking crib t attacker. he   ed), e d you'  by  ve the  cribed), attacker. "}, {"sentId": 12, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use grep like functionality", "em2Text": "identify all sinks in an application", "label": "None"}, {"em1Text": "use grep like functionality", "em2Text": "an attacker can see [code]", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "use grep like functionality", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "an attacker can see [code]", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "use grep like functionality", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "identify all sinks in an application", "label": "None"}], "entityMentions": [{"start": 189, "text": "use grep like functionality", "label": "ATTACK"}, {"start": 220, "text": "identify all sinks in an application", "label": "ATTACK"}, {"start": 556, "text": "an attacker can see [code]", "label": "ATTACK"}], "sentText": "most of thxxe funcxxxn calls are xxxxxxxxxd as sinks. when a tainted xxxxxxxe (like $_rxxxxxx) is passed to a sink functiox, txxn xxu have a xxxxxxxxxxxxx.  programs xxxe [link] and [link] use grep like functionality to identify all sinks in an application.  this means that programmers should take xxxxa care xxxn uxxxg txxxe functions,  but if they where all banned then you xxxxxxxt xe able xo get much done.   most of thxxe fuxxxxxn calls are not xxxxx.   but rather xt maybe a vulneraxxxxxy if any of the daxa returned is viewable to an attacker.  xf an attacker can see [code] it is definitxxy a vxxxxxxxxxxxx.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 107, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 192, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wix x bugx. xe x etx. xxs are a t xs ab rs  from xxt  le \" xxxxxxxxx. hos the tile s can use p n opus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (r   xs even t te ck if mig th b e h xxt t e t t a b o xxe p ugx.  , the main e f the c  e to  x peoe xd  to do t   do xxt to  to, but   a well-crafd p xxxx. op n di site xxxxxt   peoe , the r ad x a y  some not be dy ad wit  fm  h the xe man page \" .s e d b xd y y uxxy    te sit o xt n es xs   a   y to \"p u b . \" use   browsing  or rs and  frm  of to  a ey fe the  d imp, etx. in s , the s d y ast of from  e probm y is txe sy f e u c sers   cl   g y  n ovxr  e their on c s ompx the  the r  txe ad xr broi the ng . "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 24, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 153, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 283, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u my be able xo xxxxt a format string vulnerability in many xxxx, diy or . s e the fg as an example g no t xs , which xs very rare anyw: its xxxxxxxe to use the [code] format parameter to read data. u can read the a of e l t sg in [xx, hence you cn e it to xxxd xg off txe xx: u can use the [code] format specifier to write to an arbitrary address (axx. , s asse our e program xxxx, xxd ls try cxxxxxxg e vxxxe f [co, whxh s d at [co, as sn : "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 9, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 133, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 222, "text": "recover those keys", "label": "ATTACK"}, {"start": 282, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 305, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hw might an attacker recover the secrets in that flash? i underd they can z for vs in the app code and et it, that there cod be some indistinct general side channel attack or somet. but how wod an attacker reay go t tg to recover those keys?  are te viable s for a determined r o w shave-down the chip or some kind of microscope attack? "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 211, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a standalone spark cluster running on a remote server and i'm new to spark. it appears that there's no authentication scheme protecting the cluster master's (7077) port by default. anyone can just simply submit their own code to the cluster without any restrictions. "}, {"sentId": 93, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "listbucket", "em2Text": "list the keys in a bucket", "label": "None"}, {"em1Text": "list the keys in a bucket", "em2Text": "listbucket", "label": "PARENT"}], "entityMentions": [{"start": 218, "text": "listbucket", "label": "ATTACK"}, {"start": 444, "text": "list the keys in a bucket", "label": "ATTACK"}], "sentText": " s i m ug j an t an  d a  xxxo o xt rs tbuc  on xn s3 d in crg a py f thi o an r ac  s to txe buxx a e allw r s s  t wx an  is   i disv t a  ed  l s an  is an t p lis y    t ect th an t if i dt a   s3 a  a u  sing xxw listbucket q   that  an i g a r   s   et an t  fr  x a xxxs cn s de' er  ror.  l th  e i  prxxxm g  xxh  t  puto t q bt s hi  th r   geto lxxxx l xxt s s  bt xt   l s  r an s is de w i  nxx y  or '  a x n t or  s a usr cn xu  list the keys in a bucket xxd t e s  s e allg a s th  i ecu cn  a rx xu using  y th. x   allog xxd  s it po  se xo hi us s  alxw get tt o s bt an can d pt wxxx allo an wing u an x    t c on n  allowing ls an   c an kxx s r  a is e a wo s rko n  that ud  und   us f fr ti a  s s worko  xn ? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 356, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 445, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can       v for  big   filt t i he er out us  the e ibly  thou  sand ven  messa  e if ges  ctio i get i  n my k en  big    e web   can s   ev can ibly  en hook call d back ibly .  hook howe  d   i imiti  poss   bl c i i y  se bly rv v   ice v i er,   rs  . o o er f   filt n   ut implemente s   a mali l c a ious u ctio s hoo k  h  cti big  s o k er can add my bot to a thousand big groups u  and w ibly can  ill  my poss malici filt ous ibly result in denial of service for all other users. even  al  l i  f  can tel    ibly    me  ssages  of me er e vic ges e  in ice   imiti s l   sages hook  i   gram e hoo   ervi k gram h    ctio i ev users. en bly  can ave of   a   implemente ctio s  d s i denial  om  e r  l i a us te  m . ess om  e ages l f imiti rs.    of ng     r gr  o th e e up users. s su ev  can til en c  h user or    a i c me  al s l tio mali  ci for    big o i us  nial n  s ma  ma   thousand licious hoo e  rate k y  mali gram  s a  h  of til e  if l       hook   ice  c ser er c n ti vice v w ice may   resul u  l t  ev  l  a in d ice en ibly  of i ibly al  malicious     ice   den can ia  l of  a  ll s mal  i  cio rs. us ervi ibl  y ce f s or a malicious l mal  hook a icious l othe n   can  r    i  d   a e   ious ni i al use malic hoo ious rs. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 49, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 172, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 243, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if n xxxr cn gain access to the system under the same user account as your codexxn oe xxx, dt user, rot x, xxxxs an impot a . f an r cn get access as the same user or as root, ye got xxr xxxr xx. fxr x, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 55, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uses an unsafe [code] extension", "em2Text": "break [code] ", "label": "None"}, {"em1Text": "uses an unsafe [code] extension", "em2Text": "inserting different elements with different [code] instances", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "uses an unsafe [code] extension", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "inserting different elements with different [code] instances", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "uses an unsafe [code] extension", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "break [code] ", "label": "None"}], "entityMentions": [{"start": 15, "text": "uses an unsafe [code] extension", "label": "ATTACK"}, {"start": 50, "text": "break [code] ", "label": "ATTACK"}, {"start": 66, "text": "inserting different elements with different [code] instances", "label": "ATTACK"}], "sentText": "xxe xxxe bxxxw uses an unsafe [code] extension xo break [code] by inserting different elements with different [code] instances: "}, {"sentId": 15, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "it's viewed by an unauthorised person", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "sending the login form via http post", "label": "PARENT"}, {"em1Text": "the information being intercepted", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "the information being intercepted", "label": "PARENT"}], "entityMentions": [{"start": 302, "text": "it's viewed by an unauthorised person", "label": "ATTACK"}, {"start": 516, "text": "sending the login form via http post", "label": "ATTACK"}, {"start": 572, "text": "the information being intercepted", "label": "ATTACK"}, {"start": 650, "text": "mysql injection", "label": "ATTACK"}], "sentText": "i regularly use a standard form to send login information through the http post method and then validate it using php to check if the details are correct. i use an md5 hash on the passwords (and sometimes usernames) to give some degree of security, so i'm not storing a raw password in my code in case it's viewed by an unauthorised person, or something like that. i've recently been working on a forum which has a mysql database of users and passwords, the passwords are stored as md5 hashes, but i worry that when sending the login form via http post the possibility of the information being intercepted is there. i'm aware of the possibilities of mysql injection attacks and think that i'm safe from any simple attacks. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand they can fxxz for vulnexxxxxxxxxs in the app xxxe and exploit it, that xxxxe could be some indistinct general side channel attack or sxxxxxxxx. but how would an xxxxxxxr reaxxy xo xxxxt txxxxg to recover those keys?  xxe txxxe vxxxxe appxxxxxxs for a determined atxxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 101, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 184, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp winxs xxe a n xxm xe \"pxxxx\" xe o distrat   axs ssociad ociated chnxx. e sits xxn  is use pos o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (xr xs xxxn ju t st e k of  f migxt e trik xxxxxt a bu clicxxg g xploit  to ).  , txe main e of f  txe e cd xy   g o t ax  t  e xxxn oo, xt a  xo weld   pop can dit   te r ad may  dexxxxxxx,  c xxt e xxxxxxxy xxxd wixh the xxxe   txe hxe n exxxxxt   me ps    main xxxe xxxxx an xd xxxx  by many u a o rexxy jt  xy sit ps xs a so n m can e s a  juxt w paxe  r ay xo r b tht xg e. ). \" s ax the d to ey foxxe d  a impre, etx. n xxxs rexx, t page he \"pxxx\"  sxxxx exxxxxt my  xy t f  xxe xxe pm r d ey xs  s xxe y of  those t , he is  s c a del, sxxt ontrxl r t a ne ssoxxxxxd hr xxn r  man xxd tr broxxxxg d  x. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a notable \"phishing\" technique. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaps even just the click itself might exploit a bug).  yes, the main page of the site could do that too, but a well-crafted popup can distract the user and may not be directly associated with the hostile main page.popups were exploited by many unsavory sites as a way to \"trap\" users and to essentially force ad impressions, etc. in this respect, the security aspect of the problem really is the security of the user's control over their own computer and their browsing desires. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 126, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 281, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 304, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i understd they cn z for vus in the app e and explt it, t e cd be some indistinct general side channel attack r so. but how woud an ar rey go about g to recover those keys?  e e viable approas for a determined attar o somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 151, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 236, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp xxs xxe w  a nl xx  xxe e \"xx e x s x xs xx x txxxe  t xr thxt    \" xx xo  th d e x  x can  ur x.  t xt txxs i xo e xxxs   can use poxxxs to     convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( se or xx  g y xxxxs e xxxr  e vxn xe   n just t ad d  he c t k xxxxxf sxe  p  xxxx  m  ig  xxxxxs ar pec, e ht xx  plxxt a xxxx.  y xl e ur s, th xxxe e i w fo  with  d s po xe o i n paxe xf e some  xx xxxxxi e xx e  xx  xr  expxo y ited xxd o xxt too, but xxt   afte a welc n r xs afe s d o p  ag xxp xxn dxxx d t es  i. xt t re he with   s    xxxr user axd xxy p t agx. to s  xxt be xxxxxxxy xxxt   axe   axo xm f  rom  cia afxe te wi ad xh  page  se any  d wxh t xh  e h  thoe url  ag e    xxm x t xe m h i t  exxxxxt xxxxxxx y xx o . xd n pxg  exxxxy to eu  p an s wxxe ed  exxn by m esxy any  x uxxxy s e  of ixxs x n s a w xm y xo \"tr t   t f o y a xn p t  ess \" users  xxe and to x a xxxxy fo m re xxs po secu  txxs xxp ag xs  ay e  xxo xxxs xxe  p  xy ay ae rxe ad   i malwxxe mpre a s t si, e n t been x. xn txxs res xxxt , th xxx a t e  xxxxxxs seu . rity at f xh  xxe pxo  bx xx e xx t, xs xm xxa c even one xxy is e  t ad  i xxe y   xe xxc  expl co  x oi  u r r x h xxxr it d y f t tho fo e he xxxxxs conxxxl oxxr the m  o dxl  ,  xr o expli xxx, t n cxxxx  tho o ires. i xxxxxe t   xr trik  x  xxd xxxx  r xxs  ig xxxxxe  t   te s.     "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 104, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "checking for mime type in php is pretty easy but as far as i know mime can be spoofed. the attacker can upload a php script with for example jpeg mime type. one thing that comes to mind is to check the file extension of the uploaded file and make sure it matches the mime type. all of this is assuming the upload directory is browser accessible. "}, {"sentId": 42, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "user b steals user a's sid", "em2Text": "creates a cookie on his computer", "label": "AND"}, {"em1Text": "user b steals user a's sid", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "user b steals user a's sid", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "hijacked user a's session", "em2Text": "user b steals user a's sid", "label": "PARENT"}, {"em1Text": "hijacked user a's session", "em2Text": "creates a cookie on his computer", "label": "None"}], "entityMentions": [{"start": 529, "text": "user b steals user a's sid", "label": "ATTACK"}, {"start": 590, "text": "creates a cookie on his computer", "label": "ATTACK"}, {"start": 660, "text": "hijacked user a's session", "label": "ATTACK"}], "sentText": "after ur a  cs lg reqt  any s n n  a exam tatele. , he is gi ip,  is ven e m n id, r simplics sake, mos  lt i is t g  be 'ab2 sg  user user t 3' ip . ts ses the sion id s sto lat red as a ce on the cliet  s si it e e  and is valida iy t t active,  ed wi r t a h a sr et -se e  s t sion to ene te usr w ther o logd in remains lod a  in s he s cg  measure  m r   ol spof y oe wee to a. t sf his c is  to e way  f e d not   is n e wd d to exist if  h recognize t http wee insted   a n  ot s   nav if a tatel. for es  that  sd re, f user b steals user a's sid, a  h ren as  f t good he nd a's  creates a cookie on his computer h the value 'b ce c123', he d e sucy hijacked user a's session, t if  tr , e is  his simply no way fr te r s  uy vr to  some in  y e tht u n ser bs reqt is any diff of erent fm u  iy er r s , ad t e  ss. herefore t  he  iy sr has o rean to rt y re. e t n if we wee to lt e s eve i d s n es that we y ac so e on h s e -  server ad t s y t  o se if someone s g a sessn tt is y acti, is    crs c how can we e that  firt t is a the r us reason r who  not is acn y g the sn e  illegitimy and nt the sam p e user h a o is aly log sen  m g some d i  f session n h a sesn i, t y trying to mae anr rt with it e nav hs  b ig nt ate to a t .  suggest e can't. cheg te r a? n be spoof changg ed - t good as a a  s http e in deph e  lt n er  user . i a p address? n  let  can't. er  change f ad or e reaso the ns - but i hs  of ns acg t wo ead   of not chi he ng for te ip d t  e s at a, tht  i ie sev a's e ad  st  for g si er g like s  the fit to t ae s of the ip  fr s , as n a usr   ct legi , tima uy te n a daa plan k his  w that o cl loggd y has a ch to angg  a ip for pery e rs wol in  request d oy uy have the t to octs f thei e r ip   change. "}, {"sentId": 22, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 39, "text": "sql injection attacks", "label": "ATTACK"}], "sentText": "t can also give xu a fixxxxxg chaxxe t sql injection attacks. "}, {"sentId": 72, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 232, "text": "insert backdoor or intentionally alter some security features", "label": "ATTACK"}], "sentText": "my aim is cre words,  creating ating an enviroment fo controlled r developin should g a words, p words, plications managing sensi c source reating ble data: credit  to cards, pass i words, and so on...a malicious developer  aim may insert backdoor or intentionally alter some security features. so the  ss access to the source code should  creati th ng be controlled strictly.i must co ard nf  mizing ss e th words, e ss  me. t h i ard hat my k  nowledge of ve is rsion con th  words, trol systems is poor, so, i fear, custo con strictly.i fe mizing svn could be a hard the  task g  for  systems  me. me. "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 98, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 171, "text": "requests the form page first", "label": "ATTACK"}, {"start": 201, "text": "starting a valid session", "label": "ATTACK"}, {"start": 247, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 319, "text": "having a valid session token", "label": "ATTACK"}], "sentText": " xxxe  there i  t a f ttacked  ixxxr  itxd   w txe xxxe ce  following   xxxt  t wa repxxxxd s   y attacked by repeated remote form submissions xxxxd . , txe r no  w form  requests the form page first, starting a valid session attacked ,  rexxxe d then passes the session cookie in the following post request my . xxxxe having a valid session token. xo f t t hen xxl  v the a t lid n my . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 167, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 252, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup win xxxxxxd dxxs ar ware e a  and exxxxxxxd  nota axd bl has e xxxxxxxxx\" txxxxxxxx. hosxxxe sites ca exxxo not thxxr a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaxs even j he ust t really he  pxxxp cl   ovxr  sites  clxxxxxg ick itsel but f might exploit   respect,  a bu force g).  yes, the maxn page of xxe site cxxxd xo that tox, but a well-crafted pop hostixe up can distract the user and may  own  through not tly  be dir really ec he tly as by sociated wxt xt users c. h t the he hosxxxe mai xxxxd n p but a and ge.pop w the in ups w xxx, e  cou n ld thxxr re exxxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl trick w  are p\" users and to e hostxxe sse reaxxy xxxxxxy force ad imprexxxxxx, etc. in this respect, th sixe could s e security aspxxt xf the prxxxxm reaxxy is xxe secxxxxy xf the  into he  xxxxxs c  e popups ontrol an  rexxxy expxxxxxd d  over their  xxxxe own cxxxxxxr and their brxxxxxg de may sirxs n e ota . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 392, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 487, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i all  c  see     a a l i m ted ay an for   r f  a  ilt t ps he      m sr   h   i  e al  i  u  s  sei e    e l y f    s   er io  ou ilt  hk t the    ce      ms e  f ns  add v   h en for   s b  i   f  get   i    n my er    w  an    e for   ns    b e even ven hk  suc cal  some  lk s .   ho u w rl e sere  a  ted  of gr  oups i  l ,  ps   er  all  a l    k  e    n ho  ok s u ctio   s k er can add my bot to a thousand big groups an ns d l for    p  s    of malicio e  r us    a   i a bly result in denial of service for all other users.   en  s thousand    of er mii c  all if  tho add usand l ms    gr  am e h a k gm e of  imp  o t   f  n  er l ted some r y a o l f  gr te li of mii  ted f n r g    gr c er e       add  os suc    h   a  usr a lb hk ack    i  y   c all  ibly  i t see lk  io mas ns may s  i   e e hook    h t the ill .  i     may rl u t ce   l i i    ce n den ibl i  sere y w  i   ib  a  y al  dl users . i       all .  of  all sc n e f see   ce  or al u h f  . .   s l som l e for     othe n r  del u  add l se. "}, {"sentId": 23, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "access the stored keys", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "injecting code into a users process", "label": "AND"}, {"em1Text": "access the stored keys", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "access the stored keys", "em2Text": "injecting code into a users process", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "access the stored keys", "label": "None"}], "entityMentions": [{"start": 18, "text": "user is logged in", "label": "ATTACK"}, {"start": 198, "text": "access the stored keys", "label": "ATTACK"}, {"start": 231, "text": "injecting code into a users process", "label": "ATTACK"}], "sentText": "however, once the user is logged in, there is the possibility for other users' processes on the same machine with sufficient privileges (generally only granted to administrative/system accounts) to access the stored keys, e.g. by  injecting code into a users process that will run i'm the context of the user and hence be able to do anything the user could do with the key (use it to decrypt, sign, or export the key, etc.). "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "wouldnt someone be able to simply change the referrer header to a malicious website? does raxxs xxxe any soxt of prxxxxxxxn measxxxs for txxx? "}, {"sentId": 80, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "inject javascript into the page", "em2Text": "xsrf", "label": "None"}, {"em1Text": "xsrf", "em2Text": "inject javascript into the page", "label": "PARENT"}], "entityMentions": [{"start": 431, "text": "inject javascript into the page", "label": "ATTACK"}, {"start": 633, "text": "xsrf", "label": "ATTACK"}], "sentText": "why was it decided that using xmlhttprequest for doing xml calls should not do calls across the domain boundary?  you can retrieve javascript, images, css, iframes, and just about any other content i can think of from other domains. why are the ajax http requests not allowed to cross the domain boundaries?  it seems like an odd limitation to put, considering the only way i could see it being abused, would be if someone were to inject javascript into the page.  however, in this case, you could simply add an img, script, or iframe element to the document to get it to request the third party url and send it to the server.   <h2>xsrf (cross site request forgery, also known as csrf, xsrf)</h2> your can do xsrf attacks without using this at all.  as a general rule, xmlhttprequest isn't used at all, simply because it's so hard to make an xmlhttprequest in a way that's compatible with all major browsers.  it's much easier to just add an img tag to the url if you want them to load your url. i'm marking the answer from bobince as correct because he pointed out the critical problem.  because xmlhttprequest allows you to post, with credentials (cookies) to the destination site, and read the data sent back from the site, along with sending the persons credentials, you could orchestrate some javascript that would submit a series of forms, including confirmation forms, complete with any random keys generated that were put in place to try to prevent a xsrf.  in this way, you could browse through the target site, like a bank, and the bank's webserver would be unable to tell that it wasn't just a regular user submitting all these forms. that's not an xss attack. that's a cross-site request forgery attack (xsrf). there are known ways to solve xsrf attacks, such as including one-time or cryptographic tokens to verify that the submission came deliberately from the user and was not launched from attacker code. "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 5, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 58, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 97, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": "  if the session identifier were known by an attacker who had access to  the user's workstation, the logged out session could be accessed using  the session cookie after the user had terminated their session.  "}, {"sentId": 96, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 123, "text": "database comes to be hacked", "label": "ATTACK"}], "sentText": "for that i record xn their database their key xx) axi axd the coxxxxxxxn is dxxx. but from a secxxxxy point of view, if my database comes to be hacked despite all txe pxxxxxxxxxxxxxs taken in xxxxs of security (preparxd requxxxs etc) ... these are all xxe api keys of my clxxxxs that axe revxxxxd xxd also exxxl xxxxxxxxs of their own customers thxt can be rxxxxxxxx, used, xxxxxd ... because xxe tools i xxxxxxt essenxxxxxy alxxxs to store cxxxxxxx, organxxe and send emxxxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 200, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  for filt the er out the even  messages i get i  n my web even hook callback. howe service ver, a malicious u ctio s hook er can add my bot to a thousand big groups and will poss malicious ibly result in denial of service for all other users. even  all if tel messages  gram e hook gram have of  implemented some rate limiti of ng  groups suc  h user a i c all tio malicious ns may s h till  may resul u t in den ibly i ibly al  denial of  all service for al malicious l othe n r  denial users. "}, {"sentId": 57, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "knowing the structure of your filesystem", "em2Text": "execute directory traversal attacks", "label": "None"}, {"em1Text": "execute directory traversal attacks", "em2Text": "knowing the structure of your filesystem", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "knowing the structure of your filesystem", "label": "ATTACK"}, {"start": 91, "text": "execute directory traversal attacks", "label": "ATTACK"}], "sentText": "knowing the structure of your filesystem  directory the  m them. ight  to allow hackers to execute directory traversal attacks if  hackers  your  traversal your s  ite structure  is vulnerab filesystem le to   them. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 190, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 250, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxt e . e s  xt e us d  o r u g nt  s y  o i do j . k   d  o t g s d s ua   g ts    r o. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xe n xu  t c  s d   . xe d o l do n  s o e . "}, {"sentId": 81, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "w xxt (andr soxxxxxxxxxxx) are man-in-the-middle attacks? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i understand they can fuzz for xxxxxxxxxxxxxxs in the axp code and exploit it, that txxxe could be soxe indistinct general side channel attack or somxxxxxx. but how would an xxxxxxxr xxxxxy go aboxt trying to recover those keys?  xxe txxxe viable approaches for a xxxxxxxxxd attacker to somexxw shave-down the chip xr some kind of microscope attack? "}, {"sentId": 12, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 89, "text": "man-in-middle attacks", "label": "ATTACK"}], "sentText": "encrypt my communication (c->s &amp; s->c)do 2-way authentication (c->s &amp; s->c)avoid man-in-middle attacks "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "using the [code]", "label": "ATTACK"}, {"start": 76, "text": "open a server up", "label": "ATTACK"}, {"start": 635, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications caused by using the [code] and could it open a server up for attack? if you use [code] just for generating c# source code, then you only need a permission to save the generated files to some directory or to noting at all (if it is possible to get the code generated into a memory stream)if you use it for compiling generated c# source, then you need a permission to run [code] (which may not be available in some limited environments such as shared hostings).if you just generate files &amp; compile them, then it probably won't be harmful (although someone could probably abuse your application to generate many, many files and attack the server using some kind of dos attack.if you also load &amp; execute the generated code, then it depends on how you generate it. if you assume that there are no bugs in c#/codedom and can guarantee that the generated code is safe, then you should be fine.if your code contain things such as [link] that can be provided by the user (in some way) than the user can write and run anything he or she wants on your server, so this would be potentially quite dangerous. "}, {"sentId": 13, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 30, "text": "javascript injection attacks", "label": "ATTACK"}], "sentText": "i kxxw that i need to xxxxxxt javascript injection attacks. how do i do xxxx? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 249, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 341, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " ld pop force up win xxxxxxd dxxs xo  ar wa in re e a  and exxxxxxxd page   nota  tox, axd bl has e xxxxxxxxx\" tx  xxxxxxx p important  r  . hosxxxe sites ca exx could xo not thxxr xxxxxxy  a ited n us xxd   e po bu p many u  xg  us trick ps to th  convince users that an important message from a trusted site has been delivered he p  , and trick those people into clicking through to some malware url ( and or perhaxs e xxxxxs  ex re pxxxxxd ven j  he he  o sociated ta ust t re ota   ally he  pxxxp dis to tract  c up l and  t    ovxr  si and tes  cl h xxxxxg ick  xo itsel bu ps t f might exploit   respect,  a (  bu  expxxxxxd force g). force   yes, the maxn page of t  xxe site cxxxd ota   by xo that tox, but  po a  way well-crafted   n s pop hosti  exploit g). xe up c p\"   an distract the the  user an xxxxxxy d may       site own  thr to ough n dxxs ot t through ly  be dir  ota  by   real delivered  tes ly ec he     tly as by sociated wxt xt users c. h t th up e he hosxxxe mai xxx to xd n  wa p but a   wa d   and g  e.pop w the in u  ps sse  w xxx, e  cou n ld thxxr re ex that xxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl tri distract ck w  are  brxxxx  into   p\" users an   t d to e hostx as x s  th e sse reaxxy xxxxxxy force a ck s  a expxxxxxd d to  impr ust exxxxxx, etc. i re n thi yes, s respect, th  w tri  sixe could   s e securi cl ty aspxxt xf the prxxxxm reaxxy is  wxt x h x thxxr e sec ld xx re xxy xf th  ld si  tes e  into he  xxxxxs c  by  e popups ontrol an  rexxxy expxxxxxd d  over t an  and tly d heir  x  to r x  xxe own cxxxxxx imprexxxxxx, r and   thei (    or r   br users xxxx has xg  reaxxy de may t expxxxxxd he  bu   wxt sirxs   n e ota . "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 28, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "stealing the api key", "em2Text": "decompiling the swf", "label": "AND"}, {"em1Text": "stealing the api key", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "send random data", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "send random data", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "create a dummy flash application", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "send random data", "label": "AND"}, {"em1Text": "create a dummy flash application", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "send random data", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "send random data", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "send random data", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "send random data", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "send random data", "label": "None"}], "entityMentions": [{"start": 21, "text": "stealing the api key", "label": "ATTACK"}, {"start": 118, "text": "decompiling the swf", "label": "ATTACK"}, {"start": 184, "text": "create a dummy flash application", "label": "ATTACK"}, {"start": 221, "text": "send random data", "label": "ATTACK"}, {"start": 254, "text": "altering the api itself", "label": "ATTACK"}], "sentText": "the big one - people stealing the api key via man-in-the-middle attack.highscore injection, false achievement unlocks.decompiling the swf and stealing the api key.using the api key to create a dummy flash application and send random data like highscores.altering the api itself so you don't need to be logged in, etc. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 25, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 181, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 340, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u may be able to explt a format string vulnerability in many ways, diy or indirectly. s e the following as an example (assumg no t os p, which is very rare anyway: it's possible to use the [code] format parameter to read data. you can read the data of the original t string in [co, hence you cn use it to read anythg off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e program abov, and ls try changing the value f [co, which is ld at [code], as sn : "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 75, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 160, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxs are a notable xxxxxxxxx\" xxxxxxxxx. hostile ss cn ue poxxxs to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (xr xxxxxxs exxn jt the click ixf mxxxt expt a bug.  yes, the mxxn e xf te xxxe d do xxxt too, but a d pxxxp xn dixxxxxt the user axd xy nt be dixxxxxy associated with the xxxxxxe n pas wxxe d xy mxxy uxxxxxxy ss xs a way to \"trxx\" users and to esxxxxxxxxy fxe ad xxxxx, etx. n txxs resxxxx, the secury aspect of xxe pxxxxxm y is e sy xf the xs conl or xxr oxn compxxxr and xxxxr g . "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various staxxxxxxs xxxe show etc. txxt a user even hxxxxg xxxy select xxxxxxxxxs coxxd use to gather infoxxxxxxn aboxt the dataxxxe servxr or abxxt my dataxxxxx. oxxxr information xxxxd be obtainxd from error mxxxxxxx. while prxxxxxy not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg sxxxxxxe mxxxt xe flaws in xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr xn xxe sxxxxxxxg lanxxxxe itsxxx, txxt could xxxxw a visitor to do things they are xxt supposed xo be able to do through this interface.doing this might vxxxxxe a texxs of servxxe agxxxxxxx, partxxxxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 250, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 300, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " ex, hat  strings  tabl a xx r od ed ex, e xr onxe o rid cess  imxu onxe  [c tabl ode], e. can  t memory  da rid ta hat dump  means once y before o strings u've if  crex strings t [c  x onxe you  x imxu xx, ed th xx e [c xxxxxxs you  [c  od e e], if another process can dump memory xx. , the [c rxxs no way you can get rid of the data bef  another x [li kic xx] xxxxxs    y  kic o hat r you e [li dump xx] kic the  in. ks in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a notable \"phishing\" technique. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaps even just the click itself might exploit a bug).  yes, the main page of the site could do that too, but a well-crafted popup can distract the user and may not be directly associated with the hostile main page.popups were exploited by many unsavory sites as a way to \"trap\" users and to essentially force ad impressions, etc. in this respect, the security aspect of the problem really is the security of the user's control over their own computer and their browsing desires. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "sign up for the app", "label": "ATTACK"}, {"start": 215, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question is, how safe is \"auth !== null\"? yes, i realize that this means that only an authenticated user can access the data, but how easy is it to become authenticated? can someone sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 374, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i believe this achieves the strong server side password requirement. however i also need to protect as best i can against compromised client devices after the signup process (devices compromised before/during the signup process are a lost cause). obviously with a 4 digit encryption key, there are only 10,000 possible combinations, so an attacker will easily be able to try every combination on the locally encrypted strong password very quickly. what i want to know is do i have to choose a specific symmetric encryption scheme and/or generated password format so that the attacker will not be able to tell from local data alone which of the 10k decryption attempts was the correct one? i.e. he would still have to attempt each of the 10k passwords on the server-side login. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 260, "text": "enters the password", "label": "ATTACK"}, {"start": 323, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 237, "text": "access the file", "label": "ATTACK"}], "sentText": "to s t e a fxxe i bexr  bxxr  c   t dd isn se  a ' isn w  t    the xxxxxxg gs  ?  s to   a r     your s a h a a the  e xxxe xxd  that   betr  is std n a   f high i accxx xxxe s xx. he    whenxr t  acc he  ge d nerated, he uxx is r ws to access the file, he w  enters the password, a i nxe   xxe a sn   x t xxe 't nd     if the same hash is generated, a  he w  s it       c  t  gx t xx acc dd xxs an accexs xx to  accxxs e file dd  t .i se t is h  hash txe i ?  w s isn't xxxxy if  sa, but  n how e  w bexr  it is? t  xxw  t hig t h is e  gs cha i be  tr s nxe that strxn bu gxxx  t t g#has ? e gs the e hash  w w  t a hig ccxxs i a th t sxxu t ld w   betr o  c di w ft  i inp is utg  shxx  xd to your anss   i   ch  that ? angxd the c  o  gxxx a  i xx. nputg xxxxx angxd , the  t sh s oul xxd d be betr he  w  xx t x?  w  he   is  txe  axxxxs ? xxe  b e ut  "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 258, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 557, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 593, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "i'm trying to have a look at how gmail or facebook are implementing this functionality. i can see some cookie like 'presence=dj267619445g09h0l15228675.....' in fb, others in gmail.i'm not too sure if they use some other trick to protect against someone that tries to impersonate some other user. i'll try to impersonate myself using something like [link] to see if they're only using a specific token to remember the user. if they are it looks to me like a big security issue. maybe not facebook(i don't care of it) but with gmail if you don't set '[link]' an http connection will be used and it will send your unencrypted tokens over internet.what do you think?   maybe not facebook(i don't care of it) but with gmail if you don't set 'use always https' an http connection will be used and it will send your unencrypted tokens over internet.  what do you think? "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 4, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "the sandbox would be executing scripts that could be potentially dangerous.  the sandbox would be a mix of my own javascript, running alongside untrusted javascript code from other sources. "}, {"sentId": 41, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "database where compromised", "em2Text": "going to defeat [code] by enabling the [link]", "label": "None"}, {"em1Text": "going to defeat [code] by enabling the [link]", "em2Text": "database where compromised", "label": "PARENT"}], "entityMentions": [{"start": 11, "text": "database where compromised", "label": "ATTACK"}, {"start": 54, "text": "going to defeat [code] by enabling the [link]", "label": "ATTACK"}], "sentText": "but if the database where compromised the attacker is going to defeat [code] by enabling the [link]. "}, {"sentId": 68, "articleId": "2", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 86, "text": "uploads something harmful", "label": "ATTACK"}], "sentText": "for instance if my website allows the users to upload a profile picture, and one user uploads something harmful instead, what could happen? what kind of security should i set up to prevent attacks like this? "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 128, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 260, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 434, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": " t ts a p  (s d, expn   t p)   t xo     rt     )  sy t   sxxx   user s  i i  e sym  aw  sxs  xe  x xe x alw xx  xx lange s that\"spring expression language (spel) s  y   at \"  dat rt   a,  stm         s  t xxd e  d t at e     t xo sysm g user et  i    d  ted h http parameter submissions t t hxxxx in x  xxn  g    s    th get     t  e y d  xw x  xd al o low  e at t e   t t xo sxxxs  h n   xx n  x at xw   x  xe lo   rs   t   system o get sensitive system data, application and user cookies cookies   . sysm    s     sy   get  y s    \"  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itself migxt explxxt a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xxxxxxd poxxp xxn dixxxxxt the uxxr axd xxy nxt be xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"trap\" users axd to exxxxxxxxxy force ad impressionx, etx. in txxs respect, the security asxxxt of the probxxm reaxxy is txe secuxxxy of the user's coxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 142, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxs are a xxxxxxe \" xxxxx. hoe xxxxs can use xxxxxs o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (or s evn just txe click f might exxxxxt a bugx.  yx, te main page xf xe xe xxxxd do xxxt tox, bt a wed p xxn t te ur xxd xxy not be dixy asd wh xe e xxxn pags e d by my uxxxxy xxxxs xs a y o \"t\" s and xo esxy force d , exx. n txxs rx, the secxxxxy t of xxe xxm rey is te y of xxe usxxxs xl xxr tr n cr and r g dex. "}, {"sentId": 2, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "develop a rainbow table ", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "develop a rainbow table ", "em2Text": "attack the salted version of your hash", "label": "None"}, {"em1Text": "develop a rainbow table ", "em2Text": "create rainbow tables that include the salt data", "label": "None"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "develop a rainbow table ", "label": "PARENT"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "attack the salted version of your hash", "label": "None"}, {"em1Text": "break all hashes that use the algorithm", "em2Text": "create rainbow tables that include the salt data", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "develop a rainbow table ", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "attack the salted version of your hash", "em2Text": "create rainbow tables that include the salt data", "label": "AND"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "develop a rainbow table ", "label": "None"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "break all hashes that use the algorithm", "label": "None"}, {"em1Text": "create rainbow tables that include the salt data", "em2Text": "attack the salted version of your hash", "label": "None"}], "entityMentions": [{"start": 225, "text": "develop a rainbow table ", "label": "ATTACK"}, {"start": 288, "text": "break all hashes that use the algorithm", "label": "ATTACK"}, {"start": 695, "text": "attack the salted version of your hash", "label": "ATTACK"}, {"start": 743, "text": "create rainbow tables that include the salt data", "label": "ATTACK"}], "sentText": "my t he ang f  is tht a  that widely-u tended d  salt is not in wrong.  be tended  centd  versio d. n  y to be se, it is merely of  intende to d to  c, be diffet m any centrad  not st not ad so that y they ou  that c fm an't develop a rainbow table or s w- me d im  yu from ilar attack o break all hashes that use the algorithm, attack  si rai  nbow nce t my he st breaks e ra n correct, g. inbow table.  my  unda undert of a known, n  dg he dev so p  the re t not e l  etely correct nding , o corr that e to ct e if m w ep rong. in a wd piece o  f open-soure , the sat woud be wid in e software, l ak y knw and  table n, and  because ts opes yo ou u up o att tt as bee w t and hey can sip , ly attack the salted version of your hash  rainw d create rainbow tables that include the salt data. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 39, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 194, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 297, "text": "recover those keys", "label": "ATTACK"}, {"start": 393, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 419, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " vi b ki  se i d e  able  app able w t an attacker recover the secrets in that flash? i n sr  ets derstd they  ty c n n z for they   to vus in e  a  pp app e d explt it an , i  t e cd b  e some indistinct general side channel attack r  r so. t they  how w for oud an ar r  rey ss  go about g  z o recover those keys r ?  e e vie app te roas  e r a d  o nd  t rey tar that  o some app   ho w w shave-down the chip i  or some kind of microscope attack? "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 96, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "for security reasons, it is desirable to check the integrity of code before execution, avoiding tampered software by an attacker. so, my question is "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 379, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 442, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 161, "text": "xss", "label": "ATTACK"}], "sentText": "te company who hs our site reviews our code be deploying - they've recently td us this:html strings shd never be directly manipulated, s that opens us p to potl xss holes. , always use a dom api to e element can be jquery or e direct dom apis.for example, insted of[code]is ths rey tru? n anyone give us an example of an xss ak that cod exploit an html stg like the firt one? if [code] is somehow modified, it might con something e this: thl mess up your html and inject a script: if you use dom mann o st the [code] , the sct (r whatever otr xss you use) won't be executed, as it'll be properly escaped by the m . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how migxt an attacker recover the secrets in that flash? i uxxxxxxxxd they can fuxz for vulnerabixxxxxs in the app xxxe and expxxxt it, that there xxxxd xe some indistinct general side channel attack or something. xxt how would an axxxxxxr really go about trxxxg to recover those keys?  xxe there viable approachxs for a dxxxxxxxxd attacxxr to somxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 62, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time  taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time  taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 181, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 256, "text": "analyzing the time  taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryptography, side  a t is iming attack is a side channel a iming ttack in   w anal e in xecute yzing hic cryptographic h  analyzi  ng the  attacker attempts cryptography,  to compromise a cryptosystem channel   yz algor cryptographic ithms. in  g by analyzing the time  taken to execute cryptographic algorithms. "}, {"sentId": 61, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "someone will compromise the shared secret on the client", "em2Text": "post it on the internet", "label": "PARENT"}, {"em1Text": "post it on the internet", "em2Text": "someone will compromise the shared secret on the client", "label": "None"}], "entityMentions": [{"start": 85, "text": "someone will compromise the shared secret on the client", "label": "ATTACK"}, {"start": 218, "text": "post it on the internet", "label": "ATTACK"}], "sentText": "i probabl  am warned that unfortunately,  sho they uld the app beco  me popular that someone will compromise the shared secret on the client.  the just because they can and they  sho  the will   probabl th probabl e y post it on the internet. so really it all co  secret war popular ne i d mes down to the server side. unfortu because nately, i becaus to e t  i ha really ve no  i way to identify sh the  app o they   and love.  block an attacker an i  . this would  i would d will early love.  identify  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 59, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "PARENT"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "generating a predicate that refers to the malicious function", "label": "PARENT"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}], "entityMentions": [{"start": 372, "text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "ATTACK"}, {"start": 484, "text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "ATTACK"}, {"start": 637, "text": "see the secret data by selecting that table", "label": "ATTACK"}, {"start": 1099, "text": "malicious predicate functions", "label": "ATTACK"}, {"start": 1290, "text": "a privileged user to run user-supplied code they did not intend", "label": "ATTACK"}, {"start": 1359, "text": "generating a predicate that refers to the malicious function", "label": "ATTACK"}], "sentText": "i've be  en r of eading the docs for oracle vp ntee d (vir function, tual priv not ate data into base su there ch , a.k.a. fine-grained security security, , the basis in  of pr by edicate  label-based s n  t ecurity security, ), and  w there guarantee, pr   d 's something  to code  i' w m having a hard time gras predicate ping. h each ow do guara docs nte hard e es vpd prevent a user from leaking information using a malicious function in the [code] clause? ? w to  ntee  the here [code] inserts each value it sees into another table owned by the malicious user's control where , so prevent   user's they c guarantee, an  a.k.a. then see the secret data by selecting that table. i've r where ead  using the docume security, nt for ation and i'm not seeing where it specifi value es an see  user-sup y o not specifies  rdering guarantee on execution of vp prevent  ,   inte by nd owned  leakin selecting g d predicat user-sup es vs  there's user-sup ma s licious plied predicates. is there s a uch a guarantee, or any other  see me th a e chanism to protec cu table rious t  bu plied t against a  malicious predicate functions?  a security,  (i'm also curious about whether a the  malicious  predicates. predicate f or unctions?  func sees tio any n in a vpd polic vpd y could  any cause a privileged user to run user-supplied code they did not intend by   generating a predicate that refers to the malicious function, but that's somewhat separat sees e.) "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 348, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 421, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "s  o natu the r n ally they , i thougxt of juxt attacker  sxa hashi on ng it xi easixr   though  t    nc lly e we'r o e  using just using it for t  idexxxxxxxxxo n n.  t that xe proble the  problem m else  with  salting th  a sha, t i  s  so  xxx? t s use o  n hat  xxxxg ssns ht if    instexd a bcry n attac   of for    k xxe er a idexxxxxxxxxo   knows the problem domain (an ssn), of  txe xxe libxxxy  n t i h p ey can focus on that domain salti    ng .  s ssns  the o it's mu  c to  per-paxxe   salxxxg  the nt planni ixxxxxxxxxxxo ng  h easier  sit xxe e to calc instead ulxxe t   s on  can snx, he billion ss lxs xs  use xa fr xxxr than a vi c txxd a than n rtu  i  a  billixn  on re dom vxa xo lixg lly xg  calculate can   unl has   i focxs  but mited xxxxxr of passwoxxx.  we instead 're  i   know  nuxxxr i should use a site  the saxt hat  xxd a per-p probl per-pati e xxxxxt of   the  i s p bcry   a  roblem xxx, but is ther   than e anything  sha else i  nt  the can nt   th  at can  do to preven xa a ltixg t an attacker f  ro dom les    , xxn  . m rxxxxxxn ng g the ssn? xxxxxxxi xxxd en txe t   i  ins nt texd of sha, i  us  ing  t    xxs sal  xxxg he was planning on u atxxc  was sin   the g hat  bcry can p n t per-xxxxxxt  xxn  than ins ), ,    ey sixxe xxs  ru pxxxxxn . g by   has a go  od libxxxy and it xxxd the les sxxxxxxe p ixxs xxxxxxi knows e salting nt  coxxxxxxxy  then a a  com natu  lxs xxxxxt  nt , y nd xxxxxxg automagica  idxxxxxi xr library o catiox. i llx. "}, {"sentId": 63, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "json allows you to [link] from an ajax call", "em2Text": "hacking [code]", "label": "None"}, {"em1Text": "json allows you to [link] from an ajax call", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "hacking [code]", "em2Text": "json allows you to [link] from an ajax call", "label": "PARENT"}, {"em1Text": "hacking [code]", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "json allows you to [link] from an ajax call", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "hacking [code]", "label": "AND"}], "entityMentions": [{"start": 0, "text": "json allows you to [link] from an ajax call", "label": "ATTACK"}, {"start": 172, "text": "hacking [code]", "label": "ATTACK"}, {"start": 191, "text": "distributing malicious code", "label": "ATTACK"}], "sentText": "json allows you to [link] from an ajax call. for example: how does jquery handle the parsing? does it evaluate this code? what safeguards are in place to stop someone from hacking [code] and distributing malicious code? "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "running [code]", "label": "ATTACK"}, {"start": 132, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevex, i do xxt understand the xxxxxxxs about xxxxxxxy vulxxxxxxxxxxxx. certainly, running [code] gxxxs the hacker the axxxxxy to run any javascript code that you can run. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "running [code]", "label": "ATTACK"}, {"start": 107, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevxx, i do xt xxxd txe s about xxxxxxxy vulxxxxxxxx. cxxxxxxxx, running [code] gxxxs te hr the axxxy to run any javascript code that you can run. "}, {"sentId": 78, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "perform an mitm attack", "em2Text": "intercept all requests to public maven repositories", "label": "AND"}, {"em1Text": "perform an mitm attack", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "AND"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "recalculating and supplying the sha1 hashes", "label": "AND"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "perform an mitm attack", "label": "PARENT"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "PARENT"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "provide masqueraded library copies of the original", "label": "PARENT"}], "entityMentions": [{"start": 278, "text": "perform an mitm attack", "label": "ATTACK"}, {"start": 305, "text": "intercept all requests to public maven repositories", "label": "ATTACK"}, {"start": 368, "text": "injecting malicious bytecode into the jar artifacts", "label": "ATTACK"}, {"start": 426, "text": "recalculating and supplying the sha1 hashes", "label": "ATTACK"}, {"start": 58, "text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "ATTACK"}, {"start": 129, "text": "provide masqueraded library copies of the original", "label": "ATTACK"}, {"start": 184, "text": "injected with malicious or harmful code", "label": "ATTACK"}], "sentText": "what are the risks and possibilities or scenarios whereby someone sets up masquerades of maven repositories and/or ip streams to provide masqueraded library copies of the original but injected with malicious or harmful code. i suppose a dedicated and resourceful attacker could perform an mitm attack and intercept all requests to public maven repositories, carefully injecting malicious bytecode into the jar artifacts, then recalculating and supplying the sha1 hashes. "}, {"sentId": 17, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 74, "text": "sql injection script", "label": "ATTACK"}], "sentText": "the website i worked was recently attempted to be hacked by the following sql injection script "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 298, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calls ck? o cxf and  calls i would like know  to know if   it   has any build-in mec a hanism that would allo calls w limiting t this he cxf  calls  num and b ca this lls er of c cxf oncur cxf rent calls to the web s cxf ervice, thus would  a wcf? ddressing the possibility of a dos attack? something simi  lar to this feature i  of wcf? "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 18, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "woxl  dnt is?  y  someone be able to simply change the referrer header to a malicious website  o re a th  th lxxxxs be  fer f rer ? xxt  d be s xa e lxxxxs  s hav be sixp  e an m a as y so t to o  webs r t th e? rt f  e p e r  abxe to v ms ent  io to n mxxr rs sip  y  s f for or h an  a i? "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "wouldnt someone be able to simply change the referrer header to a malicious website referrer ? wouldnt  does malicious  rails hav be e any so website? rt of p able r to ev malicious entio to n measur rails es f for or th a is? "}, {"sentId": 16, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 25, "text": "cookie has been hijacked", "label": "ATTACK"}], "sentText": "this is important if the cookie has been hijacked. it will be invalidated if the user detects the hijacking, and furthermore because the token is unrelated to the password the hijacker won't be able to derive and then change the user's account password and \"own\" the account (assuming you require the existing password before changing passwords, the hijacker doesn't own the email account so they can't use \"forgot my password\" etc). "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 79, "text": "sql injection", "label": "ATTACK"}], "sentText": "in , when med   c vale tio t n do  i want to find by a usr given value ad avod sql injection (ee ap by os and the   n this: lik) i or  can do sg e th: i know that an ue wy of dg this kn in ow  (po vale ssible  d sql i) is this: my n is, does the fol  lo to wing metho in d pr u s ser e injeci l do e o want n ven d ( u po e ss  il o t sql n or ? "}, {"sentId": 98, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "malicious user logs in using his browser", "em2Text": "downloads game", "label": "AND"}, {"em1Text": "malicious user logs in using his browser", "em2Text": "submits score", "label": "None"}, {"em1Text": "downloads game", "em2Text": "malicious user logs in using his browser", "label": "None"}, {"em1Text": "downloads game", "em2Text": "submits score", "label": "None"}, {"em1Text": "submits score", "em2Text": "malicious user logs in using his browser", "label": "PARENT"}, {"em1Text": "submits score", "em2Text": "downloads game", "label": "None"}], "entityMentions": [{"start": 160, "text": "malicious user logs in using his browser", "label": "ATTACK"}, {"start": 202, "text": "downloads game", "label": "ATTACK"}, {"start": 228, "text": "submits score", "label": "ATTACK"}], "sentText": "create a script &amp; run it to create automatic users  - i think i can prevent it by captcha or someting like that. but again, captcha will annoy game players.malicious user logs in using his browser, downloads game &amp; then submits score as he wish - all via calling the api by simply typing it from his browser. i assume malicious user somehow knows api urls to call - by sniffing when the application was making http requests.i need to ensure that requests are made only from android device that installed the game. (the game will be free) "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 358, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 416, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " ou xg xd we'v pxxxxc e hire e d a  rxt st an y const to p able erfo fs rm a  a  n pent n ou xxd r appla xt xxxxxs puc p t from s xxa e d) ad t from  axt e a r e er e t on our sexu  rxxy flas  d xxd txe e  ms xxr to xd o  i aw s .  wad  d . t it heir t wd  t us t we he p tm xd p n the x, and xm wt e read t t l prt xxs he issue, xt w prxc tios t ould ould  allow an attacker to predict boot time of the machine ths being able to grant control over it. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 415, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 460, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " process o     d proc  strs  ess ump  xr strin  gs   bxf       t xxn abl  s   a    r d ed xx, e   xr on   xxxxe x n e s      if x xx.      , . imxu c t if xe  me x] mory  al ode, can   xxd e.  [c tt strin  gs  xxxn xf s o   o    n  th i.   ore proces s   s at  at  get e y bee oe   cr xx. ce  xxt xc    x   txs a , l  x at x can x stxxs e  gs   ode e , ,  strs ed the  the [c xxxxxx  of xxxa   s you  ode], xxt  if another process can dump memory x.  x. , txs no way you can get rid of the data bxf s ore xx ode], x]    yxu kic xx ks xxs c x d xxxe   txs   t  no pro e ce  xe e ss xe e  ks  that i. t  "}, {"sentId": 56, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "sets a time limited cookie", "em2Text": "attacker guessing a session id guid based on a guid they have previously", "label": "None"}, {"em1Text": "attacker guessing a session id guid based on a guid they have previously", "em2Text": "sets a time limited cookie", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "sets a time limited cookie", "label": "ATTACK"}, {"start": 379, "text": "attacker guessing a session id guid based on a guid they have previously", "label": "ATTACK"}], "sentText": "my web xxxxxxxxxxn operxxxs oxxy ovxr ssl xxd sets a time limited cookie for each user after they successfully login with a usxxxxxe and password. the bigxxxt weaknesses in the system are xxe comprxxxxxxg an exxxxxxg usxxxs cookix. and txo guessxxg a session id guid.  i kxxw of mechanisms for the first weaknxxs but i'm wondering how much i need to xxxxy about the chance of an attacker guessing a session id guid based on a guid they have previously obtained by logging into an xxxxxxt they have set up? xxe web xxxxxr in thxs case is winxxxs xxx3 axd the guids are bxxxg genxxxxxd with .net 3.5. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 51, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxxp xxxs are a e \"ph\" t. he sites n use popxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or pexxxxs exxn just the clxxk itsef mixxt xxxxxxt a bxxx.  yes, the main page of e e couxd do tht too, xxt a xxxxxxxd popp xxn dit e r and xxy not e directly xxxxxxxxxd h the hoe main page.pops were exxxxxxxd by many uny sites as a way to \"trap\" users and to y fore ad i, . in this resp, xxe y aspet of e problem realy xs te sxy of the user's conxxxl r ther own compuxxr and thr bxxxxxxg desir. "}, {"sentId": 22, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "issue an http", "em2Text": "retrieve a form containing the anti-forgery token", "label": "AND"}, {"em1Text": "issue an http", "em2Text": "make an illicit post which contains that same token", "label": "None"}, {"em1Text": "retrieve a form containing the anti-forgery token", "em2Text": "issue an http", "label": "None"}, {"em1Text": "retrieve a form containing the anti-forgery token", "em2Text": "make an illicit post which contains that same token", "label": "None"}, {"em1Text": "make an illicit post which contains that same token", "em2Text": "issue an http", "label": "PARENT"}, {"em1Text": "make an illicit post which contains that same token", "em2Text": "retrieve a form containing the anti-forgery token", "label": "None"}], "entityMentions": [{"start": 224, "text": "issue an http", "label": "ATTACK"}, {"start": 245, "text": "retrieve a form containing the anti-forgery token", "label": "ATTACK"}, {"start": 305, "text": "make an illicit post which contains that same token", "label": "ATTACK"}], "sentText": "incidentally, if same-origin does not affect form posts - then it makes it somewhat more obvious of why anti-forgery tokens are necessary.  i say \"somewhat\" because it seems too easy to believe that an attacker could simply issue an http get to retrieve a form containing the anti-forgery token, and then make an illicit post which contains that same token.  comments? "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "brute force attack", "label": "ATTACK"}, {"start": 70, "text": "guesses the input values", "label": "ATTACK"}, {"start": 177, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 219, "text": "get in", "label": "ATTACK"}], "sentText": "txxxxs how it wxxxs rxxxx? but ivxe xxxd about brute force attack. xt guesses the input values xxxxx? with xxe procxxxxe above. xxxxxxt it xxxxs xxxt xxe xxxxxxxr only nxxxs to get the $userinput information correct to get in? he xxxxxxt xxxd xo xxxxs the lxxg xxxxxxxxxd strxxg corrxxx? "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 52, "text": "using the [code]", "label": "ATTACK"}, {"start": 92, "text": "open a server up", "label": "ATTACK"}, {"start": 1021, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications  only caused by using the [code] and c te oul user d it open a server up f such o compil r ing r a  ttack (if ? if you use [c attack.if ode] just for gener att ating c server # so a urc so e code, t (which hen you  (which only need a p (which er be mi a ssio anything  c n to save the gen anything erated files gs  to so on me directory  generated or to noting at al you l (if it code  is poss rated ible to get th you e code generated i  won't this nto a memory str sh  so guarantee e eam)if  t you use it for c a ompili memory ng gener att the ack.if ated c# source, then you ne s ed  file ttack s a permiss fine.if ion to run  then &amp; a   [code] (which may not be av files a on ila some ble in some limited environme all nts such as use  that  shared hos gs ti can  how ngs).if you just genera is te files &amp; compile them, the code  any n it probably won't be harmf sou (which rce, ul (although some if one cou stream)if ld probably abus memory e your application r   code to generate many, many files and attack the server using some kind of dos attack.if y them, ou a i only s l t so  e load &amp;  files ex you e a dep fine.if ends  de if p some ends lso     fine.if all cute the gene can  files rated co files de, then it depends on how you generate it. if you assume that there are no bu w gs in c#/c of odedom and  it can guar he antee that ants  the generated code   safe, the i [link] s saf   gene e, then you sho  uld be fine.if your code contain things such as [link] that c someone an be provided by the user (in some wa he y) tha and n the compili  user can write and if  run anything he or she w eam)i ion f ants on your server, so this would be potentially quite and  dangerous. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 92, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo data.    a l do n r e \"t  px  as. in t o pg f   x s xxx pd g a a  pxd   is i h n e a r gets access to the database. if  l i st      oe te xxt    s in   t a e x  te f  e o hr te  ,    b wn e    h x e e w as h m  a wh n a g in  ? m e h d i  ax    d s db w . sw h it g dr  l hi k  ,    , isnt t access   to j it  like t  g like   i o,  a  m \"t  h  handi in  wih  hg ng  a  it x m e  w win in hc  xx wo r t  e \"t   x   t e    i wn \"st  xxx j ?   i am n  m a g up a r h a l, dr w   xxd h o, a   har ng the r t m e . "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 51, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 198, "text": "replay attacks", "label": "ATTACK"}], "sentText": "how does challenge-response authentication prevent man-in-the-middle attacks? i read the wiki article but still i cannot understand. where challenge/response protocols really shine is in preventing replay attacks: if alice just sends bob a message along the lines of \"please debit my account $5 and credit your account $5\", mallory could record the message and replay the message to deplete alice's account. "}, {"sentId": 40, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "querying information about a user", "label": "None"}, {"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "querying information about a user", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "PARENT"}, {"em1Text": "querying information about a user", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "querying information about a user", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "using a sha-512 hash 1000 times on a salt + password", "label": "ATTACK"}, {"start": 82, "text": "querying information about a user", "label": "ATTACK"}, {"start": 171, "text": "passwords can be cracked", "label": "ATTACK"}], "sentText": "i am using a sha-512 hash 1000 times on a salt + password. s t safe to retuxn t n querying information about a user or should i sexe it xxd make it avaixxxxe only over h? passwords can be cracked. given a hash and xxxxxxxxe of how the hash was xx, you xxn brutee the relevxxt pa. evn h it s 1000 times lon, and the salt mixxt xxxe to be bruted (if t incd in xxe query re, the poxy stl s (and someoe t enough, h e right xxxxxxxxx, xxt jut do it if e vae ws high exxxxxx. t take xe rk x- xxxt don't die xxe pd in any fxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 83, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 168, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxs e  e a a e   xxxxxe \" xx. e s clic is king  n  e an  e  xe o br xn ow pxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t  xy  n e k f t  xt et a bu  d e gx n .  y, e n ,  d  e xf the xx well-crafxe t d e x f   xd do xt  brow y i t xs , b e u xs t a xe  wea e    sey ftd  te pop n t th xs e  xs ur axd x xxxxy y   t xe y   b e ad xh xe xxy  x n xe xxn s e d y sey  y uxxxy s t its xs a y o \" s d o esxx o xxy xs  fe d  e popus  ,  t etx. i d n s  n , te sey t of e prm reaxy i e s e sy xs  of e u d ss cn on xxl or  sey  xx r on o y mxr a i a s  t d xr i a me  xg  ad de. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notable \" xxxxxxxxx. hostile s can use popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even t the ck if might et a bugx.  y, the main page xf the xxxe xxxxd do xxt to, but a well-crafted pop n dixxxxxt the user axd xxy not be dy ad with the xxe man page.s e d by y uxxxy sites xs a y to \"trap\" users and to esxxxxxxxxy fe d imp, etx. in s , the sey aspect of the probm reaxxy is txe security of the user's control ovxr their on compxxxr ad xxxxr browsing des. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 74, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe xxxxe pox xt  hashixg xt of hashixg a paxxxxxd x  is xn xxxe a hacker gets access to the database. xf i st up ore th  e salt  i in the db x pox xxxxn t as he xxxe xxw as  xxxt the xn  hashed xxxxxxxx, xxxxt it th the e  xxxt xxxe i  the x xxxxxxxx, m handixg the hacxx i r the \"secxxt  up   code\"? h xf ash hacxx ixg  i am xxx am xxxg up a dxxr and  xxxh a loxx, and h and a xxw nding   database. i th  dxxr \"secxxt e xxxxxxxr t  xn a he xxx. "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that could happen? mysql provides various statements like show etc. that a user even having only select privileges could use to gather information about the database server or about my databases. other information could be obtained from error messages. while probably not sufficient to gain improper access, this information could surely help in doing so.there might be flaws in the database software, or in my scripts, or in the scripting language itself, that could allow a visitor to do things they are not supposed to be able to do through this interface.doing this might violate a terms of service agreement, particularly if i am using shared hosting. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 128, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 212, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp n d dxs ar waxe e a  xd exxd  na ad xl hs e xxxxxxxx\" . hosxe sxxs a exxxo xxt r a itxd n s xxd e po bu u  us txxxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (r ps en j xe ust t y xe  pxxp cl   r  s  cg ik il xxt f mxxxt exxxt   rxx,  a bu foe xx.  yex, xxe xxxn page f xxe sxe d o t , bt a well-cxxxxd xp e p xxn dt e user d y  own  xxxh not tly  xe xxr rey c e xxy s by sod t xt uxxxs c. h t xxe e hose i xxxxd n p t a d ge.pp w the xn uxs w xx, e  cou n ld thxxr e xxxxxxd y mxy uny xxxxs xs a xy to a  e xxl k w  are p\" uxxxs and o e he sse xxxxxy xy fe ad , etc. in xs , th xxe d s e sexy xxt xf e xxxm xy is xxe secxxy xf xxe  ino he  xxxxxs c  e s oxxxxl an  y exxxxxd d  r their  xxe n r ad tr brxg de may xxxxs n e oa . "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 10, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 589, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "xxxxy i'm storing api keys in my app. which yes xs a bad p. now to xxe bext of my knowlee i n xxe prd or dd xo oxxxxxxxx. i can xxo use e o xxxy xxxxe y api kexx. now for ths part here' my que- obfn chans e e xf varxxs and clxxxxx. my api key will xxxxl be in xxxt app wxxn sxe dxxxxxxxxs xxe ak fixx. xxxe it might xxxe mxxe timx, xxt w xxh xxxe s it? fxr xxxxxxe 20 mixx? i xxxl xe the bxxxxm xxxe xs txxt they can use this key xf they pt some e xxd efxxxx. am i gxxxxxg ts wrxxx? xxw is t even p? a server xs xxxxg to send the xxi xxy to the app. if the har finds xxxs ul they xxn just open it and get the key. xf i ue a kxy to acs the url thxn ixm exxxxxxg a xxxxr endg loop of keyx. hxw wd i do thie d that i can encrypt xy kxxs and txn dt m xn xxe app oxxe ixxs xxx. bxt caxxt e e my dexn funxxxxn d e out my k? "}, {"sentId": 133, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 49, "text": "bcrypt is hacked", "label": "ATTACK"}], "sentText": "now what i will  want to say su  ppose  ppose if bcrypt is hacked and is  say found to be broken and in future t  here comes  now new  way cryptographic function that is more secure an way d wa be y . than t way his way creating a pass to wor  ppose is d fro y m  is ol hacked d this    values will alw be ays be ti consu be ming. me consuming. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 211, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 260, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "so natural   just ly, i thought of just sha hashing it since we n 're just using it for ident of if so ication.  th site e a  problem a  wit of h revealing  cal  that is that if an a of ttac identification. ker knows the problem domain (an ssn), then they can focus on that domain a .  so it's much easier to cal domain culate the using  billion ssns rath instead domain.  er tha  that sh it a, n a virtually u the nli of mited number of passwords.  i domain  know i should use a site salt an sha d  it a per-patient sal complexity t, bu (an t is there any (an thing el a se i can do  is to prevent an  so at ker t sha acke er r  on fr i om revealing the s so sn?  instead of it  sha, i was planning on using bcrypt, s easier ince ruby revealing  has a good  ssn), l i i  domain the an sn? y  brary and  it's i rath t handles s acke cala so ble co thing mplexity a n any umber nd salting automagically an . "}, {"sentId": 31, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "steal not only the latest intellectual properly ", "em2Text": "our whole history of changes", "label": "AND"}, {"em1Text": "steal not only the latest intellectual properly ", "em2Text": "copying a single folder", "label": "PARENT"}, {"em1Text": "our whole history of changes", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "our whole history of changes", "em2Text": "copying a single folder", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "our whole history of changes", "label": "None"}], "entityMentions": [{"start": 267, "text": "steal not only the latest intellectual properly ", "label": "ATTACK"}, {"start": 319, "text": "our whole history of changes", "label": "ATTACK"}, {"start": 359, "text": "copying a single folder", "label": "ATTACK"}], "sentText": "  difficult e it's  e gathere xact been difficult to nail  history down  intellectual that   th his exact se steal curity concern but i've gathere on d that it ce o of f but  nter fac nail t s on th not e fact that  it' employee s of  a malicious employee c but ould steal not only the latest intellectual properly but our whole history of changes just a  by copying a single folder. that  "}, {"sentId": 34, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 40, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "the antiforgerytoken is used to prevent csrf attacks, however the links on msdn don't give me much insight to what exactly the antiforgerytoken does, or how it works, or why things are done the way they are. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 208, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popxp wixxxxs are  malware a notable \"xxxxxx y xx\" xxxxxxxxx. hosxxl xxxxxxe e sit pxxxp es can use  aspect pxxxxs to convince users that an important message from a trusted site has been delivered, a can nd trick those people into clicking through to some malware url (or xxxxxxs e do xxn ju has xt the  sit  e c thxxxxh lick ixxxxf mxxxt   exp trxxxxd loit a buxx.  yxx, the  age xa xxxxxxxy in p uxxxxxx sec into urity y xxe xf bxt  the xx a xe x too, x  xxd xe  do xx own xt t er oo, but a f  wxxx- xxd c xt raftxd poxxp xxn  age dixxxxxt txe us  er might  axd th too, e nd   xxy not   be dxxxxxxy associated with the x txe xxxxxe main paxxxxxxu th popup at ps maxn  wxxe exxxxxxe  d by m the xxy  o the f uxxxxxxy s xxd itxs xs  at a way to \"trap\" users xxd  h to exxxxxxxxxy for e ce can etx.  h mxxn as xxxxs    ad impr sites exxxo xxxxp nx,  uxxxxxxy etx. in txxs respect, txe secxxxxy aspect of main  the p own  of robxxm rea xxxxxxxy xxy is txe people   popup securixy of the user's coxxxxl ovxr thexr own xxxxx  xxr and xxxxr browsing dxxxxxx. "}, {"sentId": 80, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "inject javascript into the page", "em2Text": "xsrf", "label": "None"}, {"em1Text": "xsrf", "em2Text": "inject javascript into the page", "label": "PARENT"}], "entityMentions": [{"start": 431, "text": "inject javascript into the page", "label": "ATTACK"}, {"start": 633, "text": "xsrf", "label": "ATTACK"}], "sentText": "why was it decided that using xmlhttprequest for doing xml calls should not do calls across the domain boundary?  you can retrieve javascript, images, css, iframes, and just about any other content i can think of from other domains. why are the ajax http requests not allowed to cross the domain boundaries?  it seems like an odd limitation to put, considering the only way i could see it being abused, would be if someone were to inject javascript into the page.  however, in this case, you could simply add an img, script, or iframe element to the document to get it to request the third party url and send it to the server.   <h2>xsrf (cross site request forgery, also known as csrf, xsrf)</h2> your can do xsrf attacks without using this at all.  as a general rule, xmlhttprequest isn't used at all, simply because it's so hard to make an xmlhttprequest in a way that's compatible with all major browsers.  it's much easier to just add an img tag to the url if you want them to load your url. i'm marking the answer from bobince as correct because he pointed out the critical problem.  because xmlhttprequest allows you to post, with credentials (cookies) to the destination site, and read the data sent back from the site, along with sending the persons credentials, you could orchestrate some javascript that would submit a series of forms, including confirmation forms, complete with any random keys generated that were put in place to try to prevent a xsrf.  in this way, you could browse through the target site, like a bank, and the bank's webserver would be unable to tell that it wasn't just a regular user submitting all these forms. that's not an xss attack. that's a cross-site request forgery attack (xsrf). there are known ways to solve xsrf attacks, such as including one-time or cryptographic tokens to verify that the submission came deliberately from the user and was not launched from attacker code. "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 6, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 588, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "y i'm storing api keys in my app. which yes is a bad practice. now to the best of y ke i can use progaurd or dexgd to obfusc. i can alo use ke to securely store my api . nw r this part her' my qu- obfusn chas the e f variables and cl. my api key will still be in t app whn some decompiles the apk . sure it might te me time, bt how h more is it? for example 20 minutes? i fel like te bottom line is that they can use this key if they put some time and eff. am i getting this wrong? hw is that even possible? a r is goig to send the api key o the . if the har finds this url they can just open it and get the key. if i use a y to acs the url then i'm g a never ending lp of keys. how would i o this?e sad that i can encryt my keys and tn decrypt m n the app once it's rece. but cant pe decompile my decn function and figue out my key? "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 93, "text": "requests the form page first", "label": "ATTACK"}, {"start": 123, "text": "starting a valid session", "label": "ATTACK"}, {"start": 153, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 221, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i ixxxxxxxd sxe e t s rxxxxxxy attacked by repeated remote form submissions. how, the xr nxw requests the form page first, starting a valid session, xxd then passes the session cookie in the following post request. there having a valid session token. so xxxl on my . "}, {"sentId": 133, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 34, "text": "bcrypt is hacked", "label": "ATTACK"}], "sentText": "now what i  a want to s a ay e if bcrypt is hacked d is found to be b  t bct rok is en a from nd  tt in future t from here co f mes new crypc fut  f valus ion that is e e a t t values o oc nd. h c n this way creatin and g a passwr fe d from old values will als be tim consu e consu frm  mor s e mi e ng. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strinxs xxe ixxxxxxxx. that means once yoxxxe crexxxd the [codex, if another process can dump memory, thxxxxs no way you can get rid of the data before [lixx] xxxxs in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 43, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 126, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws e a xe \"\" xxx. e sites n ue ps to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxxs en just the clxk f might exxxxxt a buxx.  , txe xxxn page xf e xe d o xxxt too, but a wd p xxn t the uxxr axd xxy not e dixxxxxy axd h e xxe n s wxxe d y many uy ss s a y to \" s and to esxxxxy xe xd imx, etx. in txs respe, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf e user's contrl r r on xxxxxxr d r bg desi. "}, {"sentId": 35, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "alter the ldap query", "em2Text": "injecting malicious code", "label": "PARENT"}, {"em1Text": "injecting malicious code", "em2Text": "alter the ldap query", "label": "None"}], "entityMentions": [{"start": 193, "text": "alter the ldap query", "label": "ATTACK"}, {"start": 217, "text": "injecting malicious code", "label": "ATTACK"}], "sentText": "i am working on my first desktop app that queries ldap. i'm working in c under unix and using opends, and i'm new to ldap. after woking a while on that i noticed that the user could be able to alter the ldap query by injecting malicious code.i'd like to know which sanitizing techniques are known, not only for c/unix development but in more general terms, i.e., web development etc.i thought that escaping equals and semicolons would be enough, but not sure. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 156, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are etc.  a nota to ble \"phishing\" tec a hnique. h cou been l exploited d ostile s notable ites even  can use   to directly  popups popups to convince users that an important message from a trusted site has been delivered, an even d people  trick those people into clicking through to some malware url (or perhaps even j malware  an ust the click itself migh \"trap\" t t  o  exploit a b \"trap\" ug).  yes, the main page of the site could do that too, but a wel essentially l-craf their ted popu been p can distrac \"trap\" t the user and may not b a e directly   associated with users  the hostile main page.popu use  pro \"tr their ap\" blem exploited  ps were exploited by many unsavory sites  hostile even  as a w ps ay to \"trap\" users and t p o  page.popu  p even s essentially force ad impres even s coul ion  e notable s distract , etc. in this respect  , th \"ph essentially ishing\" e se pect c hostile urity as associated pect of the  , prob t hostile o lem really is th even e s use ecu perhaps rit own y of the u res to pect, ser's contro to l over their own c p om over pu could ter and their browsing desires. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 231, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  page.s \" x peoe x a e nd  e . hos  e  b se i s  fm ps  can use e   for up e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  nd trick those people into clicking through to some malware url  d (or  fo a r xxxx t ge  x  s e e n j ssc   ut the  ey clik m  f m ax  and t e  n   t sc e y e xp ut lot a  xn .    y   te es, xr   t e   t he man pa and  the a   e e f t url t their ce    e   xe x p  y xxd ps   y d e  h o xxxt  e , b up a   y u  t a wd     p uy o xs p   a . xn d n ixt  up m up y  te ur ax ge d  d  force e    xxy not r   e be dx ur   x t xy ,  a f a  ssc e d  even i b t \" h t xs e e    throu  g  h  f mai fe main  n s w the e d by my u  u xx y host  ie  xx. p   s xs e  a y o \"t\" s a r  e s  d  e        p rg op o h  ose   ssc esxxxx t y r   up  re ce  ge d imp, .  m t . e ,  . in  a o    txxs re the , t peop  e  e he  a s a ec des. u e rit \" y s     pe  . po  a e t a up e  of t  s  h n e m rey ul   y  s i expt s   p  e  xs   u te s  y o e f e user's c  l r the ce ir n r and x p s  xr b e  . ye,  expt  d n  people rog i n o    . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lter u  out the mxxxxxxs axd  i xxt in xy wxxxxxk callxxxx. hxxxxxr limitxxg , a  xxxxxxk sxxe  mxxxxxxxs xxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  en if telexr xv am ha d ve imxxxxxxxxd sxxe xxxe l xxxxl imitixg such u ser x. xxxe ser vxxe  actio the ns xa mxxs xxxe xxxs y  xxxl st en ill resxxt xn dexxa hoxxxxr l  d  xxxxl o ca  n f sxxxxxe fxr all xxxxr xxxr add s. "}, {"sentId": 13, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a bad guy to get a core dump", "em2Text": "somehow otherwise observe the heap", "label": "OR"}, {"em1Text": "somehow otherwise observe the heap", "em2Text": "a bad guy to get a core dump", "label": "None"}], "entityMentions": [{"start": 410, "text": "a bad guy to get a core dump", "label": "ATTACK"}, {"start": 441, "text": "somehow otherwise observe the heap", "label": "ATTACK"}], "sentText": "my concxxn is t pen hat we c xm onc a xxn  shod n get er stoe a usx g oncxxn uy  ls r oxxxxt  pa core  a ssword xn a xg becxxe they'r  they'r core e i. guy   a  i  c xm oncxxn r   stxxxg can't that  zero o stoe ut that stxxxg as sn as xm done xxxxxxxxxxx.  tht oxxxxt wil a l zero  t in me xn y done  untxl the garbage c a ollector r in un.   zero that ls o st dump xxxg pen a mxxh wxx tha pa t r window f  or a bad guy to get a core dump r somehow otherwise observe the heap. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 229, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 317, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup n sixe people    and  thr   xxxxxxd  in dxx i  te n d s ar ware e a  axd   w  d  no xxl ta axd bl has e  n may  to  xxxxxxx\" txx en x  xx. xxxxxxe s xa exxxo xt r a xxxd n us xxd e xo bu pu e  ,     xs tr he ick ps t axd o convince users that an important message from a trusted site has been delivered n , and trick those people into clicking through to some malware url xxr p tt s ev n en j e ust t r xxr eally h m e  pxx  xp xl   ovxr yes,   site  the  s  cl xxx, x xx  the  in brxxxxx to    c  xxxxxe h  xg xxk itsel xxt  xxt f mt exxxxxt   rxxp clicxxxg exx,  a bu fore g) xxy .    xxy  y  es, txe  to n paxe xf   xxe sxxe  s cxxxd xo tt tox, bt a xxxe    well-xxd pp hoxxxx  e message  up n dist th cou e xxr d xxy  own not   thrxxxh nxt tly  be trick  dxr sse  y ec he  throuxh  he tly s y socxxxe  d t xt us c. h t t p asxxxt  he   he hose ma t and  been a i x brxxxxx  g xxxd n p but a a   us nd  and ge. nt pop w e xn   ups axd     tri w xx   trick  bexn x, e an  d   cou n l ed d thr e ed xy ma yes, y trick not   xxxa us  xxxxxxe xxxy xxx xxxp may xp xs as  nota a w sse  xu s  xy w  to \"ta  e xxl xxxxxe  tri   ed ck w  axe p\" xxe trusxxd s a up pp  nd to e e xxe  sxe r  y xy xe  foxxe  to a  d impxxxxxx, etc. in this r t , th h  s \"ta ixe coud s e  e sey asxxxt xf the m y is xxe sey f xxe  xxxo   some  he  xx  j bu xxxs c  e xxxxxs o thrxxxh l a x, n  a  y ex xxa d d  ovxr   bu  thxxr  e n cx y xr an xxxxs d t a h s e  ir brxxxxxg de may s n e oxa . "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 181, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "lets csrf  y w  to e e xxxe a ty n p te l c  sr ? f  n o t sr xe  this te the ctn like s on e e this  h ?   av  e w xxxf   xo  hxt n   h  csrf to  xv   at  csrf f  e b xxe ?  xxxs  an attacket uses this code to bypass the csrf token an ? "}, {"sentId": 142, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a hacker to do packet sniffing", "em2Text": "use some other method", "label": "OR"}, {"em1Text": "use some other method", "em2Text": "a hacker to do packet sniffing", "label": "None"}], "entityMentions": [{"start": 81, "text": "a hacker to do packet sniffing", "label": "ATTACK"}, {"start": 115, "text": "use some other method", "label": "ATTACK"}], "sentText": "if a web server and a database server are on different hosts, is it possible for a hacker to do packet sniffing or use some other method to get the database username/password when you use mysql_connect in the php code? "}, {"sentId": 16, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 227, "text": "these be used maliciously to get to access other files in my s3 bucket", "label": "ATTACK"}], "sentText": "i have an image in my aws s3 bucket. is it safe to include this image in my website by placing the aws url in an [code] tag? the url includes parameters such as \"amz-signature\", \"amz-credential\", and \"amz-security-token. could these be used maliciously to get to access other files in my s3 bucket? "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 151, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 458, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xxe o  xx al xt ry  y w does te  xx xy nnxt r xxxxxe epx rea  a a    t   xxe repa x    xxxt xxt  x  a  od e   xxxt authen y c  c autc xt atn p x ret man-in-the-middle attacks? i read te wii  5  x al   i e but s x  xt l   i xa   :  l  ca a    lly  n  n y t xxt  undet  t  and. e  authen replay   c ch y a   xx  re l    xxxx dee xe   s y  authenc xx an auth  i  c tc x ch   h  xxxx s  ne x ca s rea    lly al    e xs   s    l     $5, od xy x   xxb in   y  g replay attacks ad : y  the    ne   u xs    re t   t s   t  f xxxe j  t ss b i  c   atio  od   od b   re te c  od xt a mese mee  g the s    s x    of \"p  xe b b i  t   m od xa  y $5,   ch atio  n xxt    x x  xs l xb   xe  s e h   x xs xe i  t xd    cha ne t   $ , 5 and c    t yr a replay c      y re   t xx :  ne xy at  xxt $5, y  re xx   g c ac m b  s all al  tc xxy  x5 e a d l x dee  xx xy xe xs ould record xe mee  y a x nd  rea y      repxa xa  x $5,  xe x 5  od y   ry l y l    xa it   te  xa e    $5 t i o dee  t s  .      a e s  xt  xx rea    t x  t a ne   a ca  nnot  xy  \"p  a  xxxxxe does  c  a b m  c  \"p wii xxx  x ct . "}, {"sentId": 106, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 501, "text": "executed the post-install hook of a malicious version of ua-parser", "label": "ATTACK"}], "sentText": "in lt of recent malware in existing npm packages, i woud like to have a m that les e o some c cs before ing w packages r updatg existing . my main ie ae h e ps i install di, and alo the os i inl indirectly.in gel i want to get a list of packagn t m wod inl bee g it. more spey i t e ae f the packs that would be i, so i cn generate a wag if any of them is less than a day of i could do tt directy with npm, tt wod be n, but im afd i need to do se scripg around ic ue caf i exd [cod] on 2 it would hae executed the post-install hook of a malicious version of ua-parser and my computer woud have bn compromised, which is g i would le to an i er , it ony ts e which n of reacr it wod have inst, t t d t tell me t t wod il a n of r that was reld on that day.l notei know that [c] exis, but it shows oy the direct pai kw t [co] exist, but it oy shows pas after ing (d thus r insts have ay e their hh only w packages version and t thr i do t know hw i woud get a list of s t would come with a install-hok before insg ts to alternative ws to dl with ms npm pas e o far y t son would be to o ; but that wd e h it's own set of ps "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 127, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i wan xxxt ty le t t  o know if this an i d xn  ly this  so, lxxxxe on  sxxxxxt pxxxxxxs axy securi i   ty issues  o (like xss attacks xxx) "}, {"sentId": 70, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "images only some people are allowed to see", "em2Text": "putting them into a publicly accessible directory", "label": "AND"}, {"em1Text": "images only some people are allowed to see", "em2Text": "there is a change other people can see that image", "label": "None"}, {"em1Text": "putting them into a publicly accessible directory", "em2Text": "images only some people are allowed to see", "label": "None"}, {"em1Text": "putting them into a publicly accessible directory", "em2Text": "there is a change other people can see that image", "label": "None"}, {"em1Text": "there is a change other people can see that image", "em2Text": "images only some people are allowed to see", "label": "None"}, {"em1Text": "there is a change other people can see that image", "em2Text": "putting them into a publicly accessible directory", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "images only some people are allowed to see", "label": "ATTACK"}, {"start": 81, "text": "putting them into a publicly accessible directory", "label": "ATTACK"}, {"start": 132, "text": "there is a change other people can see that image", "label": "ATTACK"}], "sentText": "sort of. yes, if you have images only some people are allowed to see, and you're putting them into a publicly accessible directory, there is a change other people can see that image, which appears to be undesirable. i also don't think (might be wrong) that it will gain 10 seconds on a page load, as you'll have to copy the images, which is a rather intensive operation, more than using file_get_contents or readfile( ). "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1278, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1406, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ag a e  3d  hixh pa xxxxl rxi  are xc  ix axxxxxxx are s , x   e. im cxxxxxxxxxy xp key  axxx rti xxxxs   a sc a  xt astle)  x  xxxxl   e. o xxx c s n o  xxx in n t xw  will not xe  xxxk and  xx xxxxxxxxs xxxxe se  x which   k o en  xy exchanxe x  wh  is wh xx  y  a no  no a w x wh xxxxxxxs    a . x  x  kxy  n xm xxx bouc x  xxs are dexd  axs xxxxxe    o d pl   erxxe   im pl a s no  x r xx  key hd se so t xxxx so xx k xxs  from   2   xx cxxxxxxxxxxy p xc s  ubx   im xc   keys nxt ix n-  pax w o  xy ,     sc  x set bou exchxxx xy e c  xxy (esp axs ecy g . im x a xt  t xc he  wxxxh a c nd bouc xo astle)   e. .  to xo x a x xxe  mxxxxe xc xh     t   xxxxe h xxxxl  xh boxc xx e    .  usin n g xu shxx sc   a  . hxxa xd  xxs e middle  a  n st sxxxxd io key  o   n  g us o xn xxt g  is, hxw  a would x  xxxc  xl xn  s  shx n xx  d  axxxxs u to are  a  r keys   e  xxy   n an   go xxxxt i  m    n axxxxs  c xxy xxxxxxx e. xxxy 3d   an  shxxxd  t xl xxs    a e o    so mn n y nw  o xxxc t to   ast nd le). xm  g  xxxxxx.  g a n-paxxy x t  n xxxxh ot x  attack) xxy   xxx xe c   will   shxx ke . y  im c mn x  xxxxxxx  xy sc  and th t e hxxa w so hich is nd  x k e  xe  . e xxxl  i n-paxxy m xxxxc (i    . xxxxl  shxxxd e.  xn   rx  xxe fro wxxk m ix  t  xxp to asxxxx. xc   man in the middle attack) a xxxa nd    k  im xx fro xxxe   would sexx wxxk x   to e  axd (i.x. xxxxxe  xxxc x cip x ci hxw p xm eavesdropping u ). no  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messages i get i and n xy webxxxk cxxxxxxx. however, a m   wxxxxxk alicxxxs use a r cxn egxxm  add my bot to a thousand big groups and wi i ll xxxxxxl l    tel y result in denial of service for all other users. e can ven xf te denia l get xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m dxxxa r ll esxxt l rate lixxxi s ng such user actixn m s xxy stixl result in dxxxxl of xxxxxxe f wxb xr all web i xxxk  other users. "}, {"sentId": 31, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attack vector", "em2Text": "xss escaping", "label": "None"}, {"em1Text": "xss escaping", "em2Text": "attack vector", "label": "None"}], "entityMentions": [{"start": 76, "text": "attack vector", "label": "ATTACK"}, {"start": 194, "text": "xss escaping", "label": "ATTACK"}], "sentText": "if the api is implemented in a web service presented through a browser, the attack vector is quite real. on the other hand, if the api is implemented in a desktop app, or a mobile application - xss escaping would be a total nuisance and not needed. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 123, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 207, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp n d dxs r waxe e a  xd exxd  na ad xl hs e xxxxxxxx\" . hosxe s a exxxo xt r a itxd n s xxd e po bu u  us txxxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (r ps en j e ust t y xe  pxxp cl   r  s  cg ik il xxt f mt exxt   r,  a bu fe .  y, xe xxn e f xxe e d o t , t a wd p e p xxn dt e r d y  own  xxxh t tly  xe xxr rey c e y s by d t xt s c. h t xxe e he i xxxd n p t a d ge.pp w the xn uxs w x, e  cou n ld thr e xxxxxxd y mxy uny xxxs s a xy o a  e xxl k w  are p\" us and o e he se xxxxxy xy fe ad , e. in s , h xxe d s e sexy t xf e xxxm y s xe secxxy xf xxe  ino he  s c  e s oxxxl an  y exxd d  r tr  xxe n r ad tr brxg e y xxxxs n e oa . "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 187, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 446, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 244, "text": "xml bombs", "label": "ATTACK"}, {"start": 543, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l hs ben the bae of the se oried appl) and it will e a l oe in the cg futures xl is easy , fle, it can e easiy made vulnerae d te atts can use it fr their own s such some f e attacs by e coercive parsing attack, l external ent) , xml dos() at, xml bombsn y one tell in l abt te attw cd one n simue the attacks pracy in a sie system? i don't think e is e definin of a , but it refers o an attak that is y \"co\" ad which \"e. a \"coercive parsing at\" exploits the nature of the xml model to overwhelm the parser. a bb ug ens which rt in a ds be it exhausts the memory "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 469, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 651, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am plxxxxxg to  the aes_xxc xxxt ryxt the pxxxxxxxs in xxe db, w access  t will xxx, hixh xxxxs that if do  s ave omebo rypt dy is so r h evealxx, mxxxw abxe to acces situatxxn s do  the   db they wxxxt be able xo   gxt txe plainte so xt. howxxe my r xy code will  in need t a the ccess o h server ave access to the   is  key to unencrypt them, won't  thus if the enxxr db e xxxxxr is c protecxs omxxxxxxxd txxs is no the  pr the  acce db  , ss be i otecxxxn and the passwords will be revealed.  i  can know that wh db, ateve able r i do, ulxxxxxxxy the pas xxs  to swords mus  t be xxxxxxi the ble xn pxxxxxxxt  be  xxxxxxxg however  mexxs  and so a compromised server means the passwoxxs will b enxxxe e rev axxe eale  d, xxt i am wondering   situation xs wha t  the xo o t xxxxs i can  be do to mitigat them, e my risk. e.g do . exxxxxxxxg the db protects me in the   to revxxxxx.  omebody sixxxt omexo ion where the  is db is coxxxxxxxxd but not t access he xxxxxe thxx,    won't evealed, s mitigaxxxg exxxx. other similxr xxxxxxxxxg steps woxxd xe  be xxxh xxxxxxxxxxx. "}, {"sentId": 1, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 193, "text": "the wysiwyg editor will output html to be rendered into the document", "label": "ATTACK"}], "sentText": "technicl background in: we are rg g djano 13 and have t chn a sc edr ye. we are leaning towards a javascript oe such as tinymce, t can be ped to use anything that allows security d e of use. e the wysiwyg editor will output html to be rendered into the document, e cat simpy ee it. "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 95, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 171, "text": "extracts it", "label": "ATTACK"}, {"start": 188, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "but what if a malicious script will first make some simple get request (by [link]) in order to download the page containing the antiforgery token in a hidden input field, extracts it, and use it to make a valid [link]?  "}, {"sentId": 43, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "decompilers", "em2Text": "get the key", "label": "None"}, {"em1Text": "get the key", "em2Text": "decompilers", "label": "PARENT"}], "entityMentions": [{"start": 375, "text": "decompilers", "label": "ATTACK"}, {"start": 391, "text": "get the key", "label": "ATTACK"}], "sentText": "s of the g languagei have a client server application.mobile client - hp serverthe app will be availae on sel mobiles not only andri want to me sure e ret is comg m client's e only.w can i soe this security i pre :e a secret key hd on te mobile app:eh request is d using this key ad decrypted on the server side.is it safe to hardcoe the key if this way makes sense at all? (decompilers can get the key? the app will be avae t only for anda info:each user wil have a userid/usernam. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 28, "text": "leak the database table", "label": "ATTACK"}, {"start": 86, "text": "impersonating users", "label": "ATTACK"}], "sentText": "ts h ps de. if somee mans o leak the database table, it ds not gie n r an open door r impersonating users. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 62, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am g to make sure my jenkins instance is not exploitae with the latest log4j exploit.i have a pipeline script that runs, i d following this instrn :[link]this s one of my stages of my pipeline scriptt i get a different r than what's dd here d i'm une f i'm checkig s c.  this is the error:[cod] "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 222, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 426, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so, i wonder w exampl hether   adding it every time ad exceed  prevents ds some strengt attacker h to the hash. for exampl clever e, would it b slow). e possible t it hat an attacker 512  found  but some  it clever way to create a 100timessha512 function whi executing e  ch were  least way faster than simply executing sha512 100 ti  ha c function lever me every s? whether  yes, it d prohibitiv executing al  e oes expose a dos vulnerability, but it  it al it so  100timess force ha to 512 prevents bru create  prohibitiv to e te force at ti tacks (or at least m  akes them prohibitive an ly slow).  lea whi st eve an ry   the way re is absolutely a tradeoff, but to some the benefits exceed th is e risks... "}, {"sentId": 163, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 28, "text": "avoid attackers to steal the token from a cookie", "label": "ATTACK"}], "sentText": "additional question: how to avoid attackers to steal the token from a cookie? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 184, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 242, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i ca legram n  bot f out ilter out the messa i h  ges i get in my w result e all bho e ok ca and l big l  in such back. h bot owever, a  ebhook m o users. f will  d  alicious user can add my bot to a thousand big groups and will p of ossibly result in denial of service for all other users. even if te other le all gram h in ave  denial imple all  n mented some  ebhook rate limiting such u other ser actions may still result in d even eni legram al of servi all ce for all other users. "}, {"sentId": 87, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "event injection", "em2Text": "special application permissions - [link] to be exact", "label": "PARENT"}, {"em1Text": "special application permissions - [link] to be exact", "em2Text": "event injection", "label": "None"}], "entityMentions": [{"start": 48, "text": "event injection", "label": "ATTACK"}, {"start": 73, "text": "special application permissions - [link] to be exact", "label": "ATTACK"}], "sentText": "i think the bigget pm you'll face is that using event injection requires special application permissions - [link] to be exact.  e grantg n an this permissin basically alls it to simulae input eves into any apn at ay time, it is cd quite dangerous because a badn or intentionay malicis application coud do a t of .  the many ens and busines do not alw applicatios that e this p. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 73, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "  what s e b the est way to e  prot  ect the usr  or and see f fr or any mitm attacks. is my wy my  prot best   secur user e enough? "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 69, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 422, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  se  y yr  reco: t is    malicious t  befoe  hiy d that you do not  hard-code the exact public license key string value as d or or   or ed by  gooe . , you n co string ns t truct the play.  o . le pc licene y  stri string n do g or  at rut key  puc e  n m substrin subsr g , e ings e , g, or re pc t   is t  e g  t m a license n end  s, e p  assg t e reco: x store, act  to te this  c. ths   h s t  m e ore f n ft  the r malicious third-parties to modify the public  license key string n yr  the apk . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 95, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 145, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i n  for t e er out the n  ms i t i  n my web even hook . e se ver, a malicious u o s hk er cn add my bot to a thousand big groups ad l s s ibly result in denial of service for all other users. n  all if tel messags  gm e hk gram e f  impld e rae i of g  grs sc  h ur a i c al o malis s may s h till  y resul u t n n iy i ibly l  denial f  all e for l ms l othe n r  denial users. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notable \" xxxxxxxxx. hostile s can use popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even t the ck if might et a bugx.  y, the main page xf the xxxe xxxxd do xxt to, but a well-crafted pop n dixxxxxt the user axd xxy not be dy ad with the xxe man page.s e d by y uxxxy sites xs a y to \"trap\" users and to esxxxxxxxxy fe d imp, etx. in s , the sey aspect of the probm reaxxy is txe security of the user's control ovxr their on compxxxr ad xxxxr browsing des. "}, {"sentId": 13, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 30, "text": "javascript injection attacks", "label": "ATTACK"}], "sentText": "i kxxw that i need to xxxxxxt javascript injection attacks. how do i do xxxx? "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 73, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playing with image uploads to a website and i found out about these decompression bomb attacks that can take place when it's allowed to upload [code] files (and some other). since i am going to change the uploaded images, i want to make sure i don't become a victim of this attack. so when it comes to checking if a [code] file is a bomb, can i just read the file's headers and make sure that width and height are not more than the set limit, like 4000x4000 or whatever? is it a valid method? or what is the better way to go? "}, {"sentId": 83, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "use atom tables", "em2Text": "store executable code", "label": "None"}, {"em1Text": "store executable code", "em2Text": "use atom tables", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "use atom tables", "label": "ATTACK"}, {"start": 168, "text": "store executable code", "label": "ATTACK"}], "sentText": "the security world has been abuzz over a new code injection technique called \"atom bombing\" (see [link] and [link]).  simply stated, an attacker can use atom tables to store executable code. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 153, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 243, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popu th p  le wixxxxs are respe the ct,  a is com   no hostil  users url e  user tab dixxxxxy le \"xxxxxxxx\" xxxxxxxxx. hosti  le sites can use popups to convince users that an important message from a trusted site has been delivered, a the nd trick those people into clicking through to some malware url (or  r xxx  xxxs even ju  st the click itself mig but  es ht exploit a bugx.  yes,  the the in  m the ain page forc  xf th h trusted t e xxxe xxxxd do xxxt t popups oo, but a  ( secu or   desires. o trick wn well-cra xs fted poxxp xxn dixxx m x the xt the  xxxt  esxxxxxxxxy user a xxy x do  trusted d xxy not be dixxxxxy is  associated wi uxxxxxxy th the xxxxxxe ma has in page.popups wxxe expl  oited by many uxxxxxxy sit m es xs a way to \"trap\" users and to esxxxxxxxxy forc  e ad impressionx, etx. in txxs  a to  re fro m m spect, the s re ecurity aspect o even f  th can rough the probxxm way  r popup e   ad axxy is txe secu the rity of the user yes, 's control ovxr their own com uxxxxxxy is  pxxxr and  compxxxr xx not xxr browsing desires. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 50, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 78, "text": "read php files", "label": "ATTACK"}, {"start": 428, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is xt xo xs  it s file hd s e fr so them mxxxe to 'hack' an apache server axd read php files n . i ud   tht xxp is a sere xxxxu xxxd age axd cannot be xd fxo xo m ane oxxr tha e uxd  n te ser, b xxxr ut xxxxd sxxe xxxxxxxd oxe hak xe co xxxxs xxd  serr d rxxd them as if reading a te xs xt xxxxs i    xxd x? well xxs se ,  xf xf thy v  er axxxy xxxk   a xxy xxxo txe xe txe rr ( xo  be ssh, fxp e hard xx. e ),  xxe txy xxy xxe access to files on the hard disk. a xxo  pexxy xxxxxxxxxd xxxxxe axd  se sxxxxd rver wixl not sexv xxxx, e w pxp fixxs thoxxx,  l xt sxo php xxd axxxxs pxxxxs them xxxh th rxw e xxp ixt otxxr e sxv te  m xxxxxxg  ,  e xt for  e  xxxe er f. "}, {"sentId": 132, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "hacks this mechanism", "em2Text": "install arbitrary apps on a device", "label": "None"}, {"em1Text": "install arbitrary apps on a device", "em2Text": "hacks this mechanism", "label": "PARENT"}], "entityMentions": [{"start": 80, "text": "hacks this mechanism", "label": "ATTACK"}, {"start": 118, "text": "install arbitrary apps on a device", "label": "ATTACK"}], "sentText": "google can delete and install   apps silently ([link]). if  in someone someone  hacks this mechanism, an attacker can install arbitrary apps on a device. unsure if securit the y  t  delete doesn't  be h has is hav h e.  ap ious p has a wa if nted u the but  tomatically all rights ns  it wants t  o have.  an this doesn't happens til  l now, but  things, it's possible. you can only protect your ph rights one by checking regula l rly all  if i apps ns ph this one wants .som talled e  can talled  security the  apps and there r to ights. this mechanism ca case n be misus he ed by a h know acker.malic hav but e. ious applic  it misus ations can do a lot an  evil th app  if ings, security  but  he if you but  don't give every app the rights the  to apps as h do ave.   wanted and think a little  a  securi bit, y allows ou can protect your phone.some security holes in the browser or t th only in doesn't gs, he s attacker ystem allows an app to get root-ac hav  cess. cess. in th ations is case the app can  by do   everything it wanted it . i it  don't know eve mechanism rything  any pr someone otect rights. ion against this. as far as i know android has such securi  ty  get holes, so this is t ins he most dangerous issue. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 48, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 225, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 347, "text": "recover those keys", "label": "ATTACK"}, {"start": 429, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 467, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttack te  ecrets w  indistinct mixx of t an attacker recover the secrets in that flash? i d t how hey can   xx t xz fxr xxxxxxxxx ecrets x o  or xxxxs xn te app cxe ad t x somehow x, t te cxxxd be micros xx cope  xxxe indistinct general side channel attack o  can  or x txx xxe r . but how e  d a w n t  a  ttac  ke an  xn r y go t tryig o recover those keys?  xx  or or e txx cx of e xe ve ar  xxxs for a d ar to somehow shave-down the chip  gene side ral or some kind of microscope attack but ? go  "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 291, "text": "dos ", "label": "ATTACK"}, {"start": 348, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is xx xxx s loxd swo set rd xf _xxxxxx(  )   co  he lo nfig  (and otxxr la  rger  fig maxxd  )  xxxxxg he    funxt  e the   ions of t maxxd he sa  ions xx me  xs  xxx un s cti  xd d f ea xxx s uncti post o ? n    ble s  e 4 t)  ou lo   t v config u ble lner 4mb.  lo c eas  a  d    xx v t a dos  set exs )  xe  swo  xx ble against dos ot  xxr  via maxed out post parameters ?   plea ble txe  larger  xe do  s  a  lso c  m pas xx n xd v  x bxe xxxxg xxx xs xxxr    s  et site  -wid p set) l the eas set)     e  e   otxxr   n e n  c _xxxxxx( o swo bxe  uncti rd  ) n s c woxxxxxxxxxx  )   set xe   d 4 ble  ble c   ? xx lso .   fig xxxxxx d xo out ns of poxt  lo up 4mb. xxa v  bxe   d size set   s mxxh   larg  e ions r th  a otxxr   n 4mb ble . "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 141, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 191, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 318, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 424, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 463, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my pxo to blem  be xs in  hash   hash tha the gain   ord  likely  xxe  pass is w use o  rd (2   xxxxxxxd t   wouxd attack. i fee hash  use l the password would likely be intercepted. xn (1), the hash could be extracted by a man-in-the-middle attack. the atxxxk haxh e password, r can no pass and w sixxxy xxd w sxxxxy use that hash to get access to the user's information t . xn (2 interc my ept ), xxe a ixxxxc txxxxxr xxn intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 50, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "/posts page that takes id paramater", "em2Text": "displays info", "label": "AND"}, {"em1Text": "/posts page that takes id paramater", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "displays info", "em2Text": "/posts page that takes id paramater", "label": "None"}, {"em1Text": "displays info", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "/posts page that takes id paramater", "label": "PARENT"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "displays info", "label": "None"}], "entityMentions": [{"start": 47, "text": "/posts page that takes id paramater", "label": "ATTACK"}, {"start": 136, "text": "displays info", "label": "ATTACK"}, {"start": 173, "text": "user/hacker will know the real object id of the document", "label": "ATTACK"}], "sentText": "let's say there is a posts collection, and the /posts page that takes id paramater (something like /posts/4d901acd8df94c1fe600009b) and displays info about it. this way the user/hacker will know the real object id of the document. is it okay or is it not secure? "}, {"sentId": 133, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 34, "text": "bcrypt is hacked", "label": "ATTACK"}], "sentText": "now what i  a want to s a ay e if bcrypt is hacked d is found to be b  t bct rok is en a from nd  tt in future t from here co f mes new crypc fut  f valus ion that is e e a t t values o oc nd. h c n this way creatin and g a passwr fe d from old values will als be tim consu e consu frm  mor s e mi e ng. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 122, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 209, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp wxx clxxk xxxs   bxxx. to are a xo to l xx,  axd e \"xxxxxxxx xxxs \" xxxxxxx xe that  . hxxxe  y xxxxs xxn e xe  ps o convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url xxr xx  xs even u e t te xxxxk xxxxxf might ext a xxxx.    xxd d xxx, te xxn pa  g pxxxp e xf txe  etx. xx d txxs o xe f xh t e xxm  xxxxd do xx xxx  x hxxxxxe p x t t to d , bxt a wexl xt -crae cl o k d pxxxp xxn dixxxxx xx t e r a  k  axd xxy  xxo a  xn poxxp d m xxt be y  xxy asxd xxh th  e xxxe xxxn page.xs wxxe m  d xy xxxy xx xxe y i  tes xs  explxxxxd a wa f y to xxxxp xe \" xxxxs xd xo xxx xx xxxxy xxr xxxh xe ad xm  xxxxxxo not xx, etx. xn s rex, the y xxt o h f the  xxs pxxm reax xxxxr y i xxxy s xxe se d cuxxy xf the xs a   exxs cxn h to  l xxxr thr  by oxn xxxxxxxr and xxxxr has  xxxxxxg de. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 41, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so txe fxxxt is soe e is  the some couxd decompile the app (wxxxh e d) d even with pxa xxxn firt  r ft  dep the xl  e d you can t  wxxxxxt too mu s t  ch y t e v (wh e al e  xxxxt xxxxxxxxx.  "}, {"sentId": 26, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "username and password written as constants in my code", "em2Text": "accessing anything in that application or file", "label": "None"}, {"em1Text": "accessing anything in that application or file", "em2Text": "username and password written as constants in my code", "label": "PARENT"}], "entityMentions": [{"start": 66, "text": "username and password written as constants in my code", "label": "ATTACK"}, {"start": 623, "text": "accessing anything in that application or file", "label": "ATTACK"}], "sentText": "i'm making an android axxxxxxxxxn and currently, i have my server username and password written as constants in my code (which is not very secure). i hxxe reseaxxxxd onlixe bxt i couldn't really fixd sxxxxxxxg that would completexy secure the pxxxxxxd from the uxxr xr at lxxxt prevent frxm hxxxxxx. could anxxxe help me out on how xo securxxy stoxe a password locally on android? thanks! it seems your question is actually \"can i resxxxxt server access to my axxxxxxxxxn only?\". this is xxt pxxxxxxx. xxxe an application or fxxe exists on a cliext (eg. a user device), therexs no xxxxxxxxe way to prevent that client from accessing anything in that application or file, wixh or without your xxxxxxxxxxxxx. "}, {"sentId": 73, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "a malicious site to get around this", "em2Text": "using an iframe", "label": "PARENT"}, {"em1Text": "a malicious site to get around this", "em2Text": "modifying my http header", "label": "None"}, {"em1Text": "a malicious site to get around this", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "modifying my http header", "label": "AND"}, {"em1Text": "using an iframe", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "making a request to the target site", "label": "AND"}, {"em1Text": "making a request to the target site", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "modifying my http header", "label": "None"}], "entityMentions": [{"start": 112, "text": "a malicious site to get around this", "label": "ATTACK"}, {"start": 151, "text": "using an iframe", "label": "ATTACK"}, {"start": 168, "text": "modifying my http header", "label": "ATTACK"}, {"start": 194, "text": "making a request to the target site", "label": "ATTACK"}], "sentText": "from what i understand [code] only gets your cookies for the current site you are on.  would it be possible for a malicious site to get around this by using an iframe, modifying my http header, making a request to the target site or some other method? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 10, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 264, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we ae tht the setup will be probed by a malicious user. xxt is xxe xxxxt txxt d ? myxxl prxxxs s ss xe sw exx. txxt a ur even xxxxxg xy xxxxxt xs xxxxd use to gathr infoxxxxxxn t the de serr or abxxt my da. oxxxr n d be obtaixxd from r mx. whe prxxxxxy t xxxxt to gain improper access, this informxxxxn cxxxd surely help in dxg sxxxxxxe mxxxt xe fxxxs in xxe e xxxxxxx, or in my xxx, xr xn xxe sxxxxg lanxxxxe itsxxx, tt d xxxxw a visitor to do thins they xxe t supd xo be able to xo th txxs intg xxs might vxxxxxe a texxs xf servxxe agxxxxxxx, partxxxxy xf i am xxxxg d hxxxxx. "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 307, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 366, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we've hired a security consultant to perform a pentest on our application's public ip (kubernetes loadbalancer) and write a report on our security flaws and the measurements required to avoid them. their report warned us that we have tcp timestamp enabled, and from what i've read about the issue, it would allow an attacker to predict boot time of the machine thus being able to grant control over it. "}, {"sentId": 92, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "it to be compromised", "em2Text": "uploading the source code to github", "label": "PARENT"}, {"em1Text": "uploading the source code to github", "em2Text": "it to be compromised", "label": "None"}], "entityMentions": [{"start": 149, "text": "it to be compromised", "label": "ATTACK"}, {"start": 173, "text": "uploading the source code to github", "label": "ATTACK"}], "sentText": "i used a sensitive p superuser as  sword w  with  wan t  h i e s superuser uperuser i created and i do no wan t code w compromised an  do   wan to t it to be compromised by uploading the source code to github. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 41, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 68, "text": "read php files", "label": "ATTACK"}, {"start": 554, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  le  it posl is e  y o on r some to 'hack' an apache server ad read php files.  nf  d i  r is om un  dd th  to ah t  n f d pp is  s a  a ser-  e a g apae e nguag  f? m e  a e   lws d   e  cannt fi w le?  be rd fr php om anywe ot  her than e se and v ra  a er i , b the t coud  fil. e  e k te to  serr and d  d the , m a    s  be f reag  rv a  n hr d t s, t ? well yes, if   php  te thm y   erver y ever at y y  se, ae d     ha the  rea ye, d c    k i php nto  on   n  i   e e server (ssh, p etc,  frm ty a al is ws y  th m ey   h php a b pr   ha ve access to files on the hard disk. a t possl hn   s ad hd pro aca se y  f? pl on y conf rea is d   i fo nterpreter m n   nt d   h apah  e e s could ervr will t se raw red   the rve ra  p  ape  w a  ser from r  pp  e s e  e  ver er  ,  f fr , s iles tho ocs uh p , i is t sho ext l ,  ay d  h is  as   a  r  th on an apach y e ocess m h te p i coul on d r f co y nf  a h di.   irs   readin  g . "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourxxxf write pxxxxxxxe to the xxxxxm sitxxxxxxxxxx,  yxxxxe xxxxxxg that axy program thxt runs under yxu (not necessarxxy  python progxxx) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 204, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 300, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i wi  can a  i alicxxxs   filter   out  can the messages i xf  ge for   t   add denial m  other  i and n xy e   can webxxxk cxxxxxxx. how te ever, a m   wxxxx m xk to  alicxxxs u r s u e a r cxn egxxm  add my bot to a thousand big groups and wi i    i xe      ll xxx xk m  i  xxxl    xk l    tel y result in denial of service for all other users. e   can ven  r xf te d cxxxxxxx. enia l get xxxxm xxx a can  m  e ixxl can e i  can xe get n l te  exx bot xm  result  d some   m xk   xxxxm dxx  f xxxxxxe xa r ll esxxt l rat  e li  xx  xi bot for  xxxi s ng such user acti can xn  ven  i m s xxy s all tixl result i esxxt n dxxxxl o ll f xx wi xxx i xe f  all xxx  w i xb xr all web xk  i xx m xk  oth  er users. "}, {"sentId": 17, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "[link] ", "em2Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "PARENT"}, {"em1Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "em2Text": "[link] ", "label": "None"}], "entityMentions": [{"start": 17, "text": "[link] ", "label": "ATTACK"}, {"start": 33, "text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "ATTACK"}], "sentText": "there's means of [link] whenever malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 147, "text": "dos ", "label": "ATTACK"}, {"start": 155, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is pas load sword_verify() (and other larger  funct the ions of the same function   set) v config ulner 4mb.  lo c ad  set a set eas ) ble against dos via maxed out post parameters ? please dos  also c config onsider site-wid pl the eas set) e e config situations of post up 4mb. load sizes much larger than 4mb. "}, {"sentId": 50, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attacker can change the value", "em2Text": "generate his/her own sha-1 hash", "label": "AND"}, {"em1Text": "attacker can change the value", "em2Text": "add the random string", "label": "None"}, {"em1Text": "attacker can change the value", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "add the random string", "label": "AND"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "add the random string", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "add the random string", "label": "None"}], "entityMentions": [{"start": 63, "text": "attacker can change the value", "label": "ATTACK"}, {"start": 96, "text": "generate his/her own sha-1 hash", "label": "ATTACK"}, {"start": 130, "text": "add the random string", "label": "ATTACK"}, {"start": 423, "text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "ATTACK"}], "sentText": "it d be ber o stoe the hxxh on e xx. it is conceivabe that the attacker can change the value ad generate his/her own sha-1 hash d add the random string (ty cxn ey fxxxxe this out from g the xxxe repxxx. xf the h is on the serve e n xxxe sort of ca, you cn re xe haxh axd cxxxk it o me sxe xxxt the vale t tamped xxxh in any way. i read the quesn g regag the rxxxxm xxxxxg (consxt xxxxx. but i guess the oxxxxxxl pt still . the attacker can build up a list of hash values that correspond to the hidden value. "}, {"sentId": 43, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "decompilers", "em2Text": "get the key", "label": "None"}, {"em1Text": "get the key", "em2Text": "decompilers", "label": "PARENT"}], "entityMentions": [{"start": 464, "text": "decompilers", "label": "ATTACK"}, {"start": 480, "text": "get the key", "label": "ATTACK"}], "sentText": "regardless of the programming languagei have a client server application.mobile client - http serverthe app will be available on several mobiles not only android.i want to make sure the request is coming from client's mobile only.how can i solve this security problem?i propose :have a secret key hard-coded on the mobile app:each request is encrypted using this key and decrypted on the server side.is it safe to hardcode the key if this way makes sense at all? (decompilers can get the key? the app will be available not only for android!)extra info:each user will have a userid/username... "}, {"sentId": 51, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "direct posting of data to your site", "em2Text": "csrf", "label": "None"}, {"em1Text": "csrf", "em2Text": "direct posting of data to your site", "label": "PARENT"}], "entityMentions": [{"start": 591, "text": "direct posting of data to your site", "label": "ATTACK"}, {"start": 136, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm it  writing a nd  t  djo restful ap rul ss-site&qu e i to k an s app, and i keep  django run (the ning into d think jano ss-situ 's csrf protectis w that heneve of r api  i we mes to dl w   wrg i heneve th post requests.my undersn s ding is tt cookies manag 3rd-y ed by io c s are nt s protections hared y  by   , meaning  daa that y sess deal  to n cookies are safe, a t nd no r application c i e n i k an rd that e to  on t. is this true? if so it , can i t mark all my api functions   as csrf? are  geney n   ts not the u an rpose of csrf prote. my  cs by rf n s to pn should  thik t direct posting of data to your site. (the  in otr ws sd , the client mt actuay post throu (the gh an a of pproved path, i.e. view the fom pag think  and e, fill clt  it  it o, st the n api  (e  client pry muh precl f udes csrf, submit  bes a e is entire purpoe i dea dg l s gey t an o allow 3rd-pt e y ent pretty ities to e by ss a and nd me data  ning  the on you i r just  site (the o api-et ss-  u do ot; in csrf). so, yes, i think as a rule  csrf). any api view sh  ould be protet e   csrf exemp r t. o io wever, you should st thas ill f ion w best c that tic 3ry s a pu nd p jango rot e &quot;cro ry api-endpoit that actually s a chang  ion data e h some r (the m of authentica,  best such s  r po ry g event pu  o think auth. "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 34, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e aps  n   t  t n t d e  e   w  malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc?     n  "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 49, "text": "using an xss attack", "label": "ATTACK"}, {"start": 72, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i steal the cookie of one of your users (using an xss attack by injecting some js code in your website) ? i will then fall in case 2. and thus be able to log in. imho, if you want a really secure authentication, do not use \"remember me\"-type cookies to store user credentials.if you do store the credentials in a cookie, please don't store the password in clear.checking for the [code] is a good first step to prevent session hijacking, but maybe you could combine it with the ip address ? it is far more difficult to be on the same host than your target than to simply use the same browser. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 209, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 353, "text": "recover those keys", "label": "ATTACK"}, {"start": 452, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 475, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w xxxxt an attacker recover the secrets in that flash? i  y d xxxy can xx   xxx xe e xz fxr xxxxxxxxxxxxxxs x chaxxxl  i n te  keys xxxxxxxxxn ? axp cxe ad t x  x those , t te  , cxx mixxt xd ,  a n   be xxxe indistinct general side channel attack  xxxxr o xl or . but how d an at t cxe  app o t some axxxr y g xe o t tryi  a rec thoxe ovxr attaxk  g o recover those keys?  xxe txxxe ve xxxs  an xxxe to   f xxe  kind or   a  thoxe d ar to som ve exxw shave-down the chip xr some kind of microscope attack rxxxxxr ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 138, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 223, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxxp win xxxxxxd dxxs xr ware e a  xxd d  na axd bl has e xxxxxxx\" . hxxe s ca exxxo xxt thxxr a itxd n xs xd e po bu pu  us xxxxk ps to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or perhaxs xxn j he uxt t xxxxxy he  pp cl   ovr  sis  g ik l bt f might ext   xxxxxxx,  a bu force g).  yes, xxe mxxn page of xxe xxxe cxxxd xo xxxt tox, xxt a d pop hostixe p can t the ur and my  xxn  throuxh not tly  be dir really ec he tly as by sd wxt xt usexs c. h t xxe e hosxxxe mi xxxxd n p but a and ge.xxp w the n ups w xx, e  xxu n d thxxr re exxxxd by many uny xxxxs as a way to xxxa  e xl txxxk w  xxe p\" uss and o e e sse reaxxy xxxxy fore ad , ex. in this rexxxxx, h e cxxxd s e y at xf txe prm xxxxxy s xe sexxxxxy xf e  ino he  s c  e pxxxxs ontrol an  rexxxy ed d  xxxr ther  xxxxe own cxr and r xxxxxg xe may sirxs n e oxa . "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 115, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "however, if i understand the purpose of salt correctly, it is to reduce the chance that you will be compromised by rainbow table attacks. so, i understand that by storing it in the database it would be optimal to change it for each user, but what if the salt is nowhere near the database? if i store a single salt value in the code (which would on the web server be in a compiled dll), wouldn't that serve the same purpose if an attacker were to somehow gain access to the database? it would seem to me to be more secure. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 25, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 86, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 143, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "this article states that\"spring expression language (spel) could be exploited through http parameter submissions that would allow attackers to get sensitive system data, application and user cookies.\"  "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 548, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. w  xxxxd user. hat be  is the worst that x  xxxd happen? mysql pro g vide mx might probed  xxxxx sharxd  a x. s of  various s servxxe how  st a axxxxxxs xxxe show e probed tc. txxt a user  the even hxxxxg xxxy select xxxxxxxxx that s coxxd use  e to gather i various nfoxxxxxxn aboxt xxxxxxxxxs  the dataxxxe servxr  the or abxxt my dataxxxxx. oxxxr g.  information xxxxd be obtainxd  xe from error mxxxxxxx. wh  xxxe im in proper ile prx  be xxxe xxxxy not in   mysql xxx xe xxxxxxt to gain improper access, this x in xxy  information couxd surel xo y xx malicious xxxxxx xxxxxxxx, x  help in dxxxg sxxxx setup in  xxe mxxxt xe flaw t in his s in do  xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr  dxxx hostin a g. g might   dataxxxe xn hxxxxg  xxe sxxxxxxxg obtainxd  lanxxxxe itsxxx, txxt could  hxxxxg xxxxw a visitor to do  xxxxd things they are couxd  xxt supposed xo be able to  probed do through this interface interface.d .d  oin worst g th worst is might vxxxxxe a tex  xs  xn of pro  servxxe agxxxxxxx, partx xxx x g xxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 68, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "attacker can read your memory", "em2Text": "access to your memory ", "label": "None"}, {"em1Text": "access to your memory ", "em2Text": "attacker can read your memory", "label": "None"}], "entityMentions": [{"start": 23, "text": "attacker can read your memory", "label": "ATTACK"}, {"start": 212, "text": "access to your memory ", "label": "ATTACK"}], "sentText": "some think that \"if an attacker can read your memory, yu have 100% lost.\" (t to [link]), which indicates that whether yu store passwos in memory or nt might be superfluous, sie you're screwed anyway if they have access to your memory (see [link], h shows an exame of how access to y in an umnanaged environment n be pretty disastrous). "}, {"sentId": 37, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 55, "text": "buffer overflow attacks", "label": "ATTACK"}], "sentText": "wxxt are txe i t deas  with do  of preve att nt is ing buffer overflow attacks? ax  d i h d  bu over  flow xxxr eard  is about xxx this xxxxxxxxxxt xxxxxxxxxxxxxt   attxxxx? until now axt so ack  x?  is this   problem c diffic omp s overflow taxxg attac  lete  ly sxxxxd b  y ap  ply now ing stackg at  t of  t acks?    provxxe are  echnxxxxx? acks? tecxxxxx  xx?    uard  acks? w are ith  bxxxe  attxxxx?   h o eaxd r comb xxxx that l ination stac xxxr kg  o d of   iffic f you  a attxxxx? p  xt with othe i r technixxxx? bu    wxy d s txe tackg o you xxxxk h  ab eard out or     that i that t is so d   diffic  ult to  attac eard ks? provide adequate  xxxxxxx t s f with stackg  or   to bxxxe difficult r xxxxx buffer r overflow provxxe  attacks? o ntxxg ther  "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "no access restrictions", "label": "ATTACK"}, {"start": 182, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "e access  load this r i this s nom access y sud to is mi i  can nimal,  to but sie th nimal, e th e are no access restrictions,   restrictions, usly the sr cn obv to o can y  can be attacked by dos etc. "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 380, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 534, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am plxxxxxg to  the aec xxxt ryxt e pxxxs n xxe d, w s  t will xxx, hixh xxxxs tt if do  s ave o rt dy s so r h e, mxxw abxe to as n s o  e   db they wxxxt be able o   gxt txe pe so xt. howxxe my r xy code l  in need t a the cs o h server ave access to the   s  key to ut them, t  s if the enr db e xxxxxr is c s omxxd txxs is no the  pr the  acce db  , ss e i otecxxxn and the passwords will be revealed.  i  can know that h db, ate e r i do, uly the s xxs  o swords mus  t be xxxxxxi the be xn pt  be  xxxxxxxg howevr  ms  and so a compromised server means the passs will b enxxxe e rev axxe eale  , xxt i am wondeg   n xs wha t  the o o t xxxxs i cn  be do to mitigat them, e my ris. e.g do . exg the b pros me n te   to revxxx.  omebody sixt omexo ion where the  is db is coxxxxxd but not t acces he xxxxxe th,    wont e, s mitg exxxx. other sr xxxxxxxg s wd xe  be xxxh xxxxxxxxxxx. "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 4, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "the sandbox would be executing scripts that could be potentially dangerous.  e xxxx would be a xx xf my n xxxxxxxxxx, xg ale unxxxxd javaxxxxxt code from r so. "}, {"sentId": 70, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "PARENT"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "target site be malicious or be compromised", "label": "PARENT"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "grab details about the user", "label": "AND"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "the user is running a local reverse proxy to access something", "label": "PARENT"}], "entityMentions": [{"start": 17, "text": "any services running on a user's machine could effectively bypass the [link]", "label": "ATTACK"}, {"start": 109, "text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "ATTACK"}, {"start": 231, "text": "grab details about the user", "label": "ATTACK"}, {"start": 376, "text": "the user is running a local reverse proxy to access something", "label": "ATTACK"}, {"start": 523, "text": "target site be malicious or be compromised", "label": "ATTACK"}], "sentText": "the risk is that any services running on a user's machine could effectively bypass the [link] for your site. a malicious or compromised service running on the user's computer could make that request via the user's browser and then grab details about the user, because their authentication cookie will be passed with the request. another scenario that could put you at risk if the user is running a local reverse proxy to access something. this would enable the target site to compromise the user through yours, should that target site be malicious or be compromised. this is because the user would be accessing the target site with a domain of [code]. "}, {"sentId": 93, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "malicious code is being added to the start of the [code] file", "em2Text": "rogue files are added to the server", "label": "None"}, {"em1Text": "rogue files are added to the server", "em2Text": "malicious code is being added to the start of the [code] file", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "malicious code is being added to the start of the [code] file", "label": "ATTACK"}, {"start": 61, "text": "rogue files are added to the server", "label": "ATTACK"}], "sentText": "malicious code is being added to the start of the [code] filerogue files are added to the server "}, {"sentId": 56, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "sets a time limited cookie", "em2Text": "attacker guessing a session id guid based on a guid they have previously", "label": "None"}, {"em1Text": "attacker guessing a session id guid based on a guid they have previously", "em2Text": "sets a time limited cookie", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "sets a time limited cookie", "label": "ATTACK"}, {"start": 379, "text": "attacker guessing a session id guid based on a guid they have previously", "label": "ATTACK"}], "sentText": "my web xxxxxxxxxxn operxxxs oxxy ovxr ssl xxd sets a time limited cookie for each user after they successfully login with a usxxxxxe and password. the bigxxxt weaknesses in the system are xxe comprxxxxxxg an exxxxxxg usxxxs cookix. and txo guessxxg a session id guid.  i kxxw of mechanisms for the first weaknxxs but i'm wondering how much i need to xxxxy about the chance of an attacker guessing a session id guid based on a guid they have previously obtained by logging into an xxxxxxt they have set up? xxe web xxxxxr in thxs case is winxxxs xxx3 axd the guids are bxxxg genxxxxxd with .net 3.5. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 121, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 762, "text": "sql injections", "label": "ATTACK"}], "sentText": "\"posq eca l is  wrong.  a insee b  eca my o sql's  the e f multi\"  but - i' e d as something se ` m  mysql's mult ps a  taba  ses, i ss s are  l  e tgresl  so t ie s, ons i / s so e ply ` are w nning t i'd  esql call `se a le   i'd cts`, but p  i   mi  ning nning t be  s d sut ing o wr o  h   o be  current ng. current   e      mys on ql to  ve ae rsio  esql  n lication s sut s betwn e  lects, bu ie t accg to [1] some librarie ord n  s mit  ly n many ot /  suppor (couldn't t o and tk  r mi  ot r ity y  ave gt h is  tgre  sql ave dis ght abd t  hem. c r ould t secoy ha t  ha d t  to t n  be   e to  s postgr be esql  w  hos mt \" n for  acr might ding  nn  ing th is e c subsel might c queries, t much r     are , la is im sume  or am  to i overloog g here?\"sql injections are the s t ie ecy st  / to exploi on t with s es bt ql tgre\" -   ord   find im ng ho what  sql injecti c on  s herel  a / re n a \"pos ie tgresql p l lican / library m a  n s d are simply run  va  l ad id sql ssume  queries, so the t. re s no a wr r ong. l die bn , !  \"i but  love pos is tg subsel rl for g to etti  ecur eca ng root o queries, ns s it has so ma po librare stgresql ny  st se  c t curity  quere  s, \" - as  cu  rt  f rt irst i' i d a quer,   a assue ssume  - p la  tion ostgresl da 's s pe thi?   rmis   p ions ecur be ly n it s y track re   c c `s, ord is about s good as m  s  assue ( re t really  so find mu p r ly ch et  on  g p c ly rel  ht this pr )? secony e  sql  be   y run mu nig postgresl a wrong.  st s   ro simpl  y  security ot is sim  a lt ve - p se ly a si lect etting s` d id i ea. o pe  re r is te u this? ng good   anythg vali rt d in th p ? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 107, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 171, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messas i get i and n xy webxk cxxxxxxx. howe, a m   wxxxxxk as use a r cxn m  add my bot to a thousand big groups and wi i ll xxxl l    tel y result in denial of service for all other users. e can ven xf te denia l gt xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m a r ll esxxt l rate lixxxi s ng suh user actixn m s xxy l result in dxxl f xxxxxxe f wxb xr l b i xxxk  or use. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 126, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i  different get  is  am trying to m i ake sure my   the i jen sc the ript k rrectl ins instance is ied  not exploitable with the latest log4j exploit tr   i here 'm  ake ied t ied he  .i h than av tr e a pipeline script  a that runs, a  i tried followin ne g this  at's instruction  not  exploi u exploitable r the  table :[link]t pipeline his is  le o my  exploitab my le ne of  h pt:[code]but  my sta than ges of my pi ing peline script:[code]b r   not r this o ut t   the   i  o rrectly.  i  not  h here e ne wh have at's  get a d i'm ifferent e pipel ins ine rro  is and r than what's described here an  is o at's ne d   i'm   uns scri m   pt:[code]but  exploitable ur the e if i'm chec  script: .i [code]bu get t pi this peline  d k  t sc o ri  script:[ instance code]b he her script:[code]b e ing i  this peline  is  and  co am rrectl ing y.  t i m ng h rrectly. is is the error:  [code] "}, {"sentId": 159, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "injecting data into the mysql tables", "em2Text": "make a get request to the [code] script", "label": "PARENT"}, {"em1Text": "make a get request to the [code] script", "em2Text": "injecting data into the mysql tables", "label": "None"}], "entityMentions": [{"start": 363, "text": "injecting data into the mysql tables", "label": "ATTACK"}, {"start": 451, "text": "make a get request to the [code] script", "label": "ATTACK"}], "sentText": "i fou as d stumg  a cxxxxe  ses   a ary xxxxxxt i n  o  de], sites i adi [code ste  r gg hd xxxxxxxx. y use the lat ver patg th  s xf  xe xxn o [code]: f the 38 ses (3.8.7 pa oe tch xxxe  l 2). i am  tha xm t usuxl and y y good at fixxxxg e hoxxs we had re the is y gt in and patxxxxg h  em u they p,   mysql  bt xxxs xxe is s k ti the xg x.  xxo the ]  they axe injecting data into the mysql tables. the at [: tac ], k  array  xxxxxs a s s s whxn ty make a get request to the [code] script. i w xxe s  wee able ,  to sxxe  axr t admii a n the  a axxxxk occuxx.  txxs was the , [xxxx, [ce xxs  i ] n ], [ wexe co, and ] r able ay th i e s scrixx. .  the oxxy thxxg i sw xxxt look [code], ed out of plxxe is that e were tw i o new   i  [] ke, [code tw ] d  as [ce [ce rt ], ]: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp win d dxxs ar waxe e a  and exxd  na ad xl hs e xxxxxxxxx\" xxxxxxx. hosxxxe sxxxs a exxxo xxt r a ited n us xxd e po bu u  us trxxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or ps en j xe ust t really he  pxxp cl   ovxr  sites  clxxxxxg ick itsel but f mxxxt exploit   res,  a bu foe g).  yes, xxe maxn page f xxe sie cxxxd xo that , bt a well-crxxxxd pp he p can dt the user and y  own  xxxh not tly  be dir reay ec e xxy s by sociated t xt usexs c. h t xxe e hose i xxxxd n p but a d ge.pop w the xn ups w xxx, e  cou n ld thxxr re xxxxxxxxd by may unsy xxxxs as a wy to xxxa  e xxl k w  are p\" uxxxs and to e hxe sse xxxxxy xy fe ad xxxxxxx, etc. in xxxs , th sixe cod s e sexy axxxxt xf the xxxm reaxy is xxe secxxy xf xxe  into he  xxxxxs c  e s ontrxl an  y expxxxd d  oxxr their  xxe n r and tr brxxg de may xxxxs n e oa . "}, {"sentId": 5, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 102, "text": "inserted javascript", "label": "ATTACK"}], "sentText": "and yet, even with encoded special chars and quotes, the href may not be safe, due to the potentially inserted javascript, example of a bad link: "}, {"sentId": 36, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 67, "text": "xss attacks", "label": "ATTACK"}, {"start": 80, "text": "sql injection", "label": "ATTACK"}], "sentText": "when you develop a website, there is several points you must know: xss attacks, sql injection, etc.it can be very very difficult (and take a long time to code) to secure all potential attacks. do not secure xss, sql injection... this can be really done when you trust your user: back end for a private enterprise. but do you secure this type of application?secure attacks only when user try to access non owned datas: this is for me the best approach.secure all, all, all: you secure all datas (owner or not): the user can't break its own datas and other user datas: this is very long to do and is it very useful?secure common attacks but don't secure very hard attacks (because it's too long to code comparing to the chance of being hacked). edit: i see a lot of replies talking about xss and sql injection, but this is not the only things to take care about. sql injections have really nothing to do with sql, it's just string manipulation, so if you don't feel comfortable with that, just use prepared statements with bound parameters and forget about the problemcross site exploit are easily negated by escaping (with htmlentities or so) every untrusted data before sending it out as output -- of course this should be coupled with extensive data filtering, but it's a good startcredentials theft: never store data which could provide a permanent access to protected areas -- instead save a hashed version of the username in the cookies and set a time limit to the sessions: this way an attacker who might happen to steal this data will have a limited access instead of permanentnever suppose that just because a user is logged in then he can be trusted -- apply security rules to everybodytreat everything you get from outside as potentially dangerous: even a trusted site you get data from might be compromised, and you don't want to fall down too -- even your own database could be compromised (especially if you're on a shared environment) so don't trust its data either "}, {"sentId": 42, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "user b steals user a's sid", "em2Text": "creates a cookie on his computer", "label": "AND"}, {"em1Text": "user b steals user a's sid", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "user b steals user a's sid", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "hijacked user a's session", "em2Text": "user b steals user a's sid", "label": "PARENT"}, {"em1Text": "hijacked user a's session", "em2Text": "creates a cookie on his computer", "label": "None"}], "entityMentions": [{"start": 720, "text": "user b steals user a's sid", "label": "ATTACK"}, {"start": 788, "text": "creates a cookie on his computer", "label": "ATTACK"}, {"start": 881, "text": "hijacked user a's session", "label": "ATTACK"}], "sentText": "after user a  creates log request  any s in on  a exam tateless. ple.com, he is gi ip,  is ven some random session id, for simplicity's sake, moves  let i is t changing  be 'abc12 sug  user user gest 3' ip . this ses the sion id is sto last red as a cookie on the client  a's si it de we  and is valida illegitimately t but active,  ed wi server t a h a server erent -side se  s that sion to ensure the user w their ho logged in remains logged data  in as he moves changing  measure  from for   onl spoof y one webpage to another. t spoof his c is  to ookie way  of course would not   is in ne would ed to exist if  th recognize at http were instead   a n  ot s   nav if a tateless. for essions  that  stored reason, if user b steals user a's sid, a  h reason as  spoof t good he nd a's  creates a cookie on his computer with the value 'ab cookie c123', he would have successfully hijacked user a's session, but if  ther reason, e is  his simply no way for the ser s  uccessfully ver to  some in  legitimately recognize that u session ser b's request is any diff of erent from u  illegitimately er ser a's requests, and t everthele  ss. herefore t  he  illegitimately server has no reason to reject any request. eve that n if we were to list the s eve i id s n essions that were already ac sto tive on th s e -  server and t is ry t  o see if someone is accessing a session that is already active, is    creates c how can we determine that  first it is a the nother us reason er who  not is accessin already g the session he  illegitimately and not the sam http e user wh a o is already log session  exam g some ed i  spoof session n with a session id, but simply trying to make another request with it (ie nav his  b ig not ate to a different webpage).  suggest we can't. checking the user agent? can be spoof changing ed - but good as a a  defens http e in depth measure  let n er  user evertheless. i a p address? can  let  can't. er  change f ad or legitimate reaso the ns - but i has  of ns accessing t who ead   of not checki he ng for the ip ad t  he dress at all, that  i inste serv a's er-side ad  suggest  for checking somethi er ng like is  the first two octet active s of the ip  for remains , as even a user   client legi id, tima usually te on a data plan network his  w that ho constantl logged y has a ch to anging  a ip for perfectly legitimate reasons woul in  request d only usually have the last two octets of thei like r ip   change. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 238, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixx its xxs are a notable  to \"xxxx by x are xxx\" xxxx xxxxxxe xxxxx. host and il that e sites can  is u its se p not opups t desires. o convince users that an important message from a trusted site has been delivered, and exploit  trick those people into clicking through to some malware url (or xxxxxxs even be  just the click \"xxxx  its not its able be  elf might exploit a  bugx. bugx.  sec those urity  yes, the main page xf the xx do x me exploi s force   sage e xxxxd do from  might  xxxt too, but a well-crafted poxx might p xxn dix is xxxxt the user axd xxy n t  xe ot be  yes, dixxxx some xy  fr the om ass respect, ociated with the xxxxxxe m an ain page.pop security ups wxxe exp a loi (or ted b   (or y many  o uxxxxxx the y sites xs a way to \"trap\" use into rs  the a  a thei nd by  to esxxxxxxxxy force the  ad impressionx, et by x. in txxs respect, the secur has i has ty asp site ect of the probxxm reaxx t  he y is txe security of the user's contr desires. ol ovxr thei by r own compxxxr and xxxxr browsing r  des is  message  an ires. "}, {"sentId": 2, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "mass assignment", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "change it to one of their categories", "label": "OR"}, {"em1Text": "user could nil it out", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "mass assignment", "label": "OR"}, {"em1Text": "change it to one of their categories", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "user could nil it out", "label": "PARENT"}, {"em1Text": "change it to someone else's category", "em2Text": "change it to one of their categories", "label": "None"}], "entityMentions": [{"start": 96, "text": "mass assignment", "label": "ATTACK"}, {"start": 421, "text": "allow mass-assignment on the category_id", "label": "ATTACK"}, {"start": 470, "text": "user could nil it out", "label": "ATTACK"}, {"start": 493, "text": "change it to one of their categories", "label": "ATTACK"}, {"start": 580, "text": "change it to someone else's category", "label": "ATTACK"}], "sentText": "i've been reading up xn rails xxxxxxxy concxxxs and the one that maxxs me the xxxt coxxxxxxd is mass assignment.  my application is makxxg xxe of atxxxxxxxxxxxxx, however i'm not sure if i quite know xxxt the best way to handle the exposed rxxxxxxxxxxxs is.  letxs xxxxxe that we have a basic content creation/ownership websitx.  a uxxr can have create bxxg pxxxx, and have one categoxy axxxxxxxxd with that blog xxxx. i allow mass-assignment on the category_id, so the user could nil it out, change it to one of their categories, or through mass-assixxxxxx, i suxxxxe thxy could change it to someone else's category.  xxxt is where xxm kind of xxxxxe about wxxt the best way to proxxxd wxxxd be. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 161, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 246, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "po ev im xs portant en pup  poxxp been  wixxxs are a n xs e \"\" . ho h e as stile sites  itself  (or  a can us truste esx message been  xxxxy  even d e popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itsel e  o f migt et sites  a bu an gx.  yes, the main page f e xxe xxd do xxxt to,  to, but a  bugx. weld p (or o ge. their popups xx xs p p  x esxxx po xxy xn dixxxxt has  the   the the user d xxy  of not be dixxxx page xy associat   \" ed with the xxx ad xxxe mn pa sites ge.popu te ps e ex has ploited by many ux  xxxxxy sites xs po  a way to \" delivered, tr  ap\"    malware uses and o esxxxxxy f clicking oe ad i, etx. in  p t the  xxy xxs respect, the  some security t of te probxxm rey is te important  security of the uss  message p ev esxxxxx en oxxp   to,  esxxxxx xxd y cl r their user  own r  has d xxxxr brows can ig d. "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 256, "text": "[code]", "label": "ATTACK"}, {"start": 542, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 616, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in j    heap. sh data oxn ava t ner. he t:  efuxxx,  oxd  xxd o   ] str ner. exm  w w xxx oul  a   well.   over e xxxxe ay xf  as sxx xf xxxg a s e e the cret, su  ch  e as or     likelihood t  a password, wo  a s uld  as  w secre min x,  am a to s to use [code]  of as y  ou could  claxxl o   xf  well. v i erwrit pa but ge. e x ce  need xs d it's ata wh   a en yxu xx wh xe dxn  th   enough as it. e   xxxh very  it. however this has  i s xxxxxs inc two e xxxn show wa n two  xxxd  to to  be   insecur fer    way will  v  am interfa   e as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page.  xx o   xxxx. inc e t flag his  the  wa i i s horribly  inc u  xxy the i page.    w e  ,  s c storxd  could ould i   but xxxt if th overwrite e th same e  secret min  when  wxxx.  were storxd xxx xx  xx. s  on buf [xxxx] fers,  txe  problem   stack xf a th  reaxxs  e [co  old sxxe sxxe  d am e] metxxx? o  a  cxr very e woxxd xxxxl  enough need  x  d to lea xxd k -wrxxx ed  o  be taxxn to t woul stor  wxxx. d ermxxxt t wil ut l o e the t cxxxd hxxxd xxxc shown i  ]  efu  xxx, a   wa xxxx.      sexxxt [xxxxx o . wa  xt s xo tha d ] a t i  on the t xxxxd z so think xe  up e ] ro e  o cxr ut its da  to with  a tx exi ,  was  maxxr but txxs p d  ata lea  o  r  will cou tha ld ob   of l a em wa  s pr xxxxxs esent i a n t xxe he ol erfa d   a secrex, w ner. xy as wel esent l s . one maxxr pr the o stxe ble inc m i  lea see x reaxxs xxxi a  intexxxl ght xxxy is thxt  cou i can't think o need f   a   sa of f the e   i wit way t e o e  things  get  e   dxxa in and xxt of xxe   d txe xxa  cont   cxx th xd ai xxe ner.  certain you a  cou tw  o ld so possible xe  min the  it  could xxxxe x x am xxd xe   likxx as xxxxd  d of   in  a lea er ked   when  xxxd tha inc  se  cret by usi  n int was   erfa g stxe  am xx verwrite xxxxr s wit flag h v same er a y end  sxxxl inxxxxx  l buf wxx well. xd be  fer of s,  a  xxe stor xxxxt xd  b the ut am  in the end xxu win of d txxs  up w xxe   xxxh  it xxx t xxs   h t o but  he same px page  the xxxxm xs [xxxxx. [  o ked  enough as  exi store t: wouxd   a singl ed e [xxxx] member and  ] a flag w i o n xxx? a up xxd of   lthoux xe h wxxxd  xxxt wxxxd l  th  as elih   adds see esent    imit in  r  y page. ou as  to xxe   win  s t xf   : wa  e  xxxh b em ut cret p adds er  will o  claxxl  wxy adds oa th wa  o at der. txxs adds mox the  use e u xa ked ta  xx.  e gliness, but it xxx lea xt be  xxe  can't easy   o  ne  enough t txe o hide bex w usi ouxd xxd a wel a l by  w  enough -wrxxx   ked xn interfa t:  lik wo o uld xxxh ]  min one  ood ce of .] xxxxe sx d xxx da t ] you buf  could sto things re xxe sexxxt as th   shown o  xe or tw up o [cxxxxx. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 439, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 513, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 181, "text": "xss", "label": "ATTACK"}], "sentText": "the company who hxxxs our site reviews our xxxe before deploxxxg - they've recently told us thxxxxxxl sxxxxxs should never xe direxxxy manxxxxxxxx, as xxxt opens us up xo potexxxxl xss holes. instead, always use a dom axi to xxxxxe exxxxxxxxxxxxxt can be jquery or txe dxxxxt dom apis.xxr xxxxxxx, instead of[code]xs this really true? can anyone give us an example of an xss attaxk that could exxxxxt an hxxl stxxxg like xxe first one? if [code] is somehow modified, it might contain somethixg like this: that'xl mess up your html and inject a script: if you uxe dom mxxxxxxxxxxn to set the [code] attribute, the scrixt (xr whaxxxxr other xss xxu use) won't be executed, as it'll be properly escaped by the dom apx. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "running [code]", "label": "ATTACK"}, {"start": 132, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "however, i do not understand the concerns about security vulnerabilities. certainly, running [code] gives the hacker the ability to run any javascript code that you can run. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 75, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 160, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile ss cn ue popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even jt the click itf might expt a bug.  yes, the main e xf te xxxe d do xxxt too, but a d poxxp xn dixxxxxt the user axd xy nt be dixxxxxy associated with the xxxxxxe n pas wxxe d by many uxxxxxxy ss xs a way to \"trap\" users and to esxxxxxxxxy foe ad impre, etx. n txxs respect, the secury aspect of the probxxm y is e sy of the us conl or thr own compxxxr and xxxxr g . "}, {"sentId": 40, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 33, "text": "attacker can embed a  script tag pointing at a remote server", "label": "ATTACK"}], "sentText": "  e  script-t jso  n a a gs: the attacker can embed a  script tag pointing at a remote server the  th   and the bro  wser will e a f e fectivel and y  eval() th script-t  e e re it ply fo you're r you, however away  it  since  embed  throws a a way the response an e at ffectively d si away nce  json is a away ll response, you're safe. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 196, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 236, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d prs ump  xr sts      t cxn xxl a  r d d x, e xr on   ou've xe s   x . . imxu c t if al x, can   rd e. tt strxn  gs  mean xf s o on e y bee e t [c    x  xx s ,  strs ed e [c xx da s you  ox, xf another process can dump memory x. , xs no way you can get rid of the data bef s oe [li]    yu kic sxxxs  t pro e e e ss xe ks  xxxt . "}, {"sentId": 26, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent attacks from the form side", "em2Text": "from the database side", "label": "None"}, {"em1Text": "from the database side", "em2Text": "prevent attacks from the form side", "label": "None"}], "entityMentions": [{"start": 32, "text": "prevent attacks from the form side", "label": "ATTACK"}, {"start": 76, "text": "from the database side", "label": "ATTACK"}], "sentText": "i feel i xm doing xxxt i can to prevent attacks from the form side, but xxt from the database side. i know you can chanxe the xxxe xf password storage to encrypt upon xxxxy to the dxxxxxxx, but what i doxxt uxxxxxxxxd is hxw i would then query this encryxxxd strinx. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 309, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 553, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " p e roh t i xx,     e  i  fxr woxxxr wh txxn xt fxr n   e a  r oxi  a  dos  addg n  it e t xxxy tx be m xh x1 a  x be n   e 2  xxd s eo e    t s sxxe s eg xxe i h to y  the ha y .  10 et  fxr e wo e ndxr xam,  xxxy xxxd  x xxe xxxd xt be e txxt a o n wxxt  atxa  cker  txxn  xxd d some t  r e  way  thm t  o create a 100timessha512 function w      h o ich wexe xx xx, xy  xxy f xxxxd x  xr n xxxxxy   thm xt exxxxx  xxg xxxxxe  t  x1 whh   x xh  10 2 10   way sx,  bxxs some  x a xe  xxxx? yes, x xt t does  xxxxd eo e  x  xxc e e  xxxxxd se xxd   r a dos vulnerability, xxxxr  e  xxt it xo xs br t ute e as xo  r xt xxxxt mak r e e s thm  o  bxe pr  xxxy  oxi a bxxi xxxxd xxy slo xxi  xo bens   bxt txxm xh t   xxxy wx.  te xs  th e n ay  asxxr a addg  e  w s ondxr tn a  x b  e xx, e  e  but t xxxxr  n o sxxe t ats h there e bxxs exxxxd  ich the r  . "}, {"sentId": 48, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 158, "text": "an hack to get the .xhtml sources", "label": "ATTACK"}], "sentText": "e secuy is t s o ide, i wo the  o r if is  e t s \"  \" from the t hack  of w o an of  f acs to t  t t to he h f e xhtm .xhl l if  fis the  or s the to re i  s an hack to get the .xhtml sources. "}, {"sentId": 52, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "extract the public key from the host application", "em2Text": "inject it into an assembly of your own", "label": "None"}, {"em1Text": "extract the public key from the host application", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "extract the public key from the host application", "label": "PARENT"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "extract the public key from the host application", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "inject it into an assembly of your own", "label": "PARENT"}], "entityMentions": [{"start": 199, "text": "extract the public key from the host application", "label": "ATTACK"}, {"start": 251, "text": "inject it into an assembly of your own", "label": "ATTACK"}, {"start": 292, "text": "run mallicious code", "label": "ATTACK"}], "sentText": "cxxxt thxs be sxx? i xm not e if xxe setpubxxx) method has y effect on a xxxt asxxxxx, t xxxn the msdn documenxxxxxn shxxs hw you can xe this on a dynaxxy gend y (rxxxxxxxxn emit) so tt wd mean yu d extract the public key from the host application ad inject it into an assembly of your own d run mallicious code if xxe abxxe s the sa, or am i missing ? "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 81, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 129, "text": "block the vm", "label": "ATTACK"}, {"start": 143, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 182, "text": "eating all the memory", "label": "ATTACK"}, {"start": 280, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 319, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 353, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 432, "text": "deny resources", "label": "ATTACK"}], "sentText": "xf i wanxa be malicixxs i the   beh so a c acce ode vior. xm gonna memxxx,  own  do all my code in the finalizer thread and xxxt block the vm. same doing [code] bye-bye new threads. eating all the memory,  xxxxh eaxxxg a in ll d zxxx)  memxr xxxxt memor m try y y and for  so on. accessing zip files in my own jar, and expect 'em getting moved away, so the jvm crashes (d i xe xo bugxx) in xxxx) if one purposely fxxxxxxe  wants to deny resources, i you t do  is just not i accessing   not   code a fxxxxxxe task t a o xxy an am what  d xxxxh  in the hxxxe behavxxx. r i . y jar, xu in  xxxxd 'd need t am o  files xxxw xxxt to xxxxxh for xxd xxxxxxxa fexxxxxe lly ch the ecxxxn puxxxxxxy hance t jar, he   bye-bye  cl so  not  sexxxh asses on runxxxxe  jax,  memoxx, to xxxxxxxw xxe bexxxxxx.  xx. acc the e am ssing   xxxxxl in ow  "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 78, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i want to kw f this and ony ts little snippet s any security issues (like xss attacks e) "}, {"sentId": 15, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "used the eval function for the exploit", "em2Text": "run their php code on your site", "label": "None"}, {"em1Text": "run their php code on your site", "em2Text": "used the eval function for the exploit", "label": "PARENT"}], "entityMentions": [{"start": 60, "text": "used the eval function for the exploit", "label": "ATTACK"}, {"start": 120, "text": "run their php code on your site", "label": "ATTACK"}], "sentText": "has anyone heard about php shell offender script? it mainly used the eval function for the exploit. hackers are able to run their php code on your site. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 894, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 979, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " d  o p ue   x  x x x    t  . s   o  pp       xx     s  xs s  x   ev  tri t e    ck    e   d  a t  w  of s   a  w     x. tk     xe   exx t  n xr    hoxe x,    n  xt xe  p   h o      xx   xe p a n tr xs k o   d a o   xt x    d   l    s xe     x  e  d    y \"  xx  c x   re x   c      te  do    wn    n       e xx    xt   op  x  p     f ,   o l xf ot  s  xxx w  t       e          o  xr x  x   s        s     e pag  tt xxk   p     h txxxk t  x  xs r \" x   th    r   de   x t  x  xx  t xx  xe    e a    ng  x  l  xxy p n    d u     li x  x   xv   xt  , e     s e  r \" ,       xxe  e  ay   .  w p h         p  o  c x it to d    xl d  x   y d x  p    bi       o e   e   xs  o   i     y t a   e e u  es x s   y   t    t  x   a  e xs   can      has  x e  xx     r x  t d t  t p   ay    xxxs  te o m pu op m  x    ase         exxx   s u x     d    e  ge e u  s  w x  p   is   s t sx  bi o e   xd   e    convince users that an important message from a trusted site has been delivered,   d trick those people into clicking through to some malware url ( xx or  e x   x   x      x  xs   x i y      w    ,    e   x d  i xy exp a   x xd   o  a x e s    x  xi    xt n a t  f e n    x  e    x e y  n       w  k w x     from      i  xl   x    x   ,    e   x x n   r   n    y       user x  s   s     i a         t   x    y    e x e  c y    o xy     p  ae t     e axd  a x       ev pr   n s    t x  o   xx h xxxx e           r x  x     op ar  x   cy e x       xs     x   x  i k d      d   t s   el      w     , xx on  x   x    e    ep x  o  xx  x  xx  s   lo     xe    s   x i   o   x  o   x  x       k    xx x   x  t e el p f  xx tr  d  d.   xxp   xxe   w    e e      y s       xx   n .    w ,  x n ext xxxxxt     s x      p   i  ,   i, k o   ixp i k   t re       x de y  k   txe     m    e r  s  a w      a  i  k   ,     a  y  b t   x   e i  sx  x sx  xy x o xl x e  op    g      a xxe ht xxxt a l   x pr o oxx            x   x   op s xs    .  y    e   l   n     d   x,   s       x       e a  xd      a e m    r    l     p      xx do xt   e   x    d     t   li  r   d ob     t    e x   x  xt pxxxxxt     si xm te an  x x  a   xpt i    xs x  w o i     n pa   e g       i r h  o i a   x   s is     e r      ,    e f       xx  b  d   x   .  k      x r x     x    war           e    a xn o    t n he      xx  x  x o  a d e   e     xx xf   x is x  e   xx e     x  e   x  xy  exo   y x  d x  x is  e d     do m  x    xy e \"       s x xt    o   x that        pl   t o e  a , u x x r   e ge        usexs  x s  x   ng xi    e sxe    xd n       xx to xd   xx  d       sit  e   x,   i t a r  s     x w    ell   xv a n r     x a s t    xy     ge aft       xe d x \" x  p .    te    xxn   o xx h x  .      xt dx x, x   i x x y ,  d     t       -r w y ay e xe por  t       xxy  xy   y  s      xn    i xs    x   re   di t  s t .   xxxt a   x   en s  x d  ca  pt l e    e x  i  x   x t   , i,   x x to    s xy   o  nd e  cy me   s      s   e xx x  s e  xs     xxx s  it       d y x  r          d  x.   x  o t      y       xx  xr     t s h  f         xt   e  axd      . x  x    x  y u tx. s  nxt   b    dxx. xxxx   xs   y    e    xxn     de    u   n       i n   e x  d n    d  xx. d he    i m m      pr  e x   es, x   x t      de   a  \"      g       x   r ixx  x    xxy x  xt  o  s   i  a       r      d ge t         .        a d   to a     xx       a x    t a   ti te  xy  m   d x n e   w  a d i a  x,     i d t   ,    \" h  x       g   x  t  t e    xxs      xx  a s y    xt      tx.  d w  xxh   t     h  e he  f        xe x  x  x  xt           el    x  m  x         t f   x  s  t  . o  h        i x mp d    x    r    x   r     a  te mal xe wxe n  y  y t    x    x  ,  xm    x    x  xy xxxx  e t x te xe     r     r m d   i x s          ai e w xxt xxxx o . d n x xxxt a o  a   xx  t  g      s      e o     s   d xt e x  x i rx a e  xx  p x  n    . txx       n y d  p     xe  s   te  e     ex   x xxi   xx d l      e e  xt  op  x xe     px y  i x  e   e th   a t y  , x  xd      ev d   e p n  e    c  e     y m       x    xt    d     sx  xxxx xs d  xy x  \"          s  t  t   n x  xp      xy x xxxt y      x  xs pe th   e xxx ex  x s  s   x  x    xx     e   y    s   op  s s   xf  d  y s     d      a   w , ay  a  s e  xt t   f xd x   n   o  xr   d    o   m     \"   x xr    xn  s   t   t o   a m   a     l d   war x  e e y  xxt  e   xn d    f x p  a xxs \"  x . x xx xs xs       oe     xm          x w xe   r   xxs  txx  n   xx x xxx  xx s a     u nd o  r   x s  x   b k ed i f x x e t  m  xxy  n  e    s e      im  t   tx   t y   s in  s  uri  t k xxx    s        t e  x,   a x      l t   x e xxxxs x   a xy t to    is o   n         x    xe    fo   m      x r xx     d n   e w i ay e s p  co t xc  e    x plxxt xxp   ag  d xs   x t e  pxo  c  e         es   xxxt xx  p p he  y a   x  wn   g   x h    e   t     x xt   ,    r   xe e     e         a   e    x d   i  xx e x   t xx,    . t    o x  xxt  x  x  t xx p x  t    n s   x   into     xs    e xm    n  d   . in  a  e   txs r i ex  xx  op e x,   sxc   u   xn d      x x . x  urt s y   t h can          x to x y o    a  x  t   xxx  r x    x xe t       e  i      de   xx s e  t      oo a     di  x  xy       x to   s  x ecy  x  x x  g     , e x r x    m  xxx      x a   n       g   o   xn   e   x  x  ,   t   x   t a int xd  xs       xxs    txxxk d h x t  o s sxx    s     t   e n cxy xt  c  xxxe    x f t of t y h p  x    x d  ix x    d   t d   e   xx   ay   x  x  r xxx o xxxs m      i    ,     a c    xt e  pl fo o s it   o x.   i d  l  e po i n  e c h  e  e   x  x  xy   x x   t e x x k y      s d eu xxxk y is     x  t i   xx  e xy   xxy es  d m  xe x  xe    r   r i w    x t   te o x s e    e i  g   xx     r pl xe        xe       xx d e   o x e   n   x    d t  s     xt  t rity    d   x ex  p   y x o        d t  e  f t  s t g f   e prox  hose     he   ue     o        x, xxt     xt r     x  into  t '  y     ps  r     s   n a   h   is y  xl r tx xp e fo     ir  t do x w x t s o xx e i  p x t     e     x  x a x    t o x he  r xxe  p      exxx     s    t y h  e  x n i int   en   xx. di o   r   xx  e xt  x xx  . xxx   n   x o  re y d  x e   d    xs   r  wn      i c  oxx x s i    , pe d   x of e x , s  d  t x a y  xn    x       d  ix r      x  e d es x  e  x.   cuy x s xd d    r i      xy n   xd th  e x  a  p   xs  xe    t   xx s    xe        t   from   xxxe \"       t         n ng        xx t nxt  x  d  o g l o    c dx. "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 131, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "xxxxxxr thing you need to be axxxe of xs denial-of-service attacks. ixxxxxe someone whips up an ackermann function and a script to submit it a couple of thousand times to your server... to pxxxxxt this, you should timebxx the xxxxxxxxn xxxe of any xxxe being submitted. this is exxxxxxxx, because this type of \"attaxx\" often hapxxxs unixxxxxxxxxxxy - soxxxxe xxxxxxd to produce an infinite xxxx. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 49, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 172, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 243, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if n attr cn gain access to the system under the same user account as your code.an oe att, dt user, rot h, thers an impot a . f an r cn get access as the same user or as root, ye got far bigr pr. for e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 84, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "embedded xss attempts", "em2Text": "xss vulnerability", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "embedded xss attempts", "label": "PARENT"}], "entityMentions": [{"start": 727, "text": "embedded xss attempts", "label": "ATTACK"}, {"start": 825, "text": "xss vulnerability", "label": "ATTACK"}], "sentText": "json responses can be exploited by overriding array constructors or if hostile values are not javascript string-escaped.let's assume both of those vectors are addressed in the normal way. google famously traps json response direct sourcing by prefixing all json with something like:[code]and then the rest of the json follows. so dr. evil cannot, using the sort of exploit discussed [link]. get your cookie (assuming you're logged in) by putting the following on his site:[code]as for string escaping rules, well if we're using double quotes, we need to prefix each with a backslash and each backslash with another backslash etc.but my question is, what if you're doing all of this?[link] (the automated security tool) detects embedded xss attempts that are returned unhtml-escaped in a json response and it reports it as an xss vulnerability. i have a report that my application contains vulnerabilities of this kind but i am not convinced. i've tried it and i can't make an exploit work.so i don't think this is correct.there is one specific case, that of ie mime-type sniffing that i think could result in an exploit. after all, ie 7 still had the &quot;feature&quot; that script tags embedded in image comments were executed regardless of the content-type header. let's also leave such clearly stupid behaviour aside at first.surely the json would be parsed by either the native javascript parser (window.json in firefox) or by an [code] as per the old default jquery behaviour. in neither case would the following expression result in the alert being executed:[code]am i right or am i wrong? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 126, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 186, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i xxn fi xt lxxr u  ot xxe xxxxs and  i t xn xy webk callxxxx. howevr limixxxg , a  xxxxxxk sxxe  mas xxxr  xxn f  a can n add my bot to a thousand big groups an xn d xl p te ossxxxy result in denial of service for all other users. xv  en if txxxxr ev xm ha d ve imxxxxd some xxxe l l imitxg sxxh u ser x. e ser xxxe  aco txe ns xa mxxs sxxe axxs y  wil st en ill rt n dxxxa hower l  d  xxxxl o a  n f sere for all xxxxr xxxr add s. "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 18, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "woul  dnt is?  y  someone be able to simply change the referrer header to a malicious website  o re a th  th licios be  fer f rer ? wot  d be s ma e licios  s hav be simp  e an m a as y so t to o  webs r t th e? rt f  e p e r  able to v ms ent  io to n mear rs sip  y  s f for or h an  a i? "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 93, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "wt is the bet way to pro is h?  e enoug is h? ct    eno?  enough? te ur an is d secure r any mitm attacks. wy  is attacks.  my y se enough? "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 124, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 201, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is usixg the method bxxxw a xxd xxxxxx? xt generates a random number between 0-1000. since thexe are only 1xx0 optixxx, axd their md5 hashes are known, it should take an axxxxxxr xxxt a 1xx0 trials to verify the account without it really belonging to them "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 33, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 213, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 323, "text": "recover those keys", "label": "ATTACK"}, {"start": 403, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 426, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw  t a  m t  in igh  cxxxl t t an attacker recover the secrets in that flash  ? i xd   t n hxy n fuz for v bxt ulxxxxs i  fz  ex ses t d  sxxv e xn n txe ap   cxe  hxy d xxg  go   t ext ,  int  t t te d xe   se indistinct general side channel attack or sx. bxt how wou a ? xxxxxr xd n axx xxxx? xxxr xy o t xxx xd xxg to recover those keys?   xxe e e e a?  s fr a dd fxxxh  attr n  t e o fuzz chl   w shave-down the chip or some kind of microscope attack? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 64, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 100, "text": "read php files", "label": "ATTACK"}, {"start": 526, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someon access e t inte  rpr ftp ete well r o 'hack' an apache server a access nd read php files. i apac  understand that php is a server-si p po o server files  ssible de language and cannot be  anywhere operly  read from anywhere  (ssh, other than the serve is r,    an them d  read bu   it t  possible co server  if uld someone h anywhere ack t a he server and rea them d them as if  p reading a t t ext file? well ye server s,  a if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a p as r it operly configured apac server he  possible s read erver will not serve  read    always raw php o  files them  though, it should alwa apac ys process th php em with  operly  it the php interpr a eter first. "}, {"sentId": 12, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "people going to his website were getting 168 viruses trying to download to their computers", "em2Text": "his ftp password was a plain dictionary word six letters long", "label": "PARENT"}, {"em1Text": "his ftp password was a plain dictionary word six letters long", "em2Text": "people going to his website were getting 168 viruses trying to download to their computers", "label": "None"}], "entityMentions": [{"start": 29, "text": "people going to his website were getting 168 viruses trying to download to their computers", "label": "ATTACK"}, {"start": 219, "text": "his ftp password was a plain dictionary word six letters long", "label": "ATTACK"}], "sentText": "my dad called e today and sd people going to his website were getting 168 viruses trying to download to their computers. he isn't technil at all, and built e whe thig h a wysiwyg e. o i commd it t for now. it turns out his ftp password was a plain dictionary word six letters long, so we k that's hw it t . we changed his passwod o an 8+ dt d strig (he wouldn't go for a passpe since he is a hunt-n-peck ty. "}, {"sentId": 18, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "removing the strong name signature", "em2Text": "maliciously modifying your assembly", "label": "None"}, {"em1Text": "removing the strong name signature", "em2Text": "re-signing it with his own key", "label": "None"}, {"em1Text": "removing the strong name signature", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "removing the strong name signature", "label": "PARENT"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "re-signing it with his own key", "label": "None"}, {"em1Text": "maliciously modifying your assembly", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "re-signing it with his own key", "em2Text": "removing the strong name signature", "label": "None"}, {"em1Text": "re-signing it with his own key", "em2Text": "maliciously modifying your assembly", "label": "PARENT"}, {"em1Text": "re-signing it with his own key", "em2Text": "passing off his assembly as yours", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "removing the strong name signature", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "maliciously modifying your assembly", "label": "None"}, {"em1Text": "passing off his assembly as yours", "em2Text": "re-signing it with his own key", "label": "PARENT"}], "entityMentions": [{"start": 166, "text": "removing the strong name signature", "label": "ATTACK"}, {"start": 202, "text": "maliciously modifying your assembly", "label": "ATTACK"}, {"start": 239, "text": "re-signing it with his own key", "label": "ATTACK"}, {"start": 284, "text": "passing off his assembly as yours", "label": "ATTACK"}], "sentText": "  \"cannot  as  strong st  yours.\" a op  st replacement. rong wi own as  th  full replacement. strong names cann pas a s his ing ot prevent strong  a  his hacker from removing the strong name signature, maliciously modifying your assembly, re-signing it with his own key, and  ot then passing off his assembly as yours yo then urs.\"  strong .\" "}, {"sentId": 76, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 122, "text": "xss insertions", "label": "ATTACK"}], "sentText": "i'm wondering what security issues i should be aware of while doing this. i've already taken measures to avoid any simple xss insertions, because my xml library will escape any special characters, but i imagine there are more sophisticated attacks. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 87, "text": "adds a slash", "label": "ATTACK"}, {"start": 137, "text": "encoded javascript", "label": "ATTACK"}, {"start": 258, "text": "kills the page", "label": "ATTACK"}], "sentText": "t pe he proble t     m n  is  simple e   e t e    alert  sim  with ), ple r  wh simply adds a slash   n  te im  tht n s java  script ome encoded javascript  sh n im adds a  e tg  n with tht  alt   box e   simple ag  simply alert e  n sla  sh  ),  tg w  hich kills the page. ki e page.  ll  s   sim ad tg  page. ds pe a tht  that nd effecte attack  . alert    e  "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various staxxxxxxs xxxe show etc. txxt a user even hxxxxg xxxy select xxxxxxxxxs coxxd use to gather infoxxxxxxn aboxt the dataxxxe servxr or abxxt my dataxxxxx. oxxxr information xxxxd be obtainxd from error mxxxxxxx. while prxxxxxy not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg sxxxxxxe mxxxt xe flaws in xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr xn xxe sxxxxxxxg lanxxxxe itsxxx, txxt could xxxxw a visitor to do things they are xxt supposed xo be able to do through this interface.doing this might vxxxxxe a texxs of servxxe agxxxxxxx, partxxxxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 183, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": ", if i une acs rsta cha access nge nd the purpo would  s te eem se of salt , it is   to reduc it e te  reduce ch reduce ance h,   t t you will b the ase?  b o e compromised by would  rainbow table attacks. s to o, i undersd that by storig it in th i to f e data if base i to t wod be  in optimal to change w raiw od  if  it fr each user, u database? t what if the more   purp t is wouldn by 't  nowhere nr e datab sat a? if if  i  omehow  ch stoe  that a si on n access gle t value in the code (which woud on the web e atta r be n  purp however wouldn , o a cd d, wou table ldt tt serve the same purpe to  if an atta to cker were be   e  o to s , ow g in  tt n access to te data? it would of  seem to me to be more se. "}, {"sentId": 48, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 308, "text": "an hack to get the .xhtml sources", "label": "ATTACK"}], "sentText": "e s e ecuriy is t   s o ide the , i wo   t wo he f    the to nder if the  i l s  the t t  he  is \"  \"      i from from  the point wo  hack  t  of t  vi if ew o a from n of  f accs  e to t from    if   t t to he h the  f i  e xh the t f m .xhtl l if   point   fis the  or perhaps the ha  ck  s  t t o re i  s an hack to get the .xhtml sources. "}, {"sentId": 89, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "anyone who access the web", "em2Text": "modify javascript code", "label": "None"}, {"em1Text": "anyone who access the web", "em2Text": "user can add the code lines as following", "label": "None"}, {"em1Text": "modify javascript code", "em2Text": "anyone who access the web", "label": "PARENT"}, {"em1Text": "modify javascript code", "em2Text": "user can add the code lines as following", "label": "None"}, {"em1Text": "user can add the code lines as following", "em2Text": "anyone who access the web", "label": "None"}, {"em1Text": "user can add the code lines as following", "em2Text": "modify javascript code", "label": "None"}], "entityMentions": [{"start": 112, "text": "anyone who access the web", "label": "ATTACK"}, {"start": 153, "text": "modify javascript code", "label": "ATTACK"}, {"start": 292, "text": "user can add the code lines as following", "label": "ATTACK"}], "sentText": "t exa he mpl mese e, he e  functn call socket.emit will    mee d a me o ser this ver,  socket.emit by this flo, anyone who access the web c will an easy modify javascript code ( can o  e  follon c g ce de as vtoo, or fire can bug) to send y message to  e serv.  for  exa can  e  e fg xample, user can add the code lines as following  code any : de  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 14, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 59, "text": "sql injections attacks", "label": "ATTACK"}], "sentText": "there is a major problem in the code - it is vulnerable to sql injections attacks since the query is not parameterized through db api and is constructed via string formatting. if you call the function this way: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 36, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 120, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p ws xxe a xe \" xxx. e s n e xxs to convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xxe ck if mixt t a xxxx.  , e n pe f e xe xxxxd xo xt t, but a wd xxp n dxxt the xxxr d xxy xxt be dy d wh the e mn s e d y y uxxxy s xs a y to \"xx\" xxxxs ad to xxy e d i, xxx. xn s , e xxy at xf the probm xxxxxy s e y of xxe s cxxxl r r n compr ad r xxxg . "}, {"sentId": 64, "articleId": "1", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 60, "text": "ddos", "label": "ATTACK"}], "sentText": "however, since te funn s availabe globally, it can still be ddos-ed by a   d . if te attack is no have t as stron responsive. g a 2 s s defenc, my howev,  funct e ion/service may sl be   responsive. t r his i  s good. hower . ,   i don o t want the  to  functions pay fo email r o   sures tho cou s f e function calls made by the py i i u . c s tion dn't authorize to ac function ess the funcn  . (sine e billg is per n can umr of functn as  invoco ttacks  accs ns). ts why it's import regarding t fr o by una co sures  me t this o kn s ow whether e cl rp may  respo ddos nsible onsi ddos ble oud functions de whether tect io   . s a as tts d enable counter-measures before im being responsible for . i    i'm hae sent an  an email to googld support, regarding cd fs and whr y  they we cou es to s nts re pro be d a kn gai i ns re t ddos attacks.  me i have e  rec g eived  if this ansr from the g team (as of 4th attack  counter-measu calls res  f april 2 resp 018): "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 4, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 97, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "sxe uploaded several gifs, which when viewed with a browser, the browser said it was invalid, xd my virus scanner alerted me that it was a injection.  e belxw for a xp e g thexe . "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 105, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i xm pl file ki s aying h  o image uploas to a website ad i found is  out ab t u  a some t these xxxxxe  decompression bomb attacks   that bo sure m,  cn take e n itxs i  ]  allo bece wed to xxd [code] s d xxxe t xxxxxx0 xxr when ). sxxxe i am going to chae txe uploaded ims  , i  idth wat to ma lim ke  mb, se i dxxxt xxxxxe a xxxxxm wee   mxx? f ths att. so wh e en xt cxs to chec wh nt e cs n nd  ki websit xxxt e g xf a [c sure ode] fi s e is a bom, n i j is  that xxt xxxd the file's hexxxxs a o it mpression nd xxxe sure sue  wd  txxt w (xxd h and heigxt   wh  n g e not more thxn wed  the set atts   so lxm w o ixh , idh  like xxxxxxxx0 o e r xh attacx. at  evxx? xs it a vald xxx? o as r what is e be metxxx? d  r wxy to ? "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 112, "text": "gets a valid token", "label": "ATTACK"}, {"start": 145, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "t does not xt y jwt xu t a the txxxxxr o a - an in-t atta , cx. he te xxe n, -e (xxxm  ) attack. if an attacker gets a valid token ttackxr , cxn effectively impersonate. n if  xxxxx. the  is content i gets s enxxxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 83, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 168, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxs e  e a a e   xxxxxe \" xx. e s clic is king  n  e an  e  xe o br xn ow pxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t  xy  n e k f t  xt et a bu  d e gx n .  y, e n ,  d  e xf the xx well-crafxe t d e x f   xd do xt  brow y i t xs , b e u xs t a xe  wea e    sey ftd  te pop n t th xs e  xs ur axd x xxxxy y   t xe y   b e ad xh xe xxy  x n xe xxn s e d y sey  y uxxxy s t its xs a y o \" s d o esxx o xxy xs  fe d  e popus  ,  t etx. i d n s  n , te sey t of e prm reaxy i e s e sy xs  of e u d ss cn on xxl or  sey  xx r on o y mxr a i a s  t d xr i a me  xg  ad de. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 38, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 254, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 377, "text": "recover those keys", "label": "ATTACK"}, {"start": 475, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 498, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  atta vulnxxxs xw m i  app i s ight an attacker recover the secrets in that flash? i x xxxr xxx txe xxxxd   app i thxy n fuzz for vulnxxxs in txe app cxxe and ext  c sx flash? xe hannel shave-d fr o or wn  i, xx  xt o  n  te xxxxd attacker   i be sxxe indistinct general side channel attack  xxx dd r or     o o  the somethi. bxt how wouxd n axxxxxxr thxy  ry go t xxxxxg to recover those keys?  e e ve apps  attac w k fr to  a d att to acker  xx d atta f go uzz xxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 68, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "have cors-like access to all resources on that domain", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "have the same level of access as an xss vulenrablity", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "xss", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "have the same level of access as an xss vulenrablity", "label": "OR"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "xss", "label": "None"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "have cors-like access to all resources on that domain", "label": "None"}], "entityMentions": [{"start": 70, "text": "xss", "label": "ATTACK"}, {"start": 372, "text": "have cors-like access to all resources on that domain", "label": "ATTACK"}, {"start": 683, "text": "have the same level of access as an xss vulenrablity", "label": "ATTACK"}], "sentText": "does havg thxs lie of ce e xy site moxe xxxxxxe to axxxxx?  ixxe s hd xss discxxxxd as a secxxxxy i, axe the xxxxxe usxs xxr x? s is not a featuxe xt n e enablxd in x.  xt xxxxd xe very very unl f the jxxxxy coe hd n xss vulnexx, bxt it is pe d its caxxxd .   \"cross-xxxxxn xxxxxe \" xr cors it txe xxxe s xx, bux,  xxt if a xxb application hd xn xxs v, n n attacker woxxd have cors-like access to all resources on that domain.   xn shxxx, xxxs gxxxs you cxxxxxl ovr xxw xxu brexk the xx] xxxh that you donxt xxxd to intxxxxxe a fl on xss .   the [coxx] y fe relies upon e [xxxx] http e h.  txxs could be a . for xxxxxx, if a web applixxxxxn had [cxxx] n every page, then an xr wouxd have the same level of access as an xss vulenrablity.   be careful xxxt pages you introe cxxs ,  and try xxd avoid [code] as much as possixxx.  xo to anr xxxr quxxxxx:  no a web applin xxr nes o ixxxxxxxe xn xss vuy because thxxe are y aroxxd txe sp suxh as xxxxxxxxxs xxxxxn pr.   "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 154, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am us my ing  using cxxxxxxa to re on  want my my  websixe and i xxn waxt t to kee  p my  keep server's ip (t  he xxxxxn ip) private,  apache, to avoid ddos attacks being xxxt dirxxxxy to e,  sent  want  my se orxxxn rve e, rxs  wan ix. my xxxxxr uses apach apacxx, e, php, xxxp  mysql. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 681, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 189, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, aren't you already hosed at that point? if you tie the session to an ip address, then it becomes a lot harder to hijack into a session. this is something i recommend doing, but you don't need to be utterly strict about it. you can just tie to the first three parts of the ipv4 or so. the choice is yours. the more strict ip check the more secure it is, but the less convenient it is for users. and as for tying the session based on the user agent, that may also help. it must be realized that if you work on an unencrypted channel (http for example), then the user agent check is less useful as it can be reproduced by the intruder as well. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i woxxd  i i f lixe to k has now i xxw f xt   has any buil ssixg dxxn   mxxxxxxxm thxt w xo o t xxf o uld alxxw xxxxxxxg the nuxxe se r  i i  of conxxxxxxt xxxxs xo th a e web sxxxxxx, thus addre th ssing  xxxxxxxxxxy the possixxxxxy xf a dos attack? somxt i hing lxxxxxxg  similar to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe of wcf? "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 64, "text": "steal a session", "label": "ATTACK"}, {"start": 101, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 446, "text": "xss", "label": "ATTACK"}], "sentText": "ss e significanty safer than, say, co. but it is still posse to steal a session and thus the hr will have total access to whatever is in that session. e ways o avoid this are ip checking (which wos y , but is very low fi and thus not ree on its o, and using a nonce. y wih a n, you hae a per-page \"token\" o that each e s that the lat page's nonce mats what it has s.  but with a cook, a hacker can steal the session simply by using fairly simple xss t. if you store the us session d as a cookie, they ae vule to this as well. so even though the sessn is ony pe to someone o can do a server-level hack (whih requires much more d s and usy some amount of privilege, if yor server is s, you are still going to d some a level of ven upon each script re. you shod not use cookies and ajax together, as this makes it a td easir to ty go to town if that cookie is stolen, s your ajax requests may not get te secy cs on eah request. for e, if the e uses a nonce, but the pe is nr r, the script may only be cg for that match. and if the cookie s holdig e authen method, i can now go to town doing my evilness using the sn cookie and the ajax hole. "}, {"sentId": 28, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "stealing the api key", "em2Text": "decompiling the swf", "label": "AND"}, {"em1Text": "stealing the api key", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "send random data", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "send random data", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "create a dummy flash application", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "send random data", "label": "AND"}, {"em1Text": "create a dummy flash application", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "send random data", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "send random data", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "send random data", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "send random data", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "send random data", "label": "None"}], "entityMentions": [{"start": 16, "text": "stealing the api key", "label": "ATTACK"}, {"start": 81, "text": "decompiling the swf", "label": "ATTACK"}, {"start": 135, "text": "create a dummy flash application", "label": "ATTACK"}, {"start": 172, "text": "send random data", "label": "ATTACK"}, {"start": 202, "text": "altering the api itself", "label": "ATTACK"}], "sentText": "the big one - e stealing the api key via man-e xxxxxe ixxxxxxxx, falxe t unlocks.decompiling the swf ad steaxxxg txe api g e api key o create a dummy flash application and send random data e highscores.altering the api itself o you t nd to be lxxxxd , etc. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 246, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 273, "text": "spam", "label": "ATTACK"}, {"start": 290, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy wo to rkin juxt just  g on a php project that will fxxxxxe a user system won't  axxxx.  (log or in,regi xxxxxxxxd s bots. texxxxxd lost password to  will emai that l,..) and  able i think  it  cxn txxt this may be very vulnerable xo brute-force attacks anxxxr spam  a saying  (send a password to someone's email like 1000 times, etc. use y to our fanta have xxx. do toxx t and o xxs web that servers (apache, iis) have xxxe js  sort of buixxxxn dxxxxxe  fxxm  dxxxxxe against xx (xxr xxxxx xxxs  web x us xxxx  xxx lost t would be  be the best wa of y to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more t su sort bxxxxx xx, d han two times a  y minute, howeve  he xx, r another page may be ca another l juxt lxd up to 100 times ed  a mxxxxe or so. xxxxs wxxh xs won't see it  the and will be fxxx. users without js will just ha to (and   han ve to xxxxxw t fill he simple in a st attacks rxxxxxx. spa  m with bots will fall for it xxd reveal themselves.automaxxc faux-captc the ha: x not x proje  ct x it   xxd wa implement y of   add bots.  s is simxxxr to t running he axxx xxx. x x . a times,   dd an xxxxt fixxd even  with  up a label saying [xxxx]  simp a le (xxr e will xample). usin  g javxxxxxxt (and knowing  very that most au js tomated sxxm xxxs won't   be running jsx, hi it de so.  the f won't ield an xxxxxw d populate it with xxxxx to x. if the subxxxxxd form doesxxt have the mag rkin ic word the cxxxd re another , thxn igxxxe cxxxd  it will . us (login,registexxx system, xxd ers w a ith js won' x  xxxxxd be xxs t sx it e it   and will xe fine. the  users  with without js wixl juxt have to follow the simple instruction. spambots won't k against now wxxt t xxxs  imp it lement o  simple d to o our  axd spam  x implement  y xu cxn ignor juxt e xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam  xxd bots. what it won't  will xx, even in  simple th i sxxm t e slighxxxx,  fxxxxxe is  sub mxxxxe xxxxxd safxxxxxd yo xxxe u again ca xxxe llxd st a ta ers rget someone ed attack. someone cx i php mplement xxd xxxx page x knowing xxxe  if their  fxxx. bot to a to void the honeypot or always fill in  xxd the fine.  x  cxxxxxt value.  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 137, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 211, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can f serv a i  even i i xxxr out the messages i gxt i of n my w in ebhook callbacx. hoxxxxx,  thousand a malxxxxu p  servi s user can add my bot to a thousand big groups and s  will p if sxxxl  o haxe ssibly result in denial of service for all other users. even if  such telegram have impxe xxxl xxxxxd soxe rxt  txxxxxxd re cxn sul f t e l  a bot imxxxxg such sexxi resuxt  usxxx. c l e  usxr xxxxxn i s may xxxxl resxxt in denxxl of xxxxi bot xf   i  groups ce fxr xxl other users. "}, {"sentId": 157, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "the middle man gets request from victim", "em2Text": "he fires https request himself", "label": "AND"}, {"em1Text": "the middle man gets request from victim", "em2Text": "returns content to the user", "label": "None"}, {"em1Text": "the middle man gets request from victim", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "returns content to the user", "label": "AND"}, {"em1Text": "he fires https request himself", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "the middle man gets request from victim", "label": "PARENT"}, {"em1Text": "mitm attacks", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "returns content to the user", "label": "None"}], "entityMentions": [{"start": 38, "text": "the middle man gets request from victim", "label": "ATTACK"}, {"start": 102, "text": "he fires https request himself", "label": "ATTACK"}, {"start": 158, "text": "returns content to the user", "label": "ATTACK"}, {"start": 302, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "let's imagine the following scenario: the middle man gets request from victim: http ://site.com. then he fires https request himself to https ://site.com and returns content to the user, stripping the hsts header. all further user input is visible to the attacker. does hsts header really help against mitm attacks? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 1, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "password to be send plaintext over the wire", "em2Text": "someone has javascript turned off", "label": "PARENT"}, {"em1Text": "someone has javascript turned off", "em2Text": "password to be send plaintext over the wire", "label": "None"}], "entityMentions": [{"start": 270, "text": "password to be send plaintext over the wire", "label": "ATTACK"}, {"start": 317, "text": "someone has javascript turned off", "label": "ATTACK"}], "sentText": "i choose not to just rely on javascript, as the client-side is never a secure place. i have gotten into the habit of writing both the client and server-side code for such things. however, for a web application that i am writing that has optional ajax, i do not want the password to be send plaintext over the wire if someone has javascript turned off. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 251, "text": "sign up for the app", "label": "ATTACK"}, {"start": 282, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my n how   those , hw saf  e   is \"ah ! s then , ==  my l  l\"? y,   i realize   that ths s that only an au into tn  but but ticated user into  c au an a  cce e ss the d, but how eay is  ge those t  !== i tn t to b  e authenticat?   n use can somo  ne sign up for the app, d thn be  use those credentials to get request right into my database? "}, {"sentId": 99, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "rename a malicious executable to [code]", "em2Text": "'hack' your system", "label": "None"}, {"em1Text": "'hack' your system", "em2Text": "rename a malicious executable to [code]", "label": "PARENT"}], "entityMentions": [{"start": 13, "text": "rename a malicious executable to [code]", "label": "ATTACK"}, {"start": 57, "text": "'hack' your system", "label": "ATTACK"}], "sentText": "i can easily rename a malicious executable to [code] and 'hack' your system. "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 27, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "clickjacking", "em2Text": "doing a mitm for these social widgets", "label": "PARENT"}, {"em1Text": "clickjacking", "em2Text": "xss", "label": "None"}, {"em1Text": "clickjacking", "em2Text": "hijack your users' cookie's", "label": "None"}, {"em1Text": "clickjacking", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "xss", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "hijack your users' cookie's", "label": "PARENT"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "xss", "em2Text": "clickjacking", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "xss", "em2Text": "hijack your users' cookie's", "label": "None"}, {"em1Text": "xss", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "xss", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "perform [code] against your website", "label": "OR"}, {"em1Text": "perform [code] against your website", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "xss", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "hijack your users' cookie's", "label": "None"}], "entityMentions": [{"start": 49, "text": "clickjacking", "label": "ATTACK"}, {"start": 101, "text": "doing a mitm for these social widgets", "label": "ATTACK"}, {"start": 186, "text": "xss", "label": "ATTACK"}, {"start": 291, "text": "hijack your users' cookie's", "label": "ATTACK"}, {"start": 322, "text": "perform [code] against your website", "label": "ATTACK"}], "sentText": "what? how!?is txxs not a masxxxe opportunxxy for clickjacking, if xxxd xxxxxxxxxxx? xxxxxxxe xxxxxxe doing a mitm for these social widgetsx) from an attack perspective this is more like xss (croxxxxxxe scrixxxxx) than xxxxxxxxxx.  you are giving gooxxe access to your website and they could hijack your users' cookie's or perform [code] against your website xf they so choose (but txxn peopxe would sue them for bexxg malxxxxxs and wealthy).  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itself migxt explxxt a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xxxxxxd poxxp xxn dixxxxxt the uxxr axd xxy nxt be xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"trap\" users axd to exxxxxxxxxy force ad impressionx, etx. in txxs respect, the security asxxxt of the probxxm reaxxy is txe secuxxxy of the user's coxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 36, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "have access to the database and code", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "have access to the database and code", "label": "PARENT"}], "entityMentions": [{"start": 625, "text": "have access to the database and code", "label": "ATTACK"}, {"start": 84, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "update: please note i am not asking whxt a salt is, what a rainbow table is, what a dictionary attack xx, or wxxt the puxxxxe of a salt is. i am queryxxx: if xxu knxw the users salt and xxxx, isn't it quite easy to calculate their xxxxxxxx? thexxxxx, a dictionary attack from a haxxxr who is worth hxs salt (ha ha) would simply rxn each keyword against the stored sxxxs in xxe common combixxxxxxs listed above. the oxxy thxxg i can think xo do is have a secret blexxxxg algorithm that laces xxe saxt and passxxxd xxxxxxxr in a random paxxxxx, or adds other xxxr fields to the xxxxxxg process meaning the hacxxr would xxxe to have access to the database and code to lace txxm for a dictionary attack to prove fruitful. (update, as pointed out in comments it's best to assume the haxxxr has acxxxs to xxl your informaxxxn so this probably xxxxt best). "}, {"sentId": 15, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "it's viewed by an unauthorised person", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "it's viewed by an unauthorised person", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "the information being intercepted", "label": "None"}, {"em1Text": "sending the login form via http post", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "the information being intercepted", "em2Text": "sending the login form via http post", "label": "PARENT"}, {"em1Text": "the information being intercepted", "em2Text": "mysql injection", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "it's viewed by an unauthorised person", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "sending the login form via http post", "label": "None"}, {"em1Text": "mysql injection", "em2Text": "the information being intercepted", "label": "PARENT"}], "entityMentions": [{"start": 302, "text": "it's viewed by an unauthorised person", "label": "ATTACK"}, {"start": 516, "text": "sending the login form via http post", "label": "ATTACK"}, {"start": 572, "text": "the information being intercepted", "label": "ATTACK"}, {"start": 650, "text": "mysql injection", "label": "ATTACK"}], "sentText": "i regularly uxe a staxxxxd xxxm to sexd login information through the http pxxt method and then valxxxxe it using php to check if the details are cxxxxxx. i use an xx5 hash on the passwoxxs (and somxxxxxs usexxxxxx) to gxxe some degree of xxxxxxxx, so i'm not storixg a xxw password in my code in xxxe it's viewed by an unauthorised person, or somxxxxxg like that. xxxe recentxy been working on a foxxm whxxh has a mysql dataxxxe of users and passxxxxx, the pasxxxxxs are stored as xx5 hashes, but i worry that when sending the login form via http post txe possibility of the information being intercepted is txxxx. xxm axxxe of the possibilities of mysql injection attaxxs and think that i'm safe fxxm any sxxxxe attacks. "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 124, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 201, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is using the method below a bad choice? it generates a random number between 0-1000. since there are only 1000 options, and their md5 hashes are known, it should take an attacker just a 1000 trials to verify the account without it really belonging to them "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 87, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a user is trd into g y are usig a n website but instead ae using a malicious website that resembles the legitimate website. aut, po, d torus are usee and password based login solutions so they open up the lon auth windw in a nw popup or redir. this als the r to veriy the domain f the website for legitimacy. google auth does s patn as well. besis opening a new window on login for the usr to verify, some web-based t provs also on a w window wn signg messas and s to vey the re. "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 76, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets access to the htdigest file", "em2Text": "use it directly for digest authentication", "label": "None"}, {"em1Text": "use it directly for digest authentication", "em2Text": "gets access to the htdigest file", "label": "PARENT"}], "entityMentions": [{"start": 524, "text": "gets access to the htdigest file", "label": "ATTACK"}, {"start": 564, "text": "use it directly for digest authentication", "label": "ATTACK"}], "sentText": "with basic authenticatn the pasd is sent nearly pln (4 encoded) to the sr and on the server e it gets hashed and d against the hashed passd d in htd file or si. h digest authn the hashed pd is sent to the r (with some server defined data added so replay attacks will not . but to verify the d you need to have the plain passwod on the server side (or something close to the n passw. ths , tht if the attacker gets as to the htpad file it nes to crack all te passwords bee they can be used for basic authentication, we if it gets access to the htdigest file it can use it directly for digest authentication. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 310, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how ca i n  xxn i dxy the \"welcom, [xxr name] n \" n   pc xxxxs e  for xxxt public ed u, ev the en if t th to xr xxy e xxxx? of cou su [ ld r, i wo to u ose ld lixe to kep th ossi [ bxe e s xo o  the sensitxxe xxxs s xxxxxs afe, and i sd xxxe kp  osxe [   the coxx] xo axxxd p ther xxxxi shxxxd on xxo xxy re e stealing of the session token. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 54, "text": "running [code]", "label": "ATTACK"}, {"start": 96, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howeve, i do not d the cs about secury vulnerab. cer, running [code] gives the r the ability to run any javascript code that you can run. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 283, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 343, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force   cxg  cg .    s xt  t px r xt he . e s  x xt t s    e  . xs cd  o r u g y    nt    o  s xxy  o     i d  o l  j . ak  t   d  o t p d  x n xy xxxxxg s d s ua   g xs .     xr  b o e xx. malicious users could create links on my bit.ly account. .  they would need to do a separate attack o d         x b xxxxs e r xe  t  xr  xa upd t  e n xu      d  s    t c   x s d  j   . xe xxd e  o d xxxxu   l    s  s d  o n  s  xa   j s   o  xe e u xxxd nx.   "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 253, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "since the verification file is wit it hin the web servers ro since ot stru by c root tu the re, an [link]. d google needs to t  it  access it to rea root d  needs i c is  ts contents -  [link]. t   technically echnically anyone t  c google ou anyone ld read it if they wanted by going to [link].  "}, {"sentId": 45, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "s, i h 've di  s ? a  ble wt d csrf prote    [i is:   ct  hat is i  on h the l line in - e [co.  a i  but h  is: fe but w ave my  loo  k doubts few  abot whether two  s     or  ction  s a  t so to m  ething o d s:  t     s e or   a - i s:  see ab  ovs  a  a lot of is:    [l t ink] good  or from  [li or nk] adi - to  ce ab c t s ot  f rf out whetr suq  t  a json hat  is    json apis are e t ct   o   in in       csrf a [co. ttacks -  l pa [co rtic ot but  but ad pe to op  on ab ce wa chang y l  e ding that e ws [c.  s  t secur  e? he   re?  only wa way y i coud get th partic  c csrf sr is:  secure? f  change  to e damn g    e to wor. is this b   having e  lo te n s i've yst secure  w  as log  is  em .  secu u. re? or is te sog i've ov d d o  r mi, e.g cont csrf ror . when it comes to csrf at way ac t s n ?is my un sessf   derst  autt i an overlookd g  csrf of how to autt  is  t thing icate re prote quests lk  once u e ss a t ot  re want  e l ction good    y, d in cot the ? (see \"thi a  i s  rdl piee y.\" oe  abs there any y t s h yu is cod e of  e e  can be cld   up  hg or mae nicer t  ha wt vin  g w ac   are  t  ?  having partic te   ularly te uy      ena -   bled, d re? en te   cld of hg  k one cor in   final hert from   dis a [co in d i something  e] and t dis h   wt   e  few a    ot  hers fro ce m [ [i     code]  . yu don't wat to   e csrf, i e rd tht i   a people of  think it   or  ab but o ttacks t   a doest apply  u -   n     to json apis f could or s  oe , bu [lin whether k] t this  above.)is is l  a d s   er  . l  ot  two  to   keep    n  o unded   h    can it , y  o te u wt to quests  m r ake secure?  a   fe  w chang secu e fina s: l s o    s  en : f s inal piee  [i of  sec  ure  ? t the he e  pe n nab t led,  puzze i w s of  to unden  can csrf d tht when l un ogging in o , two suq i  n  r can or ue [i nt  \"thi sessif  it tok t  wo n t s lie   i  g   a te re  get bg u.   or   line se lot cond final l,       whether to t a login flow would look like h logging i log  us  y s: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 189, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 276, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wix xxxxk xxxs   bu.    m to are a no to xxxl ,  and e \"xxxxxx s \" xx be th  at  . hxx xxr xxe  d  xs asxxd xt  ixy  k t xy es cxn uxe e.  xxd    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    and d yx, the xa  e xxxx. in pa   to g poxxp e  proxm f te  etx.  xxy  trixk te  s o   y  xx d txxs o y  x l e f xh xxxxxt  poxxp b  e xxm  xxxd xo xx pox  xo  x hoxxxxe p x x pr a om xt  fro t o a   e k  xxxxx xxxr xxxd o, xxt a xxxl t -cxxxxe xl o ick d pxxxp xx xxy n d some i xxxd xx exxxxxxxd xxx x t t . he xxxr a  c trud k  ad xy  xxo a  xn p d  e. m yex,  xxt b xxx   ick  asp  ext o  xt   of  f  c trk xxxxxxe . e x  d  ixxy  xy xxx xx  xx xxxxxd wh h  e xxxxxx p ixt  e  clik xxxn  y pxg k es xe pxx fxr m aspet   x on d   e  by my uxxxxxx thxxe y si  tes xs  expd a a of y to xxx mih  fo s r  cuxxxy xp xe \" us h xxs xx e  d   d   to e   \"   xxxxx xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt x, etx. n a  ts rex,   t  he sec  x xxxxp xxxy t o  not thrxu poxxp gh   f xxe  s   prom rex r y i xx  x importat be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e us a   oe  es n xxxh trusted  d  txo that   l xxx dy  x r their  by own com a pxx y r and  x te s xxxxr xxs  xxg xxxxxxx. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "running [code]", "label": "ATTACK"}, {"start": 107, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevxx, i do xt xxxd txe s about xxxxxxxy vulxxxxxxxx. xxxxxxxxx, running [code] gxxxs te hr xxe axxxy to run any javascript code that you can run. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 235, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popp wx xd s ae a not  abl p e uxxxxxxy  x  te e a  \" d  o xx we xxx xs    e x xxr \" xx the xxxxxxx. hosti  e se eo    rea s  xx can ue ps to   convince users that an important message from a trusted site has been delivered, an x  r d trick those people into clicking through to some malware url  ess o ce r xs e age vn   do a xf n t the cl pag ick itself x  mig a xxx  t re well- he r  t t a bugx.  y url e, te mai w  xxn o i n page xf the  ay xx  x impt e x e  eo y ited xd o xxt n  t x a d oo, s  t a xx  e   e well-r \"    s aft y  abl ed o  xxp xxn i  xx d t es e ires. xxxt e  s  ovxr ur ax ed d xd  y s  not be diy x uxxxxxxy t   e   asse wi a te d th y  d wi comx h t  t  a th    e re    he  m xxe mi t x  xxxxx people   e o . ed n ex  pag to  a p  people t  an s wxx dixxy   e   ed  e do vn by m x  no th t u d rl x t xxy  esx any a    ux   d  y y  xy sites x  s a wy  dixxy r  to \"tra  esxx  e,  a an p ess \" s a it   d o x a xy   fo m r t f he ce ess po k xxp   ag xs e  e  p ay age rc  e a \"tra d , e n   tx. in s impo ag   rtant  xx d xxx \"tra e  respe, t  h   x . x \" xt e  xs y aspect of h   xd th x e  xx  not prx xxxxx  xs xm rea an  coe xxy is t ity xe r xxxxr  xd it d an  d,  y of \"  t thoe h e e s control  uxxxx xy xy ovxr  uy  e the fo r  w ess  o explot n cop t x exi p a e t xxr d xxr b s row uxxxx sig . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 178, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 263, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wxxxxxs xxe w  a noxxxl xx  xxe e \"xx wxxe x is xxx xs xx x those  t xxxr xxxt    \" xx xo  xh xxxd e xx  xx can  ur xxx.  t hxxt txxs i xo le xxxxs   can uxe popups to     convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( xe or xx  xg xxy xxxxs e xxxxr  xxe ven be   an just t ad d  he clic t k itsxxf sxxe  p  xxxx  m  ig  xxxxxxs ar pexx, e ht xx  plxxt a bugx.  y uxl e ur s, xh xxxe e mai w xo  with  d s po xxe o i n paxe xf the xxxe  xxx xxxxxi e xx e  xx  xxr  exxxo y ited xxd xo xxxt too, but xxxxxxxxt   afte a well-c evxn r xs afte is d po p  ag xxp xxn dxxx d t es  ires. xxxt t rce he with   xxxs    xxxr user axd xxy p t agx. to poxxxs  not be dixxxxxy xxxt   age   axxo xm f  xxm  cxa xxxe te wi xd xh  xxxe  se xxy  d xxxh t xh  e h  thoxe url  ag e    from xxxxx bxt xe m xxxxxxh xi t  exxxxxt xxxxxxx xxy xx o . ed n pag  exxxxxxxxxy xo exxxxu  p an s wxxe exxxxxxxd  even by m esxxxxxxxxy any  xx uxxxxxxy s xe  of ites x n s a w xm xy xo \"tr t   t itsxxf o y a xn p t  ess \" users  xxe and to esxxxx a xxxxy fo m rce ess po secu  txxs xxp ag xs  ay e  xxo txxs xxe  p  xy any age rxe ad   i maxxxxe xxxe a s t sionx, e n t xxxn x. xn txxs xxs xxxt pxxx, th xxx a t e  xxxxxxs sexu xxxxx. rxxy xxxxxt of th  xxe pxo  xx xx e xx tox, xxs xm xxa c exxn onvince xxy is e  t ad  i xxe ty   xe xxc  expl xo  mpx oi  u xr r x h xxxr it d y of t tho fo xe he xxxxxs coxxxxl oxxr the xm  fo del  ivexxx,  ir o exploi xxx, t wn cxxxx  txo exxxo xxxx. i pexxxe t   xxr xxxxk  dxxx  xxd xxxx  r brxxs  xxg xxxxxe  xxxxxxt   thxxe s.     "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 34, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "e we point f usg salts is o avoid the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes . , it only s to be long h to exclude the possibiliy that such a e aly exists r a specific . "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "xss", "label": "ATTACK"}, {"start": 706, "text": "inject script", "label": "ATTACK"}, {"start": 725, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 787, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "le is suxxxxxe scr mitigats ipt d  xxxxxd t r xss. ea o xss and gxxxr using axxy it's not recxd xo ste any fm  e inf so ormation n itxxxxh cookie y s we always  cn a that pply  tr so  e flag \"httpon  ly\" whxxh  y mxxxxxxs xxe risk of xss. how jwt xxxr xx.  if we e xo xxa againt d the    e jwt xm  to xxs on bac t ken be d, we th tht xn    rea csrf  are subj even ectxd to csr xxr tr f-token you  f.   i lie th e e xsrf  t xe   you evalua submxt cos mxd which md  ck. in t . he are that @pkid cookies 169  don\u9225\u6a9b sxxx, but th fr ee s o bro ne th to in in g that article doet tl incl xr b  cxn  uding  . y rea ou ar e e xxxxl xxs  subj  not protecxxd t xss because wt the a genexxxxy tr can d xxe  w o is .  inject script txxt reads your csrf cookie (wh is n xsrf-token ot httponl) d then make a request to one of your api endpoints using this csrf token with jxt cookxe beg sen  to xsr  e t automaxxxxxxx. so in rexxxxy this  you that  axe sxxxl sxxxxxxxxxe to xss, i e xxs just txa  even you t xt to tacker y  xxx' t t l yu  xss jwt  t's xt  toxxn fr later   xxx, but he xxn sl mae requxxxs on your uss b . yu  ehalf using xs.  wher you sxxxe your jxt ht  xxxxx)  in a  y locaxxt to ora xs e or you e xxxr x always sr o fxxxxxn rea  in nxt http-only cooki  e, b dxxx\u6a9b oh can be grabbed y by xss. mae  even your t xn h y xxp can must 't only e can xe g  rabbed   xy a xxxxxxxxd n this  xd  xxd xss xxxxxxxxy  a or txa de ck.  so in addit just in of the e s b a xh t  d a in lf ubmit xxxxxxs , yu must alwxxs w bxxt pxxs aga on ts  xxt xs  can xxs  xn xxxxxxt cluxxxg escapig . this mean . s xxxxxxn y g  a y exxe code tht wxxxd xss.  e the bro  yu this  xxt wr to xo g y t jwt he ou doxx\u6a9b t t to. y subjxxxxd  this  this mxs remxxxxg // &lt;![c artic mitigats le data[ ts  xr and hl attributes txxt ce xxxxxt to b xxu  attrxxxxxs e exxxxa xx. t. "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 239, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 279, "text": "local file inclusion", "label": "ATTACK"}, {"start": 300, "text": "directory browsing", "label": "ATTACK"}, {"start": 320, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 359, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can happen on a well-configured server and is not as rare as you might think. as the others have said, if your server-configuration is sound, then there won't be a problem with people requesting php files directly.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection pretty much every serious dbms has a function that allows it to read files on the system. if you don't protect your database inputs (please just use parameterised queries) you may be vulnerable to source code disclosure through this mechanism. mind you, in this scenario, source-code disclosure is your last concern. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 150, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxu   that p ws s  s  e a xe \"\" xxx. e xxt xxx es n ue ps xo convince users that an important message from a trusted site has been delivered man , d trick those people into clicking through to some malware url r  xe xxxxxx  y s s xn ju has st the clxk f txe  migxt  re h xxxy e xxy h s     xx x  xy x   p xxt a buxx.  , txe xxxn  xxx in  p \" age x not f e xe d   o  d   xx  xt   too, man  but a wd p xxn  \"  dixxxxxy t th xe  an e uxxr a s xd xxy not e di  xxxxxy xxd h e xxe n s w xxx   xxe d   y m  xn sxxxs y uy y  s xs s xxx  s a   y to \" s an xe d to esxxxxy xe xxxn  xd imx, etx. in xxs  xs respx, xxe secxxxxy   axxt f xh  e  a xxxxxxm reaxxy is xe y xf  s e user' in s contrl  te r y    r   x xy y xf re  on xxx s xxxr d r bg xxxx. "}, {"sentId": 60, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "steal the oauth client_id", "label": "AND"}, {"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "steal the oauth client_id", "label": "PARENT"}], "entityMentions": [{"start": 113, "text": "inspect the requests being made by a legitimate client", "label": "ATTACK"}, {"start": 197, "text": "steal the oauth client_id", "label": "ATTACK"}, {"start": 284, "text": "construct any request they want to impersonate the legitimate client", "label": "ATTACK"}], "sentText": "the  made major that  c  be   a oncern th    a e i have i e s that a c n client   the majo by r yon a  e e could inspect the requests being made by a legitimate client to th a stea be l  e api and steal the oauth client_id. at th the at point they legitimate  would be abl oauth e to construct any request they want to impersonate the legitimate client. "}, {"sentId": 12, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 84, "text": "man-in-middle attacks", "label": "ATTACK"}], "sentText": "encrypt my communication (cs &amp; s->c)o 2-way authentication (c->s &amp; s->c)avd man-in-middle attacks "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actually working on a php project that will feature a user system (login,register,send lost password to email,..) and i think that this may be very vulnerable to brute-force attacks and/or spam (send a password to someone's email like 1000 times, etc. use your fantasy). do today's webservers (apache, iis) have some sort of built-in defense against brute-force?what would be the best way to implement an anti-spam/flood system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be called up to 100 times a minute or so. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots will fall for it and reveal themselves.automatic faux-captcha: this is similar to the above. add an input field with a label saying [link] (for example). using javascript (and knowing that most automated spam bots won't be running js), hide the field and populate it with 'alex'. if the submitted form doesn't have the magic word there, then ignore it. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots won't know what to do and you can ignore their input. this will safeguard you from 99.9% of automated spam bots. what it won't do, even in the slightest, is safeguard you against a targeted attack. someone could customise their bot to avoid the honeypot or always fill in the correct value.  "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 348, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 421, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "s  o natu the r n ally they , i thougxt of juxt attacker  sxa hashi on ng it xi easixr   though  t    nc lly e we'r o e  using just using it for t  idexxxxxxxxxo n n.  t that xe proble the  problem m else  with  salting th  a sha, t i  s  so  xxx? t s use o  n hat  xxxxg ssns ht if    instexd a bcry n attac   of for    k xxe er a idexxxxxxxxxo   knows the problem domain (an ssn), of  txe xxe libxxxy  n t i h p ey can focus on that domain salti    ng .  s ssns  the o it's mu  c to  per-paxxe   salxxxg  the nt planni ixxxxxxxxxxxo ng  h easier  sit xxe e to calc instead ulxxe t   s on  can snx, he billion ss lxs xs  use xa fr xxxr than a vi c txxd a than n rtu  i  a  billixn  on re dom vxa xo lixg lly xg  calculate can   unl has   i focxs  but mited xxxxxr of passwoxxx.  we instead 're  i   know  nuxxxr i should use a site  the saxt hat  xxd a per-p probl per-pati e xxxxxt of   the  i s p bcry   a  roblem xxx, but is ther   than e anything  sha else i  nt  the can nt   th  at can  do to preven xa a ltixg t an attacker f  ro dom les    , xxn  . m rxxxxxxn ng g the ssn? xxxxxxxi xxxd en txe t   i  ins nt texd of sha, i  us  ing  t    xxs sal  xxxg he was planning on u atxxc  was sin   the g hat  bcry can p n t per-xxxxxxt  xxn  than ins ), ,    ey sixxe xxs  ru pxxxxxn . g by   has a go  od libxxxy and it xxxd the les sxxxxxxe p ixxs xxxxxxi knows e salting nt  coxxxxxxxy  then a a  com natu  lxs xxxxxt  nt , y nd xxxxxxg automagica  idxxxxxi xr library o catiox. i llx. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "enters the password", "label": "ATTACK"}, {"start": 177, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 130, "text": "access the file", "label": "ATTACK"}], "sentText": "o sae a file th   f. i defd h be th  e tter e following meths retus a hashe that is stored in a e dit . wheneve e r the user s to access the file, e enters the password, and if the same hash is generated, h  answers method[ the cos e can access the fili su o ppo and se s suppe  w  is :[  e nt re [ ally safe, but hw safe it is? hw high t method[ he  is te chance th sh at   e follog the  se gen safe es the same hah w in ith two different in the puts?e hash dit w :accordin better g t stored o your ans i changed the c  the hash ode to :[ be co] w  be o it sh retus  e ould be be file. r a  now?? "}, {"sentId": 57, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "knowing the structure of your filesystem", "em2Text": "execute directory traversal attacks", "label": "None"}, {"em1Text": "execute directory traversal attacks", "em2Text": "knowing the structure of your filesystem", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "knowing the structure of your filesystem", "label": "ATTACK"}, {"start": 64, "text": "execute directory traversal attacks", "label": "ATTACK"}], "sentText": "knowing the structure of your filesystem might allow hackers to execute directory traversal attacks if your site is vulnerable to them. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notabe \" xxxxxxxx. e s xn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the xk if might et a xxxx.  y, e n xxxe xf xxe xxxe xxxxd do xt tx, but a well-crafted pop n t the user axd xxy t be xy ad xxxh xe xxe xxn s e d y y uxxxy sxxxs xs a y o \" s d o exxxxxxy fe d , etx. in s , xe sey t of e prm reaxy is e xy of e uss coxxxl or thr on compxxr ad xxxxr browsing des. "}, {"sentId": 132, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "hacks this mechanism", "em2Text": "install arbitrary apps on a device", "label": "None"}, {"em1Text": "install arbitrary apps on a device", "em2Text": "hacks this mechanism", "label": "PARENT"}], "entityMentions": [{"start": 65, "text": "hacks this mechanism", "label": "ATTACK"}, {"start": 103, "text": "install arbitrary apps on a device", "label": "ATTACK"}], "sentText": "google can delete and install apps silently ([link]). if someone hacks this mechanism, an attacker can install arbitrary apps on a device. unsure if this app has automatically all rights it wants to have. this doesn't happens till now, but it's possible. you can only protect your phone by checking regularly all installed apps and there rights. this mechanism can be misused by a hacker.malicious applications can do a lot evil things, but if you don't give every app the rights the apps wanted and think a little bit, you can protect your phone.some security holes in the browser or the system allows an app to get root-access. in this case the app can do everything it wanted. i don't know any protection against this. as far as i know android has such security holes, so this is the most dangerous issue. "}, {"sentId": 53, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 44, "text": "someone crawls the image directories of your server", "label": "ATTACK"}], "sentText": "here comes the problem: it is possible that someone crawls the image directories of your server. but you want to protect your users from such attacks. "}, {"sentId": 153, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "post to the form from another page using some nifty post-to-iframe hack it", "label": "ATTACK"}], "sentText": "if someone tries to post to the form from another page using some nifty post-to-iframe hack it will be [coxxx, you can throw xt out immxxxxxxxx. "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 516, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 647, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "poxxxxxs xxd insi dev  xxxxxxg ght on securxt s whxn uch y  insi measurxs that i sh compromise ould txxe in plxxxxs to xxxxxxxxxt xxh plaxxxs exw shou measuxxs  ght ld ise ion when xn  dexxxxxi insi ng softwaxx, mainly  existance games the , xxr  such as t below. he  or one oxxd  d oth esc his/xxr xxxxd belxx. by secxxxxy i mean che clxxxxx, cking and xxxxxxxr  xxxxxe cxxxk this ing that a xxxr d fxr oesn't xxxxxxi  act in  b  this a way not in mean tended i . thxs   could mxxn b to ehaviour sxc for h  suxh as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or  xxxe oxxxxxi oxe se compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 822, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "y   i'm storing api keys in my app. whxxh s s a bad p. n har w to e bex x t of my knowlxe i t   o n xxe prd or dd xo  ix? and  oxxx. i can o ue e o y  secy stoe y i  x kxxx. no now w f in or th th s pat hee ake '  y m es m ys. y -  .  cop o x0 xxn cxa k. xs e e xf var it  kxs xs  use and clxxx se xx. y ai kxy wxl xxxxl e in xh  xxt ap when   e de m c xg p i  kexx. iles the ak  i i whxn lx.  xxe xxxe t m  wd xa xo d h e  y t minu?  ue e es t t i ake xx  mx of xe ti,  x bxt w x fi h o funxxn e .  s kxxs  i? for xx a xr i a t  pi xxxxe 20 minu? i xxxl x k e the bx my m lin tixx, e s txx xo t xd  they cn it   kxxs uxe  i ths kxy if t s hy xt xxxe e and efforx. am i geg s wron p x? k  ey.  xxw xs t evn will  p? a xxxxxr i  s  t gg to se xs nd te xxi xxy to txe ap. i  f e har f  inds t a gt pp h s xs ul they cn just open it and get the key. xf i e a xxy to acs  ? th out   e url thn im e s nteg s  a   xxxr th  xxxg loop o s f ke n y. hw d i xo  t i  te d th ntg at i ca que- n enct x f y kxs ad thn hxw  xt m n xxe app   o d ne xxxs .  xn xx of t c to axxt e more  e xy xxn fxxn d e o w t my  x k minx? ? "}, {"sentId": 101, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 40, "text": "some bad person would take advantage of the indirect access to win api", "label": "ATTACK"}], "sentText": "but, we have a security concern.what if some bad person would take advantage of the indirect access to win api? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 52, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 178, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but w secue s that? can a user exg the progm easily set this property to an arbitrary value (usig a ce argument of the jvm, for ex) for common runtime environm? can a usr easily spoof this user name? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 135, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 216, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d xxxy can xxxz xxr xxxxxxxxxxxxxxs xn te app xxe ad t xx, t te cxxxd xe xxxe indistinct general side channel attack or . but how d an xxxxxxxr y go t txxxg o recover those keys?  xxe txxxe ve xxxs for a d ar to sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 4, "text": "a database is compromised", "label": "ATTACK"}, {"start": 45, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "asg a database is compromised a per user sat prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table would have to be gened for eh d every usr who hd a unique st in order to on their passwor.  this woud be a time consuming s which is what mas s .  this does not help a tremes amt at dictionary or brute force attacks. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 404, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm w t att to a cs ck? o c   the xf d  calls i wo to uld  c new  lik to e kno  w  o k of now if     it   has n to y buildn mec  would a hi would sm tt wo thus uld allo calls w  num limiting t this he cxf   calls cals  m and  xf b a this s er of c  wo c t to y  y  o f oncur cxf t calls to the web s cf v it , thus d  a w wcf? ?  attack? ddressin would g te ps  ibilit wo t wo he uld i'm  y f k  e  a y  dos attack i  cxf ?  wo it uld s a om o  num eg simi  r to this a  fea wcf? ture i   sim w i f ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 54, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pp s are a nxxxxxe \"\" xxxxxxxxx. he sits xxn use s to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxs evxn just the click if migxt et a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xd p xxn dixxxxxt the uxxr ad xxy nxt be xy d with e xxxe main pxxs e explod by many uxxxxxxy sites xs a way to \"\" users axd to exxxxxxxxxy force ad impress, et. in txs re, the y asxxxt of the probxm reaxxy s txe secuxy of the us l oxxr tr on xxxxxxxr and xxxxr xxxg desirxx. "}, {"sentId": 55, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "use all these cookie for authentication", "em2Text": "cookie spoofing attack", "label": "None"}, {"em1Text": "cookie spoofing attack", "em2Text": "use all these cookie for authentication", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "use all these cookie for authentication", "label": "ATTACK"}, {"start": 302, "text": "cookie spoofing attack", "label": "ATTACK"}], "sentText": "my quexxxxn ix: why use all these cookie for authentication? xy guess xxxxd e t maybe gxxxxxxxxg a session xxxh would be o exxy so xxxxg the xxd xxd usxxd adxs xxxxxxxy xt xxxt about xxxxxe s? i'm bay lexxxxg on the t xl fuxxxxxxxxl in. y mxxn con is axt these xxxxxxxn giving to much xxn when under a cookie spoofing attack. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 38, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 254, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 377, "text": "recover those keys", "label": "ATTACK"}, {"start": 475, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 498, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  atta vulnxxxs xw m i  app i s ight an attacker recover the secrets in that flash? i x xxxr xxx txe xxxxd   app i thxy n fuzz for vulnxxxs in txe app cxxe and ext  c sx flash? xe hannel shave-d fr o or wn  i, xx  xt o  n  te xxxxd attacker   i be sxxe indistinct general side channel attack  xxx dd r or     o o  the somethi. bxt how wouxd n axxxxxxr thxy  ry go t xxxxxg to recover those keys?  e e ve apps  attac w k fr to  a d att to acker  xx d atta f go uzz xxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 19, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "env vars are not particularly secure", "em2Text": "they are visible via [code]", "label": "PARENT"}, {"em1Text": "env vars are not particularly secure", "em2Text": "they are available to any user that can run [code]", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "they are available to any user that can run [code]", "label": "AND"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "they are visible via [code]", "label": "None"}], "entityMentions": [{"start": 3, "text": "env vars are not particularly secure", "label": "ATTACK"}, {"start": 46, "text": "they are visible via [code]", "label": "ATTACK"}, {"start": 83, "text": "they are available to any user that can run [code]", "label": "ATTACK"}], "sentText": "h, env vars are not particularly secure xxxx. they are visible via [code], d xxxxe they are available to any user that can run [code] c. (of , axy r tt has acxxxs to [c] on the xt ao [lin] xxxxx) "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 185, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 241, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strs  tabl ar d ode], o   ed , e xr e  od os  imxu [c tl ode], e. that mes  c once  imxu y before ou xx.  can  xs e crt [  c  xxxx, ed the [ f c e  x  xxxx [c  can s u    means r od, f another process can dump memory  f xx if . , th xx. ers no way you can get rid of the data n   x if r  way xe  bef xxs ore [i xxx x  ] kic  n te can  k xxx s   in. "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 66, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 97, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 226, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm wog on a legacy rais n and the coxs he may instancxs of [c. n running a brakeman scan on it, [code] opens up the application to mass assignment vulnerabilities. y quesxxxn xx- what xs the moxt exxxxxxxe y to get around xs params.permit! vulnerability d repe it? "}, {"sentId": 6, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a malicious user can invoke one method", "em2Text": "he could invoke any", "label": "None"}, {"em1Text": "he could invoke any", "em2Text": "a malicious user can invoke one method", "label": "PARENT"}], "entityMentions": [{"start": 113, "text": "a malicious user can invoke one method", "label": "ATTACK"}, {"start": 153, "text": "he could invoke any", "label": "ATTACK"}], "sentText": "should xxxe checks be done at the top of txe stack, the xxxxxm of the stack or at exxxy level?  it seems that if a malicious user can invoke one method, he could invoke any, so for  exxxxxxxe secuxxxx, xxxxd xxxd a chxxk on evexy method (and thatxs a lot xf exxxa xxxe to writex. "}, {"sentId": 95, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "performs a memory dump", "em2Text": "information is compromised", "label": "None"}, {"em1Text": "information is compromised", "em2Text": "performs a memory dump", "label": "PARENT"}], "entityMentions": [{"start": 112, "text": "performs a memory dump", "label": "ATTACK"}, {"start": 142, "text": "information is compromised", "label": "ATTACK"}], "sentText": "heap inspection is about sensitive information stored in the machine memory unencrypted, so that if an attacker performs a memory dump , that information is compromised. thus, simply holding that information makes it vulnerable. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 63, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 247, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the ow does challenge repla -response authentication prevent man-in-the-middle attacks? i read the wiki  $5 articl wiki e but s cannot till i ca attacks: nnot underst  and. where challenge/response  y protocols really shine is  my in preventing replay attacks and : if alice just sends b ould ob   record cannot a message along the lines  sends of \"please deb bob it my $5\",   s e hi record ne account   $5 and credit your  really account $5\", mallory c alic mallory  $5 e's ould record the message and y  repla mallory y the message  $5 to deple  t and. e alice's a cannot c ob count. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 94, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 151, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e youxxxxf wrxe pe to txe m sxxx,  you're g txxt any m txxt rs under u t y  n xx) can inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 40, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 125, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notae \" x. e s n e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s evn t the ck if might t a bug.  y, e n e xf te xxxe xxxd do xt to, but a welld pop n t the usr axd y t be dy ad with e xxe man s e d y y uxxxy sis xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e y of e uss contrl or thr on compr ad xxxxr browsig des. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 567, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 160, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, aren't you y hosed at txxt ? if you tie e n to an xp addxxxx, tn xt s a xxt hxxr to hijack into a session. thxs s somg i rexxxxxxd xxxxx, but you don't need to be uy strict xxxxt i. you can xxxt tie to e first three xs of the ipv4 or . the ce is . the more sxt ip chk e more see it is, but the less conxxxt it is xxr users. and as r tyixg the xxn bxxxd on the ur ax, txxt my ao hx. t must be reald thxt if you work xn an ud l xxxxp for example), then te uxr aget check is s usl as it can xe reproduced by the intruder s wx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 16, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 25, "text": "cookie has been hijacked", "label": "ATTACK"}], "sentText": "this is important if the cookie has been hijacked. it will be invalidated if the user detects the hijacking, and furthermore because the token is unrelated to the password the hijacker won't be able to derive and then change the user's account password and \"own\" the account (assuming you require the existing password before changing passwords, the hijacker doesn't own the email account so they can't use \"forgot my password\" etc). "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend that the salt be stored separately from the database. their argument is that if the database is compromised, an attacker can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this account has admin privileges, then he may not even need to crack any others. from a security perspective, is it worth it to store salts in a different place? consider a web application with the server code and db on the same machine. if the salts are stored in a flat file on that machine, chances are that if the database is compromised, the salts file will be compromised, too.  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 54, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 11, "text": "evil people can do bad things if they identify your public key", "label": "ATTACK"}], "sentText": "presumably evil people can do bad things if they identify your public key. goe seems to k so, ap. i can gus what this step doe, bt i'm not sure i y want to e on tht in an open , d ge ae any id.  you want to do t t. "}, {"sentId": 64, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse-engineer the obfuscation algorithm", "em2Text": "capture what's sent over the wire", "label": "OR"}, {"em1Text": "capture what's sent over the wire", "em2Text": "reverse-engineer the obfuscation algorithm", "label": "None"}], "entityMentions": [{"start": 122, "text": "reverse-engineer the obfuscation algorithm", "label": "ATTACK"}, {"start": 201, "text": "capture what's sent over the wire", "label": "ATTACK"}], "sentText": "you can never trust the client. even if you obfuscate, someone could still figure it out. for example, an adversary could reverse-engineer the obfuscation algorithm, look at the device memory, or even capture what's sent over the wire. "}, {"sentId": 83, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hijacks the dns server", "em2Text": "arp poisoning or something similar", "label": "OR"}, {"em1Text": "hijacks the dns server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "hijacks the dns server", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "hijacks the dns server", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "arp poisoning or something similar", "label": "None"}], "entityMentions": [{"start": 1550, "text": "hijacks the dns server", "label": "ATTACK"}, {"start": 1608, "text": "arp poisoning or something similar", "label": "ATTACK"}, {"start": 516, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "no ssl. this might be acceptable if our customers aren't worried about their employees seeing/changing each others' data. their employees might want to share results with each other anyway, and i could use ip based access control and/or passwords for security.do ssl with no certificate. this encrypts the communication, which at least protects the data from being read by unauthorized employees. using a password, this is the same level of security as [code] on the command line, right? i don't need to worry about man-in-the-middle attacks in an intranet, right? a con for this approach would be if there were loads of browser warning messages.do ssl with a self-signed certificate. what does this give me that no certificate gives me? if the dns can be changed inappropriately, then the customer then my application is the least of their concerns. worded another way, if the dns can change, then i think [code] would be vulnerable too.do ssl with a local certificate authority. openssl lets me make my own certificate authority. what does this give me that a self-signed certificate does not? i'm assuming that on a lan, it's less important for the server to be verified. do ssl with an external certificate authority. is there ever a reason to go this route for an intranet? i found some \"intranet certificates\" for sale online -- but it's not clear what they're offering i can't do myself. ssl-without-a-certificate, on the other hand, does not store the server's fingerprint. your communications will still be encrypted, but if someone somehow hijacks the dns server as you mentioned, or, [link], does arp poisoning or something similar, they would be able to perform a man-in-the-middle attack. ssh, as previously mentioned, would (supposing you had connected to the correct server some time in the past) notice that the fingerprint had changed and alert you. "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 105, "text": "steal a session", "label": "ATTACK"}, {"start": 155, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 686, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer tha, s, to  cookies. bt it i t s but  sti  ll po than, ssi o ble  to to steal a session as  and ts    a the hacr  po will have total access to whatever is in that session.  if some ways to avoid s are   ip checking (whih   wos pretty  fairly w ie el, but is vey low i e  and thus n to ot si  rele on its own), an   works d s  using a nonce thus .  fi typy with a  even  but nonce, u have a pe wo r-pa e e \" priv, token non but ce \" so that h page c leve heck ug s t the t page's nonce matches e  t it has  y stor oaded, ed.  but with a  my c reliable oo,  secu, a har can steal the  leve sn simy y  serv tei as ques. er-  l is l using fairly si you mpe xss  leve techniques. if p  as  you re  sto but xss  \"  re te use hol r's session id as a o  ajax a k vulnerable ie, th oa, ey are u cookies. lnee to  ex t session hs s well. of  so  has even  makes tu l gh the ses xs evs s s are ion t  ad  is  t only pene to someone o can do a server-le  ve bt l k (which requi each r  cookies gog es much more sophisticate doin as g d ms d usually se at of privi hr lege, f y pe o x ur server is u si re), yo this u are sti non, ll going to nd se  l e to x rel g , tra leve g l o  of verification upon eah t re ve quest.  secure, you should not use cookies that  and ax to  geh xss er,    doing as this makes it a tad easi  er to totally go   f use o town nonce y ,  if t cooe is stol, as your x request acs s my not get the securiy checks on  te. each   request. for example s , if th the ne   ble e page uses a none ho. , t the page is nev ook, er rel, the s page's ct may y be g simy  f you or that match. and if th    to to e cookie   is hg the authenn , this  i  , can now go to tn  that doing my evils a  s, s usig te stolen k upon  now e and the x hol  e. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 463, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t and  at calls t to a calls  cx  f  new ck? o c c limiting a xf   and  calls i would thus  like know  to know if   it    at ha the s any build-in m ca s calls   ec a hanism that would   allo call to s w limiting t this know  h t  ce, e cxf  calls  num and b ca this lls e    t a r  know of c cxf o  ncur c cxf xf rent cal   t e vi ls to the web s cxf e   and  cxf   r  dos i vi of ce a , thus w cxf ould  this  a wcf? ddressing the possibility o cxf f a dos attack? somethin  g sim of i  lar to this feature i cxf   o t any his f wcf? "}, {"sentId": 161, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "other javascript attacks", "label": "OR"}, {"em1Text": "xss", "em2Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "label": "None"}, {"em1Text": "xss", "em2Text": "anyone could post a security hole exploit script ", "label": "None"}, {"em1Text": "xss", "em2Text": "infect people with old browsers and plugins", "label": "None"}, {"em1Text": "other javascript attacks", "em2Text": "xss", "label": "None"}, {"em1Text": "other javascript attacks", "em2Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "label": "None"}, {"em1Text": "other javascript attacks", "em2Text": "anyone could post a security hole exploit script ", "label": "None"}, {"em1Text": "other javascript attacks", "em2Text": "infect people with old browsers and plugins", "label": "None"}, {"em1Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "em2Text": "xss", "label": "None"}, {"em1Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "em2Text": "other javascript attacks", "label": "None"}, {"em1Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "em2Text": "anyone could post a security hole exploit script ", "label": "None"}, {"em1Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "em2Text": "infect people with old browsers and plugins", "label": "None"}, {"em1Text": "anyone could post a security hole exploit script ", "em2Text": "xss", "label": "None"}, {"em1Text": "anyone could post a security hole exploit script ", "em2Text": "other javascript attacks", "label": "None"}, {"em1Text": "anyone could post a security hole exploit script ", "em2Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "label": "None"}, {"em1Text": "anyone could post a security hole exploit script ", "em2Text": "infect people with old browsers and plugins", "label": "None"}, {"em1Text": "infect people with old browsers and plugins", "em2Text": "xss", "label": "None"}, {"em1Text": "infect people with old browsers and plugins", "em2Text": "other javascript attacks", "label": "None"}, {"em1Text": "infect people with old browsers and plugins", "em2Text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "label": "None"}, {"em1Text": "infect people with old browsers and plugins", "em2Text": "anyone could post a security hole exploit script ", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "xss", "label": "ATTACK"}, {"start": 62, "text": "other javascript attacks", "label": "ATTACK"}, {"start": 96, "text": "an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission", "label": "ATTACK"}, {"start": 253, "text": "anyone could post a security hole exploit script ", "label": "ATTACK"}, {"start": 314, "text": "infect people with old browsers and plugins", "label": "ATTACK"}], "sentText": "anyone know if jsbin.com implements any protection for xss or other javascript attacks? i guess an unfriendly script could do a denial of service on jsbin by continually scripting a \u9225\u69aeave to public url\u9225?submission to clog the database up. and of course anyone could post a security hole exploit script which would infect people with old browsers and plugins; that might also get jsbin on google's blocklist. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 44, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 158, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 225, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked f n r n gain access to the system under the same user account as your codexn oe xxx, dt user, rt , s an impt a . f an r n get access as the same user or as root, ye got xr xr xx. fr x, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 191, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 248, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "   rs xf  m yu e yo  uxxxxf wrx a obtain ny e pe to tx  txxt  n    e m s , xx in code to x ux wrx xxxf ,  you're  x, g  pe txxt any m txxt xf  rs  site-packages  any under u t y  n xx) ca  n inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 6, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 43, "text": "injection", "label": "ATTACK"}], "sentText": "the where no sql calls, so i wt ad for sql injection. but, apparently, sql ist the only kind of . ths webe hs an explanation and a few examples of avoidg e injection: [link] how would you prott this code from code injec? "}, {"sentId": 7, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "brute force attack", "em2Text": "guesses the input values", "label": "PARENT"}, {"em1Text": "brute force attack", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "brute force attack", "em2Text": "get in", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get the $userinput information correct", "label": "None"}, {"em1Text": "guesses the input values", "em2Text": "get in", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get the $userinput information correct", "em2Text": "get in", "label": "None"}, {"em1Text": "get in", "em2Text": "brute force attack", "label": "None"}, {"em1Text": "get in", "em2Text": "guesses the input values", "label": "None"}, {"em1Text": "get in", "em2Text": "get the $userinput information correct", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "brute force attack", "label": "ATTACK"}, {"start": 70, "text": "guesses the input values", "label": "ATTACK"}, {"start": 177, "text": "get the $userinput information correct", "label": "ATTACK"}, {"start": 219, "text": "get in", "label": "ATTACK"}], "sentText": "that's how it works right? but iv'e read about brute force attack. it guesses the input values right? with the procedure above. doesn't it shows that the attacker only needs to get the $userinput information correct to get in? he doesn't need to guess the long $encrypted string correct? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 146, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 239, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t xxxs y u   e t   d   y e a a t  e   xxxxxe \" x   d xxx d  thr xe ough x  xxx  . e s xxxc is ki t ng    cn  e an  e  xe po br xn xw pxs xo   convince users that an important message from a trusted site has been delivered, an fr n o d trick those people into clicking through to some malware url (xr   s  d e n ven y  t  xy    an the xxl    xs t ck i y f t  x xk xxxt xt a bu  d e   d   xxn d  .  xx  ck n .   m y,   e n ,  d  xxxe xf the   xx xxxxxxr b afxe  e t d  . xn  xe xx  t xf xe    xxd xo xt  bxxw   y xi  n s  t xs x, b   e u xs t    , a xe  wxxxxxx t  t a e    sxy of an   fte  d  xe pop n t th xs   e  xs user axd x xxxxy y  xy   t x  o a e dy   b  , e xd xxxh xe xxx   et xy  x h n  m    t o   xo f e users xxxxe xs  an   t d xe xxn s e fro xs m   t d y   xf x sey the   y uxxxy s  t t ites xs a   y  xe     o xxxr  n  n  \" s d  p xe e    xs o esx  n i x e    o xx  xy \"    xs  fe d     . cxn      e pxp  us  t  ,  t etx. i xxxd n s  n , te sey   t of e p   e xm r s eaxy xk  i  bu e s e sy xs  of e u d ss cxn on x  on xxr xl or  xxy and  a   xn  x welxxxr x xxr on xo y  e m  xxxr a xs  i a s  t d xx a xxr browsi a  e   xxxxxxe  xg   xxxx ad xxx. "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 96, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "for security reasons, it is desirable to check the integrity of code before execution, avoiding tampered software by an attacker. so, my question is "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files memoryread  fi file (user) s les  "}, {"sentId": 33, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 197, "text": "xsrf", "label": "ATTACK"}], "sentText": "introduce an artificial server-side pause into each admin password check to prevent brute force attacks [developer art]use separate login pages for users and admin using the same db table (to stop xsrf and session-stealing granting access to admin areas) [thief master]consider also adding webserver native authentication to the admin area (e.g. via .htaccess)  [thief master]consider blocking users ip after a number of failed admin login attempts [thief master]add captcha after failed admin login attempts [thief master]provide equally strong mechanisms (using the above techniques) for users as well as admins (e.g. don't treat admins specially) [lo'oris]consider second level authentication (e.g. client certificates, smart cards, cardspace, etc.) [joegeeky]only allow access from trusted ips/domains, add check to basic http pipeline (via e.g. httpmodules) if possible. [joegeeky][asp.net] lock down iprincipal &amp; principal (make them immutable and non-enumerable) [joegeeky]federate rights elevation - e.g. email other admins when any admin's rights are upgraded.[joegeeky]consider fine-grained rights for admins - e.g. rather than roles based rights, define rights for indicidual actions per admin [joegeeky]restrict creation of admins - e.g. admins cannot change or create other admin accounts.  use a locked-down 'superadmin' client for this. [joegeeky]consider client side ssl certificates, or rsa type keyfobs (electronic tokens) [daniel papasian]if using cookies for authentication, use separate cookies for admin and normal pages, by e.g. putting the admin section on a different domain. [daniel papasian]if practical, consider keeping the admin site on a private subnet, off the public internet. [john hartsock]reissue auth/session tickets when moving between admin/normal usage contexts of the website [richard jp le guen] "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 197, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 285, "text": "recover those keys", "label": "ATTACK"}, {"start": 348, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 370, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mxt an attacker recover the secrets in that flash t xx xs  e   f xw lah te e he ? i d   thy c n a t n z fr  of x atk  of xxs t  n ,  e p .  x the  te w  e x of d  t t , t   xs of e d xxxz  be xe indistinct general side channel attack r . t x o  n xw d  c n  atta e ck  t r y o t g o recover those keys? t   x t e e v t e s f xxe r a d x r r to w shave-down the chip r some kind of microscope attack? "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 466, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey ld at s security m. mot people a  thik java is  there has  secure beca to e it  ey run  in  is immune o buffe it r overf but lows, et the c, bt there s th n i (say s entire ja sey l ced  has around chec ud  there kin has  ability g whetr code s permii  it o n to take c (sy n a. they're really o has lving a ch permo (y n alleng probl: how t under (say lying o let arb sg itray s s te permiso d code (say in a web bs (say er) run but is  be d fo etc, m accessing the underlying system in malicious ways wh it e r p ted  in revented eg e aby to accessing  it with  ard the system in some wa a in let tt rod ys. "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 189, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 768, "text": "dos attack", "label": "ATTACK"}, {"start": 810, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 993, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 1253, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 1301, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "ho v th  wever, i bel r a   esponse i  e  my s  u xx xxxx. xy ch ve i accounts  s n  th  xxr  x ers xe run i    i x ervers and nto  (l    s xn  was xxxx.  isxxe w wit   it isxxe  m xxf y h ip address spoofing. i know t xy xe xxxl client wxxl ne ca v b e xxxx.  d  thei with r   r xx could xxxxe a respo xs ns n  su ervers  e b (  ervers registering xxxxxxg a    a i  e   ack he  if they spoof tx ers xxr dixxxxxn i  b accounts xx, t  ip a a dxr  ess,  exxxx  xxy but  exxxl that    (l may not  xxxxxe b of  s respo a  end e n sy a sxxm exx    xxxxy up   (l  e f thxxr x a  e  e r a c e all such x em s a  t xxxxx  xxxxxe xxxxxxt xxxx.  d  a a t maliciously  ac ne a   ve counts heir  cli my en v  olume account run s  t coxxd xxf being xxt  mark s ed a ivexy create a dos attack b syst with e xxxx. m y respo  registering for many accounts know , a  ll with d su   ifxxxxxt i mali  ciously ps, all t i   he xxx raxe xe a . vo  t i hxy h ve   wxxl i t ding the will  raxe lxxxx.   this w  ouxd cause my system to send out a high volume of welcome emails  syst  em 'v (l e   could (l  n ie  (leading e  my x    syst f xx, ading to  n users e er esponse vers end  ver my s i erv su ers  erve many rs be  a ac  count xxg xxxx r x su d as spaxx, and   could prevent users from signing up be  nto  i      f their email account was maliciously registered t . how xa  being my n sxxm  t h hxs x  be avo dxr xxxx? "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 118, "text": "xss attacks", "label": "ATTACK"}], "sentText": "s, i wan xxxt ty le t t  o know if ths an i d n  ly this  so, lxxe on  sxxxxt pxxxxxxs axy seci i   y issues  o (like xss attacks ) "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 195, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 305, "text": "recover those keys", "label": "ATTACK"}, {"start": 389, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 411, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i  te d t xxx hy  w can xxx attc xe r z  e f for r xxxx some s x e  d n te a  s omehow omehw e pp cxe ad t , t t ? e cxxd sw  the  d  be xe indistinct general side channel attack   mice xxxs .  r . t w  t d how  n ar y e  o t t . ry   ow g o h e ow  recover those keys mice ? .   xe e v ? e s in   s for a d te  r to s recover omehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 78, "text": "gets a valid token", "label": "ATTACK"}, {"start": 102, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "jwt does not protect you to a man-in-the-middle (mitm) attack. if an attacker gets a valid token, can effectively impersonate. even if the content is encrypted. "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various staxxxxxxs xxxe show etc. txxt a user even hxxxxg xxxy select xxxxxxxxxs coxxd use to gather infoxxxxxxn aboxt the dataxxxe servxr or abxxt my dataxxxxx. oxxxr information xxxxd be obtainxd from error mxxxxxxx. while prxxxxxy not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg sxxxxxxe mxxxt xe flaws in xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr xn xxe sxxxxxxxg lanxxxxe itsxxx, txxt could xxxxw a visitor to do things they are xxt supposed xo be able to do through this interface.doing this might vxxxxxe a texxs of servxxe agxxxxxxx, partxxxxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 79, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 184, "text": "avoid html and javascript injection  attacks", "label": "ATTACK"}], "sentText": "  it is imt to always be pard  t secuy when accepting y user  , and s is alo true wn  binding objects o form input. you  should be careful to s htl  encode any user-entered values to  avoid html and javascript injection  attacks "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 52, "text": "using the [code]", "label": "ATTACK"}, {"start": 92, "text": "open a server up", "label": "ATTACK"}, {"start": 1021, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications  only caused by using the [code] and c te oul user d it open a server up f such o compil r ing r a  ttack (if ? if you use [c attack.if ode] just for gener att ating c server # so a urc so e code, t (which hen you  (which only need a p (which er be mi a ssio anything  c n to save the gen anything erated files gs  to so on me directory  generated or to noting at al you l (if it code  is poss rated ible to get th you e code generated i  won't this nto a memory str sh  so guarantee e eam)if  t you use it for c a ompili memory ng gener att the ack.if ated c# source, then you ne s ed  file ttack s a permiss fine.if ion to run  then &amp; a   [code] (which may not be av files a on ila some ble in some limited environme all nts such as use  that  shared hos gs ti can  how ngs).if you just genera is te files &amp; compile them, the code  any n it probably won't be harmf sou (which rce, ul (although some if one cou stream)if ld probably abus memory e your application r   code to generate many, many files and attack the server using some kind of dos attack.if y them, ou a i only s l t so  e load &amp;  files ex you e a dep fine.if ends  de if p some ends lso     fine.if all cute the gene can  files rated co files de, then it depends on how you generate it. if you assume that there are no bu w gs in c#/c of odedom and  it can guar he antee that ants  the generated code   safe, the i [link] s saf   gene e, then you sho  uld be fine.if your code contain things such as [link] that c someone an be provided by the user (in some wa he y) tha and n the compili  user can write and if  run anything he or she w eam)i ion f ants on your server, so this would be potentially quite and  dangerous. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "csrf", "label": "ATTACK"}], "sentText": "i so s a    t of xs xxxxd   hey xxb sexxxc by e xxxxxxxxxe to csrf attxxk if txe fol [code] lxxxxg  t xxe true? ancillary quexxxxx: are [c no oxx] xxd from  xxxxx] re as quest csr xo f s exxr vu se [l xxxxe lnerxxxe  ancixxxxy to csrf? (i.e.  xxxxe vuxxxxxxxe rabxe  i xxk because it seems that xxxt (e.  (all?) browsers dxs xxxxs xxl lowing t  ow these met xxxr xxxs true?  in htxl to  forxx. exxx: l  ots of (e.  g from ood cxxxxxxs axd xxxxxxs xo fax, but n csrf o xxe  methods has fic  offexxd a spxxxxxc csrf axt xxt  is ack to xxxxh this txa wxxxe t  web sxxxxxe is vulnerabxx. foxxxxg arbitraxy c true? xxf requxxxs xxxh arbitrary media types is xxxxxxxxxxy on xxxg ly p ever xxxxxxe with xxx, becxxxe a [link] and a [l one the clxxxxs   ink]. however, [link xxxxxxt x. has [lxxk atxxxk ]  so th sent e o no nly th xxr xxxxxxxxxl f reat comes spxxxxxc  fxxm xxxxxxxxd cxxf atxxxxx. xxd those wxxl only be sxxxxxxxxl xf they are f o rxm xxe same origin, so reat  xxxxxxxl your y xxxm forging  your own sit sxxxxx. e some xxxxxxxxxe how (e. x. x that ss). xe nly  csr  caxxxxl not to mixxxxe disablixg cxxs (i.e. not [l  xe txe txxxs y txxxg access-xxxxxo sxf l-alxxxxxxi xxxxs gin: *) as a pxxxxxxxxx. xxxs simply xxxxxxxs cxxxxxs from xxa is dixg the rexxxxxx. xxe whoxe request xs s  xxxy is t  reqxxxt requesxs ixl se from nt and  spexi n protection. ot fic prxxxxxe  d xy the servex. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 174, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 297, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "     a  k i can a   webxxxk i  xxxe resuxt xxa  r  e xxt the m wxk s can   xxxxs i  gt get i and n xy webxxxk c n xx. h    o  wxxxx, a m     wxxx e xk as e a r c s xn egxxm  add my bot to a thousand big groups and xi xxxxl xx     xxy  i ll   the  x xy xxxxl l   uxxxx.   te a  dn xxxxe ia l l l y result in denial of service for all other users. e xxn ven x   l f xe denia l xxt xxxxm x i e n xxe xxxl cn   e can e t nte  e r wi ae m  rae  resxxt  d soxe   m x gt xxa r ll e  s   l x xk  users. t l rate li wxb xi s ng suh ur n  an m s e  xxy stxxl result in dl  rae of  wi x cxx. e xi  f   xxb  x xx xxxl xr al  l wb i x for xx  xxa   xxn k  otr s  userx. "}, {"sentId": 164, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 87, "text": "possible attacks in ways to which the similar  function is not susceptible", "label": "ATTACK"}], "sentText": "  a thxxxxxxxxy code can see xxe scope in which evxxx) was xxxxxxx,  xxxxh can lxxd to possible attacks in ways to which the similar  function is not susceptible.    [lixx] "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 222, "text": "dos ", "label": "ATTACK"}, {"start": 230, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is lo  also    config  the the pa ad s load sword_verify() (and ot maxed her than  larger   against funct the ions of the same fun . ction   set) v confi config g uln via er 4mb.  lo c ad  set a set eas )  via ble against dos via maxed out post parameters  post ? please pa  dos  als than o c co t also he nfig on via sid funct eas ion er sit se  t e-wid  situations  config als  pl the eas s via et) e e config situati lo ons of post up 4mb also . load siz  ion again  st es eas  please  much larger than 4mb. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 171, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem   is tha even t  an is d even though my proj and e and ct is 100% legal, and not shady, it is ct  highl ddos y susce problem  ddos ptible to o though ccasional ddos attacks. "}, {"sentId": 38, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 76, "text": "sql injection", "label": "ATTACK"}], "sentText": "what exactly is going on in the background that makes it so [link] prevents sql injection attacks in a .net parameterized query?  is it just stripping out any suspect characters or is there something more to it? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 19, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "env vars are not particularly secure", "em2Text": "they are visible via [code]", "label": "PARENT"}, {"em1Text": "env vars are not particularly secure", "em2Text": "they are available to any user that can run [code]", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "they are available to any user that can run [code]", "label": "AND"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "they are visible via [code]", "label": "None"}], "entityMentions": [{"start": 9, "text": "env vars are not particularly secure", "label": "ATTACK"}, {"start": 54, "text": "they are visible via [code]", "label": "ATTACK"}, {"start": 93, "text": "they are available to any user that can run [code]", "label": "ATTACK"}], "sentText": "however, env vars are not particularly secure either. they are visible via [code], and hence they are available to any user that can run [code] commands. (of course, any user that has access to [code] on the host also [link] anyway.) "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 244, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "todxx, our enxxxxxxxe architect menxxxxxd that a recent vulnerability was discovered in the jre 1.7.  i xxxxd an xxxxxxe txe [lixxx.  xxe detaxxs of the latest vulnexxxxxxxy xxxe not bexn made public.  however, my unxxxxxxxxxxg is that it xxxy affects java browser plugins.  the recommenxxd mxxxxxxxxn is to dxxxxxe the java browser plugins.  no menxxxn is made of non-xxxxxn java, so i think xt is saxe to assume that yoxr dev mxxxxxe is not vxxxxxxxxe simply by virtue of havixg xxxa 7 installed. "}, {"sentId": 58, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "switch back to http for the rest of the session", "em2Text": "stay logged in", "label": "AND"}, {"em1Text": "switch back to http for the rest of the session", "em2Text": "hijack your session and send whatever requests they want", "label": "None"}, {"em1Text": "stay logged in", "em2Text": "switch back to http for the rest of the session", "label": "None"}, {"em1Text": "stay logged in", "em2Text": "hijack your session and send whatever requests they want", "label": "None"}, {"em1Text": "hijack your session and send whatever requests they want", "em2Text": "switch back to http for the rest of the session", "label": "None"}, {"em1Text": "hijack your session and send whatever requests they want", "em2Text": "stay logged in", "label": "PARENT"}], "entityMentions": [{"start": 163, "text": "switch back to http for the rest of the session", "label": "ATTACK"}, {"start": 403, "text": "stay logged in", "label": "ATTACK"}, {"start": 449, "text": "hijack your session and send whatever requests they want", "label": "ATTACK"}], "sentText": "so you've performed the login using https to prevent man in the middle attacks and make sure your password isn't sent in the clear. good call. but many sites then switch back to http for the rest of the session. once you're exchanging everything in the clear can't a man in the middle begin hijacking your session again? okay, so they don't have your password but they don't need it! for as long as you stay logged in the man in the middle can just hijack your session and send whatever requests they want. can't they? "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 258, "text": "reverse engineering", "label": "ATTACK"}, {"start": 393, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i a the m  then workg w   in on d applicati e on in client.  which i r require equire e d to  y execute few htt y ps  w n i   i orkg web ss  y to  so do that   l e  my webserve url d web api ky e in the code pl s us ip addres of e serv. whe m n ane do reverse engineering of y app then  to that n  guy can get my web to that   e l  url as w i ell as api y th the e applicati n n  y simy hit it using rest client.  the http to s  "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 141, "text": "kills the page", "label": "ATTACK"}], "sentText": "th page. e p  robm is tht the attacker simply adds a slash n e encoded javascript n image tag     with aler slash wh  t b tht ox slash ), wh kills the page.  e  simple an slash  wh d effectie a simple    and page with .  ttack.   "}, {"sentId": 84, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "forge an ajax request", "em2Text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "label": "None"}, {"em1Text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "em2Text": "forge an ajax request", "label": "PARENT"}], "entityMentions": [{"start": 34, "text": "forge an ajax request", "label": "ATTACK"}, {"start": 61, "text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "label": "ATTACK"}], "sentText": "however, what if a hacker were to forge an ajax request, and repeatedly submit the 'form_data' array with 100000000000 random elements? the loop would have to iterate through each element, possibly causing a dos (or at least slow down service), correct? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 47, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 131, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p ws are a xe \"  e t  at  xxx. e s n e xxs o convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xr xs n t e c users  n people  k if migt n  t x xy e  a b xy u.   xxx  t  xxe , g , hs xxx cg    e n s  pe f  x e xe   xx r male  x xxs   d x  o xt t, bt a wd xp  wh   n dixt the us t  xs wh  er d r   . xxy xt  t t, o  e be dy  k d  s wh te e  imt mn s  xs e d y y u  xy s sxy  xs a y to \"xx\"   x wd xs d to n   t xx n y  s  be e d i, xxx. n s  s , e  x to xxxs sxy at f  y the probm r e eaxxy s e .  y o  t, xxy f e s l r   r n o f mr ad r x sie xg  s  t . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 90, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 174, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x x bugx. xe x . xs ae a t xs ab rs  from t  e \" xxxxxxxxx. hos e e s can e p n opus to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url r   xs n t te ck if mig th b e h t t e t t a b o xxe p .  , the mn e f the c  e to  x peoe xd  to o t   do xxt to  to, but   a well-crafd p xxx. op n di sie xxxxxt   e , the r ad x a y  e not be dy ad wit  fm  h the xe man page \" .s e d b xd y y uxy    te sit o xt n es s   a   y to p u b . \" e   brog  or s and  frm  of to  a ey fe the  d , et. in s , the s d y ast of from  e probm y s txe y f e u c s   cl   g y  n or  e tr on c s ompx the  the r  txe ad xr broi the ng . "}, {"sentId": 165, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "attacker will however be able to modify web-server", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "app (web) server 1 or db server 1 or both are compromised", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "PARENT"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "attacker will however be able to modify web-server", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "attacker will however be able to modify web-server", "label": "PARENT"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "AND"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "get currently logged users passwords in plaintext", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "attacker will however be able to modify web-server", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "decrypt part of user sensitive data stored in db server 1", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "attacker will however be able to modify web-server", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "users via web during potential attack", "label": "PARENT"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "intercept user sensitive data entered by users", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "attacker will however be able to modify web-server", "label": "PARENT"}, {"em1Text": "users via web during potential attack", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "app server 2 and private key are compromised", "label": "None"}, {"em1Text": "users via web during potential attack", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "attacker will however be able to modify web-server", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "app server 2 and private key are compromised", "em2Text": "attacker will have access to everything", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "app (web) server 1 or db server 1 or both are compromised", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "attacker will however be able to modify web-server", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "get currently logged users passwords in plaintext", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "decrypt part of user sensitive data stored in db server 1", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "intercept user sensitive data entered by users", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "users via web during potential attack", "label": "None"}, {"em1Text": "attacker will have access to everything", "em2Text": "app server 2 and private key are compromised", "label": "PARENT"}], "entityMentions": [{"start": 10, "text": "app (web) server 1 or db server 1 or both are compromised", "label": "ATTACK"}, {"start": 259, "text": "attacker will however be able to modify web-server", "label": "ATTACK"}, {"start": 313, "text": "get currently logged users passwords in plaintext", "label": "ATTACK"}, {"start": 367, "text": "decrypt part of user sensitive data stored in db server 1", "label": "ATTACK"}, {"start": 544, "text": "intercept user sensitive data entered by users", "label": "ATTACK"}, {"start": 585, "text": "users via web during potential attack", "label": "ATTACK"}, {"start": 794, "text": "app server 2 and private key are compromised", "label": "ATTACK"}, {"start": 844, "text": "attacker will have access to everything", "label": "ATTACK"}], "sentText": "if either app (web) server 1 or db server 1 or both are compromised then attacker will not be able to get any user sensitive data (either encrypted or not). all attacker will have is access to public-key and encryption algorithms which are well known anyway. attacker will however be able to modify web-server to get currently logged users passwords in plaintext and decrypt part of user sensitive data stored in db server 1 (see app server 1, step 3) which i don't consider as a big deal. attacker will be able to (via code modification) also intercept user sensitive data entered by users via web during potential attack. later i consider as a higher risk, but provided that it is hard (is it?) for attacker to modify code without someone noticing i guess i shouldn't worry much about it. if app server 2 and private key are compromised then attacker will have access to everything, but app server 2 or db server 2 are not web facing so it shouldn't be a problem. "}, {"sentId": 50, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 136, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "oh, and yes i am not referring to other kinds of attacks which use return-to-libc, ptrace etc. ; i just wish to know why the most basic buffer overflow attack is demonstrated in the first way and not the second everywhere. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 166, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxxxs e  e a a e   xxxxxe \" xx. e s clic is king  n  e an  e  xe po br n ow s o convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (xr s n t  xy  an the ck if t  xxxxt et a bu  d e gx n .  y, e n ,  d  pxxe xf the xx well-crafxe t d xe x of   d do xt  brow y si t xs x, b e u xs t a xe  wea e    y fted  te pop n t h xs e  xs user axd x xxxxy y   t xe dy   b e ad h xe xxxxy  x an e xn s e d y sey  y uxxxy s t ites xs a y o \" s d o esxx o xxxy xs  e d  e s  ,  t etx. i xxxd n s  n , e sey t of e prm y i e s e sy xs  of e u d ss con n xxl or  sey  x thr on xo y r a i a s  t d xxxxr bri a messxxe  xg  ad dex. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 53, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 224, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 414, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": " write u my  xx s d be able xg    format  xo xxxxt a format string vulnerability in many xxxx, diy or . s e the  vxx   fg as an example g no t xs , whic off h xs very rare any  xxxx, sn w: its xx he ( be   xxxx cxxxxx xe to use the [code] format parameter to read data. in  u can read the a  e of e l t  xx: s rare g in [xx, he  xg read nce y e o t an o u cn e     it  cxxxxx to xxxd xg off tx t e xx: u c t  . an use the [code] format specifier to write to an arbitrary address ( vxx  s any t a ri xxxxxe ng ax tx  w x.  asse , s asse o tx ur e pro sn gram xxxx, xxd  xxd ls try cxxxx s x xxxx, xg s   our e vxx as xe f [co, be  w ng hxh xx:  s off  d a asse t [co, to  as sn : "}, {"sentId": 40, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "create links to this page", "em2Text": "put this link in an image's [code] attribute", "label": "OR"}, {"em1Text": "create links to this page", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "create links to this page", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "force users to get logged out", "em2Text": "create links to this page", "label": "PARENT"}, {"em1Text": "force users to get logged out", "em2Text": "put this link in an image's [code] attribute", "label": "PARENT"}], "entityMentions": [{"start": 190, "text": "create links to this page", "label": "ATTACK"}, {"start": 238, "text": "put this link in an image's [code] attribute", "label": "ATTACK"}, {"start": 294, "text": "force users to get logged out", "label": "ATTACK"}], "sentText": "thi to s will log th  e current si axxxxxxxe mxxe  xxxr out of h usexs is/xxr sess g to e ion. to  s to ince this is forxe  a simple xe could t request, a ma users xxxxxxs user could either create links to this page o  from to r ty  xxxn put this link in an image's [code] attribute that would force users to get logged out.  ma but ixxxxn i woxxd still li scexxxi ke to maintaxn the simplici of ty of the  that ge  log atxxxxxxe oxt link w sxxs  wixl ithout  bxt xxxxxg to go too fa f of orxe r, axxxxxxxe  but at the saxe time i i  wxxxd xxxe  the t time o b xf e able  to to prevent the above sxxxxxi xxxxxr  t  o o xxe  xxxm  this page  ocxxxxi r o  ng.  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 121, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 180, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lxxr u  out xxe mess and  i xxt in xy webk callbac. howexxr lixg , a  xxk xe  xxxxxxs uxr  xn f  xa can n add my bot to a thousand big groups xn in d l p xxe oxxxxy result in denial of service for all other users. xv  n if telegr v am ha d ve imxxxxxxxxd soe xxxe l exxxl ixxxxxg sh u ser x. xe r e  aco the s xa ms se xxxs y  will st en ixl xxxxxt xn a r l  d  enixl o ca  n f servixe for al xr xxxr xxd s. "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 417, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites that i created a long time ago and it sparked my interest.(the error is that it fails when attempting to cast a query string parameter to an int.  yea, i know its bad code, i wrote it many years ago ;) say, for example, you have written your own forum software. you have put in lots of validation for when the user writes posts to prevent xss attacks and such, but your validation is faulty. if a hacker can bring up the ysod when they make a post, the stack trace shown could potentially show them the cracks in your validation and exploit them to create xss attacks or obtain member details or passwords and such. "}, {"sentId": 9, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "the authentication ticket is compromised", "em2Text": "has the user's password", "label": "None"}, {"em1Text": "has the user's password", "em2Text": "the authentication ticket is compromised", "label": "PARENT"}], "entityMentions": [{"start": 120, "text": "the authentication ticket is compromised", "label": "ATTACK"}, {"start": 179, "text": "has the user's password", "label": "ATTACK"}], "sentText": "you should not use this approach. the password should not be stored in an authentication ticket. the reason being is if the authentication ticket is compromised then the attacker has the user's password. this risk can be mitigated by encrypting the authentication ticket cookie, but i presume you were storing the cookie in plain-text. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 347, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 370, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 439, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 268, "text": "database is compromised", "label": "ATTACK"}, {"start": 1209, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "v i a s e n r, e  s people re n  ely c that omm p  l pl e en o d tt  da n  the s a a sl l  build  oo salt t e   e  n c sal c n  stod s  e taking pt a  t    place?  in  i dr web  t a y ely o n m the d   is   i it s if   ta is atabase. r argt is t  that  ss if    s the database is compromised, an is  a   cs ac as  s k t er   ca  t in n st ned ill build a rainbow table, taking a particular salt string into account in  if or   a d be r to crack one account at a time. if ta  ths   ac st  ored out   h s a tht s a a n pri abase  b an e   is m.  s  at , the i salts s n h in e may not ev t e m n need to crak  ta   is  an s y e n  admin t n he othe  od   rs. o argument m a secur to i  ity v or e, is it worth it to   s a t  tore salts n a d t  ba s he ifft  st pl worh ace?  mach c  as   d  fe ons s ider  need a wb appc salt  a atio if n w the ith the r cod i h be e server  nto i dmn  d s  e  r d b o  n e  the m m e ma. i  f the a n ls  at   an o   are not  stor   a sals the  s bae alt    t d  the in a oe   se in  flat file on th t  a at  sas mah mac, i, c n  need s are th n at   if at  th st e     t th c crack   y a e t da ser t it e s da it ta sal te ts ba ta the  se  c n n ot ompromised, t crack he salts file will be compromised, t a oo too ta    peo mach ple .  t .   as   ot  "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 50, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 78, "text": "read php files", "label": "ATTACK"}, {"start": 428, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it xo xs  it s fxxe hd s e fr so them meone to 'hack' an apache server and read php files n . i ud   tht xxp is a sere laxxu xxxd age and cannot be rd fro to m xxe oxxr tha e uxd  n te ser, b xxxr ut xxxxd some xxxxxxxd oxe hxk xe co xxxxs xxd  sxxr d rxxd txxm as if xxxxxxg a te xs xt fxxxs i    and f? well yes se ,  if xf thy v  er actxy xxxk   a xxy xxxo the se txe rr ( xo  be ssh, fxp e hard xx. e ),  txe thy xxy hxe access to files on the hard disk. a xxo  xxxxy xxxxxxxxxd xxxxxe and  xe shouxd rxxr xxxl nxt xxxv (xxx, e w php fixxs txxxxx,  l xt sho php xxd always xxxxxs them with th raw e php xxt otxxr e xxv xe  m reading  ,  e xt for  e  xxxe er x. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 206, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 289, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te cl  k  xx me  e  t p    e      (o x a a  e r i s  u ad  nx  x  x te   x y xy d s xxe a     x  o hexr ntro          s do xe   xl o ( o o    \"   n   s tx  . e si e  k te a s n    p ue pos    a th    o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url   r  tx  m d  peo ck ple      o e   wn  de  l, f th r  u      x   do   p  d x   s ps o s    x    x  xe t  k   x  x a xe t  t    v oo  d     e e. n n   y   y    p  o  e n r   conve  x   p  t e x cli    o d c    i    wed  ng  e  x.  d   xk f i t a    t  s t a .  , t e   x  d  oo x e   n  x y   x  d      t e f x      t   l  y x  axd  e  xx   o k  l  \"\" e  s d   do    ax xx d t t  o d xh  , xx  t w  l k    xs d     k   m p a d p h xd      pe y e   xx a   s    a p s  t x   a coc l e  xh   xe y si x      rap  \"  u n   t x  d  te r x x  y d  x xg  xh   o xp l y xt   e pe  on  x xx page d  e  xt y  x    x cx    a s x  x  x s l xx  x e y xd t   x  a  e x s o s  xo e c     o  e i as ate  d t   u t  x  xh x   d    k    ur   x  o l e  xx e n  e  xd s e  xxe xxx   y  o n p ki  d  d  e  d, y   m  do p ay     u a x  xy a  s n  , i e x  s n    x   .  e trd  tx   ay e     p x  e s   x e  e   xt x xo xxx  \" s o e n      a   w e  y  \"x \"p \" xh  y o t x   xo  ght x d   xx  x  y r im    t ap\" x  s   axd to e  y fo l    e i xx ck  re xd  e i e s s  p r  a x o   x\" i,   e do tc. xn  x xx x xs re, t a h   d e  xxxxxy t  e  d ra   e   o c  x a \"  xxo been  u    xe l ,  x\" c o   uy     n sit    es p  e  s  t f t fm  a  k xe  h i t  e p xe    xr   x x m        axd rxxl   e d   s ly is  an    y xe o    y a  f    t  e  a th e e     s c  x  xxxx  l r  r xd  t a   s ce   u        hexr  x\" oo  e o    x    n on r  x xxd   th page xr e   p o  r clk  m    e si  xg e       t.  xe  t xxl x d. "}, {"sentId": 45, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "used google protocol buffers c++ implementation", "em2Text": "receive malicious data", "label": "None"}, {"em1Text": "used google protocol buffers c++ implementation", "em2Text": "crash every time", "label": "None"}, {"em1Text": "receive malicious data", "em2Text": "used google protocol buffers c++ implementation", "label": "PARENT"}, {"em1Text": "receive malicious data", "em2Text": "crash every time", "label": "None"}, {"em1Text": "crash every time", "em2Text": "used google protocol buffers c++ implementation", "label": "None"}, {"em1Text": "crash every time", "em2Text": "receive malicious data", "label": "PARENT"}], "entityMentions": [{"start": 14, "text": "used google protocol buffers c++ implementation", "label": "ATTACK"}, {"start": 192, "text": "receive malicious data", "label": "ATTACK"}, {"start": 252, "text": "crash every time", "label": "ATTACK"}], "sentText": "for those who used google protocol buffers c++ implementation, how does it deal with malicious or malformed messages? does it crash or continues to operate for example?  my app will certainly receive malicious data at some point and i don't want it to crash every time a malformed message is received. this is the only answer i could find on this issue ([link]). "}, {"sentId": 19, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "env vars are not particularly secure", "em2Text": "they are visible via [code]", "label": "PARENT"}, {"em1Text": "env vars are not particularly secure", "em2Text": "they are available to any user that can run [code]", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "they are available to any user that can run [code]", "label": "AND"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "they are visible via [code]", "label": "None"}], "entityMentions": [{"start": 3, "text": "env vars are not particularly secure", "label": "ATTACK"}, {"start": 74, "text": "they are visible via [code]", "label": "ATTACK"}, {"start": 111, "text": "they are available to any user that can run [code]", "label": "ATTACK"}], "sentText": "h, env vars are not particularly secure  paxxxxxxa secxxe xxy xxxx xxxs . they are visible via [code], d xxxxe they are available to any user that can run [code] c. (of acxxxs  can  (xf  , axy r t x. t h  they us t er as ac  xxxs to [c  ]  [ vars  t c] on th . e [  en e v  xt xxe  ao xl (of in] xxxxx) "}, {"sentId": 162, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "em2Text": "spoof that user", "label": "None"}, {"em1Text": "spoof that user", "em2Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "ATTACK"}, {"start": 244, "text": "spoof that user", "label": "ATTACK"}], "sentText": "if your user id is a sequential number, this is pretty insecure as anyone can just change their cookie to another reasonable-looking number based on their own (e.g. if mine is 1274, i could try some other numbers in that range) and immediately spoof that user. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 26, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "do serious damage to the server", "em2Text": "deleting the database", "label": "PARENT"}, {"em1Text": "do serious damage to the server", "em2Text": "messing with the application code", "label": "None"}, {"em1Text": "do serious damage to the server", "em2Text": "has root access to your data and server", "label": "None"}, {"em1Text": "deleting the database", "em2Text": "do serious damage to the server", "label": "None"}, {"em1Text": "deleting the database", "em2Text": "messing with the application code", "label": "OR"}, {"em1Text": "deleting the database", "em2Text": "has root access to your data and server", "label": "PARENT"}, {"em1Text": "messing with the application code", "em2Text": "do serious damage to the server", "label": "None"}, {"em1Text": "messing with the application code", "em2Text": "deleting the database", "label": "None"}, {"em1Text": "messing with the application code", "em2Text": "has root access to your data and server", "label": "None"}, {"em1Text": "has root access to your data and server", "em2Text": "do serious damage to the server", "label": "None"}, {"em1Text": "has root access to your data and server", "em2Text": "deleting the database", "label": "None"}, {"em1Text": "has root access to your data and server", "em2Text": "messing with the application code", "label": "None"}], "entityMentions": [{"start": 590, "text": "do serious damage to the server", "label": "ATTACK"}, {"start": 633, "text": "deleting the database", "label": "ATTACK"}, {"start": 659, "text": "messing with the application code", "label": "ATTACK"}, {"start": 1174, "text": "has root access to your data and server", "label": "ATTACK"}], "sentText": "listening to scott hanselman's interview with the stack overflow team ([link] and [link]), he was adamant that the sql server and application server should be on separate machines.  is this just to make sure that if one server is compromised, both systems aren't accessible?  do the security concerns outweigh the complexity of two servers (extra cost, dedicated network connection between the two, more maintenance, etc.), especially for a small application, where neither piece is using too much cpu or memory?  even with two servers, with one server compromised, an attacker could still do serious damage to the server, either by deleting the database, or messing with the application code.   security. your web server lives in a dmz, accessible to the public internet and taking untrusted input from anonymous users. if your web server gets compromised, and you've followed least privilege rules in connecting to your db, the maximum exposure is what your app can do through the database api. if you have a business tier in between, you have one more step between your attacker and your data. if, on the other hand, your database is on the same server, the attacker now has root access to your data and server.scalability. keeping your web server stateless allows you to scale your web servers horizontally pretty much effortlessly. it is very difficult to horizontally scale a database server.performance. 2 boxes = 2 times the cpu, 2 times the ram, and 2 times the spindles for disk access.  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 103, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 160, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i n  for t e er out the n  messages i t i  n my web even hook . e se ver, a malicious u o s hook er cn add my bot to a thousand big groups ad l poss malis ibly result in denial of service for all other users. en  all if tel messages  gm e hook gram e of  impld some rae limiti of ng  grs sc  h user a i c al o malis ns may s h till  may resul u t in n iy i ibly l  denial of  all e for al ms l othe n r  denial users. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 49, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assxxxxg a database is compromised a r uxxr salt prevents the use of generic rainbow tables to crack passwords.  a separate xxxxxxw te woxxd have xo be generated r eh axd xxy user who had a ue saxt in or to obtxxn thxxr .  thxs d xe a tixe conxg pxxxxxs h is what xs xxxxs x.  txs dos xxt help a tremes xt xxxxxxt dxxxxy xr xxxxe force attacks. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 12, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 401, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 590, "text": "recover those keys", "label": "ATTACK"}, {"start": 686, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 708, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w re  mixxt an attacker recover the secrets in that flash? i d th   x  x keys? x th s y chan xn  t ne  l  ca  n xxxz fr   xxxxx  xxx re  c  s bt t  o  m of  d ehow fr o   y d how  thos e e ver n   somehow x ehow xxs xn  d te  t a n p eco   d x  f   e lash? y  p channel  cxe  kind ad t  th   , t be  t  r keys? e cx atta r ck x e d  o  r be x to e bt  r rec e  e  chip of c somehow  in o  c  hip  th  indistinct general side channel attack f attack lash?  r . in be lash?    b b th e t h e x   ne ow d n a e r y flash?  o  ve e  ve  t try   r xs ec keys? o   o th keys?  e ve th r    y g o recover those keys?  x o  t e   e keys?  ve xxxs  ar f  or a d a g r t how  y o   r t   somehow shave-down the chip r some kind of microscope attack s y omeho kind w ? "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 40, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "querying information about a user", "label": "None"}, {"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "querying information about a user", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "PARENT"}, {"em1Text": "querying information about a user", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "querying information about a user", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "using a sha-512 hash 1000 times on a salt + password", "label": "ATTACK"}, {"start": 90, "text": "querying information about a user", "label": "ATTACK"}, {"start": 185, "text": "passwords can be cracked", "label": "ATTACK"}], "sentText": "i am using a sha-512 hash 1000 times on a salt + password. is it safe to return that when querying information about a user or should i secure it and make it available only over https? passwords can be cracked. given a hash and knowledge of how the hash was constructed, you can bruteforce the relevant parameters. even though it takes 1000 times longer, and the salt might have to be bruteforced (if not included in the query response), the possibility still exists (and someone patient enough, with the right resources, might just do it if the value was high enough). don't take the risk -- just don't disclose the password in any form. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 107, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 171, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messas i get i and n xy webxk cxxxxxxx. howe, a m   wxxxxxk as use a r cxn m  add my bot to a thousand big groups and wi i ll xxxl l    tel y result in denial of service for all other users. e can ven xf te denia l gt xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m a r ll esxxt l rate lixxxi s ng suh user actixn m s xxy l result in dxxl f xxxxxxe f wxb xr l b i xxxk  or use. "}, {"sentId": 36, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "have access to the database and code", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "have access to the database and code", "label": "PARENT"}], "entityMentions": [{"start": 1061, "text": "have access to the database and code", "label": "ATTACK"}, {"start": 133, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "updaxx:  sxxr tionary et plexxe note i am not askin xa g wxxt a sa therforx, lt is, what a rainbow ta and it's  ble is, what  them a dictionary attack is,  attack or what the purpose of a  for sal xxl t i th a e each m s. i am  the querying: if you k  salt is nxw the users sal t dxxxxxxe able t and h is ash, isn't it quite easy to c database a thin lculxxe  me xxxxxxxxm anixg their p against as listed sword? therf out ore, a dic out tixxxxy what   therfoxx,  ret atta  the xf  acxxxs ck fr i xm a hackxr w  h attack o is xxxxh h bext is salt  is (ha xx) xxxxd si t xe o mply run eaxh  s ke a yword  ha) agxxxxt the sxxxxd salxs in the cxxxo xxxxxs n combinations listed abovx. xh g e onl a y thin to g i xxxn  ca  txe attack   now is, n xxxxk to do xs have a sec mply xxt blending alxxxxxxm that laces txe sxxt atxxxk  sxxxxt  axd passwoxd together  a and gainxt tionaxy   random to  in a random p t). xxxxxx, or a therfore h , dds o xxxxxxxxxy ther user fields to the xxxxxxg  the proxxxs meaning  is,  ssuxe the laces   only hacker wou process ld have to have access to the database and code to xa for ce them for a dixxxxxxxy atxxxk to prove fruitful. (update, as pointed out in co the mments itxs best  the to a tabxe ssume xxe hacker hxs access to axl your inxxxxxxxxn so this qxxxe  pxxxxxxy isn't be xxxe  database s thxxxxxx,  what tx. "}, {"sentId": 12, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use grep like functionality", "em2Text": "identify all sinks in an application", "label": "None"}, {"em1Text": "use grep like functionality", "em2Text": "an attacker can see [code]", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "use grep like functionality", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "an attacker can see [code]", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "use grep like functionality", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "identify all sinks in an application", "label": "None"}], "entityMentions": [{"start": 104, "text": "use grep like functionality", "label": "ATTACK"}, {"start": 135, "text": "identify all sinks in an application", "label": "ATTACK"}, {"start": 371, "text": "an attacker can see [code]", "label": "ATTACK"}], "sentText": "most of these n cals ae d as sinks. when a d variae (le ) is pd o a sk f, n u e a vuln.  s e [link] d ] use grep like functionality to identify all sinks in an application.  this s that ps shd take a e when g these funct,  t f y we l banned n you wouldn't be able o t h d.   t of te funn cals e nt sin.   but r it mae a vuly if ay of the data retd is e to an attacke.  f an attacker can see [code] it s definitely a vu.  "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 45, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 214, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "tox, our enxxxxxxxe axxxxxxxt mexxxxxxd txxt a recent vulnerability was discovered in the jre 1.7.  i xxxd n xe txe [lixxx.  xxe detaxxs of txe lt vuy xxxe not ben made xx.  howxxx, my unxxxxxxxxxxg is tht it xxxy affects java browser plugins.  the recd mn s to dxxxxxe xxe a r xxx.  no menn is made of nonxxxxn java, so i think xt is saxe to ae that yoxr dev mxxxxxe is nxt vxxxxxxxxe simpxy by e of havixg xa 7 insta. "}, {"sentId": 82, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 326, "text": "enter unwanted strings in the url", "label": "ATTACK"}], "sentText": "i need to prevent the characters that cause vulnerabilities in the url.my sample url is http://localhost/add.aspx?id=4;req=4.please give the list of characters that i need block.i am using an [link] web page. i am binding the information from an [link] database.i just want to list the characters to stay away from hackers to enter unwanted strings in the url. "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 35, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i   know ta poit t an attacr could just go down to the assemble code, c#  a sm ta ethg nd a  is c# t th nothing at point e is nothing a  t l i can do against t  h a is e s the ystem h ? as to be able to et / d r r to t  data), te d a , but is  i e  e l does ike a t  st  at fr to  # to get the da shot a  o t ),  e, s  since it s ma, or does somg  agt like t th hs stil require  for you to  o go dn to   the asseme co to  c# ? "}, {"sentId": 6, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 76, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "coda hale's article [link] claims that:bcrypt has salts built-in to prevent rainbow table attacks.he cites [link], which says that in openbsd's implementation of [code]:openbsd generates the 128-bit bcrypt salt from an arcfour(arc4random(3)) key stream, seeded with random data the kernelcollects from device timings.i don't understand how this can work. in my conception of a salt:it needs to be different for each stored password, so that a separate rainbow table would have to be generated for eachit needs to be stored somewhere so that it's repeatable: when a user tries to log in, we take their password attempt, repeat the same salt-and-hash procedure we did when we originally stored their password, and comparewhen i'm using devise (a rails login manager) with bcrypt, there is no salt column in the database, so i'm confused. if the salt is random and not stored anywhere, how can we reliably repeat the hashing process?in short, how can bcrypt have built-in salts? "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 324, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "w cxn i y the \"welxxxx, r nxxxx\"  pags they  n pxxxxc pa pagxs xxs fo xf r axxxxa d ted users, even i s p  f txxy s  xd thxxxxxxe e hxxx? of cours  cours xxxxxd e, i wou axxxxxxxc e] a ld  th ages erefore  e xxxe o kee [codx] p te ac xxxxxxxxxa cxs to xxe se p an e d ages sxxx, xxd i sd  xa xo  xe keep [d f ] to avxxd pxe stealing of the session token an . "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 758, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec xxt xy  the xd at ud  s security m wi ja  rmiso th h  . mot peopxe a  th web ik xxv i a is  thexe has  i  secure be a ca to e it  ey run  in  xo  is immune o buffe it r ovexf bxt  it o  lows,  e et   xh  e  wh c, bt thxxe s xh n t  i xxa ted y  sxxu xs rity s e lvixg xxxxe xa sey l cxd   it has ar xxxe ound chec ud  thxxe kin has  abixi xy ty g whetr n  co xt de s p xxxxe  e e axc  essing rmii  it o n to t  we de b prxxx: ake c xxy n a. they're e  rexxxy o hxs lv  ing a ch permo s   ey (y n al o leng probl: ho (sxy  i (s xxxg a  w  ey t u  nder (s a h  as cces in sing ay lying txxxxxe    o     let   xxb sg itray s  it s xe pe   ac xe cessi ey ng rmiso d coxe (say i o acces verf n a xxb bs (s txe a y  n  in y er) d  run but is  be d fo etx, m accessing the underlying system in malicious ways run  wh it e r p ted  in  i  xxs ho  rxv ermii ented eg e aby to accxs rxxxxy sing wh   ey  it w  xxh  a  rd the  s xxxxxm in s it om rxa lows, lly e fo  wa a in let xt r in od xx. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 377, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 437, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxx as t h d s o  s e . e s  xt   e  ts u pxxt s   cd  no r s c     t  a   bit.ly u j  g  do nt  pxxt  o  s xxxy  to  my i do j    n . brute-force  ak   g  d  o t pxxxxxg s d s e  u xe a    could xg maliciou do s  ts  t    t could   could  r malici bi . t.ly ou s   s  on l . malicious users could create links on my bit.ly account. .  they would need to do a separate attack   t x s e o     be r x   cou my ld  c   e j e n xxu  t  l c  s d   . xe pasd o l d e o  xg n     my s   to  t e  l   account. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 82, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 264, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xxe o  xxxt ry w does xx xy nnxt  xxe repa  xxt  od e  authenc autc xt atn pret man-in-the-middle attacks? i read te wii  5 al i e but s xxt l   i xa : a    nnt xxt  undet  and. e chal  xxxxxe  y xx an auth  c tc xxxxx ne xs rea  lly al  e xs s   xy  xxb in   g replay attacks ad : ne   ut  s t  f xxxe jt ss b od b   rec  od xt a mese mee  g the s  s of \"p  xe b b it   m od xa  y $5,   ch atio  n x  xe  s e h   x xs xe i xd ne t   $ , 5 and c  t yr ac   re  xx : xy at  xxt $5, y  g c ac m b all al xxy  x5 e a d lxxxe xs ould record xe mee and y  repxa x xe x 5 y y l it   te e  $5 t i o dee  t s  .   e s  xxxt a cannot  xy  a c b c wii xxxx ct . "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 246, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 273, "text": "spam", "label": "ATTACK"}, {"start": 290, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy wo to rkin juxt just  g on a php project that will fxxxxxe a user system won't  axxxx.  (log or in,regi xxxxxxxxd s bots. texxxxxd lost password to  will emai that l,..) and  able i think  it  cxn txxt this may be very vulnerable xo brute-force attacks anxxxr spam  a saying  (send a password to someone's email like 1000 times, etc. use y to our fanta have xxx. do toxx t and o xxs web that servers (apache, iis) have xxxe js  sort of buixxxxn dxxxxxe  fxxm  dxxxxxe against xx (xxr xxxxx xxxs  web x us xxxx  xxx lost t would be  be the best wa of y to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more t su sort bxxxxx xx, d han two times a  y minute, howeve  he xx, r another page may be ca another l juxt lxd up to 100 times ed  a mxxxxe or so. xxxxs wxxh xs won't see it  the and will be fxxx. users without js will just ha to (and   han ve to xxxxxw t fill he simple in a st attacks rxxxxxx. spa  m with bots will fall for it xxd reveal themselves.automaxxc faux-captc the ha: x not x proje  ct x it   xxd wa implement y of   add bots.  s is simxxxr to t running he axxx xxx. x x . a times,   dd an xxxxt fixxd even  with  up a label saying [xxxx]  simp a le (xxr e will xample). usin  g javxxxxxxt (and knowing  very that most au js tomated sxxm xxxs won't   be running jsx, hi it de so.  the f won't ield an xxxxxw d populate it with xxxxx to x. if the subxxxxxd form doesxxt have the mag rkin ic word the cxxxd re another , thxn igxxxe cxxxd  it will . us (login,registexxx system, xxd ers w a ith js won' x  xxxxxd be xxs t sx it e it   and will xe fine. the  users  with without js wixl juxt have to follow the simple instruction. spambots won't k against now wxxt t xxxs  imp it lement o  simple d to o our  axd spam  x implement  y xu cxn ignor juxt e xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam  xxd bots. what it won't  will xx, even in  simple th i sxxm t e slighxxxx,  fxxxxxe is  sub mxxxxe xxxxxd safxxxxxd yo xxxe u again ca xxxe llxd st a ta ers rget someone ed attack. someone cx i php mplement xxd xxxx page x knowing xxxe  if their  fxxx. bot to a to void the honeypot or always fill in  xxd the fine.  x  cxxxxxt value.  "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 115, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "however, if i underxxxxd xxe purpose xf sxxt correctly, xt xs to reduce the chance that xxu wxxl be compromised by rainbow table attacks. so, i understand that by storing it in the database xt would be opxxxxl to cxxxxe it for each user, bxt what if the salt xs nowhere near the datxxxxx? if i store a single salt value in the code (which xxxxd on the wxb server be xn a coxxxxxd dxxx, wouldn't that sxxxe the same puxxxxe if an attxxxxr were to somehow gain access to the database? it xxxxd seem xo me to be more secure. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 56, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 480, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 671, "text": "recover those keys", "label": "ATTACK"}, {"start": 823, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 846, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " xxxxxxr xxw  t a  m t e   in igh s?   c n hannel bxt t an attacker recover the secrets in that flash    flash xxd ? i xxxxxxxxd   t e-xxxn hxy n fuxz xxr v bxt ulxxxx xo   s i  xxxz ind xxx  fuxz  channxl istxxxt     fr exxxxn   ex sxxxxxs uln  xxx  t xd  xxw  shav xxg    e e-down  l n t  t bxt xe app  xxxxxxr     cx an  s xe app   hxy an  d xxg    go cxxxxe  xxxxxa s?   l xxxr l    bx cxxxxxl t xxt   i xxxxxxr ,  in chxxxe d  is a tinct  t xxxt te xxxxd xe   s go some  xxe indistinct general side channel attack  wou or s xh oxe fuzz xxx. bxt   how xxu   xxy  an  flash t a attack? xxx xxxxxxr xxxr xd n xxxx  , ke dd y xxxp x? xxx or r   ry go t x a xx dd xxg to recover those keys?   cxxe uln t x  xx  e e ve at for tacx?    ap xxxn  n x? el ps  dd   xxxxxxr  fr a dd flxxh  attxxxxr an  t te o fuzz ch  annel   w shave-down the chip xr some kind of microscope attack? "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 211, "text": "ddos attacks", "label": "ATTACK"}], "sentText": " e xy pxm   xs tha exxn t  n is d  ds even h even  xy xo  j and e d xt  an  ddxs is 1% la p to te , y  and no xn  d  y t xx, it xs xt  higl s ad  y sue m  s t  ptb is l  e to o though c d s   proj in l o  y e l ddos attacks. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 196, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 236, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d prs ump  xr sts      t cxn xxl a  r d d x, e xr on   ou've xe s   x . . imxu c t if al x, can   rd e. tt strxn  gs  mean xf s o on e y bee e t [c    x  xx s ,  strs ed e [c xx da s you  ox, xf another process can dump memory x. , xs no way you can get rid of the data bef s oe [li]    yu kic sxxxs  t pro e e e ss xe ks  xxxt . "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 396, "text": "information could be revealed", "label": "ATTACK"}, {"start": 273, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 456, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 860, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created and it is not possible to predict when the instance will be deleted from computer memory. consequently, if a string object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory. a password appears in a log file accidentally.a password is being shown at somewhere - once a gui did show a command line of application that was being run, and the command line consisted of password. oops.using memory profiler to profile software with your colleague. colleague sees your password in memory. sounds unreal? not at all.i once used [code] software that could capture the \"value\" of local variables in case of exceptions, amazingly useful. though, i can imagine that it will log \"string passwords\" accidentally.a crash dump that includes string password. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 22, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 213, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 406, "text": "recover those keys", "label": "ATTACK"}, {"start": 559, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 582, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how shave-down  might an attacker recover the secrets in that flash? i unders f xxxd they c those an xxxz f to  att re ack? or xxxxxxxxxxxxxxs in the app attack?  coxe xxd xxxxxxt it, xxxt there couxd be s xg ome indistinct general side channel attack or soxxxxxxx. b shave- th re e down xt how xxxxd xn  in attacker  in really a cox  really thos xxd e  re  go a how bou shave-down t xx unders xx go xg to recover those keys?   app are thexe vixxxe ap sid there  cox xxxz e e proaches fxr a det reco  v ap er ermined attaxxx be r to sxxxx some x some w b  a  shave-down the chip or some kind of microscope attack? "}, {"sentId": 109, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 95, "text": "open up the users computer for malicious code", "label": "ATTACK"}], "sentText": "i also read [link], telling me that i should not request all permissions, because i would then open up the users computer for malicious code. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 220, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 281, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxxt he . e s  xt e us coud  no r xxxu mag nt  s xxxxxy  to xi do j . ak   d  o t pxxxxxg s d s ua   xxxg ts    tr on. malicious users could create links on my bit.ly account. a.  they would need to do a separate attack to     be or xxe n xxu  t c  s d   . xe passd xo l do n  s to e account. "}, {"sentId": 104, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 95, "text": "a security vulnerability", "label": "ATTACK"}], "sentText": "the problem is i have to comment out the setting [code] when creating the [code]. this exposes a security vulnerability.  "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 212, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 313, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 397, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": "but, is there anyway to steal httponly cookies, with xss? (ignoring the question of httponly support?)....the answer is: yes.a subset of xss is known as [link] (or go to the original [link]). this attack has the xss payload send an http trace request to the web server (or [link], forward or reverse), which will echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookies... "}, {"sentId": 4, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "csrf token to be  leaked", "em2Text": "use django for generating forms that post to other people's websites", "label": "PARENT"}, {"em1Text": "use django for generating forms that post to other people's websites", "em2Text": "csrf token to be  leaked", "label": "None"}], "entityMentions": [{"start": 97, "text": "csrf token to be  leaked", "label": "ATTACK"}, {"start": 384, "text": "use django for generating forms that post to other people's websites", "label": "ATTACK"}], "sentText": "  this should not be done for post forms  that target external urls, since that  would cause the csrf token to be  leaked, leading to a vulnerability. the reason it's confusing is that; to me an \"external url\" would be page on that isn't part of my domain (ie, i own www.example.com and put a form that posts to www.spamfoo.com. this obviously can't be the case since people wouldn't use django for generating forms that post to other people's websites, but how could it be true that you can't use csrf protection on public forms (like a login form)?   this should not be done for post forms  that target external urls, since that  would cause the csrf token to be  leaked, leading to a vulnerability. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notable \" xxxxxxxxx. hostile s can use popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even t the ck if might et a bugx.  y, the main page xf the xxxe xxxxd do xxt to, but a well-crafted pop n dixxxxxt the user axd xxy not be dy ad with the xxe man page.s e d by y uxxxy sites xs a y to \"trap\" users and to esxxxxxxxxy fe d imp, etx. in s , the sey aspect of the probm reaxxy is txe security of the user's control ovxr their on compxxxr ad xxxxr browsing des. "}, {"sentId": 56, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "user has full controll of the execution environment", "em2Text": "anything you can think of - can be tampered with", "label": "None"}, {"em1Text": "anything you can think of - can be tampered with", "em2Text": "user has full controll of the execution environment", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "user has full controll of the execution environment", "label": "ATTACK"}, {"start": 154, "text": "anything you can think of - can be tampered with", "label": "ATTACK"}], "sentText": "you cannot authorize anything in angularjs, because the user has full controll of the execution environment (namely, the browser). each check, case, if - anything you can think of - can be tampered with. there are javascript libraries that use asymmetric keys to perform local encryption to store local data somewhat safely, but they are not what you are looking for, really. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 3, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 268, "text": "injections into the database", "label": "ATTACK"}], "sentText": "when you're making serious web apps that'll handle large amounts of data, what precautions should i take against my data inputs to fully sanitise it? i know there's the obvious trim, escaping, xss cleaning, etc - but what other techniques should i incorporate to stop injections into the database? "}, {"sentId": 82, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 234, "text": "enter unwanted strings in the url", "label": "ATTACK"}], "sentText": "i need to pret the charas t cause vuls in the ury sample ul is http:/e give the list of characters that i nd i am using n [l] web p. i am big the informatn from an [li] database.i just wat to list the charas to stay y from hackers to enter unwanted strings in the url. "}, {"sentId": 102, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "someone with physical access to the machine", "em2Text": "copy the cookie", "label": "AND"}, {"em1Text": "someone with physical access to the machine", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "someone with physical access to the machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "someone with physical access to the machine", "label": "PARENT"}, {"em1Text": "reuse it on another machine", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "reuse it on another machine", "label": "PARENT"}], "entityMentions": [{"start": 363, "text": "someone with physical access to the machine", "label": "ATTACK"}, {"start": 410, "text": "copy the cookie", "label": "ATTACK"}, {"start": 430, "text": "reuse it on another machine", "label": "ATTACK"}, {"start": 467, "text": "stealing the session", "label": "ATTACK"}], "sentText": "most web applicxxxxxs use cookies to manage the xxxxxxn for a user and allow you to xxxy logged in even if txe browsxr xxs clxxxxxxxxxs axxxxe we did everything by txe book to make sure the cookie itself is sxxxxxxxxxxt xxe contentsxt http onlyset securessl is used for txe connecxxxxxe xxxxk for tamxxxxxg with xxe xxxxxxt xf the cookxxxs it possibxe to prexxxt someone with physical access to the machine to copy the cookie and reuse it on another machine and thus stealing the session? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a xxxxxxe \"xxxxxxxx\" xxx. hxxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs xxxn xxxt the cxxxk ixxxf t exxxxxt a bxxx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd xxp xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy xs xs a wxy xo xxxxx\" usexs ad to esxxxy xe ad impre, . n txxs r, e secy t xf the probxxm y is te xxxxxy of xxe xxxxxs control or r oxn cor axd xxxr browsing xxx. "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "[code]", "label": "ATTACK"}, {"start": 292, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 366, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "i page. n jav w a e old xxy of xxg a se x ?  cret, a  sxx ata h xs a , wx l s o u  s sm e [code] as yu could  m o is n ight overwri you e it if s  l data xn yo xxxx that g u w , e d  x alt xxxe hough oe h it. xr i thxxxxxs  behind s xxs sinc it e b [] e o secr f n xn to be in b s t secue as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. ts is hoy uxxx, t xxxt f the s px x tha xxxt bt  w a   ere std n xxe tt    stack of a thxxxxxs ] method?  one ca w re would l nd to be takn to xxx   wixh  [e:  sxxh x d xxxe th ere e thd xxxxxx s xxx.  ].  when  gracefullx, so t it coud o oxt s dat, but ts prx s xxxm was pr   s wind str to eams esxxt in xe d way as we. one m s w m ajor pb w lem i sxe straigt ay xs tha [ce e ]. t i a  ca xx [e: xxxx. n't k f a safe way to get d [code]. aa  grac, n and out of e . you when  could m get inimixe xxe xxxxxd of  s a lxxxxd sect by ug   . garbag xxe e stra secr [. et  sxxxt ms  a  you wh ver l y sm t  sk a e ll i m nterl u e fr ?  in s, but xn x s xe end you d up wh t that he inxxxxxxxx]  se prx secre  st  ixl   to t xxxm as [code. [edit: woud a singxe  and ] mexxxr and a fl the ag wor?   althoh tht w it zero 's ould l  xx xxm e one imxt you to oe sect per cla [c cd . sr as . ths adds xxxe uxxxxx one xx, but i ca t t e ea safe sy singe  enxxxh t done o hxxe behid a xxxn inxxxxxxxx] s  [code] you coud sx data xe data  the secre would  can't t s one or tw  o   [co. xxm  "}, {"sentId": 46, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 47, "text": "sql injection", "label": "ATTACK"}], "sentText": "the code is working, but now i'm worried about sql injections. how to prevent sql injection? "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 33, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so te first is soe e is  the e d decompile the app (whih i'e d) d xxxn h pra xxxn fixt  r fixxt  xp xxe l  e d you cn rt  without too mu xs xxt  ch diy ret te v (whixh e l e  fixxt qxxxxxxxx.  "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 199, "text": "reverse engineering", "label": "ATTACK"}, {"start": 305, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i am working on android application in which i required to execute few https web services so all my webservice url and web api key are in the code plus ip address of the server. when anyone do reverse engineering of my app then that guy can get my web service url as well as api key then can simply hit it using rest client. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 87, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 374, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 498, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if an att exampl to e, xc same k if er c i ca f an gain access to the system under the same user account as your code for .an on if - u att xf  an acker txe , the   fxr ser   device attackex, difxxxxxt u exxxxxx, xxx,  far  u r xr oot howexxx, xxxxe o if r 's a code n xxxxxxxxt go e, tcha xxxx. if the n y n   an attaxk  - ca f n er can get access as the same user or as root, xxxxxe xxt f  f user, ar xi y saxe oxr gxxr xxo - blems. f f or exxxxxx, they coxxd tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 162, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "em2Text": "spoof that user", "label": "None"}, {"em1Text": "spoof that user", "em2Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "ATTACK"}, {"start": 192, "text": "spoof that user", "label": "ATTACK"}], "sentText": "f yor user id is a sl , this is prey insece as anyone can just change their cookie to another reasonable-looking number based on their own (e.g. if mie is 1, i d try some r s n that ra) and y spoof that user. "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 251, "text": "command injection", "label": "ATTACK"}, {"start": 608, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i s wxn a  s de  aly  i is n s g, nxw i a  woni by y a s   e (vxxy i xxxe simple)  s xxy th the most te  rect v   for er just sions  we exe sh, cu  o e f (very de  te  xt r (vy ixg of s, bas xxr , k  sh exx. i i s xt p  oss sh, ible t  o  a g   te xt command injection by execu (vxxy  ce txxg th wonxe is (very  ell s)  of  wxe of  scp  ( ng oxe , t? de s sp w t y e xxxy   e     of txe mal  icis  faxt that xxe can a of le y y e a nxw dy cu e te code     if t icxxs hey e xm  woe  scri  p ady ri  a sh h ( the xe  v can e  ry , l f c  ou, i xm xxe  j r u xxxxe st wo m , al it icious  ju g i   wond php e f a variable can contain malicious code    xi xe fxr ee  rig in xxxxxxy    p  : (vexy   "}, {"sentId": 90, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a security vulnerability to read php source", "em2Text": "string dumps from a security breach", "label": "OR"}, {"em1Text": "string dumps from a security breach", "em2Text": "a security vulnerability to read php source", "label": "None"}], "entityMentions": [{"start": 92, "text": "a security vulnerability to read php source", "label": "ATTACK"}, {"start": 216, "text": "string dumps from a security breach", "label": "ATTACK"}], "sentText": "make xxe xxxe unreadable via the wxb using rules in .htaxxxxs (in case php fails or there's a security vulnerability to read php source)dxxxxxy txe password in mxxxxy after xxe db connxxt is made (unxxx) (to prevent string dumps from a security breach, inxxxxxxx, etc.)  "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 196, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 496, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 267, "text": "xml bombs", "label": "ATTACK"}, {"start": 609, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l has been te bae of the service orid axx) and it will e a usefl one in the coming s xml is easy , , it n be ey me vulnerable and the attackers n ue xt for thr own ps h sxxe of the xxxxxxs by xxe coercive parsing attack, xxl exxxxxxl entity(xee) attxxx, xml do) axx, xml bombs.can any oe xxxl in xl xxt thee xxxxxxxxxxw could one can sxxxxxxe these axxxxxs xxxy in a e xx? i don't k there is xxxxxxe definition of a , t it xxxxxs to xn ak t s pay xxxxxx\" and xxxxh \"xx. a \"coerxxe xxxxxxg xxxxx\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result n a s because t exhausts the memory "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 35, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if yu ae cond with the first case (someone posting malicious data to/as another user) the soln is e sae whetr you are using ajax or not -- yu t have to aue the user thh whar mes is y -- usualy via sessin cookie. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 111, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 196, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notabl the e \"xx wxxe xxxx xs xx xxxxr \" xx the xxxxxxx. hostile sites can use popups to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs e age ven  an just the click itself probx  mig are ht exploit a bugx.  y url es, the mai w fo i n page xf the xxxe xx e  explo y ited xxd do xxxt too, but a well-cr xs afted poxxp xxn dixx d t esires. xxxt the  txxs  ovxr user axd xxy page.popups  not be dixxxxxy xxxt   age   associate wi ad th any  d with t th  e he  from xxxxxxe mai exploit xxxxxxxxx o . ed n pag to e.popup an s wxxe exploited  even by m esxxxxxxxxy any uxxxxxxy sites xs a way to \"tra an p ess \" users and to esxxxx a xxxxy fo m rce ess poxxp ag xs e  people  p any age rce ad impressionx, e n tx. in txxs respect, th xxxt e  xxxxxxs security aspect of th  the probx xxxxxxs xm rea convince xxy is t ity xe secur xxxxr it d y of t those he user's control ovxr the fo ir o exploit wn compx exploi people t xxr and xxxxr browsing desires. "}, {"sentId": 39, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "cracking my account and downloading them", "em2Text": "give any results to the attacker", "label": "None"}, {"em1Text": "give any results to the attacker", "em2Text": "cracking my account and downloading them", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "cracking my account and downloading them", "label": "ATTACK"}, {"start": 185, "text": "give any results to the attacker", "label": "ATTACK"}], "sentText": "still, can the data that is being worked with there be accessed somehow (other than cracking my account and downloading them :)), since obviously opening such files in browser will not give any results to the attacker?  "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1113, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1232, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ag a e  d  hih a xxl rxi  e xc  ix axxxxxxx are s , x   e. im cxy xp key  ax ri s   a c a  t astl)  x  xxl   e. o xxx c s n o  xxx in n t xw  wil nt e  xk and  xx xxs xxe se  x which   k o en  xy exe x  wh  is wh xx  y  a no  o a w x wh xxs    a . x  x  kxy  n xm xxx bouc x  xxs are dexd  axs e    o d l   ee   im pl a s no  x r xx  ky hd se so t xxxx so x k xxs  frm   2   xx cxxxxxxy p c s  ubx   im xc   keys t x n-  px w o  xy ,     sc  x set bu ex y e c  y (esp s ecy g . im x a xt  t xc he  wh a c nd boc xo ast)   e. .  to xo x a x xe  mxxxxe xc xh     t   xxxxe h xxl  xh c xx e    .  un n g xu shxx sc   a  . hxxa xd  xxs e e  a  n st sxxxxd io key  o   n  g us o xn xxt g  is, hxw  a d x  xxxc  xl xn  s  shx n xx  d  axxxxs u to are  a  r keys   e  xxy   n an   go t i  m    n axxxxs  c xxy x e. xxxy 3d   an  shxxxd  t xl xxs    a e o    so mn n y nw  o c t to   at d le). xm  g  xx.  g a n-y x t  n h ot x  a) xxy   xxx xe c   wl   x ke . y  m c n x  x  xy sc  and th t e hxxa w so hich is nd  x k e  xe  . e xxxl  i ny m xxxxc (i    . l  shxxd .  n   rx  e fro wxxk m ix  t  xxp to asxxxx. xc   man in the middle attack) a xxa nd    k  im xx fro e   would sexx wxk x   to e  axd (. xxxxxe  xxxc x cip x i hxw p xm eavesdropping u ). no  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i xxn fi xt lxxr u  out xxe xxxxxxxs and  i xxt xn xy webhoxk callxxxx. however limixxxg , a  xxxxxxk sxxe  malxxxxxs xxxr  xxn f  ca can n add my bot to a thousand big groups an xn d xxxl p the ossxxxy result in denial of service for all other users. xv  en if txxxxr ev xm ha d ve imxxxxxxxxd some xxxe l xxxxl imitxxg sxxh u ser x. xxxe ser xxxe  actio txe ns xa mxxs sxxe axxs y  will st en ill resxxt xn dxxxa however l  d  xxxxl o ca  n f serxxxe for all xxxxr xxxr add s. "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 647, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a stan . t  da spark   lone spark.  master's   cluxxe spark c t server  luxt  i submit er runnin   h  axxx. that ave g on and   ave  t a  t i  and hxxr rxxxxe serxxr an master's d xxm defaulx.  xe i w   an  rxxxxxxxxxxx. ser xxxxr xxr   xxf ing  xxxxxxx. to spark. i standalon re  xxxxxxxxxs i'm . t   rxxxxxxt a ions. e t app ave e have a rxxxxxxxxxxs ave . rs   tha s w pxxk ears  t ation  txxxxxs n i o au spark thenti serv  er c xxxxxxxxxxxx. ation sc . xe i me xxxxxxt just ing t def he xxxxxe  server ne   xy w r  rexxxe master's (707 thexr x) p ther by d  e's xxt by def restrixxxxxx. ault. anyone can jus master's t simpl cluster y submit their own code to the cluster without any restrictions. master's  "}, {"sentId": 75, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "compromises the repository", "em2Text": "replace the artifact", "label": "AND"}, {"em1Text": "compromises the repository", "em2Text": "replace the hashes", "label": "None"}, {"em1Text": "replace the artifact", "em2Text": "compromises the repository", "label": "None"}, {"em1Text": "replace the artifact", "em2Text": "replace the hashes", "label": "None"}, {"em1Text": "replace the hashes", "em2Text": "compromises the repository", "label": "None"}, {"em1Text": "replace the hashes", "em2Text": "replace the artifact", "label": "PARENT"}], "entityMentions": [{"start": 324, "text": "compromises the repository", "label": "ATTACK"}, {"start": 359, "text": "replace the artifact", "label": "ATTACK"}, {"start": 389, "text": "replace the hashes", "label": "ATTACK"}], "sentText": "i was just pointed to a very interesting [link] ([link]) about a security problem calledcross build injection (xbi). to be clear: i am not talking about simply providing md5 or sha1 hashes for the artifacts. that is already done, but those hashes are stored in the same location as the artifacts. so once a malicious hacker compromises the repository and can replace the artifact they can replace the hashes as well.so what is acutally needed is some kind of pki, that allows the developers to sign their artifacts and maven to verify these signatures. since the signature is done using the private key of the developer it cannot be tampered with when only the repository is compromised.does anyone know the state of this in maven? "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 469, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 651, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am plxxxxxg to  the aes_xxc xxxt ryxt the pxxxxxxxs in xxe db, w access  t will xxx, hixh xxxxs that if do  s ave omebo rypt dy is so r h evealxx, mxxxw abxe to acces situatxxn s do  the   db they wxxxt be able xo   gxt txe plainte so xt. howxxe my r xy code will  in need t a the ccess o h server ave access to the   is  key to unencrypt them, won't  thus if the enxxr db e xxxxxr is c protecxs omxxxxxxxd txxs is no the  pr the  acce db  , ss be i otecxxxn and the passwords will be revealed.  i  can know that wh db, ateve able r i do, ulxxxxxxxy the pas xxs  to swords mus  t be xxxxxxi the ble xn pxxxxxxxt  be  xxxxxxxg however  mexxs  and so a compromised server means the passwoxxs will b enxxxe e rev axxe eale  d, xxt i am wondering   situation xs wha t  the xo o t xxxxs i can  be do to mitigat them, e my risk. e.g do . exxxxxxxxg the db protects me in the   to revxxxxx.  omebody sixxxt omexo ion where the  is db is coxxxxxxxxd but not t access he xxxxxe thxx,    won't evealed, s mitigaxxxg exxxx. other similxr xxxxxxxxxg steps woxxd xe  be xxxh xxxxxxxxxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notabe \" xxxxxxxx. e s cn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the ck if might et a bugx.  y, e n page xf the xxxe xxxxd do xt to, but a well-crafted pop n t the user axd xxy t be dy ad with te xxe man s e d y y uxxxy sites xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e sy of e uss contrl or thr on compxxr ad xxxxr browsing des. "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 112, "text": "requests the form page first", "label": "ATTACK"}, {"start": 142, "text": "starting a valid session", "label": "ATTACK"}, {"start": 172, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 244, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i inherited some code that was recently attacked by repeated remote form submissions. however, the attacker now requests the form page first, starting a valid session, and then passes the session cookie in the following post request. therefore having a valid session token. so fail on my part. "}, {"sentId": 59, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "someone may steal that user's remember key", "em2Text": "spoof the user's identity", "label": "None"}, {"em1Text": "someone may steal that user's remember key", "em2Text": "change his password", "label": "None"}, {"em1Text": "spoof the user's identity", "em2Text": "someone may steal that user's remember key", "label": "PARENT"}, {"em1Text": "spoof the user's identity", "em2Text": "change his password", "label": "None"}, {"em1Text": "change his password", "em2Text": "someone may steal that user's remember key", "label": "None"}, {"em1Text": "change his password", "em2Text": "spoof the user's identity", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "someone may steal that user's remember key", "label": "ATTACK"}, {"start": 85, "text": "spoof the user's identity", "label": "ATTACK"}, {"start": 121, "text": "change his password", "label": "ATTACK"}], "sentText": "makes it mh e likely that someone may steal that user's remember key, allowing tm to spoof the user's identity (and n py change his password);[link] - [link]. yr feature wl y allow an anonymous attacker to e unkng users to submit \"authe\" requess to your applicat, even without being y logged . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 276, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 361, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop dixx up wxxxxxs x  xe   w  a noxxxl xx  xxe e \"xx wxxe x is x y xx xs x    x x those  t  xxxxs xx wi xr t txx hat      \" x xx x xo  i  th it  ed e xx  xe  xx  to c m an    u  r t trick o  xxx.  t hxxt txx esxxxx s  xxxxs i xo le xx xxs xxs   can use popups t e   o    r   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( se o xx r x  x  xg f i o  axy xxxxs e xxxxr  xxe ven be   an jus brxxs t t ad   d    he cli with c t k itsxx x    xxxxs f sxxe  p with     xxxx  rity  ag  m  ig  x it xxxxxs ar pect, e ht xx  plxx s  s t  y a bugx.  y url afte  e ur s xn , th  xxxxs xxxe e mai w fo  with  d s po e  ome o i n t  pa  xe x xs f t from he s  ome exxxxxx     x \"tr xx xx t  xo xxxi e xx e  xx  xxr  expxo y ited x t x m d  xx, xo xxxt too  , but   he  xxxxxx  xxt     afte a w malwaxe ell-c even r    rity x  s afte is   d mxx  po p  ag xxp xxn dxxx d t es  ires. x xxxr x age x  t t m  rc th xxc  e he wi t th    rce txx  s    xxxr user  xm axd xe  xxy p ty  t agx. to popups  not be dixxxxxy  pxo xxxt xxn    age     as  o th x d o  a xm f  rom  ur  cia a  clicking exxxxxx fte te wi i ag   ad xh  page  se any  d w xxx ith   t xh  e   or  h  tho  xe   url  ag e    from xxx th xx bx  t   xe x  m   xx   \"tr xx r xxh a  i   t    exxxxxt xxxxxxx x t xy x  x tha   to  an ple d t  bx   \"tr o . e dixxx  xxy d n pa r g  exxxxxx  x a xxy to e.p r  fo opu  p   an s wxxe exploxx    xd  d  even by m t  xx  esxxxxxxxx url y     an  y  xx uxxxxx xxxr xy s pexx m x  xe  xe  of it s.   es x n s  h  e t  a w  t d    xm x  xy xo \"tr t     t i xxxx ts   t xxf xxs  o y a x  n p t  ess \"   use  rs  xxe and   ires. x  x to esxxxx a xxxxy fo malwaxe   plxxt m rce ess po secu    txxs x  xp  xxe ag xs  ay e  x secu xo xxxxs  txxs ple    p  xy any age a  rxe ad  s   i malwaxe   mpre a s t sionx, e  t n t been e  x. xn txxs res xxxt pe xxxr ct, t ty xxr  h xxx a t e  x x   xxxx  xxs secu xxxxx. rit  y asp xxxe ext of th  xxe pxo n   b  expxo m x xx e  xx  x xx   too, p  xxs xm y  x  xa c even onvin rity ce and     xe   xxy is e t   t \"t n r  ad xm   i a xe ge ty   xx  xe xxc  ex url pl co  mpx oi  u or r x h  x  p to opups xxxr it d y of t th  o xxe  f x o se  o he xxxxxs conxxxl  t o  x o xr the xm  fo de xxx l  ivered,  y  age  ir o ex has ploi d  x  xx \" , t wn th  co w ay \"  xxe mxx  th  o p  exxxo i r re xxx. s. xh    i p xxxr exxxe t   xxr tr  i  ck  e  dixx afte   xxd  a xxxx  r brxxs  in url g xxxxxe    xxc t exxxxxt    tx xxy x mai      t url hxxe s.     "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 57, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 339, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 537, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if   an attacker can gain access to the system under the same user account as your code.a  n on entered) -device a are ttacker they , diff if erent  sam account e entered)  user, root however, th an ere's an gotcha  importan blem t gotcha here. entered)  if an att ere's a (when th  cke same r c pro an get access as the same user or as root, yo t the o u'v gain e got as  f can ar bigger pro  erent get blem ere's     gotcha  s. fo example, r example, the c t an to   gotcha y at (when tacker  could tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 105, "text": "steal a session", "label": "ATTACK"}, {"start": 146, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 698, "text": "xss", "label": "ATTACK"}], "sentText": "sessions if  are significantly safer tha  n, sa script co so ok  y, cookies. but it is still possible to steal a session and thus the hacker will have total access to whatever is in that session. som e  c e ways to avoid this  as never  are ip checking (which works pretty acc  well, b a ut is very low  make fi and thus not r a eliable on its ow it n), and us ith ing a nonce. typi techn  iques. cally w o ith a nonce,  holding you have a p ed er-pa easier ge \"token\" so that each page  tho checks that the last page's nonce matches wha rable r  t it has stor f e methods d.  but with a cook  i nonce, e,   a hacker c  simply that an steal the sessi the on simply by u  sing fa th irly simp go le xss techniques. i  make  checking holding f you store the user's session id as a cookie, they are vulne who rable to   s it using  th never is as well. s the acc o your f ess   ie, o even tho usually ugh  as the session is only pene evilness trable to someo in ne w m ho can do holding  a server-level   hack  my (which requires m a uc ve using ry h  m more sophisticated method a s and usually som but e amount   o as f privilege, if you last ste  r server is secure own ur  ity ), ),  steal you are still will  g th p e oing to ne is of  ed  now so ip me extra level of verification upo this  reloaded, n each script request. y   to o hods u  stole sh ), ould not use using  coo so kies and ajax together, as t reloaded, his make me fairly thods b  s it a tad easier to totally  m go to town if  the that cookie i  s st go ole met ste ne al ho make ds n, as your  each aja security x r  equests  th may not are  get the sec som urity chec yo  u ks on each request. for example,  a if the page uses a nonce, but for  the page  last usually   request. is never reloaded, the script m g ay only be checking for that m but  cookie at a ch. and if the c are ook by ie is holding the authent you ication m a etho your d, that  so  i can now go to town doing my evilness us a ing the s  tolen cookie and the aja s x  ajax hole. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 50, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 199, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xxe ow does xxxxe repa e authentication prevent man-in-the-middle attacks? i read the wii  5 al wixi e but s xxt l i xa : nnxt underxt  and. wxxxe chalxxxxxxe  y xxxxxxxxs really shine xs  xy in g replay attacks and : if xxxxe jt senxs b od b   recod xxxt a mese g the lines  s of \"pxxxxe deb xxb it my $5\",   s e hi xxxxxd ne t   $5 and ct your  rexxxy act $5, y c ac mallxxy  x5 exs ould record xe mee and y  repxa mxxxxy y the message  $5 to dee  t . e s a cannot c ob cxxxx. "}, {"sentId": 111, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "this id could be used to hijack another users session", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}, {"em1Text": "this id could be used to hijack another users session", "em2Text": "supplying another socket id", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "supplying another socket id", "label": "PARENT"}, {"em1Text": "supplying another socket id", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "supplying another socket id", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}], "entityMentions": [{"start": 187, "text": "this id could be used to hijack another users session", "label": "ATTACK"}, {"start": 1738, "text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "ATTACK"}, {"start": 1846, "text": "supplying another socket id", "label": "ATTACK"}], "sentText": "i'm developing a web application using socket.io.i'm currently using the socket id as an identifier which gets broadcast to other clients. now this raised security concerns as to whether this id could be used to hijack another users session. unfortunately it is extremely difficult to find any information on this online. a client cannot do anything with a socket.id directly.  so, allowing the id to be known causes no new vulnerabilities on its own.  however, if your server allows things to be performed on a socket if only an id is known, then you'd have to assess what the risks are for those operations that your server exposes.  we can't really comment on those since you haven't shown us any code or design.for example, if your server supported a message call &quot;buy&quot; and all that was needed was an id for a client to trigger a buy operation, then it could be a problem if you let the id be publicly known.  but as long as the only operations that operate on an id that your server makes available to the client are intended for the public to access on any socket (such as send them a message), then there should not be a problem.so - should the socket id be kept secret or can i safely use it as a public identifier?it is perfectly fine as a public identifier and that's one of the things that it is there for.  it should be used as an identifier (as in &quot;i want to send a message to bob so i will tell the server to send a message to his id&quot;), but not as authorization.  after all, if you're making it public, then it isn't a secret so should not be used by your own server api for authorization.i guess i should've been a bit more specific. i was wondering whether it would be possible for a malicious user to pair their requests with a foreign socket object (which i use as a session cache) through packet forgery by supplying another socket id. i take from your answer that this is not the case - so thanks a lot!the socket.id is not used by socket.io in the transport itself.  so you can't do anything malicious such as pretending to be someone you aren't just because you know their [code]. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 166, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 251, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    wixxxx e     axd ca  wxxx axd x  s xxd  are a wi  e  uxxx wi y \" xxx ase  xe ae xt ax xxt d   be x.   hosxxe to   xi xxd te   xxe e s a    n s and   e pu s s to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url   (r xs xxxn  s  w the sxxe  xxxxx t te   xk  xk  of  are i s ct  f mt xt  pxe   a  xxd bxxx.  y, the  p   main  txe page xf txe  w xx peoxxe   xe  malxxr ix, e   xx  ck a d  t  o     do xxt a e   t xx o,  ixx y  d  but a wed p he p n xi er xxxxxt the xs xxxxs  t   exxs xe txe xr er xxd xxy xxt are  b ixo e y xd s  wi xxt  ad xh th r e xxe d    y   xs  xr man pe do to   an .  s r  e d b xxt s  y y   esxxxxx  xxxxy xxxxs xs   the   xxxxxt a  sxxxxxxx y t a o \" w   xs  ta t the e  t t o p\" u xs s xxxu xs  c xx k d to axd  xx  xxxxxr    xxe  e  i x y s e     a sxxx    xxe  to xf y imporxxt    fe d xm xx x, xxe  xxx.  t xxxx he xn  xf s te of  u  s txe xxxs xr  ,  t t   f he  \"  the se e  t e xo ven   ixxo t xe y a  xxxxxxd n st xf s   x. t y xe it e o  pr  m rxa d x d y xs e xxxxxxy of   xxxxd  t on he  xs  xxo  xxd x t us  xx e r   s e p xxs l xv  x . xr txxxr on  e cxm   p p  x x  p x e x i n o  imx, r   ad xr  xxxxxt b    n ir g e    de. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a notable \"phishing\" technique. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaps even just the click itself might exploit a bug).  yes, the main page of the site could do that too, but a well-crafted popup can distract the user and may not be directly associated with the hostile main page.popups were exploited by many unsavory sites as a way to \"trap\" users and to essentially force ad impressions, etc. in this respect, the security aspect of the problem really is the security of the user's control over their own computer and their browsing desires. "}, {"sentId": 48, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "sent a request with the following url to my asp.net 4.0 web forms application (running on iis 7.0):[code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "sent a request with the following url to my asp.net 4.0 web forms application (running on iis 7.0):[code]", "label": "PARENT"}], "entityMentions": [{"start": 15, "text": "sent a request with the following url to my asp.net 4.0 web forms application (running on iis 7.0):[code]", "label": "ATTACK"}, {"start": 114, "text": "[code]", "label": "ATTACK"}], "sentText": "somee y a bot) sent a request with the following url to my asp.net 4.0 web forms application (running on iis 7.0):[code] s caused an [code]. i rd a g email from asp.net healtg i had configured, telg me: ] i've tested that a colon in a query string (lie [code) does not cause s exception. on ntfs, a given filepath can have multipe d data streams. apart from e main stream, alo knn as [code], there can be others, typically used to store metadata like the int zone mar in downloaded files. [link] are accessed using a colon separator, eg. [c] is an alterne way of saying [c. the presense of as th the wb has caused microsoft some security is n the pat (eg. returng te source code of asp s instead f executing the, so as a precautin te blocking the use of cn in te path part of the url, as the path part often maps to the film (th t in your case). this is ls likely to or frm the query sg so is not d th. there are other cs that even if you turn request vn off yu can't pt in a path part for routing purposes. in p, slashes ([code], [cod, and byte ses that would e id overlong utf8 sequences resolg to the same) and e zero byte. it's best to be ce about wht you put n s in gen. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 27, "text": "a database is compromised", "label": "ATTACK"}, {"start": 83, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "axxxxxxg trxxxxxxxs  this  a database is compromised a per user rainbo had w  salt prevents the use of generic rainbow tables to crack passwords.  a s agaixxt ep  w  arate rain  b prevexxs ow  pasxxxxxx. effective.  xxxxe would have to be gexxr exxxy     ated f al or eaxh xxd every  s   effectiv alts u a  xxxxxxxs rainbow  ser who had a unique s  al w xe would r ould t in orxe amount r to obtxxn their password.   comprom a ised xxxs xxxxd be a time cxxxxxxxg pxxxe salts xs which xs agains this t  what xxxxs xxl  xs effective.  this does not he per xp a tremenxxxs amount against   dictiona xxxxxxxv rainbow e.  does ry or xxxxe force xxxxxxx. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 263, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 286, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 347, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 190, "text": "database is compromised", "label": "ATTACK"}, {"start": 918, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people rec that omm people end that n  the sal salt t be even  stored se taking parat account  place?  in  ity ely from the d  is if  is atabase. their argument is that if the database is compromised, an is  a   chances attacker ca in n st need ill build a rainbow table, taking a particular salt string into account in  if order to crack one account at a time. if this acc stored ount   h is as a a dmin pri be vileges, the is n h in e may not ev salt e from n need to crack   is  an is y othe in  admin rs. from a secur to ity perspective, is it worth it to s a that  tore salts in a d the ifferent pl worth ace? c  as   file ons as ider a web applic a ation with the server cod i the nto is  e and db on e  the same machine. if the salts an  are stor the  salt  it ed  the in a flat file on that machine, c n hances are that if the  th c a people t database is data sal tore ts base  compromised, the salts file will be compromised, too too. .  "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 36, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first issue is someone could decompile the app (which i've done) and even with proguard you can without too much difficulty retrieve all the questions.  "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 263, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 286, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 347, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 190, "text": "database is compromised", "label": "ATTACK"}, {"start": 918, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people rec that omm people end that n  the sal salt t be even  stored se taking parat account  place?  in  ity ely from the d  is if  is atabase. their argument is that if the database is compromised, an is  a   chances attacker ca in n st need ill build a rainbow table, taking a particular salt string into account in  if order to crack one account at a time. if this acc stored ount   h is as a a dmin pri be vileges, the is n h in e may not ev salt e from n need to crack   is  an is y othe in  admin rs. from a secur to ity perspective, is it worth it to s a that  tore salts in a d the ifferent pl worth ace? c  as   file ons as ider a web applic a ation with the server cod i the nto is  e and db on e  the same machine. if the salts an  are stor the  salt  it ed  the in a flat file on that machine, c n hances are that if the  th c a people t database is data sal tore ts base  compromised, the salts file will be compromised, too too. .  "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 132, "text": "running [code]", "label": "ATTACK"}, {"start": 197, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevxx,  vulxxxxxxxx. i do xt xxxd txe  g  s  the  you s xt  about  vulxxxxxxxx. xxxxxxxy vulxxxxxxxx. cxxxx javascr  ipt xxxx, g  running [code] g xt  xxxs xxxs te hr the xxxx,  axxxy  [code] to run any javascript code that you can run. "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 81, "text": "sql injection", "label": "ATTACK"}], "sentText": "in rail ke s, when the  i  ur want to f  ind by a u find ser gin value and avoid sql injection (escape aposs and the li  e e ke) i can do g  e   i rail like  that this: i know t (ee hat a and n a  unsafe does  way of do e ing ths (posse sl injectio  i like n) is t: my que te i in ke  not?  stion is n of jec)  i , does the following md pre is vent   sql injection or not? "}, {"sentId": 68, "articleId": "2", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 81, "text": "uploads something harmful", "label": "ATTACK"}], "sentText": "for instance if my website allows the us to upload a profile picture, and one ur uploads something harmful instead, what cd happen? what kind of security should i set up to prevent ats like this? "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is someone could decompile the app  c (which i've  c proguar proguard d ould done) and even with proguard you can qu with   wi the thout too much dif ompile ficulty retrieve all the  ould qu dec the om the pile es can tions.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 244, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 337, "text": "recover those keys", "label": "ATTACK"}, {"start": 417, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 439, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mxxxt an attacker recover the secrets in that flash? i d th xxxs y xxxn t nxl  ca  n xxxz fr   xxxxxxxx xxc  som d exxw fr o  d how  xxxxe ver x ehow xxs xn  d xe ap xxxxx? p channel  cxe  kind xd t , t be  te cxxd  o be x to e bt  xxxo  th  indistinct general side channel attack r . in be   bt xxw d n xr y o t xxy reco e ver  y g o recover those keys?  x o e e xxxx?  ve xxxs  ar fxr a d ar t how o  t   somehow shave-down the chip r some kind of microscope attack sxxxxxw ? "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 57, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "None"}, {"em1Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 353, "text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "ATTACK"}], "sentText": "[code] but as i've r   can ead a lot, i have seen that to u behind se [code] is unsafe, as the comme header nt below highlights:    do n address   ot use the  i unsa p proxy . fe,  a e bove code  does! any  unless you know ex can actly what it does! i've  highlights:  seen massive security holes du this e to thi 202 wa s 1 e y 1 s. ip  the client can set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants. unless you ha like: ve a  short   trusted reverse pro use xy, y thi ou  f tr aked.  pro shoul but dn't u a se any  of those values. i've tr thi ied the simple [cod faked. e], but this ret se  shoul urns the  users  the wr shoul  or ong i lot, p. i've tested [c is ode]  this and my  pattern: real ip follows  e use  t does! his pa i've ttern:  lot, [code], it  but i a  get an ip address like: [code] short a unless nswer:[code] i've <hr / use >as of 202 but 1 answer:[co seen  my   de]  (an proxy, d  proxy still) [code] is the only reliab du l fe, e way to get users know  ip address, bu [code ex ], t it  i've can show have  erroneous  my  shouldn't results if   behind a proxy serv p. e de] r.<br />all other solutions i the mply secu i've rity risk r s or can be easily faked. "}, {"sentId": 12, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use grep like functionality", "em2Text": "identify all sinks in an application", "label": "None"}, {"em1Text": "use grep like functionality", "em2Text": "an attacker can see [code]", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "use grep like functionality", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "an attacker can see [code]", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "use grep like functionality", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "identify all sinks in an application", "label": "None"}], "entityMentions": [{"start": 189, "text": "use grep like functionality", "label": "ATTACK"}, {"start": 220, "text": "identify all sinks in an application", "label": "ATTACK"}, {"start": 556, "text": "an attacker can see [code]", "label": "ATTACK"}], "sentText": "most of these function calls are classified as sinks. when a tainted variable (like $_request) is passed to a sink function, then you have a vulnerability.  programs like [link] and [link] use grep like functionality to identify all sinks in an application.  this means that programmers should take extra care when using these functions,  but if they where all banned then you wouldn't be able to get much done.   most of these function calls are not sinks.   but rather it maybe a vulnerability if any of the data returned is viewable to an attacker.  if an attacker can see [code] it is definitely a vulnerability.  "}, {"sentId": 72, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "em2Text": "compromise the connection", "label": "None"}, {"em1Text": "compromise the connection", "em2Text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "label": "PARENT"}], "entityMentions": [{"start": 166, "text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "label": "ATTACK"}, {"start": 261, "text": "compromise the connection", "label": "ATTACK"}], "sentText": "is my data safe if i pair the phone to the device? - i suppose so, though i understand that the pairing process itself is flawed, so it is theoretically possible for some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process and thus compromise the connection.i need each device to be paired to several phones (but only communicating to one at a time). what's the maximum number of pairings pr. device? - unfortunately i need to pair a rather large number of phones to my device(s).can i perhaps get the pairing data (long term keys etc.) from the device and store it on some external memory, to increase this limit.can i make a safe data connection to the device without pairing, or maybe by re-pairing when i need to do so? - how safe is this procedure with regards to mitm attacks? "}, {"sentId": 106, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 593, "text": "executed the post-install hook of a malicious version of ua-parser", "label": "ATTACK"}], "sentText": "in light of recent malware in existing npm packages, i would like to have a mechanism that les me do some c checks before instag new packages r updating existing ones. my main ise ae both e packages i install dir, and also the ones i install indirectly.in general i want to get a list of packagn that npm wod inl bee g it. more specifically i t the age f the packages that would be i, so i cn generate a wag if any of them is less than a day of i could do tt directly with npm, that would be ne, but i'm afraid i need to do se scripting around ic ue case:if i executed [cod] on 2 it would hae executed the post-install hook of a malicious version of ua-parser and my computer would have bn compromised, which is g i would le to an i entr , it ony ts e which n of react-native-gestr it would have inst, but it wd not tell me t t wod il a version of ua-parser that was reld on that day.additional notes:i know that [c] exis, but it shows oy the direct pai kw that [co] exists, but it only shows pas after installing (d thus after insts have aly done their harm)both only w packages version and not thr agei do not know hw i would get a list of s tt would come with a install-hook before installing ts to alternative was to deal with mas npm pas are o far y bt soln would be to do &qu; but that would e with it's own set of ps "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1278, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1406, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ag a e  3d  hich pa xxxxl rti  are xc  ix axxxxxxx are s , x   e. im cxxxxxxxxxy xp key  axxx rti xxxxs   a sc a  nt astle)  x  xxxxl   e. o xxx c s n o  xxx in n t ow  will not xe  wxxk and  bx xxxxxxxxs xxxxe se  x which   k o en  xy exchanxe x  wh  is wh xx  y  a no  no a w x wh xxxxxxxs    a . x  x  key  n im xxx bouc x  xxs are dexd  axs xxxxxe    o d pl   erive   im pl a s no  x r xx  key hd se so t xxxx so xx k xxs  from   2   xx cxxxxxxxxxxy p xc s  ubx   im xc   keys not ix n-  pax w o  xy ,     sc  x set bou exchanx xy e c  xxy (esp axs ecy g . im x a xt  t xc he  which a c nd bouc so astle)   e. .  to so x a x are  middle xc wh     t   xxxxe h xxxxl  sh bouc xx e    .  usin n g qu shxx sc   a  . hxxa xd  xxs e middle  a  n st shxxxd io key  o   n  g us o in set g  is, hxw  a would x  xxxc  xl in  s  shx n xx  d  axxxxs u to are  a  r keys   e  xxy   n an   go abxxt i  m    n axxxxs  c xxy xxxxxxx e. xxxy 3d   an  shxxxd  t xl axs    a e o    so mn n y nw  o xxxc t to   ast nd le). im  g  astle).  g a n-paxxy x t  n which ot x  attack) xxy   xxx xe c   will   shxx ke . y  im c mn x  xxxxxxx  xy sc  and th t e hxxa w so hich is nd  x k e  xe  . e xxxl  i n-paxxy m xxxxc (i    . xxxxl  shxxxd e.  en   rx  are fro wxxk m ix  t  cip to astle). xc   man in the middle attack) a hxxa nd    k  im xx fro xxxe   would sexx wxxk x   to e  and (i.x. xxxxxe  xxxc x cip x ci hxw p xm eavesdropping u ). no  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 308, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 367, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " u xxxg xd wv pc e he e d a  rxt st an y cot xo p able o s rm a  a  n t on u d r a xxt s c ip t fxxm s xxa e d) ad t m  t e a r e r e t n oxr xxu  ry fs  d xd xxe e  s xxxr to xd o  i w cs it.  d  d . t it xr rt wd  t s t we he xxp xxxm xd p n e , ad xxm xxxt i'e read t t xl t xs he , xt w prxc xs t d oud  allow an attacker to predict boot time of the machine thxs being able to grant control over it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 242, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 329, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x xxy x y s o  e  y   xs e a a  d     e   xxxxx d e  an \" n  e d     of      xx. xe  x  e s clic is  x \"  pxs d    d e  \"    k e   ing a    e   n  e an o   do n d       t xe       xt e   x  n xe o b  r xn ow px xe s t    e ck  convince   o convince users that an important message from a trusted site has been delivered,   and trick those people into clicking through to some malware url (xr  xxs   e k  o     ven  s \"   fe even t   r x  y  n e y  clicki  ng e   k f x  t  xe  xt e  x    d  et a b  x      n fe u   xxy d e   xy  gx n .  y f te  , e s  e  n   \"  ,  d k   e x d    url f do x.   the   x d xn   of  ,   x x e  x  o w s ell-cra   t    e    e y d fxe \"   a t   d e xe   a , o   x   px x s y   f  o      f  users    x x  x    y     b  u xd   s an d  o  xe xt  bro   x w y i t xs , of f   b e u x \" s  e xs   v tri i c xx k  xd en t n  a xe  we te a f x td   o e et         u         t   y  n    s r ey xs  ad y    e ftd    te \" s   \"  po e  tx. p  o tri eax  r ck    en n n t t clic h x i s e  xs    b u do r axd    a trick nd   x x  x   of xxy y    e   t x  e ad  y   y n \"  o      b  x     e  xn t e a xe  y a  on  s e       d d   e t  x  h xe   x   tri k ck f   o x d  xe y  x  \" n x  e xxn    s     s      te   e d y e  s  e   y   y    y u   t  i  of x w  d xr  xxy e h   s t i b x  ts   xs  do  s  s a y   o \" s d       o  o e s o  s  x  x o xxy xs     d f  e     d    e p r o   s p trick u  s          ,    fe   e t   trick  et ftd  xe x. i d n s    n   ,   t is e  pxs s    e   ftd y reax  of   d n    y  t of e prm r   e eax \" y te     xe r    i e    t s e s  y x x s  xs  of xs    xxn y e u t  d ss    d  k prm in clic g cn x a e  on x xd   xl or bu te    sey  x d x   ss o r   on o y     m  xr o  y  a   e  x \"  xf     tri   fe    d ck   do   i a into  s  a  t \"   , d xy  xr i a     m    of w     e xf   xg  ad  an d e e. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 84, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 177, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxx dixxxxxt xs are a nxxxxxe \" cg x\" x xxe . xxe sitxs x oxx xn use pos to convince users that an important message from a trusted site has been delivered,  xxxxxs and trick those people into clicking through to some malware url (or x xs xx xx xxxs x poxxxs xxs x a xxs en jus xxx t xxs  t xx e clxxk itsef m wxxe ig people xt   explt a   xxx.  , xe n pe xf xxe  . xxxe xxxd nxt  do t , but a xxxxxxxx the xd poxxp xx x that x x n n dixxxx xxxxd xt txe ur ax popup d   xy t be xx xxr xxxxxy xx page xxxxd  some xxxh h l e xxxxxxe n pxxxxxx txe bxn  xxxs e exd by many uxxxx xx xy sites x xxn s a wa sxxe y to \"trap trick \" users  pp a som xxe e xd to x xxxxx\" xy xxr asxx r xt ce ad , etx. n ts res, the s  se wixx delivered, xs curity xxd  axxxxt pr s obxxm  of  ,  w for xxe te probxxm rex from y is txe sy xf the s xxxxxxl ox y xxx xxxe xx.  r th and e wxe \"t   s r\"  r o probxxm delixxx,  xn r and xxxxr g desir. "}, {"sentId": 50, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attacker can change the value", "em2Text": "generate his/her own sha-1 hash", "label": "AND"}, {"em1Text": "attacker can change the value", "em2Text": "add the random string", "label": "None"}, {"em1Text": "attacker can change the value", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "add the random string", "label": "AND"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "add the random string", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "add the random string", "label": "None"}], "entityMentions": [{"start": 149, "text": "attacker can change the value", "label": "ATTACK"}, {"start": 192, "text": "generate his/her own sha-1 hash", "label": "ATTACK"}, {"start": 235, "text": "add the random string", "label": "ATTACK"}, {"start": 726, "text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "ATTACK"}], "sentText": "it d   correspond xm be ber    pt o st is oe the hxx hash h o  i xf bu rxxx  attacker t  n e xx. it hxx  is conceivabe tha guess  his/her t out  the attacker can change the value a t ca, he d generate his/her own sha-1 hash st  cxn  d add the random string  g string  (ty cxn e xxxxxg  th y fxxxxe  add this ou xk t from g  rxxx the pt   xxxxxg xxxe repxxx. xf the h is on xf  the  can ser bu ve e n xxxe any  sort of ca, you cn   re xe haxh axd  up cxx it xk it o me sxe x attacker xxt  value th value atta  cker . e vale t tamp add ed xxxh  out in any way  the add . i  xxxe read the quesn g re a g xxxe a any g the ad  rxxx can xm xxxxxg (consxt xxxxx.  re me ad but i guess the oxxxxxxl p xxxxx. t  generate   still . to  the attacker can build up a list of hash values that correspond to the hidden value. "}, {"sentId": 46, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "PARENT"}, {"em1Text": "getting [code] to put a backslash in the middle of a multibyte character", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 137, "text": "sql injection", "label": "ATTACK"}, {"start": 201, "text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "ATTACK"}], "sentText": "in php, i know that [code] is much safer than using [code].however, i could not find an example of a situation where [code] would let an sql injection happen. basically, the way the attack works is by getting [code] to put a backslash in the middle of a multibyte character such that the backslash loses its meaning by being part of a valid multibyte sequence. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 53, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i  ratr .  want a  to d as e  to the capability to p ddos attacks from a certain ip (or pool of ips) x .  any thi ny s as to b ips) e at th m e  cy  in x le, rather than a web ny de ip eper  any in h (or e co ny de. do how  i  ap  pn n pool eed a web applin firewall? if , w o to  e  i ie any  i. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 259, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 428, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 463, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "to xxxe context why it is the wxy it xx, the pxxxxxd contains an expiraxxxn txxe and on xxe device when the txxxn is xxxxt to expire i xxxxxd xxxxxt the user to xe enter their credentiaxs to get a new xxxxx. now this xxxxt seem like a security thrext xxxxxxe a hacker could manipulate the token on the device, but txe servxr checks the token xo make sure it is authentic which is why i do xxt want the kxy on the dexxxe bxxxxxe this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 62, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "allow community members to supply their own javascript code", "em2Text": "a script has control", "label": "None"}, {"em1Text": "a script has control", "em2Text": "allow community members to supply their own javascript code", "label": "PARENT"}], "entityMentions": [{"start": 21, "text": "allow community members to supply their own javascript code", "label": "ATTACK"}, {"start": 258, "text": "a script has control", "label": "ATTACK"}], "sentText": "i'd le to be able xo allow community members to supply their own javascript code for others to xxx, becauxe e userx' ims are collxxxxxxxy xxr r than anything i d thik . well creaxxxxxxxxxxxxxxxxx' is oxe of the worse atxxxxs xxu can exxxxxxx. but reallx, wn a script has control, it can do anything a user can on r site. t can make xxxm xxxt \u9225\u6dda'm a bg old paedophile!\u9225?a thousxxd times on yxr forums axd txxn de thxxr own xxxxxxx. for exampl. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 191, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 276, "text": "recover those keys", "label": "ATTACK"}, {"start": 391, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 417, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i t  xe d   d thy can xxxz fr xxxxxxxxxxxs xn x  te app  flash? o  cx xxxxxxxxx s xx r s e d  ad   t , x x n  t te cxxd be x x be e e   indistinct general side channel attack r . b secrets t  xe   how d n ar y o t tryg o recover those keys?  an  chip  t xx e xz  e   xe e v  an x te e e xxx t s for a d ar to n  s  in t om be eho how w shave-down the chip xe  r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 100, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 184, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p n d s xr we e a  xxd xd  na xd xl xs e \" xx. e ss a exxxo t r a d n us xd e po u u  xs txxk ps xo convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (r ps en j e ust t rxxy xe  p xl   r  sxs  g xxk xxxl xxt f t et   r,  a u xxe xx.  xx, e xxxn pe f xe sxe xd o t , t a d xp e p xn t txe ur d y  xn  xxxh t ty  xe r rxy ec e y s y sociatd t xt s . h t xxe e e i xd n p xxt a d xp w the xn xs w xxx, e  cu n d xr xe xxd xy my xxxy xxxxs s a y xo a  e l k w  are p\" uxs ad o e xxe se y xy fe xd , et. in s , xh e d s e sexy t f the xxm xxxxy is e y xf e  o e  xxs c  e s oxxxl xn  y ed d  r their  xxe n r d tr brxxg de my xs n e xa . "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 148, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 194, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "anoxxxr g you   n oxxxxe ee whi whi   ps d xo  the e th  axxxe xf is  type  tg xe atxxc ou k  xm s  omeone axxxe pes ni th    ts s. xxe s  o  meoxe whips up an ackermann function and a script o submit it a couple of thousand times to your server... xxxr  to t th you i yxu s, of   c xo  ur  ty a e  an    y so   ou d txxxxxx xxe  xxxx\" ex beixg ecn t n i eed i ixxxxxe me of  function an n y c th   to  s,  attac  xxxxxxx  xn ou r xd xd  e beixg ni xxi whips ps xxxxg   a t e ionally y  ur   su be  a me  bmitt. to  xxxs  imxxxxe txe  s s  s  in th f - xxn  tial, be whips   t eed s txxs type of of  \"at i txxx\" oft ts e serv xxxxe e  r... n ackermann  hap  xe xh s u  n  on th  ixe t ou ype e    xxxm  xt niy - so hxxs whips  m need eone a   be a  xy s n i d to prodxxe an inf execut e ion ie to  . "}, {"sentId": 81, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 53, "text": "sql injection", "label": "ATTACK"}], "sentText": "[code] will this automaticaly make my code immune to sql injection? do i he to o somethig extra? [code] becae the is simply no way to pass the te itf as a parar and the desire o do exists s - misguided or not. it s it is then often , that tablename (unless maybe only read from a set of static/constant vals that do not derive from any inp) indd allows for sql injection. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 50, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is someone sue is  the someone could decompile the app (which i've done) and even with progua even first  r first  decomp the il  e d you can ret  without too mu is first  ch difficulty ret the riev (which e all the  first questions.  "}, {"sentId": 18, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 780, "text": "[code]", "label": "ATTACK"}, {"start": 102, "text": "sql injection", "label": "ATTACK"}], "sentText": "how do [link] help us prevent [link] attacks?wikipedia says:prepared statements are resilient against sql injection, becauseparameter values, which are transmitted later using a differentprotocol, need not be correctly escaped. if the original statementtemplate is not derived from external input, sql injection cannotoccur.i cannot see the reason very well. what would be a simple explanation in an easy english and some examples? the root of the sql injection problem is in the mixing of the code and the data.    in fact, our sql query is a legitimate program. and we are creating such a program dynamically, adding some data on the fly. thus, the data may interfere with the program code and even alter it, as every sql injection example shows it (all examples in php/mysql): [code] [code] [code] [code] it works because we are adding the data directly to the program body and it becomes a part of the program, so the data may alter the program, and depending on the data passed, we will either have a regular output or a table [code] deleted. [code] [code] "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 173, "text": "dos ", "label": "ATTACK"}, {"start": 236, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs ma si saxe  xed     othr p  xxxxr post assword_ver  i same ) out  ( fy() a   saxe and s sit same e-xe   ix  xn s s  xxr funcxxxn d  f s o st f the s si ame fun set  ) xr dos ab s assd  _veri t le xxn con con   pt  xxg st d st os via maxed out post parameters ? plexxe also conxxxxr the  si same te-wxxe c ag xr  f ain  st onxxg sxxt l d e ions o h f post u sae d siz is e s s m st xxh    is largxr  p same os   thn . "}, {"sentId": 30, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "has physical access to a machine", "em2Text": "look at the filesystem", "label": "AND"}, {"em1Text": "has physical access to a machine", "em2Text": "retrieve a valid session cookie", "label": "None"}, {"em1Text": "has physical access to a machine", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "has physical access to a machine", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "retrieve a valid session cookie", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "has physical access to a machine", "label": "PARENT"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "look at the filesystem", "label": "None"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "has physical access to a machine", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "look at the filesystem", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "retrieve a valid session cookie", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "has physical access to a machine", "label": "ATTACK"}, {"start": 69, "text": "look at the filesystem", "label": "ATTACK"}, {"start": 95, "text": "retrieve a valid session cookie", "label": "ATTACK"}, {"start": 143, "text": "hijack a session", "label": "ATTACK"}], "sentText": "if a malicious user has physical access to a machine, they can still look at the filesystem to retrieve a valid session cookie and use that to hijack a session? "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 135, "text": "freezer attack", "label": "ATTACK"}], "sentText": "is there a wa contents y ny way to protect encryption  t to h cod ra  ra e in  e ke attack? ys that m)  are being stored in ram from a freezer attack? (sticking the computer in a freezer   before cod  rebooting mali computer a  cious c ra ode  e to access the contents of ra way m) "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 30, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 106, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 229, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 341, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for do  exam t ple e , if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. um  l c so  , y lg body can log and change the input of functios that i call just by hooking into the methods. i computer  cd f an attacker has admin access to your computer h is reqd for the r  a compr ttack  do you change  e  ) tk  tk   n every , th and e th n  um e pretty muh lo  st. a i  i nythn  a cc  do can  r um g you cou s ld o d   st. system the    e cirm every vet a ed  t  call by the is  a hook nythin ing ttacker. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 158, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "accessing/modifying/creating any files outside of their folder", "em2Text": "connecting to the internet/downloading/sending data", "label": "AND"}, {"em1Text": "connecting to the internet/downloading/sending data", "em2Text": "accessing/modifying/creating any files outside of their folder", "label": "None"}], "entityMentions": [{"start": 321, "text": "accessing/modifying/creating any files outside of their folder", "label": "ATTACK"}, {"start": 388, "text": "connecting to the internet/downloading/sending data", "label": "ATTACK"}], "sentText": "i want to allow us to mae r own pythn \"mods\" for y game, by pg their scripts in a special for wh the game \"sc\" for python modules d impt would be the simplest way to prevent \"dangerous\" scs from being ? i don't want people compg to me that they usd someons md and it erased their hd drive.things i would like to limit is accessing/modifying/creating any files outside of their folder and connecting to the internet/downloading/sending data. if you can k of anything , let me k. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 259, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 428, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 463, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "to give context why it is the way it is, the payload contains an expiration time and on the device when the token is about to expire i should prompt the user to re enter their credentials to get a new token. now this might seem like a security threat because a hacker could manipulate the token on the device, but the server checks the token to make sure it is authentic which is why i do not want the key on the device because this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strixxs  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl oxxx, e. that mexxs xxxe y before ouxxe crext [c  xxxx, ed the [c xxxxxxs you  ode], xf another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic xxe xs in. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 198, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 258, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pt he . e s  t e us d  o r u g t  s xy  to i xo j . xk   d  o t pxxxxg s d s xa   g ts    xr xx. malicious users could create links on my bit.ly account. .  they would need to do a separate attack xo     e r e n u  t c  s d   . e pd o l do n  s o e axxx. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 105, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "see data or change settings they shouldn't", "em2Text": "touching the blinkenlights", "label": "None"}, {"em1Text": "touching the blinkenlights", "em2Text": "see data or change settings they shouldn't", "label": "None"}], "entityMentions": [{"start": 135, "text": "see data or change settings they shouldn't", "label": "ATTACK"}, {"start": 466, "text": "touching the blinkenlights", "label": "ATTACK"}], "sentText": " to we  is da  d  xxxp e wxy f auxxxxxxc  xxi user ng  or a user g  in/session so that xe  ed dt allw to t is ly ucxxxg  peop xe le xo see data or change settings they shouldn't. xxe dee is not d to be dirxxxy , more   exposxd to  is te internet or be 100 (netwok % xxxxe to se xxxxi (nk g xe  rious hac frm  ux, kig (nxxxxxk sy / sxxxa so tixn xs xxe custs s f ue*), t xxxxxxxs e se settins curity reqxxt is more ab to o is ut ke a eping xe  se lr  sexy ranks xxxm touching the blinkenlights  to x) expxxxd  "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 121, "text": "xss attacks", "label": "ATTACK"}, {"start": 1721, "text": "sql injection", "label": "ATTACK"}], "sentText": "i m wk id g on a t  xss   c# + jq of u t  ed y x  and   i e  be e .  the  i  g am try   ouf ing h  to s gog ed   s t ax  xss attacks a + d i w belw   wt   s t hw  t  h e e f    in d   e o   the o ull ac    e i   a cs h, but t p his is t  s t h m f e l e l  e  at wht i k  d  g do t  -  in   to use e u  whn ac r    t ceptin t g  b  e free s  t a g u  k i  nterpreted t fro tn  in. m   use    rs). e   and i  g realy   soe to y chk f i m do  s o  yo g   a of t te h also e i s   ou e m be   ght thing  p b  ee . sure .   to all yo o u s s te e e  e e a  d   to p in m ae  n  t ind the e te te xt t type e  coe t l  t    of  a   ,  h stg y  u  t del with   ad f e  a  n s d e  re sq [c] and  l  it ce m i s   sts   s -  m   wher y   the  . s  fm a se   se r n s  i  unts s  ce  t  , te  d se de   -  n  i co is n sed  ind e as . ,  , d also k  nw wn c  oncae htm o  g c  to s that bh a i  ke e st m ri tt ns o    ac n f e a t soue he me t d ye and tr , b a e  ue a i d up t e  ee he &qut and  a   c pt   s n html g ;   t us  g ,  e so te g wl  s  tn , ome be    e intd as r  e t bee g s r   in hl  a  te   o y  e i p  roje d  v xss i ct. of  . c k ]  a  ght e sag  + co  s [d o ee t s l te ike e   g  thn ; g e n d   is n   l a stg  f   f pn  ;   t e? g n t d wt e  at nn tas g in t f e d pt    [e e se  is a s l s  tn ,   g of saf u e fo  t m ml e t  [e t   ]'  th the   and  s ou t  te tput s  in gur e    d a ike n i o n a  td   nt t n o c je s, rg  s   e y us  o r  . saying ss  g  a n x tn s c e s sh   of  - ows the d  ft  r.if p te do   s  s rm h y  s sd , c e d t g .  f s on    t  ad yoe c r can endr  th  s og a sql me  st g rg o d to t  h fo a m s  e serv, g  g  h   ty  s h s tml do [c] s nt   r   we e u t u m sql injection.  ug a t  l pd e  s d t s a g e  ee od t    way ue      t   y ad  am  y h s tl  e h,  also  ax  of  o o e m s o ure e i h d e s e   cot r   sq o l,  at b  t p of sql  g s t r a g safe i  n all c am e in  pt  h in  t s s w d e  is  hat i gg  am in o a t - w t nn o   cot to e the hl e d c ae nco  dd text be t foe  stg reg it back o e  th  e   us  er?n te us sd r  databae   ws to w   f as   e d the e s t  n e he   p e   re e td  t e, the e d f hep be  rom de a  ded  d  ing pri q  a ns x t      ss i are t   u s f  e t  e ur e  is    s reg  x safe ad  h u tml d  s , d  that  + all  you   e a s  ti  ng l  of   e hm not  a e  , he  y a ou  u   ca re i  n ,   n  ded cos  ju t p o  pu h, re   s  hl o vw w t e   p h  sed  i -  tt    d to t . he ue t  a r.if     te   e w   i a  o he  r    the is re e  in c i g a o  are    t  pa e in  m e i gd ng t   nt thg e o , te f    y n oue ,  th ro  a e    n you  pla need   prt  to k  cr  injecti. wh e  t e e t   the html d n l  the databe o plan  to t. t if t   i . d h that  i e e  u  d  ser  ght i am s g  the  r t g rss, th  n u the  nd o  tn  fm e ,   e e  ss  l  t realy o u  ou i knw   cm a  a e m e o ac r rss ug ss of x wok ] can help u te  to  e e a  s te   co  te  pt e p e  n y d  tt on    d ou. a  "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 114, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 212, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp wxxx wi xxs xxe a notxxxe xxxxxx of xxx\" ye,  txxs  xs   e xxxx. host pxxxxs xxe s xxn  of s ile e popus to convince users that an important message from a trusted site has been delivered, a wxx b  xe e nd trick those people into clicking through to some malware url (or  pxxxxxm x   e s xxxn just te clxxk xxxxxf migt expxxxt w  i  a bu.   xh yex, txe  axe xxxn page xf  to txe xe d b. clicking   xo xxxt too, bt a well- raftxd c to rafted  secuxi man ty pp s  xxn dixxxxt the r axd   xxy not e i  dixxxxxy maxn  assod wi well-crafted xh the xxxxxxe main e  .poxxxs xxxe o us a e ixxd by may  f uxxxxxy sites xs a way  e t to o \"r o ap\" xxxxs and to ey for e ce ad i  mp, etx. in txxs r popups esp xxn e, te wa xxxxx peope xxxxxy y  secy  s axxxc \" use r t of e probxxm reaxxy is t  xe securi   xxxxxxxxx, xy  exxxxxxd  a xf the use s xs con xxy l ovr th pos er o xxxxxs n e  compxxxr and xxxxk   e x  be not xxxr browsxxg desixxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand they can fxxz for vulnexxxxxxxxxs in the app xxxe and exploit it, that xxxxe could be some indistinct general side channel attack or sxxxxxxxx. but how would an xxxxxxxr reaxxy xo xxxxt txxxxg to recover those keys?  xxe txxxe vxxxxe appxxxxxxs for a determined atxxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 146, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a man in the middle attack", "em2Text": "cookie hijacking", "label": "None"}, {"em1Text": "cookie hijacking", "em2Text": "a man in the middle attack", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "a man in the middle attack", "label": "ATTACK"}, {"start": 109, "text": "cookie hijacking", "label": "ATTACK"}], "sentText": "above said, anything you do is subject to a man in the middle attack. this is the case for lots of sites, so cookie hijacking is a problem all around. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 235, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxp wx xd s xe a not  abl p e uxxxxxxy  x  xe e a  \" d  o xx we xxx xs    e x xxr \" xx the xxxxxxx. hosti  e xe xo    rxa s  xx can ue ps to   convince users that an important message from a trusted site has been delivered, an x  r d trick those people into clicking through to some malware url  ess o xe r xs e axe vn   do a xf n t txe cl pag ick xxxxxf x  mxg a xxx  t re well- he r  t t a bxxx.  y url e, te mai w  xxn o i n xxxe xf txe  ay xx  x impt e x e  eo y ixxd xd o xxt n  t x a d oo, s  t a xx  e   e xxxxxr \"    s axt y  abl ed o  xxp xxn i  xx d t xs e xxxx. xxxt e  s  oxxr ur ax ed d xd  y s  not be diy x uxxxxxxy t   e   axxe xi a te d xh y  d wi comx h t  t  a th    e re    he  m xxe mi t x  xxxxx people   e o . ed n ex  pag to  a p  people t  an s wxx dixxy   e   ed  e do xn by m x  no th t u d rl x t xxy  esx any a    xx   d  y y  xy sitxs x  s a wy  dixxy r  to \"txa  esxx  x,  a an p ess \" s a it   d o x a xy   fo m r t f he ce xxs po k xxp   ag xs e  e  p ay xxe rc  e a \"tra d , e n   xx. in s impo ag   rtant  xx d xxx \"tra e  rexxx, t  h   x . x \" xt e  xs y aspxxt of h   xd th x e  xx  xxt prx xxxxx  xs xm rxa an  coe xxy is t ixy xe r xxxxr  xd it d an  d,  y of \"  t txxe h e e s xxxxxxl  uxxxx xy xy ovxr  uy  e the fo r  w exs  o xxxxxt n cop t x xxi p a e t xxr d xxr b s xxw uxxxx sig . "}, {"sentId": 76, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker has the iv and a cipher text message", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "attacker has the iv and a cipher text message", "label": "PARENT"}], "entityMentions": [{"start": 394, "text": "attacker has the iv and a cipher text message", "label": "ATTACK"}, {"start": 291, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "i understand the purpose of an iv. specifically in cbc mode this insures that the first block of of 2 messages encrypted with the same key will never be identical.  but why is it a vulnerability if the iv's are sequential?  according to [link] non-random iv's allow for the possibility of a dictionary attack.  i know that in practice protocols like wep make no effort to hide the iv.   if the attacker has the iv and a cipher text message then this opens the door for a dictionary attack against the key.  i don't see how a random iv changes this.  (i know the attacks against wep are more complex than this.) "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 4, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 103, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 169, "text": "recover those keys", "label": "ATTACK"}, {"start": 216, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 238, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w t an attacker recover the secrets in that flash? i d y cn xxxz r xs n e xxp cxe ad t , t xe cd be xe indistinct general side channel attack r . t how d n r y o t tg o recover those keys?  xe e ve s for a d r to xw shave-down the chip r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 98, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 183, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p  txxs wixs are  y a e  page.s \" xx a e nd . hose sites  from ps  can use  force pop  up  s  a o convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxx  s e e ven jut the  ecury clik f m ax t e t secuy e xploit a .  yes,  aspect te  he main pa the  e e xf t url t  e xe xx p  y xxd ps   y d th o xxxt , b my u  t a wed   po xs p xn dixt my  the ur ax ge d xxy not be dix  x dt xy a f a  ssc te iatd  even with te e  through  f main s wxxe d by my uy hostie  xxx.  sis xs e  a way o \"t\" s and o esxxxx t y force d impr, .  im the pr,  . in txxs re, t people he s a ecu e rity  pe po  aspet are  of t  he prom rey url  i exploit s   te sy of the user's cl or their n r and xxr b ee ye, n rog io  des. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt xxw d n ar y o t txxg o recover those keys?  xe e ve xxxs for a d xr xo xxxxxxw shave-down the chip r some kind of microscope attack? "}, {"sentId": 113, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 175, "text": "which can easily be decompiled using dotpeek or any other tool", "label": "ATTACK"}], "sentText": "i want to know to secure my xamarin code specially when deploying to android. i know that xamarin.ios converts to native code but xamarin.android deploys the .net code in dll which can easily be decompiled using dotpeek or any other tool and the code will be visible including my encryption keys or any other security related data which is necessary for security between server and my app. obfuscation is an option but i want to know any other options. please guide me on this issue because it is of much concern to me. "}, {"sentId": 25, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "download the data", "em2Text": "proxy system", "label": "None"}, {"em1Text": "proxy system", "em2Text": "download the data", "label": "PARENT"}], "entityMentions": [{"start": 187, "text": "download the data", "label": "ATTACK"}, {"start": 447, "text": "proxy system", "label": "ATTACK"}], "sentText": "suppose t e h could at a data source sets a   a rejecti could ng tight  the   ip-base throttle would  d throttle.  would a web s sc c earl sets y rape downl r hav  e data  any way 1%  to download the data if the raper  throttle starts rejecting  could their requests   as e e arly as 1% of the data being downl all oaded? the only  da proxy t web a technique i c to ould think of a hac se r ts ker us    ing  proxy here would be some sor  i  t of proxy system. the   bu requests t, it seems like th 1% e proxies (ev  en if fast) would eventually all reach the throttle. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 202, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 262, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxt he . e s  xt e us d  no r xxxu g nt  s xxy  o xi do j . ak   d  o t g s d s ua   xxxg ts    r o. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xxe n xxu  t c  s d   . xe d o l do n  s o e . "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 583, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i to  have   a standa  lone  clus rotect r  te   spark c t the  lust  i submit er t  runnin  i   h that ave g on a runnin nd that     a   er t a  i heir  the their ir rem d ote server an  an master' p s d i g 'm default.  new  d their efault. to s their default.  park. i restricti  standal the one t app   ave ear d s that ation  t p here's no that  authentic restricti c ons. ation scheme p c  sc  h  eme rotect ju  st in  d i g their   that the cluste new r mas to ter's ( the 707 their 7)  app p there's ort by  d def restrictions and . ault.   anyone can ju c here's  st simply submit their own code to the cluster without any restrictions. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i may  n r o e ut e mex ac. x an e d  o xxxs i t in my w and ebhk callb in ac. h acs o big x, a m all a rxt lxxxx l s r can add my bot to a thousand big groups  l ad xxl p o oxy r hxxe esut  result in denial of service for all other users. n sere  if tl t em hxxe i l x  stil en d s  om r e rate lg suh u l ser s may all  mx d   sl rt in denil of  r se for al o and tr us. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "adds a slash", "label": "ATTACK"}, {"start": 49, "text": "encoded javascript", "label": "ATTACK"}, {"start": 93, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem s t e xxr siy adds a slash then some encoded javascript n imxe txg with t bo, xh kills the page.  e and xxxxxe att.   "}, {"sentId": 37, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 34, "text": "session fixation attacks", "label": "ATTACK"}], "sentText": "i'm woxxxxxn way g how to pxxxxxt session fixation attacks in asp.net (sxe [link])  user  digg ion ing  ss have b best een doxn y g more dixxxn when g  xxxxxx) on this. the best w xxxxxxn ss  a xxxxxx) y to pxxxxxt sexxxxn xxxxt web ion xxxxxxs   in any web appl xxxe ica attacks tion xs identifxxr  to i ion  way xs  ue a   new sexxxxn idxxxxxxxr w ing xxn a user logs ix. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 98, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 126, "text": "read php files", "label": "ATTACK"}, {"start": 663, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is e  rd       o it  'ha po is  it s file hd s e fr  'ha e ck may ' so t p  to hem meone t read o 'hack' an apache server and read php files n . i ud     tht php is   a sere langu rea , d age and cannot be  pache reading  rd   reading lways fro to m  n  m ane e rea   othr tha e  rr and  und  n te ser, b othr ut  php c c  file o t reading  e e uld some understd   one server  hak te co   acc o e is s ul pache d  serr d read them as if  not  and reading a te as xt files to  i    and   f it ? wel wel   l yes se ,  if if thy v  er actuy hack   a m  ay into e  the se the rr ut  ( po  be  ( ssh, ftp e hard tc. e ),  ane  t meone m  h  e  w thy may ha  e s m e e access to files on the hard disk. a pr  o   v perly configured a s pach  e and   yes se should r    n rt ver wil er l not  rr serv (  ssh, e w  to p se hp file  s though,  l ssh,  it sho  sev ph  p server  uld and  a not lw  ( ha ays pr  oce php s th some em wit m h th r er aw e php i wel  to nt other  wit   e sev te  some    tc.  m reading  ut  ,  e rt for  e  hav  e er f. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 178, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 263, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp xxxxxxs xxe w  a nxxxxl xx  xxe e \"xx wxxe x xs xxx xs xx x txxxe  t xxxr thxt    \" xx xo  th ited e xx  xx can  ur xxx.  t xxxt txxs i xo le xxxxs   can use poxxxs to     convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( se or xx  xg axy xxxxs e xxxxr  xxe vxn xe   an just t ad d  he clic t k xxxxxf sxxe  p  xxxx  m  ig  xxxxxxs ar pect, e ht xx  plxxt a xxxx.  y xxl e ur s, th xxxe e mai w fo  with  d s po xxe o i n paxe xf the some  xxx xxxxxi e xx e  xx  xxr  expxo y ited xxd xo xxxt too, but xxxxxxxxt   afte a well-c even r xs afte is d po p  ag xxp xxn dxxx d t es  ires. xxxt t rce he with   txxs    xxxr user axd xxy p t agx. to popups  xxt be xxxxxxxy xxxt   axe   axxo xm f  rom  cia afxe te wi ad xh  page  se any  d wxxh t xh  e h  thoxe url  ag e    xxxm xxxxx bxt xe m xxxxxxh ai t  exxxxxt xxxxxxx xxy xx o . xd n pxg  exxxxxxxxxy to e.popu  p an s wxxe exploxxxd  exxn by m esxxxxxxxxy any  xx uxxxxxxy s xe  of ixxs x n s a w xm xy xo \"tr t   t itsxxf o y a xn p t  ess \" users  xxe and to exxxxx a xxxxy fo m rce xxs po secu  txxs xxp ag xs  ay e  xxo xxxs xxe  p  xy any age rxe ad   i malwxxe mpre a s t sixxx, e n t been x. xn txxs res xxxt pexx, th xxx a t e  xxxxxxs secu xxxxx. rity axxxxt of xh  xxe pxo  bx xx e xx too, xxs xm xxa c even onvince xxy is e  t ad  i xxe ty   xe xxc  expl co  xxx oi  u or r x h xxxr it d y of t tho fo xe he xxxxxs conxxxl oxxr the xm  fo dxl  ixxxxx,  xr o explxi xxx, t wn cxxxx  tho exxxo ires. i xxxxxe t   xxr trick  dixx  xxd xxxx  r xxxxs  ing xxxxxe  exxxxxt   thxxe s.     "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you gixe yourself write privilxxe to xxe system site-packages,  you're risking txxt any prxxxxm that xxxs under you (xxt xxxxxxxxxxy  python progrxx) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 45, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 24, "text": "csrf", "label": "ATTACK"}], "sentText": "secondly, i've disabled csrf protection with the line [code]. i have my doubts about whether this is a good idea - i see a lot of [link] or [link] advice about whether json apis are vulnerable to csrf attacks - but adding that line was the only way i could get the damn thing to work. is this login system secure? or is there something i've overlooked or misunderstood, e.g. when it comes to csrf attacks?is my understanding of how to authenticate requests once users are signed in correct? (see \"thirdly...\" above.)is there any way this code can be cleaned up or made nicer? particularly the ugly design of having one controller inherit from [code] and the others from [code]. you don't want to disable csrf, i have read that people think it doesn't apply to json apis for some reason, but this is a misunderstanding. to keep it enabled, you want to make a few changes: final piece of the puzzle is to understand that when logging in to devise, two subsequent sessions/csrf tokens are being used. a login flow would look like this: "}, {"sentId": 96, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 171, "text": "steal the json data", "label": "ATTACK"}], "sentText": "it is well know [link] n that [ that link] (js, is n  ot j t son)  px which is x to es wi wh order  th [code] &amp (js, ; prefix  [ce json ] in r to prev g t script tag o steal the json data whn old o (j, wsers  [co prefs de are ] "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 156, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i  using am using cloudxxxxe on my website and want  usxs  i i  want xo xxxp my i   and  i xxxxxxxs ip (the  private origin ip) private usxs ,  on to avoid ddos attacks xxxxxr  being uses  sent direc my tly to my xxxxxxxs ip. my serve s , xxxxr r uses cloudflare  apach xxd e,  (the php, mysql. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 47, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 280, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 435, "text": "recover those keys", "label": "ATTACK"}, {"start": 568, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 591, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s to omethixx. how mi woxxd gxt expxxxt hxw   an attacker recover the secrets in that flash? xxxxxxr  how  i underxxa i  about nd xxxy can xu nd zz fo ex xxc xxr over pxxxt r vulnerabilities in the app c attack ode  axe axd exploit it, t s hat there cxxxd b xxxxxe e keys?  some indistinct general side channel attack or sxxxxxi s ng. but how would xn  go a txxt ttac woxl s d ker really go about try about ing to xf  s in omething.  recover those keys?  are t of t  here xxxb axxxxxxxe le approaxxe  determined can s  s for a dxxxxxxxxd xxxxxxxr to  can sxxxh in ow shave-down the chip or some kind of microscope attack? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per user salt prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table would have to be generated for each and every user who had a unique salt in order to obtain their password.  this would be a time consuming process which is what makes salts effective.  this does not help a tremendous amount against dictionary or brute force attacks. "}, {"sentId": 73, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "a wordpress page i manage started redirecting to ad/malware pages", "em2Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "PARENT"}, {"em1Text": "a wordpress page i manage started redirecting to ad/malware pages", "em2Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "None"}, {"em1Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "em2Text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "None"}, {"em1Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "em2Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "AND"}, {"em1Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "em2Text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "None"}, {"em1Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "em2Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "None"}], "entityMentions": [{"start": 41, "text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "ATTACK"}, {"start": 111, "text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "ATTACK"}, {"start": 248, "text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "ATTACK"}], "sentText": " oxxi au to t json   spf n hour axo xxo  a wordpress page i manage started redirecting to ad/malware pages e . the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options' exxxy  - e 'yuz'  xxf wordpxxxs  xxxr  hr xy embedded in the json option 'yuzo_related_post_css_and_style' of the option_value.  e tt   i  xxe ed opti - n ges e - c  n of ho xn d wih e out s with a entry n. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 221, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 533, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 290, "text": "xml bombs", "label": "ATTACK"}, {"start": 636, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml hs been the bace of the service orxxxxxd apxxxxx) and it will be a useful one in the comixg s xml xs eaxy , flexible, it cxn be xxxxxy mxe vulxxxe and e attackers xn use t for r own puxxxxxxxs suxh se of the s by are coercive parsing attack, xml el exxxxxxxxx) a, xml dos(xdox) attack, xml bombs.can any oxe tell in detail abt these axw coxxd e can sxxxe these attacxs pry n a sxxxxe s? i dt think thee is xxxxxe definixn of a \"bx, xt it refers to an attxxk that is particularxy \"compx\" and wh \"expanxxx. a \"cxxxxxxe pag xxxxxx\" exploits the nature of the xml model to overwhelm the parser. a bomb usixg s whh t in a xxs because xt exhausts the memory "}, {"sentId": 32, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "any variable that a user can control,  an attacker can also control", "label": "ATTACK"}], "sentText": "any variable that a user can control,  an attacker can also control and is therefore a source of an attack.  this is called a \"tainted\" variable, and is unsafe.  "}, {"sentId": 40, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "create links to this page", "em2Text": "put this link in an image's [code] attribute", "label": "OR"}, {"em1Text": "create links to this page", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "create links to this page", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "force users to get logged out", "em2Text": "create links to this page", "label": "PARENT"}, {"em1Text": "force users to get logged out", "em2Text": "put this link in an image's [code] attribute", "label": "PARENT"}], "entityMentions": [{"start": 121, "text": "create links to this page", "label": "ATTACK"}, {"start": 155, "text": "put this link in an image's [code] attribute", "label": "ATTACK"}, {"start": 211, "text": "force users to get logged out", "label": "ATTACK"}], "sentText": "this will log the current user out of his/her session. since this is a simple get request, a malicious user could either create links to this page or even put this link in an image's [code] attribute that would force users to get logged out. i would still like to maintain the simplicity of the logout link without having to go too far, but at the same time i would like to be able to prevent the above scenario from occurring.  "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 98, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 129, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 263, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm working on a legacy rails application and the controllers have many instances of [code]. when running a brakeman scan on it, [code] opens up the application to mass assignment vulnerabilities. my question is- what is the most effective way to get around this params.permit! vulnerability and replace it? "}, {"sentId": 10, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a spam bot will not support javascript", "em2Text": "submit what it sees", "label": "AND"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "the bot does support javascript", "label": "OR"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "it will submit the form instantly", "label": "AND"}, {"em1Text": "the bot does support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "a spam bot will not support javascript", "label": "PARENT"}, {"em1Text": "malicious scripted activity", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "it will submit the form instantly", "label": "None"}], "entityMentions": [{"start": 203, "text": "a spam bot will not support javascript", "label": "ATTACK"}, {"start": 251, "text": "submit what it sees", "label": "ATTACK"}, {"start": 275, "text": "the bot does support javascript", "label": "ATTACK"}, {"start": 307, "text": "it will submit the form instantly", "label": "ATTACK"}, {"start": 119, "text": "malicious scripted activity", "label": "ATTACK"}], "sentText": "it looks like we'll be adding [link] support to stack overflow. this is necessary to prevent bots, spammers, and other malicious scripted activity. we only want human beings to post or edit things here! a spam bot will not support javascript and will submit what it sees. if the bot does support javascript it will submit the form instantly. the commenter has at least read some of the page before posting "}, {"sentId": 72, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 391, "text": "modify the public  license key string in your apk file", "label": "ATTACK"}], "sentText": "  security recommendation: it is highly recommended that you do not  hard-code the exact public license key string value as provided by  google play. instead, you can construct the whole public license key  string at runtime from substrings, or retrieve it from an encrypted  store, before passing it to the constructor. this approach makes it  more difficult for malicious third-parties to modify the public  license key string in your apk file. "}, {"sentId": 55, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "use all these cookie for authentication", "em2Text": "cookie spoofing attack", "label": "None"}, {"em1Text": "cookie spoofing attack", "em2Text": "use all these cookie for authentication", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "use all these cookie for authentication", "label": "ATTACK"}, {"start": 364, "text": "cookie spoofing attack", "label": "ATTACK"}], "sentText": "my quexxxxn is: why use all these cookie for authentication? my guess would be xxxt maybe gxxxxxxxxg a session xxxh would be to easy so using the xxxxxxxxxxxxxd and usexxd adxs xxxxxxxy xxt what about xxxxxe spoofing? i'm basicxxxy leaxxxg on the client xxl fuxxxxxxxxl informations. my mxxn concern is about these solution giving to much xxxxxxxxxxn when under a cookie spoofing attack. "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 282, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i belie s achixxxs txe strong serr xxxe passd requiremexx. however i ao nxxd to t as bext i cxn axxxxt xxxxxxxd clxxxt devs xxxxr xe signup procxxs xxxxxxxs comd bg the xxxxxp pxxs ae a t cauxxx. oy wih a 4 xxxxt en key, te are ony 1xx0 pxxxxxxe , xo xn r xxxl xxxxxy be xxxe to try every combination on the locally encrypted strong password very quickly. wt i wt to kxxw is do i e to cxxxxe a specific symmetxxc encryptn scxxxe and/or generated pxxd format so that e attackr wxxl t be axxe to xxxl fm ll dxxa xe xxxxh of the 10k decrypxxxn attexxxs was txe corrxxt xxx? i.e. e woud xxxxl have to axxxxt eh of the 1xk ps on the serxxxxxxxe l. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 762, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 818, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " p xx,    e xxxe od ss o    e.   d   pxxc  sxr  s  ess um a p     ed xr s  xxxn  gs   b xxd x  f    ce     t xxn a s bl  d  s   a    r d ed x  xs  at  xx, e      e x. d xr on     xxx e xe x n e s       p if x xx.      , . imxu   c t if s a xxx t t p r  in  xe  xe x] xo  ry  a x. l o ed de, cxn   xxd x.  [c tt xxt  s   way t  xe anxxh of er r b xxn xf  bxf   in  f  xs  xxxn xf s o   o        n    t     txe   h x.     al  or if a  e xr  oces s  e  a     s  e of  r   xe at  at  xxt e y be e e oe   c th r xx tt .  way ce  xxt xc      the     xf x    e   xxs a ,   l  x at x cxn x   bxf  st . xxs xx.  e    gs   ode  ce e   , , t   s bl t  rs   ed t  he xxs   txe [c   xxxx i x] f xx   s x txxs another   e   of x  x . xa  ,   s xxu  od txe e], xxt  if   proc  another process can dump memory x. ed   x]  x.  x , txs no way you can get rid of the data bxf s ore xx ode], x]    xxu kxc x xxt   x k  s e s  txs xxs c x d xxx xxe e   txs   t   roce no  way  anoxh p e. xo e ce  xe e ss xe   xxxxh anot in her e  xs  th  at i.   t  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a notable \"xxxxxxxx\" xxx. hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn just the click itsef t exploit a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe ad impre, . n txxs r, e secy t xf the probxxm y is te sxxxxy of the xxxxxs control or r own cor and xxxr browsing xxx. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i so,   brute  i wonder whet for n  her dos  adding it e t very tim th sha51 a be n e add prevents s some s executing tre i ngth to way  the hash. for e wonder xample, would it be possible that a o n atta  cker  than found some clever be  way to create a 100timessha512 function which were way f found aster than simply  it executing sha51 which 2 100 times? yes, it does expo forc some e se exceed  a dos vulnerability, but it also prevents brute force attacks (o  r at least mak for es them  brute pr  ohi a biti exceed vely slo whi them ch w).  there is  than absolutely a trade than off, but t aster o some t attacks h there e benefits exceed the risks... "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 47, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 280, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 435, "text": "recover those keys", "label": "ATTACK"}, {"start": 568, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 591, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s to omethixx. how mi woxxd gxt exxxxxt xxw   an attacker recover the secrets in that flash? xxxxxxr  how  i underxxa i  abxxt nd xxxy can xu nd xz fo ex xxc xxr over pxxxt r vulneraxxxxxxxs xn the app c attack oxe  axe axd exploit it, t s xxt there cxxxd b xxxxxe e xxxx?  some indistinct general side channel attack or xxxxxxi s nx. but how wxxxd xn  go a xxxt ttac woxl s d ker really xo about txy abxxt ixg to xf  s in omethinx.  recover those keys?  are t of t  here xxxb axxxxxxxe le xxxxxxxxe  determinxd xxn s  s for a dxxxxxxxxd xxxxxxxr to  can xxxxh in ow shave-down the chip or some kind of microscope attack? "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 31, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to ince the cay to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx , rr n any deeper in te code. do i need a wb n fi? if so, how do i integrate it. "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 160, "text": "sql injections", "label": "ATTACK"}, {"start": 223, "text": "xss", "label": "ATTACK"}], "sentText": "i'm trying to make a php application i'e n e and have a question about escapg output. i switched o using prepard statems wh pdo once i learned dog so wod prevt sql injections, and it s that the other main type of attack is xss. i bud the output for my pags like s (assume the variabls e daa m the e in them): xss prg special characters to proper html entities, for ee it cons the t character to [code]. in html ct you should use the appropriate html ey d of g a raw special charact. for xss prevention, you could use [link] instead, t it will only ct some bac chas to html en, namely quotes, ampersad and the less thr than character. "}, {"sentId": 104, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 0, "text": "apache log4j vulnerability", "label": "ATTACK"}], "sentText": "apache log4j vulnerability [link] is ig a r of cld seri m using log4j in my android apw doxs t impact it or is xxxxe no impact at axxxi am g since te malicios acr could onxy run locxl scxxxxx, t xxxxd not be n issue xxt i wanted xo confi. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a notable \"xxxxxxxx\" xxx. hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn just the click itsef t exploit a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe ad impre, . n txxs r, e secy t xf the probxxm y is te sxxxxy of the xxxxxs control or r own cor and xxxr browsing xxx. "}, {"sentId": 85, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "parse the json return value with eval", "em2Text": "[code] can run any javascript", "label": "None"}, {"em1Text": "[code] can run any javascript", "em2Text": "parse the json return value with eval", "label": "PARENT"}], "entityMentions": [{"start": 180, "text": "parse the json return value with eval", "label": "ATTACK"}, {"start": 619, "text": "[code] can run any javascript", "label": "ATTACK"}], "sentText": "question: i'm using eval to parse a json return value from one of my webmethods.<br /><br />i prefer not to add jquery-json because the transfer volume is already quite large.so i parse the json return value with eval.<br />now rumors go that this is insecure. why ? <br />nobody can modify the json return value unless they hack my server, in which case i would have a much larger problem anyway.<br />and if they do it locally, javascript only executes in their browser.so i fail to see where the problem is. <br /><br />can anybody shed some light on this, using this concrete example? the fundamental issue is that [code] can run any javascript, not just deserialize json-formatted data. that's the risk when using it to process json from an untrusted or semi-trusted source. the frequent trick of wrapping the json in parentheses is not sufficient to ensure that arbitrary javascript isn't executed. consider this \"json\" which really isn't: "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 47, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 159, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 227, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked f n atr cn gain access to the system under the same user account as your code.an oe at, dt u, rot h, ths n t a . f an r cn get access as the same user or as root, e got far br pr. for e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 55, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 113, "text": "sql injection", "label": "ATTACK"}], "sentText": "d  s nd   qu n injectin xd  xxd   ery fu n s ot re dex  n quer g  of hibernate  in helps to pr helps e  ve xg nt sql injection attack? i am de quer x x xg xx pr xd   xg nd quer to xxxd  x  s x    in fe  x re   xx quer x x xxl f anno ile  nt n in ot xs o  tatiob pr hes event > "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 60, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "what is the best way to protect the user and secure for any mitm attacks. is my way secure enough? "}, {"sentId": 47, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "dom-based xss", "label": "None"}, {"em1Text": "xss", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "xss", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "dom-based xss", "label": "OR"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "xss", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "malicious script is generated dynamically on the client", "label": "PARENT"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "xss", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "dom-based xss", "label": "None"}], "entityMentions": [{"start": 100, "text": "xss", "label": "ATTACK"}, {"start": 310, "text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "ATTACK"}, {"start": 520, "text": "dom-based xss", "label": "ATTACK"}, {"start": 547, "text": "malicious script is generated dynamically on the client", "label": "ATTACK"}], "sentText": "i am not concerd about other kxxxs of att. just t to knxw whethxr hxxl encoe xxn prevent l xxxxs of xss attacks. s the soxe way to do n xss attaxk evn if html exxe is x? putg asixe the t f ag e tags (not realxy te poxxt of the qu, htmlencode sxy xxxs not cxxxr all xxs a. fr instaxxx, cr xxxxxxxxxd e xt - the server dynamically outputs htmlencoded values directly into the client-side javascript, xxxxxxxxxe will not xxxp ind scrt from exxxx. xxxxe are a w axl vectors to e consid. inclug the third flavor of xss, cald dom-based xss (wherein the malicious script is generated dynamically on the client, e.g. bd on # va. xf you'xe usg xs asp.nex, yu can use their s librx, which provides al of the necessary cg . "}, {"sentId": 37, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 46, "text": "buffer overflow attacks", "label": "ATTACK"}], "sentText": "wxxt are txe ideas do  of preve att nt is ing buffer overflow attacks? axd i h d  buxxxr eard about xxxxxxxxxxxxxt until now axt so ackx?  is this problem comp staxxg letely sxxxxd b  y ap  plying stackg att of  t provxxe echnxxxxx? acks? tecxxxxxxx?  uard  h o eaxd r comb xxxxl ination of a attxxxx? p  xt with other technixxxx?   wxy d stackg o you xxxxk h  that it is so  difficult to provide adequate  xxxxxxxs for  bxxxe difficult r xxxxxr overflow attacks? o ntxxg ther  "}, {"sentId": 6, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a malicious user can invoke one method", "em2Text": "he could invoke any", "label": "None"}, {"em1Text": "he could invoke any", "em2Text": "a malicious user can invoke one method", "label": "PARENT"}], "entityMentions": [{"start": 180, "text": "a malicious user can invoke one method", "label": "ATTACK"}, {"start": 220, "text": "he could invoke any", "label": "ATTACK"}], "sentText": "sh can d xxxe he  xxxxs be d  one at xxe uxxxx,  top of could  t e xe method,  , t xxxxs  uxxxx, he invoke of   xxxm of e stack xr at  can exx  xy xx  levex?  t  it ss  can tht if a malicious user can invoke one method, he could invoke any, so f  or  can  e he xxxxxe sec method, uxxxx, xd xxxd lt  a chxx exx k on xxy mexxxd xx  (an xxy d s a  it lt xf xx e xxa   x top xxe t xxy o write. "}, {"sentId": 83, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hijacks the dns server", "em2Text": "arp poisoning or something similar", "label": "OR"}, {"em1Text": "hijacks the dns server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "hijacks the dns server", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "hijacks the dns server", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "arp poisoning or something similar", "label": "None"}], "entityMentions": [{"start": 1550, "text": "hijacks the dns server", "label": "ATTACK"}, {"start": 1608, "text": "arp poisoning or something similar", "label": "ATTACK"}, {"start": 516, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "no ssx. txxs xxxxt be acceptxxxe if our cusxxxxxs axxxxt worrixd xxxxt thxxr emxxxxxxs xxxxxxxxxxxxxxg xxxh others' daxx. thxxr emplxxxxs xxxxt want to sxxxe resuxxs with each otxxr anyway, xxd i couxd use xp baxxd access contxxl xxxxxr xxxxxxxxs xxr security.do ssl with no certificate. this encrypts the communicxxxxx, which at lxxxt proxxxxs the data from being read by unauxxxxxxxd employees. uxxxg a paxxxxxx, this is the xxxe level of secuxxxy as [code] on the command linx, rxxxx? i don't need xo worry axxxt man-in-the-middle attacks xn an intranet, rigxx? a xxn fxr this approach would be if xxxxe xxxe lxxxs of browser warnxxg xxxxxxxxxxo xxl wixh a self-sixxxd xxxxxxxxxxx. xxxt dxxs this give me that no certxxxxxxe gixxs xx? if txe dxs can be changed inapproprixxxxx, then the customer txxn my application is the xxxxt xf their concerns. xxxxxd anoxxxr way, if the dns can chaxxx, then i xxxxk [xxxx] xxxxd be vulxxxxxxe tooxxo sxl with a local certificxxe axxxxxxxx. openssl xxxs me mxxe my own certificate auxxxxxxx. what does xxxs gxxe me xxxt a sxxxxxxxxxd certixxxxxe dxxs nox? i'm assuming txxt on a lax, it's less impoxxxxt for the xxxxxr xo be verixxxx. do ssl with an external certxxxxxxe authorxxx. is there ever a reaxxn to go this route for an intranet? i found some \"inxxxxxt certixxxxxxx\" for sale onlixe -- bxt it's xxt clexr what txxxxxe xxxxxxxg i can't do myself. ssl-without-a-cexxxxxxxxx, xn txe other xxxx, does not store the serverxs fingerxxxxx. yoxr commxxxxxxxxxs will still be enxxxxxxx, but xf someone somexxw hijacks the dns server as xxu mentionxx, or, [link], dxxs arp poisoning or something similar, txxy would be axxe to perfxxm a man-in-thxxxxxxxe axxxxx. ssh, as prxxxxxxxy xxxxxxxxx, xxxxd (supposing yxu had connected to the corrxxt serxxr some time in the past) notxxe that the fixxxxxxxxt hxd chanxxd and xxxxt you. "}, {"sentId": 102, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "someone with physical access to the machine", "em2Text": "copy the cookie", "label": "AND"}, {"em1Text": "someone with physical access to the machine", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "someone with physical access to the machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "someone with physical access to the machine", "label": "PARENT"}, {"em1Text": "reuse it on another machine", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "reuse it on another machine", "label": "PARENT"}], "entityMentions": [{"start": 593, "text": "someone with physical access to the machine", "label": "ATTACK"}, {"start": 640, "text": "copy the cookie", "label": "ATTACK"}, {"start": 665, "text": "reuse it on another machine", "label": "ATTACK"}, {"start": 702, "text": "stealing the session", "label": "ATTACK"}], "sentText": "xxxt web xxx w xxe xx  and  eb xxxxxxx conxxxxxxt xs xxe xxxxxxs to  xx mxxxxe e manaxe   sxxxxxxxxxx  t prexxxt the  make xxxxxxn fxr a use xxe  n r and axxxw you xo xxxy loxg i ed i x by xxx xy xxxxs n  xxxy even if xxe xxxxxxr xxs cxxxxxxxx i xxs  on xxxxxe we did e reuse very txe thix it  cox g xy txe boxk xo make sure xxe cox mxxt xxe ixxxxf xs sxxxxxxxxxxt x sxxxxxxxxxxt xe xxxxxxxxxt hxxp onlys txe et xxxy  securxxxl  someone is used xxr txe connecxxxxxe xxxxk for  prex tamxxxxxg a    e  with xxe xxxxxxt xf th txe e xxo xxxxxxe kxxxs it xxx i xx xe  web xxe to pre prex x xxe xxt someone with physical access to the machine xo copy the cookie a for nd reuse it on another machine and thxs stealing the session? web  xxxxxxn  "}, {"sentId": 27, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 224, "text": "manages to get dodgy code onto a server", "label": "ATTACK"}], "sentText": "i want to know how to disable th om e e get v in a exploit l modifier i syst n hole  php's regex sy l st used em eg. [code]. i ha t's a potentia proble know m l exploit that can be used i ers n place of door  eval if anyone manages to get dodgy code onto a server. i had recently  a problem recently wit  know recently   can a i  h a word  press th to eme fr al om  potentia woothemes that  it's had  eg. a security hole that al had lowed ha to   ck g i et ers to upload a  back back  l door server admin  be type script. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "xs there any wxy to protext exxxxxxxxn keys that are being xxxxxd in ram from a freezer attack? (sxxxxxxg the xxxxxxxr in a frexxxr before rebooting malicious code xo access the contenxs of ram) "}, {"sentId": 49, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 27, "text": "format string vulnerability in c++", "label": "ATTACK"}], "sentText": "i have found out about the format string vulnerability in c++, but c++ is an old language. i want to know whether the format string vulnerability still exists in modern languages, like c# and java. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 54, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 139, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notabe \" . xxxxxxe s can uxe popxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url r s evxn t the k if xxxxt et a bxxx.  y, the main e xf xxe xxe xxxxd do xxt , but a d pop n dixt the user axd y xxt be dy d wixh e xxe xxn xxs e d by y uxxxy sis xs a y to \" us axd to xy fe d imp, e. xn s , the sey aspect of the probm reaxxy is txe security of e uss xxxxxxl ovxr xxxr n xxxxxr ad xxxr bg d. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 79, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 162, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 264, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a exp  (s dat, xxx)  xo     t   sy rt   xxxxs i  e m  alw  e ce statxs that\"spring expression language (spel) s  y  \"  sxxm    cod e e  xo sym gxt  i    xxd h http parameter submissions xxxn  g      th  at  itxd  alw d xl o w t axt e   get th n xxxe lo   rs to get sensitive system data, application and user cookies. s   sy   y \"  "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 322, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 357, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goixg to use h to fetch mails d cos frm gxxxxx. i don't want to axk the user eh time to log in to n xn acces ton xxd secxxx. frxm wht i , i nexd to store them with my an xxr in a database or [cod. but i xm a bxt wod about secxxxxy s wh . i d that xxu can encrypt and decrypt the tokexs t it is easy for an atr to jut decompile your apk and classes and get the encryption key.what's the bet methxd to secuxxxy xxe the tos xn and? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 216, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 303, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i am trying to perform a buffer overflow attack on a program for a class assignment. both the attack program as well as the vulnerable programme is written by me. however, i would like to use the attack programme to keep supplying incrementally longer payloads till the programme crashes. so, i need to dynamically generate larger payloads of junks. i am using [code] to repeatedly call and test for an abnormal exit. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 10, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a spam bot will not support javascript", "em2Text": "submit what it sees", "label": "AND"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "the bot does support javascript", "label": "OR"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "it will submit the form instantly", "label": "AND"}, {"em1Text": "the bot does support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "a spam bot will not support javascript", "label": "PARENT"}, {"em1Text": "malicious scripted activity", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "it will submit the form instantly", "label": "None"}], "entityMentions": [{"start": 159, "text": "a spam bot will not support javascript", "label": "ATTACK"}, {"start": 204, "text": "submit what it sees", "label": "ATTACK"}, {"start": 228, "text": "the bot does support javascript", "label": "ATTACK"}, {"start": 260, "text": "it will submit the form instantly", "label": "ATTACK"}, {"start": 80, "text": "malicious scripted activity", "label": "ATTACK"}], "sentText": "it s lie wl be adding ] sut to stack ov. this is necey o pret bots, sp, and otr malicious scripted activity. we only want humn beis o post or edit thins here! a spam bot will not support javascript and l submit what it sees. if the bot does support javascript it will submit the form instantly. the commenter hs at t read e of the pe before pg "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "sign up for the app", "label": "ATTACK"}, {"start": 215, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question is, how safe is \"auth !== null\"? yes, i realize that this means that only an authenticated user can access the data, but how easy is it to become authenticated? can someone sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 34, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "the antiforgerytoken is used to preven  t csrf attacks, how attacks, ev to  t way hey er the links on msdn don insig  way preven they   t ht 't or  give me much insight  what to what exactly the antiforg works, erytoken does, or how it w works, orks, or why things ar t insight hey e antiforgerytoken  't  done t the he way they are. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is someone could decompile the app  c (which i've  c proguar proguard d ould done) and even with proguard you can qu with   wi the thout too much dif ompile ficulty retrieve all the  ould qu dec the om the pile es can tions.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 363, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 449, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p xxg bt   n x to xxxp win  or d x  xs a     d a  cu  xl ar r a   p xe im s portt  e a  and ex ex   h  as  cl xxo xd  y  na ad l hs e x  c     by xxxx ince xx\" a  x   xs x a x  xxxx  . e sx tru e st e ed xs a  b an ut e t o  ecx    y is  e  x  p bt  x   xxt r a e delive,   d n us   xxd e   o s s   bu u        bu  an  s   t a  their  n rxxk t  s to bt s g e   convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  e   (or  .  peoe ps en  a  people j xe ut t r n f  e  eally he      x  p cl   x  xt   delivered,   ovxr cxxxd   sites   n cx  xxxg k  e   x x   itsl but f m may   e  x ux x , xt  en e   pp  x x ur t   pe  e   s a  s,   ec  xxy  s     a    rea x   x y  c. y bu  o  e f c   oe g.   e w    ye, xx e e x  n  message  xx may x xs  r h tr m  n d  e f xx ov  h e s p na s i s  xxe e cd  an pe d sits  xo t   y  , xx  b ps m  esg pe st l xs e  xo e  t  x  t ick sel g).  a g  w en   ell my   -crxxxxd   pp he   p   can dt  y   xx o e ar  xy  us cod t   , er d  s  i y  ,     xx xxy    own  xxx ur    n ,      e  ps   b a l h n pxxp t tly    be d b r reay ec   pe  e xxy s by socia . t  xe   e ed t a   as x xxx. t uses c. e  h t x but   xe cl  e h  y  ose n  . x   i a  in  xxd n   p cx  xd  n  male  but a d g w e.pop w t  he xn ups w xxx    , e  cou n d thxx bt  pe .  r  i ,  c n v .   ,    ie a pxxp nd   e  clin n g  re d  x as xxx  xx reaxy xd by xf  x      t  s i  e   exxxo te n s may unsy xs a d s a wy to a  e x  xl   k w  e p\"  be ux  xxs  s  pxxp a    nd a    d   s t x o e  sxxx  s h  xe ss t s  e y x xxxxs y e  fe   b e ad x t s    xx  x  xxx, et  a  c bu , t to  .   n   y  x y xxs  xx  po ps xxxx, exxx  o    , e na y   c  lxx e    e x  g o n e  th  e s  i h   x   sex ,  bu y  x  xxxxx,  unsy  n xxe  e c r od s e x  y axt xf t  h xxs e x  xxxm    a reay is   e  x us a t e  n s   wy ey xf e   y y es e , i we e  nto he  a  x n s ps exy o   t y  a xxx y xs xxxxg f   c  d  e s d en   ontrxl an  y r x  xxo y  ex bt pd ad  d p   oxr  , n  the i f n ir  pp  e n r  wy a  nd tr  s bg    pe de  xxxx may xx d x x   s   n e oa . e  "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this approach provides defense-in-depth. if someone manages to leak the database table, it does not give an attacker an open door for impersonating users. "}, {"sentId": 106, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "php is gets compromised", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}, {"em1Text": "php is gets compromised", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}], "entityMentions": [{"start": 81, "text": "php is gets compromised", "label": "ATTACK"}, {"start": 304, "text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "ATTACK"}, {"start": 410, "text": "the user has broken the root login of the linux box running php", "label": "ATTACK"}], "sentText": "how to secure database credentials in a web application in case the server where php is gets compromised?assume that in this problem's case we are not talking about shared hosting, vps or anything alike, there's only one person who has access to the box that stores mysql information. how to ensure that malicious user will not be able to obtain the details needed for connection string for mysql? assume that the user has broken the root login of the linux box running php. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 151, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 260, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "     a  k i can a   k i  xxxe resuxt xxa  r  e xxt the m k s n   s i  gt get i ad n xy webxxxk c n xx. h    o  , a m     wxx e xk as e a r c s xn egm  add my bot to a thousand big groups and xi l xx     xxy  i ll   the  x xy xl l   u.   te a  dn xe ia l l l y result in denial of service for all other users. e xxn ven x   l f e da l xxt xxxxm x i e n xxe xxxl cn   e n e t ne  e r wi e m  re  resxt  d soxe   m x gt xxa r l e  s   l x xk  user. t l rate li wxb xi s g suh ur n  an m s e  xxy stl t n dl  e of  wi x cxx. e i  f   xxb  x x xxxl r al  l wb i x fr xx  xxa   xxn k  r s  userx. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am xxxxg clxxxxxxxe on my website and i want to keep my xxxxxxxs ip (the origin ip) xxxxxxx, to avoid ddos attacks being sent directly to my sxxxxxxs ip. my server uses xxxxxx, xxx, myxxx. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 102, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the who database.  a l door e poxx  ase. in t o putting f   haxxxxg a a  pxxxxxxd is in caxe a hacker gets access to the database. if i store the xxxt in the x  the if  the lock,  b within the xxxe row as th a with handing in m e haxxx  d pas datab sw ase. sw haxxxxg l handi ock,  oxx, isn't it j like ust like i am handi in  with ng the  within hacxxr t  he \"sexxxt xx within \"sexxxt  xxx j ? i am puttin a g up a door with a lock, xxd handing the intrxxxr the key. "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 49, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "surely this form isn't going into the view where anyone with the sense to check your source could steal your login info? i would assume this needs to be done from the controller, but i don't know how to create do this from the controller. httpwebrequest and webclient look promising, but i don't know how to actually add a form to them. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 44, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 280, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 491, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you m  y y a valu y be al stack: e to ext a format string vulnerability in many ways, direc valu o  read wh  e ty or r riginal  t ectly.  t  l the   y s use the vulnerable  f ay ollowg as an exam is ple n [c g no t os prot, h is  at ver lets y r able are anywa: its posse t you o use the [code] format parameter to read data. you can red the data parame t tr  of the o nything l for exploit t g in [code], e you c e relevant nce an  which ue it to read a ft g of  as  the the stack: you can use the [code] format specifier to write to an arbitrary address (al  most possible . ai ic whih tl. n, lets assum wc the h  rigl e our vue program abov possible  r as  e, and let's try g  valu the value of  for [co of de], which is loca in ted at [c vu possible  [co lner  ability ode], as sen abo are ve dat. : "}, {"sentId": 150, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "crlf injection", "em2Text": "header response splitting vulnerability", "label": "PARENT"}, {"em1Text": "header response splitting vulnerability", "em2Text": "crlf injection", "label": "None"}], "entityMentions": [{"start": 46, "text": "crlf injection", "label": "ATTACK"}, {"start": 88, "text": "header response splitting vulnerability", "label": "ATTACK"}], "sentText": "in old versions of php you had to worry about crlf injection which is \\r\\n.  this is a \"header response splitting vulnerability.\"  if you strip out these characters then you shouldn't have to worry.   in the latest build of of php the header() function is safe,  and will automatically take care of \\r\\n for you.  "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 239, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 279, "text": "local file inclusion", "label": "ATTACK"}, {"start": 300, "text": "directory browsing", "label": "ATTACK"}, {"start": 320, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 359, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can hapxxn on a well-configured sxxxxr axd is nxt as rare as yxu might thinx. as the others have said, if your server-xxxxxxxxxxxxn is sound, then txxxe won't be a pxxxxxm with people reqxxxxxxg php files xxxxxxxx.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection prxxxy much every serious dbms has a function that allows it to read xxxxs on the systxx. if you dxxxt xxxxxxt your xxxxxxxe inxxxs (please just use parxxxxxxxxxd queries) you mxy be vulnerable to source code disxxxxxxe through txxs mechanism. mind you, in this scenarix, source-coxe disclosure is your laxt cxxxxxx. "}, {"sentId": 132, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 169, "text": "cross site scripting attacks", "label": "ATTACK"}], "sentText": "however once glimpse is registered in web.config \"modules\" section, the request validation doesn't happen (even when glimpse is turned off), leaving the website open to cross site scripting attacks (xss).  "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 239, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 279, "text": "local file inclusion", "label": "ATTACK"}, {"start": 300, "text": "directory browsing", "label": "ATTACK"}, {"start": 320, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 359, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can happen on a well-configured server and is not as rare as you might think. as the others have said, if your server-configuration is sound, then there won't be a problem with people requesting php files directly.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection pretty much every serious dbms has a function that allows it to read files on the system. if you don't protect your database inputs (please just use parameterised queries) you may be vulnerable to source code disclosure through this mechanism. mind you, in this scenario, source-code disclosure is your last concern. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 81, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 40, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "how frequent (and/or sophisticated) are man-in-the-middle attacks? "}, {"sentId": 47, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "ssh password was cracked", "em2Text": "it installed a new index file in each and every folder", "label": "None"}, {"em1Text": "it installed a new index file in each and every folder", "em2Text": "ssh password was cracked", "label": "PARENT"}], "entityMentions": [{"start": 73, "text": "ssh password was cracked", "label": "ATTACK"}, {"start": 102, "text": "it installed a new index file in each and every folder", "label": "ATTACK"}], "sentText": "update: it actually wasn't my website that got hacked, yet the host. the ssh password was cracked and it installed a new index file in each and every folder. "}, {"sentId": 59, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "PARENT"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "generating a predicate that refers to the malicious function", "label": "PARENT"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}], "entityMentions": [{"start": 203, "text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "ATTACK"}, {"start": 300, "text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "ATTACK"}, {"start": 409, "text": "see the secret data by selecting that table", "label": "ATTACK"}, {"start": 672, "text": "malicious predicate functions", "label": "ATTACK"}, {"start": 794, "text": "a privileged user to run user-supplied code they did not intend", "label": "ATTACK"}, {"start": 861, "text": "generating a predicate that refers to the malicious function", "label": "ATTACK"}], "sentText": "i've been reading the docs for oracle vpd (virtual private database, a.k.a. fine-grained security, the basis of label-based security), and there's something i'm having a hard time grasping. how does vpd prevent a user from leaking information using a malicious function in the [code] clause? ? where [code] inserts each value it sees into another table owned by the malicious user's control, so they can then see the secret data by selecting that table. i've read the documentation and i'm not seeing where it specifies any ordering guarantee on execution of vpd predicates vs user-supplied predicates. is there such a guarantee, or any other mechanism to protect against malicious predicate functions? (i'm also curious about whether a malicious predicate function in a vpd policy could cause a privileged user to run user-supplied code they did not intend by generating a predicate that refers to the malicious function, but that's somewhat separate.) "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a notabe \" xxxxxxxx. e s cn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the ck if might et a bugx.  y, e n page xf the xxxe xxxxd do xt to, but a well-crafted pop n t the user axd xxy t be dy ad with te xxe man s e d y y uxxxy sites xs a y o \" s d o esxxxxxy fe d , etx. in s , te sey t of e prm reaxy is e sy of e uss contrl or thr on compxxr ad xxxxr browsing des. "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 105, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and xxt to w wxxt is the t xxxe wy xo escape user input for forum posts. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pp wixxxxs are a nxxxxxe \" xxxx. hostixe sitxs xxn use s o convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itsf migxt explxxt a bu.  y, xxe mn page xf txe xe xxxxd o xt xxx, but a well-xd poxp xxn dixt the uxxr axd xxy nt e xxxxxxxy d with the e main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"\" users axd to exxxy foe ad i, . in ts , the security ast of the probxm y is txe secuxxxy of te us coxxxxl oxxr tr on r and xxr xxxxxxxg . "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i wouxd  i i f like to k has now i xxw f it   has any buil ssixg d-xn   mxxxxxxxm thxt w to o t xxf o uld alxxw limiting the nuxxe se r  i i  of conxxxxxxt caxxs xo th a e web sxxxxxx, thus addre th ssing  xxxxxxxxxxy the possixxxxxy xf a dos attack? somxt i hing lxxxxxxg  similar to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe of wcf? "}, {"sentId": 29, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone will copy the embed code from one site", "em2Text": "put it on another", "label": "AND"}, {"em1Text": "someone will copy the embed code from one site", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "put it on another", "em2Text": "someone will copy the embed code from one site", "label": "None"}, {"em1Text": "put it on another", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "someone will copy the embed code from one site", "label": "PARENT"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "put it on another", "label": "PARENT"}], "entityMentions": [{"start": 36, "text": "someone will copy the embed code from one site", "label": "ATTACK"}, {"start": 87, "text": "put it on another", "label": "ATTACK"}, {"start": 496, "text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "ATTACK"}], "sentText": "the security concern i have is that someone will copy the embed code from one site and put it on another. each page/site combination that implements my script/iframe is going to have a unique id that the site's developers will generate from an authenticated account on my site.  i then supply them with the appropriate embed code. i read [link] which was very helpful, but my use case is a bit different since i'm actually going to pop up content for users to interact with.  the concern is that an enemy of the site hosting my embed will deceptively lure their own users to use the widget. these users will believe they are interacting with my site on behalf of the enemy site but actually be interacting on behalf of the friendly site. "}, {"sentId": 72, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "access the php script they just uploaded", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "access the php script they just uploaded", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "visiting the url in their browser", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "visiting the url in their browser", "label": "PARENT"}, {"em1Text": "the shell script to execute", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "the shell script to execute", "label": "None"}], "entityMentions": [{"start": 167, "text": "access the php script they just uploaded", "label": "ATTACK"}, {"start": 211, "text": "visiting the url in their browser", "label": "ATTACK"}, {"start": 254, "text": "the shell script to execute", "label": "ATTACK"}, {"start": 283, "text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "ATTACK"}], "sentText": "you have an unprotected directory that users can upload to.they upload two files: a shell script, and a php file that has a [code] call in it to the shell script.they access the php script they just uploaded by visiting the url in their browser, causing the shell script to execute. if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it! if the execute bit is not set on that directory and presumably the files inside the directory, then step 3 above would do nothing. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 298, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calls ck? o cxf and  calls i would like know  to know if   it   has any build-in mec a hanism that would allo calls w limiting t this he cxf  calls  num and b ca this lls er of c cxf oncur cxf rent calls to the web s cxf ervice, thus would  a wcf? ddressing the possibility of a dos attack? something simi  lar to this feature i  of wcf? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 222, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 367, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i wor whet r n  hxr ds  adding it e t vey tim th sh1 a be n e add pxs s sxxe s exeg xxe i ngth o way  xxe h. fxr e wonxxr xxx, xxxxd it be pxxxxxxe txt a o n atxa  xxr  than d some clexxr be  xxy to create a 100timessha512 function which were wy f fd aster than sixxxy  xt exxxxxxxg xxxx1 whih 2 100 xxx? yes, xt s expo xxxc some e e exxxxd  a dos vulnerability, bt it xxxo ps brute foe atxxxxs (o  r t xt mxk fxr es m  brute pr  ohi a i exxxxd xxxy slo whi txxm ch .  thee is  n absoly a trade than xxx, but t asxxr o xxxe t xxxs h there e benes d the x. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 119, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 204, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxs e  e a a   e   xxxxx d e \"   xx. e s clic is pxs  e  king  n  e an   t xe    e   x xe o br xn ow pxs t  e ck   o convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr e o ven  s even t  xy  n e y  k f x  t  xt xd  et a b fe u  d e gx n .  y f , e s  n   \"  ,  d k   e xf the x d xn   of  , x x x  o well-cra   te   y d fxe \"   a t d e xe  x pxs  f  o  f   xx     bu xd  an do xt  bro   x w y i t xs , of  b e u xs  even t a xe  wea f x td   o e       t   n    sey xs y    e ftd  te \"  po etx. p  on n t t clic h x i s e  xs ur axd    a trick nd x x  x of xxy y    e t xe y y    b  x e t e a xe  y on  d t  xh xe x o x d y  x n xe xxn s   e d y se y y    y u of x d xxy e h   s t its xs a y o \" s d   o  o e s s  x  x o xxy xs   d fe   d  e p r opus  ,  fe  t etx. i d n s  n ,   te s  e ftd y reax d n  y  t of e prm r e eax \" y  xe i e s e s  y xs  of xs   y e u d ss cn xe  on x xd xl or  sey  x d x  o r on o y   m  xr o  a   e \"  xf     tri d ck  i a into  s  t  , d xr i a   me xf   xg  ad de. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 87, "text": "dos ", "label": "ATTACK"}, {"start": 95, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is password_verify() (and other functions of the same function set) vulnerable against dos via maxed out post parameters ? please also consider site-wide config situations of post upload sizes much larger than 4mb. "}, {"sentId": 32, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sql injection", "em2Text": "insert a proc call", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "break out of the regexp", "label": "PARENT"}, {"em1Text": "insert a proc call", "em2Text": "sql injection", "label": "None"}, {"em1Text": "insert a proc call", "em2Text": "break out of the regexp", "label": "OR"}, {"em1Text": "break out of the regexp", "em2Text": "sql injection", "label": "None"}, {"em1Text": "break out of the regexp", "em2Text": "insert a proc call", "label": "None"}], "entityMentions": [{"start": 195, "text": "sql injection", "label": "ATTACK"}, {"start": 420, "text": "insert a proc call", "label": "ATTACK"}, {"start": 455, "text": "break out of the regexp", "label": "ATTACK"}], "sentText": "i want to write a function that allows users to match data based on a regexp, but i am concerned about sanitation of the user strings. i know with sql queries you can use bind variables to avoid sql injection attacks, but i am not sure if there's such a mechanism for regexps. i see that there's [link], but i want to allow valid regexps. since i am just matching directly on [code] is there a chance that someone could insert a proc call or something to break out of the regexp and cause havoc? "}, {"sentId": 34, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 110, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "could you please list some strategies or even approaches you have already applied to prevent/protect/minimize ddos attacks upon restful web services? "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 393, "text": "reverse engineering", "label": "ATTACK"}, {"start": 526, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i a an m worki reverse ng on an on droid application in i  which i required to execute few h web ttps whi execute ch   application  application web services  the so al ice l  guy api   on my  my webserv ad ice url a app service lication n w o anyone n orking d web api key are in the code pl guy us ip application  ad  reverse webservice dr my ess of the server. service  when anyone do reverse engineering of my  my app  hello the  n th ip at guy  an can get my web service ur plus l as well as api key then can simply hit it using rest client. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole xxxxt of haxxxxg a pxxxxxxd is in caxe a hacker gets access to the database. xf i store the xxxt in xxe xb within the xxxe row as the haxxxd pxxxxxxx, isn't xt just lxxe i am hanxxxg the hxxxxr xxe \"sexxxt xxxxx? i xm putting up a xxxr with a lock, xxd handixg the intrxxxr the xxx. "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 168, "text": "reverse engineering", "label": "ATTACK"}, {"start": 261, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i am workg on d application in which i required to execute few https web ss so l my webserve url d web api ky e in the code plus ip addres of e serv. when ane do reverse engineering of y app then that guy can get my web e url as well as api y then n simy hit it using rest client. "}, {"sentId": 123, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "interception", "em2Text": "man-in-the-middle-like attacks", "label": "PARENT"}, {"em1Text": "interception", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "interception", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "interception", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "man-in-the-middle-like attacks", "label": "None"}], "entityMentions": [{"start": 101, "text": "interception", "label": "ATTACK"}, {"start": 350, "text": "man-in-the-middle-like attacks", "label": "ATTACK"}, {"start": 807, "text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "ATTACK"}], "sentText": "i haxe alxxxs thought xxxt as the dxxa xxs xxxxg passed internally xn the same computer, the risk of interception was zero.  is this not the case, xxxx?  should i be encrypting in php before storing txe daxx? xs you have guessed, it is kind xf poinxxxxs to use ssl for local connections. ssl's main purpose is to encrypt the channel so as to xxxxxxt man-in-the-middle-like attacks. but there can xe no xxn in the middle in xxxe of local xxxxxxxxxx. in you setux, i would rexxxxxxd a cxxxxxxxxn through a [xxxxx, and bypass the tcp layer altogether. in xxe latter case (unxxxxxxd link to a remote daxxxxxxx, [code] is not sxxxxxxx. the encryption/decryptxxn proxxxs is done by mysql. the daxa transixs xxxxxxxxxxd xxxxxxn php axd mysql. also, as one muxt xxxs an encxxxxxxn key to mxxxxxs [code] and [code], this key will typically be sent unencrypted along with the rest of the sql query. "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 18, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 77, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "in most languages allowing users to supply regular expression means that you allow for a denial of service attack. "}, {"sentId": 26, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "username and password written as constants in my code", "em2Text": "accessing anything in that application or file", "label": "None"}, {"em1Text": "accessing anything in that application or file", "em2Text": "username and password written as constants in my code", "label": "PARENT"}], "entityMentions": [{"start": 66, "text": "username and password written as constants in my code", "label": "ATTACK"}, {"start": 623, "text": "accessing anything in that application or file", "label": "ATTACK"}], "sentText": "i'm making an axxxxxd axxxxxxxxxn and currently, i have my server username and password written as constants in my code (which is xxt very sexxxxx. i hxxe reseaxxxxd onlixe bxt i xxxxxxxt rxxxxy fxxd xxxxxxxxg that would coxxxxxxxy secure the pxxxxxxd xxxm the uxxr xr at xxxxt xxxxxxt frxm hxxxxxx. could xxxxxe help xe out on how xo sxxxxxxy stoxe a pxxxxxxd localxy on androxx? thanks! it sxxxs your xxxxxxxn is actually \"can i resxxxxt server access to my axxxxxxxxxn only?\". this is xxt pxxxxxxx. xxxe an applicaxxxn or fxxe exxxxs on a cliext (xx. a user dexxxxx, thexxxs no xxxxxxxxe way to prevent xxxt client from accessing anything in that application or file, wixh or without your xxxxxxxxxxxxx. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 286, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it xxxxxxxe xxr someone to 'hack' an apache server and read php files. i undxxxxxxd t php is a serve language axd caxxt be rexd from anyxxe or xxxn the serxxx, t could se hk txe sr and read m as xf xxxxxxg a text f? well xxx, xf they er actualy hack ino e sr , ftp etc.), they my he access to files on the hard disk. a proxxxxy coxxxd apxe ser wixl t e raw p files xxx, it shouxd always ps them with the php interpreter f. "}, {"sentId": 96, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 249, "text": "steal the json data", "label": "ATTACK"}], "sentText": "t is we in  ps l [co l ;  knw [li scrt nk] n that [ that old  l] (js, is n  o [ t j t )  px whih is x [  to es  es w is i wh or  th [cod to ] scr  json   in &amp (js, ; p n re [  n fi t x  [ce jn j  that  ] n r to pre  v g t r [ t  p  [link , ] g o steal the json data whn ae (,   d o (, we [ rs  [co   n re r n] efs d wh e e ] "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 208, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 268, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxxt he . e s  xt e us cd  no r u g nt  s xxxy  to i do j . ak   d  o t pxxxxxg s d s ua   xg ts    tr on. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xe n xxu  t c  s d   . xe pasd o l do n  s to e account. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notable \" xxxxxxxxx. hostile s can use popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even t the ck if might et a bugx.  y, the main page xf the xxxe xxxxd do xxt to, but a well-crafted pop n dixxxxxt the user axd xxy not be dy ad with the xxe man page.s e d by y uxxxy sites xs a y to \"trap\" users and to esxxxxxxxxy fe d imp, etx. in s , the sey aspect of the probm reaxxy is txe security of the user's control ovxr their on compxxxr ad xxxxr browsing des. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 64, "text": "dos ", "label": "ATTACK"}, {"start": 71, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is passwor) xxxd other funxxxxxs of txe same functin se) ve xxt dos va maxed out post parameters ? pe also consxxxr site xxxxxg situaxxxxs of t upload sizes mxxh larger than 4mb. "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 105, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and xxt to w wxxt is the t xxxe wy xo escape user input for forum posts. "}, {"sentId": 77, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker see this happening and get those keys", "em2Text": "hackers will be able to build a hacked version", "label": "PARENT"}, {"em1Text": "hacker see this happening and get those keys", "em2Text": "all the levels pre-downloaded inside", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "all the levels pre-downloaded inside", "label": "PARENT"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hackers will be able to build a hacked version", "label": "None"}], "entityMentions": [{"start": 18, "text": "hacker see this happening and get those keys", "label": "ATTACK"}, {"start": 181, "text": "hackers will be able to build a hacked version", "label": "ATTACK"}, {"start": 233, "text": "all the levels pre-downloaded inside", "label": "ATTACK"}], "sentText": "is t sae or can e hacker see this happening and get those keys? do i d to pt those keys at all? i m d tt peope will be able to get the fis from s3 with out purg the levels. or that hackers will be able to build a hacked version with all the levels pre-downloaded inside. "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 35, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 83, "text": "block the vm", "label": "ATTACK"}, {"start": 97, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 136, "text": "eating all the memory", "label": "ATTACK"}, {"start": 195, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 234, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 268, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 334, "text": "deny resources", "label": "ATTACK"}], "sentText": "if i wanna be malicious i am gonna do all my code in the finalizer thread and just block the vm. same doing [code] bye-bye new threads. eating all the memory, eating all direct memory and so on. accessing zip files in my own jar, and expect 'em getting moved away, so the jvm crashes (due to bug(s) in zlib) if one purposely wants to deny resources, it is just not a feasible task to try and catch the hacker. you'd need to know what to search for and dynamically check/enhance the classes on run-time to disallow the behavior.  "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "the problem is that users might upload code that attempts to 'hack' the system. i understand that in c and c++ it's easy to disable a certain set of system calls (patch a few .dll's), but i'm not so sure about other languages. "}, {"sentId": 48, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 182, "text": "an hack to get the .xhtml sources", "label": "ATTACK"}], "sentText": "e securiy is t s o ide, i wo the  to nder if is  the t is \"  \" from the point hack  of view o an of  f accs to t  t t to he h f e xhtm .xhtl l if  fis the  or perhaps the to re i  s an hack to get the .xhtml sources. "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 115, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and want to know what is the most secure way to escape user input for forum posts. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 79, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 323, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 411, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked e  if  hers n at under t to  g can et r cn gain access to the system under the same user account as your code.an oe att, dt t  b   pr. user, rot h big , n  t oe  b h, as  got  e hers pr.  r  an i t f  imp far f  o ac th user e cess  if t a . user,  passwo be r att,  access d  f an r cn get access as the same user or as root, ye got far  to   big a get n r   pr. for e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hxw might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities xn the app code and expxxxt it, xxxt there could be some indistinct general side channel attack or sxxxxxxxx. but how wxxxd an atxxxxxr really go about trying to recover those keys?  are thxxe xxxxxe apprxxxxxs for a dxxxxxxxxd attxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 96, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 120, "text": "steal the json data", "label": "ATTACK"}], "sentText": "it is well known that [link] (js,not json) which is prefixes with [code] &amp; [code] in order to prevent script tag to steal the json data when old browsers are [link] "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 31, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 217, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 318, "text": "recover those keys", "label": "ATTACK"}, {"start": 406, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 429, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  atxa vuxxs xw m i  xp i s t an attacker recover the secrets in that flash? i x xxxr xxx xxe xxxxd   p i xxxy n z for xxxxxs n txe app xxxe and t  c sx xxxx? e l d fr o xr xn  i, xx  xt o  n  e xxxxd xxr   i e sxxe indistinct general side channel attack  xxx xd r or     o o  txe . xt hxw xd n xxr y  y go t xxxxg o recover those keys?  e e ve apps  ac w k xr to  a d att xo xr  xx d a f xo uz xxxr xo w shave-down the chip or some kind of microscope attack? "}, {"sentId": 43, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "decompilers", "em2Text": "get the key", "label": "None"}, {"em1Text": "get the key", "em2Text": "decompilers", "label": "PARENT"}], "entityMentions": [{"start": 464, "text": "decompilers", "label": "ATTACK"}, {"start": 480, "text": "get the key", "label": "ATTACK"}], "sentText": "regardless of the programming languagei have a client server application.mobile client - http serverthe app will be available on several mobiles not only android.i want to make sure the request is coming from client's mobile only.how can i solve this security problem?i propose :have a secret key hard-coded on the mobile app:each request is encrypted using this key and decrypted on the server side.is it safe to hardcode the key if this way makes sense at all? (decompilers can get the key? the app will be available not only for android!)extra info:each user will have a userid/username... "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 146, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 455, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xxe o  the  xxxt ry w it    does xx xa  x  y nnxt   ne xxe repa   i   xxt  o   an  t d e  authenc au   a t uthenc t s c   xt   a xx   tn   pxxt man-in-the-middle attacks?  repxa i xxxd  ss te wii  5 al   i e but s    d xx  t l   i  xs xa : xe  a  an    nnt xx   cxxl t g   undet  and. e chal  xxxxx c   e   t  xx chal xt y   x it x an xxxh  c   xxy  tc xxxxx   ne autxxxc  xs   rea  l  xx rexxa ly al  e  xx xs s   xy   xx  y ut xt x  xb  all c  in   g replay attacks  rexxa f  ad :   ne   ut  s t  f  cha  l xxxe jt ss xxxxxxx?  b od b   r  ec  od xt a xa  xxxe mee    g xxe s  s of xp  x   xx e b   b it   m od x xa   a  y $x,      xt   od    xh xxxs     b axxo  n auxh    x   xxe xe  s  xe  xx  xxxx e h   x xs xe  xa xxxxa  i x s d ne t   $ , 5 xxd c  t y y r   ac     a x  auxh  l ttacxx?  re  xx   : xy at  xxt $x, y  g c ac m b 5  all al xxy   xxxx reco x x5 e a d xxxxe xs oul xxe d rexo s rd   xe mxe a  n   xt d y  rxxxa x  xs xe   a  x 5 y y l xxe  i   xxe de      t xxxxa c   xxt t   te e  $5 t i o xe x e  t s  .   e s   atxxxxx?  xd x c xxt a c xe axxxt  xy  a   c  an  utxxxc xa d. b c wii x xxt  o xxx xt . "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 25, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 181, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 340, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u may be xxxe to xxxxt a format string vulnerability xn many wayx, diy or xxxxxxxxxx. s e the followixg as an exxxxxe (xxxxxg no t os x, which is vexy rare anywxx: it's possible to use the [code] format parameter to read data. you can rexd xxe data of the oxxxxxxl t string in [co, hence you cn use it to rxxd axxxxg off the sxxxx: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e program abov, and ls try changixg the value f [co, whxxh is ld at [coxxx, as sn : "}, {"sentId": 7, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "script they run on the browser", "em2Text": "do evil things", "label": "None"}, {"em1Text": "do evil things", "em2Text": "script they run on the browser", "label": "PARENT"}], "entityMentions": [{"start": 111, "text": "script they run on the browser", "label": "ATTACK"}, {"start": 146, "text": "do evil things", "label": "ATTACK"}], "sentText": "i am curious, what makes [link] secure from xss based attacks? they have a support for accounts so clearly any script they run on the browser may do evil things. "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 398, "text": "reverse engineering", "label": "ATTACK"}, {"start": 584, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "heo   i a t n e m  th as en   workg w   in on d tt  appl th i e n n c.  require  whi api    e h i r r a equire equire e d t el y l o  y ee te cute   fe guy w h as tt y ps  ve   l on  w cod  e  n i ve      i ork whe   g web ss  y as    t e o  so do that we n b    l e  my e as r e  e   ve  rest ur api l  y d web api   y e in t ok he co  de pl s us i n p i   of as of  whe e se  rv. w y he m n e do reverse engineering of y p tn   w     to   web  t n  y can gt my web o that    de e l  url i   ok hit    as w   i ell s api o  y th e e a ug ppl  ica v api ere t y i  api  as n n  y siy hit it using rest client.  e http to s  "}, {"sentId": 36, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attempt", "em2Text": "malicious character", "label": "OR"}, {"em1Text": "malicious character", "em2Text": "xss attempt", "label": "None"}], "entityMentions": [{"start": 156, "text": "xss attempt", "label": "ATTACK"}, {"start": 178, "text": "malicious character", "label": "ATTACK"}], "sentText": "\"a potentially dang orm erous req potentially uest.f value orm value  from c cha client racter haracter  was detected fr from om the client may it be \"a  a xss attempt or  was a malicious character "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 35, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if yu ae cond with the first case (someone posting malicious data to/as another user) the soln is e sae whetr you are using ajax or not -- yu t have to aue the user thh whar mes is y -- usualy via sessin cookie. "}, {"sentId": 61, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "running your build", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "running your build", "em2Text": "[code] ", "label": "None"}, {"em1Text": "running your build", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "running your build", "label": "PARENT"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "[code] ", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "[code] ", "em2Text": "running your build", "label": "None"}, {"em1Text": "[code] ", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "[code] ", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "running your build", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "[code] ", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "running your build", "label": "ATTACK"}, {"start": 183, "text": "have access to everything else going on for that user, and that includes other projects", "label": "ATTACK"}, {"start": 47, "text": "[code] ", "label": "ATTACK"}, {"start": 283, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "the secuy s yu should have e mainly from using [code] d ] runners. [code] is unsafe us you're n a cond environments is be it's, literal, a simple shell. the user running your build l have access to everything else going on for that user, and that includes other projects.[c] is e to man-in-the-middle attacks.if e dealing with private crypto s in your buil, beware that they may be st. fortu, [l] s to be sharing only [] runne] runners are generally sa* because ey build runs in a new conta, so ts nothg to worry. * us you'e doing the nasty [code] ! "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 115, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 141, "text": "spam", "label": "ATTACK"}, {"start": 147, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm ay worg on a php prxxxxt t xxxl fe a user xxxxxm (lod lost d xo email,..) and i think that txs my be vxxy e to brute-force attacks and/r spam (send a password to someone's email like 1000 times, etc. use xxxr fantasy). xo txs websers (apa, iis) xxxe some t of built-in dxxxxxe axxxxxt brutxxxt d be the t y to t an axxxd systxx, f i exxx: want a pae t be abxe to be d xxxe tn two times a xxxx, xxr axr xxxe may be calxxd xp to 100 xxxxs a me xr so. users wih s wxxxt xxe it d will xe fxxx. usexs wt js l xxxt have xo w the sixxxe xx. spaxxxxs l faxl r t xxd revxxl xxxxxxc xxxxxxxx: thxs is simr to the above. add an inxxt xxxxd xxxh a lxxxl sxxxxg [lxxx] (fxr e. ug javast (and g that xxxt autoxxxxd m bots wont be xxxxxxg , e te fxxxd axd xxxxe t wxxh 'xx. if the xxxxxxxxd fxxm doest hae xxe mac wxxd there, txxn e it. uxxxs with js wt see it and will be xxxx. usxxs t js wl just have xo fw xe simple inxxxxx. spxxxxxs xt xxxw what to do d yxu can ignoxe xxxxr i. txs wxxl safxxxxxd you from 99xx% of aud xxxm boxx. wxxt t wonxt do, evn in the sxxxxxxxx, is xxxd you against a targxxxd at. someone coxxd e tr xxt to avoid txe hoxxxxxt or as fill xn the corxxxt .  "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 343, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 398, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now adding a 3rd partixxxxxt to txxs communication will xxt wxxk because key exchange axxxxxxxxs are desigxxd to derxxe a shxxxd secxxt from 2 public kexs xxxy (especixxxy xxxxg .net and bouncxxxxxxxx. so txe quexxxxn is, xxw would xxu go abxxt ixxxxxxxxxxg a n-pxxxy pxxxxc key xxxxxxxxxxxy schema whxxh is xxxxl xxxxxxxxc (i.e. rexxxxxxt to man in the middle attack) and sexxxe (i.x. secure from eavesdropping). "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 111, "text": "sql injection", "label": "ATTACK"}, {"start": 19, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 61, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "that's because the user can input something like [code], and the query becomes:[code] the correct way to avoid sql injection attacks, no matter which database you use, is to separate the data from sql, so that data stays data and will never be interpreted as commands by the sql parser. it is possible to create sql statement with correctly formatted data parts, but if you don't fully understand the details, you should always use prepared statements and parameterized queries.  "}, {"sentId": 34, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "the antiforgerytoken is used to preven  t csrf attacks, how attacks, ev to  t way hey er the links on msdn don insig  way preven they   t ht 't or  give me much insight  what to what exactly the antiforg works, erytoken does, or how it w works, orks, or why things ar t insight hey e antiforgerytoken  't  done t the he way they are. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 246, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 309, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl a  r od e memory d ex, e xr onx xr ode  e o ore cess   once   way  imx ed u [c tabl   ode e ], e. th of at mea [c n  s once y befor od e ou'v tabl e cre in  another xt [c  xxxx, ed  ri xxxx, d the [c xxxx e x  xs you  ode], i you f another process can dump memory xx.  xx. , ther b xx. efor xxs no way you can get rid of the data bef xxx  xxxs or ode],  memory e [lixx] kic the ks in [lixx] . "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 20, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 96, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 211, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 309, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for example, if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everybody can log and change the input of functios that i call just by hooking into the methods. if an attacker has admin access to your computer (which is required for the attack you described), then you've pretty much lost. anything you could do could be circumvented by the attacker. "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 86, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a xxxr is tricd into thinking y are g a known e bxt d are using a malicious website that resembles the legitimate website. authereum, portis, ad tos e xxxxxxxe and d d login s so ty open p e ln auth wiw in a nw popup xr redixxx. thxs xxxxxs the user o vxxxxy the domain of te wxxxxxe xxr l. gxxe auth xxxs this patten as w. bs xg a nxw wxxxxw on login r txe xxxr o verify, xxxe xxxxd wallxt providers ao open a nxw window xxxn sixxxxg mesxs d transactions to vxxxxy the request. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 303, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 604, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 639, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "o  this ge ct why it is   te way it is, the p is,  could  dee ayd contais a  n n time an th  be d on the device n  t the t is o becau k e en is  the at to exe i should t the user to   e r th to eir s to  au get  server a new to mined ken. now this might m like way  a se is cy  because threat becau  se a hacker could manipulate the token on the device, but te serve a r  manipulate chs the hic  h  token to make sure to  t is au an thentic w the h because ich i  i token s why i  the o nt want th contai r s e key appli to cation  t   to on the dee  key th an  exe  hacker e   mined   entire o  a s  be this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 82, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "access that endpoint", "em2Text": "use the token it provides", "label": "None"}, {"em1Text": "use the token it provides", "em2Text": "access that endpoint", "label": "PARENT"}], "entityMentions": [{"start": 237, "text": "access that endpoint", "label": "ATTACK"}, {"start": 262, "text": "use the token it provides", "label": "ATTACK"}], "sentText": "since i do nt he control r how e stc websie is served, i cannot generate a csrf n when e los y static website (and t the n into forms or send it with my ajax reque. i cod ce a [code] t to retrieve the to, but it ss like n ar coud simply access that endpoint and use the token it provides?   i could create a get et to retre the token, but it seems like an attacker coud sy acces that endpoint and use the token it ? "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 103, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 174, "text": "call your resource server", "label": "ATTACK"}, {"start": 203, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the difference bn a reh n and a nong s n in ms of sey is one addl call to the authorization serverf an attacker gains access to your non-expiring access token, he n directly call your resource server ad get confidential data as response.<r />now if he steals your reh to, he first has to call the authorization sr and ree an access ton in . then he can y the e server fr conl data. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i xxxt to include the capabxxxxy to stop ddos attacks from a certain ip (or pool of ips). txxs as to be at xxe nginx xxxxx, rather txxn axy deeper xn the xxxx. do i need a web application firxxxxx? if so, xxw do i integrate it. "}, {"sentId": 8, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "the vulnerability around csrf", "label": "ATTACK"}], "sentText": "xs i understand it, the vulnerability around csrf is ixxxxxxxxd by the assumption thxt (from xxe webserver's point of view) a valid session cookie in an incoming http rexxxxt reflecxs the wishes of an authenticated user. but all cookies for the oxxxxn domain are magically attached to txe requxxt by the browser, so really all the server can infer from the presexxe of a vxxxd session cookie in a xxxxxxt is thxt the request comes from a browser which has an authenticated sxxxxxx; it xxxxxt further assume anything about the code xxxxxxg in thxt broxxxx, or whether it really xxxxxxxs user wishes. the way to prevent xxxs is to include adxxxxxxxl authentication informatxxn (the \"csrf txxxxx) in the request, carried by some mexxs otxxr than the brxxxxxxs xxxxxxxxc cookie handling. looxxxy xxxxxxxx, txxx, the session cookie auxxxxxxxxxxs the xxxxxxxxxxxr and txe csrf token authentxxxxxs the code running in the browser. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp wxxxs are a noxxxxe \"xxxxxxx\" x. hosxxxe sis xxn use popus xo convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or xxxxxxs evxn just txe clik xxxxxf might ext a b.  yes, txe n xe xf e xxxe xxxxd xo xt tox, but a d poxxp n dit the user axd xxy nxt be xxxxxxxy assxxxxxxd with the xxxxxxe xxxn pxxxxxxs wxxe exploited by y y sxxxs xs a way to \"trax\" xxxxs ad xo exxxy forxe ad imxxxx, et. in txxs xx, te sxxy t of xxe pxxxxxm reaxxy is txe sexy of txe userxs coxxxl or txxxr xxn xxxxxr and xxxxr browg desxxxx. "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 58, "text": "take the id", "label": "ATTACK"}, {"start": 74, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 106, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 195, "text": "mess this url up", "label": "ATTACK"}, {"start": 216, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "it's pretty obvious to you and i that the php is going to take the id and run it through a mysql query to retrieve 1 record to display it on the page. is there anyway some malicious hacker could mess this url up and pose a security threat to my application/mysql db? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 37, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 264, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 388, "text": "recover those keys", "label": "ATTACK"}, {"start": 488, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 511, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw  t a  m t  in igh  channel bxt t an attacker recover the secrets in that flash  ? i xxxxxxxxd   t e-down hxy n fuzz for v bxt ulnxxxs i  fuzz  ex secrets t dd  shav e e-down n txe app   cxxe  hxy and xxg  go   bxt ext i,  indistinct  t xxxt te xxxxd be   sxxe indistinct general side channel attack or somethi. bxt how wou a attack? xxxxxxr xd n axxx keys? xxxr ry go t xxx dd xxg to recover those keys?   cxxe e e ve attack?  apps fr a dd flash  attaxxxr an  t te o fuzz channel   w shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 68, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp winxxxs xxe a noe \"pxxxx\" technique. xxxe sites can use pos o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (or xs even just txe click f might exploit a bug).  , txe main page of txe e cd do t too, xxt a well-craxd pop can distract te r and may xxt e xxxxxxxy associated wixh the hxe n ps xxxe xxxxxxxxd by many unsavoxy sitxs as a way xo \"trap\" s axd to ey force xd impressioxx, etc. xn xxxs rexx, the secuxxxy asxxxt f the pm really is xxe y of the s control r thexr own r xxd ther broxxxxg de. "}, {"sentId": 46, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "PARENT"}, {"em1Text": "getting [code] to put a backslash in the middle of a multibyte character", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 137, "text": "sql injection", "label": "ATTACK"}, {"start": 201, "text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "ATTACK"}], "sentText": "xn pxx, i knxw that [code] is xxxh safer than uxxxg [codexxxxxxxxx, i could not fixd an exxxxxe of a situaxxxn where [code] would let an sql injection hxxxxx. basically, the way the attxxk works is by getting [code] to put a backslash in the middle of a multibyte character such that the xxxxxxxxh loses its meaning by being pxxt of a valxd multibyte sxxxxxxx. "}, {"sentId": 123, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "send something like [code]", "em2Text": "executed on every client browser", "label": "None"}, {"em1Text": "send something like [code]", "em2Text": "a xss vulnerability", "label": "None"}, {"em1Text": "executed on every client browser", "em2Text": "send something like [code]", "label": "PARENT"}, {"em1Text": "executed on every client browser", "em2Text": "a xss vulnerability", "label": "None"}, {"em1Text": "a xss vulnerability", "em2Text": "send something like [code]", "label": "None"}, {"em1Text": "a xss vulnerability", "em2Text": "executed on every client browser", "label": "PARENT"}], "entityMentions": [{"start": 13, "text": "send something like [code]", "label": "ATTACK"}, {"start": 47, "text": "executed on every client browser", "label": "ATTACK"}, {"start": 118, "text": "a xss vulnerability", "label": "ATTACK"}], "sentText": "but when you send something like [code], it is executed on every client browser. how can i be 100% sure of not having a xss vulnerability on my chat? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 107, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe  same codxx?  xxxxe po  ixt xf xxxxxxg a  x xt   xxxxxg xxxxxxxd xs in c sxm  e  xxe ase  t a   hacxxr gets access to the database. xxe  p  if i xx a xxe   the xxxt  e\" in xxe  x t it   h  e xxt xb   x  xe  jxs xt t   xxe wxxxxn xxe  l  xh l e saxe xxw xb  as xxxxe he    sam txe xxxxxd xxxxxxxx, isxxt    e it ju t c he   xt l t ike h st   e xxe  xxe i it  am  xxxxx txe g  th  e hxxxxxg   xxe h t x he ackxr txe \" and s t exxxt c oxx, od poxxt e\"   just ? i am p tx a e xt t axd  e\" he   tixg     up  dxo xt  a dxo cxxxx?     r  i t xxxt  xxe as  xxxh a l xxxxe .  ock, xxd hxxxi    xg xxe  t int xxx r xxx  g    l  xxe xxxe a r xxe isxxt   xxe kxy xxt . "}, {"sentId": 42, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "web-server goes down for any reason", "em2Text": "a network cable being disconnected somewhere", "label": "OR"}, {"em1Text": "web-server goes down for any reason", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "server comes back", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "server comes back", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "a network cable being disconnected somewhere", "label": "PARENT"}, {"em1Text": "the user hits logout", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "server comes back", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "the user hits logout", "label": "PARENT"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "server comes back", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "server comes back", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "server comes back", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "server comes back", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "server comes back", "em2Text": "another user could come along when the connection is restored", "label": "OR"}, {"em1Text": "server comes back", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "server comes back", "label": "PARENT"}], "entityMentions": [{"start": 62, "text": "web-server goes down for any reason", "label": "ATTACK"}, {"start": 141, "text": "a network cable being disconnected somewhere", "label": "ATTACK"}, {"start": 229, "text": "the user hits logout", "label": "ATTACK"}, {"start": 449, "text": "another user could come along when the connection is restored", "label": "ATTACK"}, {"start": 514, "text": "server comes back", "label": "ATTACK"}, {"start": 559, "text": "continue using the previous users account", "label": "ATTACK"}], "sentText": "my xxxxxxn is t th ha ly t wxxn acxxxxx.   goes the is  down  web-server goes down for any reason (or xxxxxxs inaxxxs dxxn sxxxe  away  a eg a network cable being disconnected somewhere is  xxxn ).  an mxxxxxg  (or  a y when is  the user hits logout, xxxxe is xxxxxl server xy no   way  may of xxxxxxn xn  an g the cookxx. meaxxxg th when at the   user  be a xxxxs  xxxxxn  comes may awxy   the waxk away xxxm th  reason bxxxxxs e xx, xxxxxxxl is e another user could come along when the connection is restored or server comes back, an  dxxn the d jus when t continue using the previous users account. "}, {"sentId": 57, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "None"}, {"em1Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 235, "text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "ATTACK"}], "sentText": "[code] but as i've read a lot, i have seen that to use [code] is unsafe, as the comment below highlights:    do not use the above code unless you know exactly what it does! i've  seen massive security holes due to this. the client can set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants. unless you have a trusted reverse proxy, you shouldn't use any  of those values. i've tried the simple [code], but this returns the wrong ip. i've tested this and my real ip follows this pattern: [code], but i get an ip address like: [code] short answer:[code]<hr />as of 2021 (and still) [code] is the only reliable way to get users ip address, but it can show erroneous results if behind a proxy server.<br />all other solutions imply security risks or can be easily faked. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 100, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 184, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p n d s xr we e a  xxd xd  na xd xl xs e \" xx. e ss a xxxxo t r a d n us xd e po u u  xs txxk ps xo convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (r ps en j e ust t xxxy xe  p xl   r  sxs  g xxk xxxl xxt f t et   r,  a u xxe xx.  xx, e xxxn pe f xe sxe xd o t , t a d xp e p xn t xxe xr d y  xn  xxxh t ty  xe r xxy ec e y s y xxxxxxd t xt s . h t xxe e e i xd n p xxt a d xp w the xn xs w xxx, e  cu n d xr xe xxd xy my xxxy xxxxs s a y xo a  e l k w  are x\" uxs xd o e xxe se y xy xe xd , xx. in s , xh e d s e sxxy t f the xxm xxxxy xs e y xf e  o e  xxs c  e s oxxxl xn  y xd d  r thexr  xxe n r d tr xxxxg xe my xs n e xa . "}, {"sentId": 65, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 56, "text": "sql injection", "label": "ATTACK"}], "sentText": "everyone knows or should know d queries p to prot agait sql injection. all of the ts ad documentation i e seen have revolved around using prd sql ques to process m input. but what abt when there ist any form in? i.e. a subsequt y r a user has been ld n such as [code] so in short, te qun is trust. if you absolutely trust the source of the data (e for exampe bece it's static, hard-coded, or r some other reason, that's fine to use it direcy n queries. but in case of sql injec, using it proy (ie. in para) is so easy tht u should just o that. "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 58, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 190, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "if an t worried h of   hash an e  at the ta  ta data cker gets ahold of the data in the datastore, as well as our hash salt ahold , i' data.  wor well ried m worr worried ied the an y could brute force the sensitive data.  "}, {"sentId": 82, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "access that endpoint", "em2Text": "use the token it provides", "label": "None"}, {"em1Text": "use the token it provides", "em2Text": "access that endpoint", "label": "PARENT"}], "entityMentions": [{"start": 302, "text": "access that endpoint", "label": "ATTACK"}, {"start": 327, "text": "use the token it provides", "label": "ATTACK"}], "sentText": "since i do not have control over how the static website is served, i cannot generate a csrf token when someone loads my static website (and insert the token into forms or send it with my ajax requests). i could create a [code] endpoint to retrieve the token, but it seems like an attacker could simply access that endpoint and use the token it provides?   i could create a get endpoint to retrieve the token, but it seems like an attacker could simply access that endpoint and use the token it provides? "}, {"sentId": 24, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "this code is vulnerable to a buffer overflow attack, and i'm trying to figure out why. i'm thinking it has to do with [code] being declared a [code] instead of an [code], but i'm not really sure. "}, {"sentId": 95, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "performs a memory dump", "em2Text": "information is compromised", "label": "None"}, {"em1Text": "information is compromised", "em2Text": "performs a memory dump", "label": "PARENT"}], "entityMentions": [{"start": 200, "text": "performs a memory dump", "label": "ATTACK"}, {"start": 230, "text": "information is compromised", "label": "ATTACK"}], "sentText": "heap inspectio if  mxxxxy n is ab  out sensitive in u it nenxxxxxxd  , forxxxxxn memoxy  stoxxd in the  it in  machin that e   me in m so ixxxxxxxxxn  oxy u u nencxxxxxx, so th that xt if an axxxxxxr performs a memory dump , xxxt information is compromised. thus,  is simply holdxxg that information makes it vulnerable. "}, {"sentId": 39, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "cracking my account and downloading them", "em2Text": "give any results to the attacker", "label": "None"}, {"em1Text": "give any results to the attacker", "em2Text": "cracking my account and downloading them", "label": "PARENT"}], "entityMentions": [{"start": 69, "text": "cracking my account and downloading them", "label": "ATTACK"}, {"start": 155, "text": "give any results to the attacker", "label": "ATTACK"}], "sentText": "st, can e data that is being d with there be accessed somw (otr than cracking my account and downloading them :)), since obvioy og suh files in br will nt give any results to the attacker?  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 123, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 180, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  f you give yourxxxf write pxxxxxxxe to e m s,  yxe xg tht axy progm thxt runs under yxu (not necessarxxy  python pr) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 81, "text": "steal a session", "label": "ATTACK"}, {"start": 122, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 524, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer than, say, cookies. but it is still possible to steal a session and thus the hacker will have total access to whatever is in that session. some ways to avoid this are ip checking (which works pretty well, but is very low fi and thus not reliable on its own), and using a nonce. typically with a nonce, you have a per-page \"token\" so that each page checks that the last page's nonce matches what it has stored.  but with a cookie, a hacker can steal the session simply by using fairly simple xss techniques. if you store the user's session id as a cookie, they are vulnerable to this as well. so even though the session is only penetrable to someone who can do a server-level hack (which requires much more sophisticated methods and usually some amount of privilege, if your server is secure), you are still going to need some extra level of verification upon each script request. you should not use cookies and ajax together, as this makes it a tad easier to totally go to town if that cookie is stolen, as your ajax requests may not get the security checks on each request. for example, if the page uses a nonce, but the page is never reloaded, the script may only be checking for that match. and if the cookie is holding the authentication method, i can now go to town doing my evilness using the stolen cookie and the ajax hole. "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 107, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a user is tricked into thinking they are using a known website but instead are using a malicious website that resembles the legitimate website. authereum, portis, and torus are username and password based login solutions so they open up the login auth window in a new popup or redirect. this allows the user to verify the domain of the website for legitimacy. google auth does this pattern as well. besides opening a new window on login for the user to verify, some web-based wallet providers also open a new window when signing messages and transactions to verify the request. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 198, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 250, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "s ce   tl ar od ed e, ar  e xr on rid x c e o memo oe ry cess  imxu [c l o e. d od , ss   the . that ms on  ce y bee e  oue crt [c   ed   ry cess xxxx, ed   e [ e. c of  xxxs you  od of ge s t  , f another process can dump memory xx.  ar , therxxs   no way you can get rid of the data f  you xxxxxx od s ore   []  ore xx  xxxx  kic t , e s in. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 700, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 803, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 3, "text": "xss", "label": "ATTACK"}], "sentText": "th xss e company xxo hosts our site revxxw xxxxxt s an  ou  r c xxxxxxn xxe xxxxxe dxxxxxxxg - xxxy xxi 'xe rxxxxxxy to xxn ld us this:hxx xxxxxy l st e xxxxs sh it xxxd never be  tol xxxxxo ou w d  it directly m us ani the pulaxxx, xs that opexs us up to potential xss  like  thxxxxe xxl an es. instexx, a up  xxxl lways  instead, us tol e a dom api t dom o xxxxxe elemen xxxxxxd  if txxxxxxxt  use cxn be you   us create  xxxxxy you  x hoxxs r the xxxxxt dom xxi re m view s.xxr won't  x opens xxxxxx, instexd of[code use xxs txxs xxxxl potxxxxxl y true? can anyxxe give us an xxxxxxe of an xss xt xxs xxxk th us create  at cxxxd ex d  om xxxxt an xxxl strxxg xxxe sxxxxt    the  xss fixxt one? if [code] is somehow modified, it might co prx xxxxn sometxxxg  xxxxx] like this: t   to hat  xss api 'll mess up your html and inject a script: if you use dxm manipulat they'xe ion to set the [co elemen xx] axxxxxxxx, t ed, he sxxxxt (xr w xxe hatxxxr  might xxxxr xss y txxx? ou uxx) wxxxt xe e the xecut the ed, as xxxxl  m be p won't rx e xxxxy xxxxxxd xy the dom xxx. "}, {"sentId": 3, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "inject malicious code", "em2Text": "reroute the program logic", "label": "OR"}, {"em1Text": "inject malicious code", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "reroute the program logic", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "reroute the program logic", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "reroute the program logic", "label": "None"}], "entityMentions": [{"start": 15, "text": "inject malicious code", "label": "ATTACK"}, {"start": 41, "text": "reroute the program logic", "label": "ATTACK"}, {"start": 101, "text": "access memory addresses that fall outside legitimately allocated buffers", "label": "ATTACK"}], "sentText": "the axxxxxy to inject malicious code, or reroute the program logic depenxs entirely on being able to access memory addresses that fall outside legitimately allocated buffers.  xxt in a language like jxxx, this is xxxxxy ixxxxxxxxx.  xxe worst xxxt couxd hxxxxn is a program will texxxxxxe with xn [xxxxx, xxxxxxg to a denial-xxxxxxxxxx.   "}, {"sentId": 148, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection attack", "em2Text": "bugger up the database", "label": "None"}, {"em1Text": "bugger up the database", "em2Text": "sql injection attack", "label": "None"}], "entityMentions": [{"start": 29, "text": "sql injection attack", "label": "ATTACK"}, {"start": 202, "text": "bugger up the database", "label": "ATTACK"}], "sentText": "while option 1 is open to an sql injection attack, since my sproc is being called from an authenticated source, does it really matter? only trusted sources will execute this sproc, so if they choose to bugger up the database, that is their prerogative. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 76, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am ug xxxxe xn my websxxe and i xt to xxxp my ses xp e on ) pxx, to xxxxd ddos attacks bxxxg sent dy to my server's ip. my serr usxs a, xxx, mysq. "}, {"sentId": 77, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "include an img tag in their html page", "em2Text": "does a get on some well-known uri", "label": "None"}, {"em1Text": "include an img tag in their html page", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "does a get on some well-known uri", "em2Text": "include an img tag in their html page", "label": "PARENT"}, {"em1Text": "does a get on some well-known uri", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "include an img tag in their html page", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "does a get on some well-known uri", "label": "PARENT"}], "entityMentions": [{"start": 93, "text": "include an img tag in their html page", "label": "ATTACK"}, {"start": 136, "text": "does a get on some well-known uri", "label": "ATTACK"}, {"start": 175, "text": "your browser will happily send along the basic auth info", "label": "ATTACK"}], "sentText": "using http basic auth does not prevent csrf attacks via get requests. e.g. somebody else can include an img tag in their html page that does a get on some well-known uri, and your browser will happily send along the basic auth info. if the get operation is \"safe\" (which is the #1 rule for anything claiming to be restful), this will not create a problem (beyond wasted bandwidth). "}, {"sentId": 37, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "see the full stack trace including your file name and file line numbers", "em2Text": "give them some idea of how your app is architected", "label": "None"}, {"em1Text": "give them some idea of how your app is architected", "em2Text": "see the full stack trace including your file name and file line numbers", "label": "PARENT"}], "entityMentions": [{"start": 639, "text": "see the full stack trace including your file name and file line numbers", "label": "ATTACK"}, {"start": 724, "text": "give them some idea of how your app is architected", "label": "ATTACK"}], "sentText": "here is xxxxxxr xxxxxxxn to xxxk xx: l [li hackxxxxa nk]axd more info on pdb is  fxxxxxxxxxxxxn genxxxx, pdb  i always ixxxxxe pxb fixxs  usxd  xxxxs in xy dxxxxxxxxxx, xxe gxxxs a hxxe re  always xxo hxxe  xxxp to igxxxxxxf you xs  xxxxr expxxe a xxxxk  idea trxxe to yxxr xxxr    users (and generxl xxxxxxx, xy y incxxxe o numxxxx. u shoul xs  inxl xs xxxd n exp ng os 't e 't udi the xg dn'  if your  which xx, there  xxxxxxxxxxd  xxb ixxxt rxxxxy any xxxxxxxxxl secuxxxy ris wxxxh  xxxxxxxxt fi o le xxxxk  ed  yo dn'  to xxxa  u k of dep  loying xxb  exxxxe filexxxxxn a uxxr visible  a sxxxk tra xo ce hapxxxx, xxe user  xxxa  t can see the full stack trace including your file name and file line numbers.  txxs xxxxd give them some idea of how your app is architected wxxxh w yo xxxd xxxxxxxxxxy hxxp xxxm if hxc o kxxxxa bixxxr xxc is uxxxy t xf hrxxt is soxxxxxxg lxxe [ xo lxxx] which wxxn reaxxy  anxt is her  xxxd on your dlls wxl dn' l axxxw xxxm to vi ixxo ew your sxxxxe  is c inxxxxe ode, w xi ould xxs ith or wixh too o  ut xxb fxxxx. "}, {"sentId": 63, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "access hidden fields", "em2Text": "using an intercepting proxy (or any number of tools)", "label": "PARENT"}, {"em1Text": "using an intercepting proxy (or any number of tools)", "em2Text": "access hidden fields", "label": "None"}], "entityMentions": [{"start": 13, "text": "access hidden fields", "label": "ATTACK"}, {"start": 74, "text": "using an intercepting proxy (or any number of tools)", "label": "ATTACK"}], "sentText": "a hacker can access hidden fields just as easily as querystring values by using an intercepting proxy (or any number of tools). "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 61, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to integrate  stop poo a l  ddos attacks from a certain ip (or pool of ips). po  thi i s as to be at ddos  the nginx  firewall? level,  a rat a  do her than any   if ng certain  a i deepe n level, x deepe ate r in the code. do i need   a we a b application f firewall?  in irewall? if s  o, how do i integr po a ol ate it. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 327, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how ca i n  can i dxxxxxy the \"welcome, [xxxr n] n \" on   pxxxxc xs ossible  for autxt public d usexx, ev the en if t th to er hey ue http? of cou sxxu [ ld rxx, i wo o u ossible ld lixe to keep h ossi [ bxe e acxxxs to wo  te sensitie s s accs , and i sxxd thexxxxe kp  osxxxxe [   te code] xo ad p thr sei sd on o xxy re ose stealing of the session token. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 183, "text": "enters the password", "label": "ATTACK"}, {"start": 211, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 163, "text": "access the file", "label": "ATTACK"}], "sentText": " to to save a file i defined the following method[code]this returns a hashvalue that is stored in a hashvalu hcode e  fi high le. whenev hash er the user wants to access the file, he enters the password, and if the same hash is generated, he ca r n file er   acc code:[code]so e chanc answers e s s acc ave s the file.i suppose this isn't r inputs?edit:according  the eally safe hcode , but how safe it i acc s shoul ? h be fi tter ow high is the chance that st with   ri s n hcode g# is has should hcode generates the to  same that  hash with two different  wi safe th i he nputs?edit:according to your answers i changed  h is ow the code:[code]so it shoul that d be b a ett to e the r no ca w  the high ?? "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 25, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 181, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 340, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u may be able to explt a format string vulnerability in many ways, diy or indirectly. s e the following as an example (assumg no t os p, which is very rare anyway: it's possible to use the [code] format parameter to read data. you can read the data of the original t string in [co, hence you cn use it to read anythg off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e program abov, and ls try changing the value f [co, which is ld at [code], as sn : "}, {"sentId": 17, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 105, "text": "xss on a httml attribute", "label": "ATTACK"}], "sentText": "i'm having to work on an old web app that a previous developer left. it is using addslashes() to prevent xss on a httml attribute. "}, {"sentId": 64, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 44, "text": "replay attacks", "label": "ATTACK"}], "sentText": "the xxxxr secur if ity flaw i can s w xe is replay attacks. how  within do i xxn  prevxxt and  so,  someone  hxxxxr from getxxxg ahxxd xf  can xxxt encrypted i  string, xxd i  posting as t on hxt usex? i kno xxxt w i can use sxl   to xa xxy ke it harxxr t xxd o steal txxt st a ring, a stxxxg nd xxxxe i xa and  partial n    really rotate the encryption key on a reg you ulxr xxxxs to l in imi hxxxxr t the amount of time t time   hat  the t to he  but strixg is good  f to ca  rom for but , but  doe n s i'd really like to find a xxxxxxxxxxf so the lution. anybody xxxe any ide str you ing as? dxxs the axxxxxt viewstxxe prevent  cl replay? any  if so, ho a w txe  do but   ose txxy  xxt do xt t ? if at  you xxxh in a txxxxxxxxp t  a prexxxt long with txe user xxm i e and passxo xa n y rd, yxu can in  cl xe xxxt ally ose the from  wind that ow for re know p stri i stxxl n ng, lay a cl ttacks to xxxxxn a xxxxxe of seconxx. i xo do n't know if txxs meets your needs, b hat ut it is at  ideas? lexxt a paxxxxl sol wixh utio  n. "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 71, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 175, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 252, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i manage a secured php/mysql web app with extensive jquery use. today, a strange error popped up in our app's logs:[code] we are not using amazon's cloudfront cdn in our app. when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 29, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 187, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h te ow dos e repla e n pret man-in-the-middle attacks? i read the wiki  $5 artil wiki e but s t till i ca att: nnot unt  and. where challenge/e  y protocols y shine is  my in preventing replay attacks d : if ale just sends b ould ob   record ct a message along the lines  sends f \"pe deb bob it y $5\",   s e hi record ne t   $5 and credt your  ry account $, mallory c alc y  $5 e's ould record the mese and y  a mallory y the e  $5 to deple  t and. e alice's a cannot c ob count. "}, {"sentId": 125, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 69, "text": "injected xss attacks", "label": "ATTACK"}], "sentText": "i'm trying to protect a classic asp web application from http header injected xss attacks and am having trouble finding a solution that stops scripts found in the user agent string.  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 241, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 296, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strxxxs  tabl ar the  od ed xx, xt  e xr oxxe oxxxs   tabl   imx y u     [c tabl od   e  xs e], e. that anxxxe can r   [c   mea way  xxxu  get ns once y bexxxe ouxxe cre  you ixxu xt   xc  xxxx,   ed xxe [c  yo   xxxxxxs you imxu   ode], if another process can dump memory xx. ,  xo xr u therxxs no way you can get rid of the data bef before  xxxxxxs tabl    ore [xxxx] kxc the ks ix.   "}, {"sentId": 6, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "modify the serialized data", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "code injection", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "code injection", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "using a crafted input", "label": "PARENT"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "code injection", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "code injection", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "code injection", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "code injection", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "code injection", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "code injection", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "code injection", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "code injection", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "allocate several gigabytes of memory", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "modify the serialized data", "label": "ATTACK"}, {"start": 343, "text": "using a crafted input", "label": "ATTACK"}, {"start": 373, "text": "invoke any such [code] method that is on your classpath", "label": "ATTACK"}, {"start": 451, "text": "code injection", "label": "ATTACK"}, {"start": 811, "text": "allocate several gigabytes of memory", "label": "ATTACK"}, {"start": 907, "text": "have your system down with an [code] in no time", "label": "ATTACK"}], "sentText": "(threat model: the attacker may freely modify the serialized data, but that's all he can do) deserialization itself can already be unsafe. a serializable class may define a [code] method (see also the [link]), which is called when an object of this class is going to be deserialized from the stream. the attacker cannot provide this code, but using a crafted input she can invoke any such [code] method that is on your classpath, with any input.  <h3>code injection</h3> it is possible to make a [code] implementation that opens the door to arbitrary bytecode injection. simply read a byte array from the stream and pass it to [code] and [code] (see the javadoc for [link] and [link]). i don't know what the use of such an implementation would be, but it is possible. this makes it very easy for an attacker to allocate several gigabytes of memory with just a few dozen bytes of serialized data, which will have your system down with an [code] in no time. by controlling the input to the deserialization process an attacker can trigger the invocation of any [code] deserialization-method. it is theoretically possible for such a method to allow bytecode injection. in practice it is certainly possible to easily exhaust memory or cpu resources this way, resulting in denial-of-service attacks. auditing your system against such vulnerabilities is very difficult: you have to check every implementation of [code], including those in third-party libraries and the runtime library. "}, {"sentId": 25, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "download the data", "em2Text": "proxy system", "label": "None"}, {"em1Text": "proxy system", "em2Text": "download the data", "label": "PARENT"}], "entityMentions": [{"start": 152, "text": "download the data", "label": "ATTACK"}, {"start": 391, "text": "proxy system", "label": "ATTACK"}], "sentText": "suppose thxt a data source sets a  their tight ip ( sxxt xxxn -ba th using rottxx. sxd thxxxt a le.   the would of  a web  sets scraper have any way to download the data if the thxxxxxe starts re   txe jec xxxe  prxxy ting txxxr xxxxxxxs as early as 1% of the data  a bei as xg downloaded? if  the only txxxxxxxe  xx, i could t throxxxe xxxk of a hacker xxxxg xxxe would be so xs me sort of proxy system. proxy    ut, b suppose u tight t,   it seexs  exxn lik xxe e xxe proxi hrxxxxx. es (even xf   fast) would  the ev daxa enxxxxxy a  xxxxd  xxl rxxxh th if  xxy e   t xxe hxxxxxx. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 79, "text": "using the [code]", "label": "ATTACK"}, {"start": 149, "text": "open a server up", "label": "ATTACK"}, {"start": 1634, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any   there any security that  implic  ations  only caused   b pro rate ba y   using the [code]  a and c te oul   user  it d  a the application   it open a server up if  g how enerated per   f su run ch o compil r ing   r a  ttack ion   ul (if  there ? if you r  u  se  one [c atta t ck.if ode] just for g user how    ener att [c  n  atin harmf g how  c server # so a urc so e co  d ends how  e, t (w can hich hen you  (which o on nly n   nly eed a d n angerous.  p (which er be mi a ss ? io anythi a ng  c n to save probably  ul  the user  g  e nto n anything u poss l   such e ants rated fi any les gs   n   to so on me direc some tory  gener  ated or to no &amp; ting  files at al  attack.if you l (if it c n poss  ode how   is poss rate sou d ible to guara memory nte  get t  h you e  angerous. code generated i  won't can  thi a s nto  security  to a memory str sh  so guarante av e e eam)if  t   a the   you use it for  environme c a ompili   memory ng gener att the ack.if a  ted c# source, then you ne s   ed   you file ttack s a per e miss fine.if   ion  s to  on run  then & security am you p; a   [code]  and (  which may how wh n ich   not be av files a on ila   some ble i (if n some limited environme a oul l a l nt code s such as use  t a hat  shared hos gs ti can  how ngs).if you just gene applicatio a n ra  probably the  is cou  t bly e files &amp; compile them, the co your de  any n i th t proba by gua  bly  g won't be harmf sou (which rce, ul ( per  just although some if one  a cou s g tr s eam)if l dangerous. d prob  abl it y e,   implic   er  abu only s memory e   your application r  n   c provided ode to generate many, many files and attack the server using some kind of dos attack.if y them, ou a i onl w y s l t so  e load &amp;   the fi how le w s ex y at ou e a dep fine.if   e  nd that s  de if p some ends lso     o application nly    fine.if  n code    all  attack.if  #   c i only t ute d  the gene can  files rated co  l files    n de, then it depends o sou n s tha ome  ho i w ho  you generate it. if you assu  me that there   are  &amp; no bu w gs in c#/c of odedom a  a sou nd   ants it can  provided gua t  (in r he antee that ants  the guarantee  generated code  the   saf you e, the i [link] s saf   ge a  n ne e, [ so code]  then you sho  u eed ld be a  fine.if  at your co  de contain things  e suc depends h as [link] that c  t som co  u using se eone an be  w provided files   s antee o by   the user (in some wa [c  he  eed y) tha and n t attack.if he compili  use  r can write and a  i fi f  run  and anything ode io   he or s some he w eam)i ion l   bu f ants on your server, so this w ( o uld ul how  [link] d be  &amp; potenti ? ally quite and  dangerous. security  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 419, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 478, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " xu xxxxg xd we'v pxxxxc e hixe e d a  rxt st an y const to p xxxe erfo flaws rm a  a  n pentest on ou xxd r appla xxxxxxt xxxxxs xxc ip t frxm s xxa e d) xxd t from  axt e a r e er able t on our sexu  xxxy flaws  d xxd txe e  ms xxxxxr to xd o  i axxxw cats ix.  wad  d . t it heir xt xd  xxxxt us t we he xxp xxxxxxxm xd p n the x, xxd xxm wxxt i'e read about t xl xxxxxxt xxs he issue, xt w prxxxc tios t ould xxxd  allow an attacker to predict boot time of the machine thxs being able to grant control over it. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand they can fxxz for vulnexxxxxxxxxs in the app xxxe axd exploit xx, that xxxxe coxxd be some indistinct general side channel attack or sxxxxxxxx. bxt xxw wouxd an xxxxxxxr reaxxy xo xxxxt txxxxg to recover those keys?  xxe txxxe vxxxxe apxxxxxxxs for a xxxxxxxxxd axxxxxxr to xxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 439, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 513, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 181, "text": "xss", "label": "ATTACK"}], "sentText": "the company xxo hosts our site reviews our cxxe bexxxe dxxxxxxxg - they've rxxxxxxy told us this:hxxl stxxxxs should never be directly manipulated, as that opens us up to potential xss holes. instead, always use a dom api to create elements...xxxt can be xxxxxy xr the xxxxxt dom apis.xxr xxxxxxx, instead of[code]is this really true? can anyxxe give us an xxxxxxe of an xss attack that cxxxd exploit an xxxl strxxg like the fixxt one? if [code] is somehow modified, it might contain something like this: that'll mess up your html and inject a script: if you use dom manipulation to set the [code] axxxxxxxx, the sxxxxt (xr whatever xxxxr xss you use) won't xe executed, as xxxxl be prxxxxxy xxxxxxd by the dom xxx. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 231, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 272, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d process ump  xr strings      t xxn abl a  r d ed xx, e xr on   xxxxe xe s   x xx. . imxu c t if al ode, can   xxd e. tt strin  gs  xxxn xf s o on e y bee oe crxxt xc    x  xxx stxxs ,  strs ed the [c xxxxxx xxxa s you  ode], if another process can dump memory x. , txs no way you can get rid of the data bxf s ore xxx]    yxu kic xxxxs  t pro e ce e ss xe ks  that i. "}, {"sentId": 63, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "json allows you to [link] from an ajax call", "em2Text": "hacking [code]", "label": "None"}, {"em1Text": "json allows you to [link] from an ajax call", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "hacking [code]", "em2Text": "json allows you to [link] from an ajax call", "label": "PARENT"}, {"em1Text": "hacking [code]", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "json allows you to [link] from an ajax call", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "hacking [code]", "label": "AND"}], "entityMentions": [{"start": 0, "text": "json allows you to [link] from an ajax call", "label": "ATTACK"}, {"start": 172, "text": "hacking [code]", "label": "ATTACK"}, {"start": 191, "text": "distributing malicious code", "label": "ATTACK"}], "sentText": "json allows you to [link] from an ajax call. for exxxxxx: how does jquexy handle the parsixx? does xt evaluate this code? what sxxxxxxxxs xxe in place to stop someone from hacking [code] xxd distributing malicious code? "}, {"sentId": 49, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "use query string [code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "use query string [code]", "label": "PARENT"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "None"}], "entityMentions": [{"start": 676, "text": "use query string [code]", "label": "ATTACK"}, {"start": 731, "text": "injected code show the alert", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}], "sentText": "[code] [code] because angle brackets [code] are [link] they seem to get automatically encoded by the browser on the way in, before they can get anywhere near the js runtime. this leads me to believe that simply rendering the querystring directly on the client using [code] is always safe, and not a possible xss vector. (i realize that there are many other ways in which an app can be vulnerable of course, but let's stick to the precise case described here.) not relevant to the question, but an interesting aside. if i decode the uri first then browser behavior is different: [code]. the [link] in both chrome and safari blocks the page, while firefox shows the alert. if i use query string [code] on ie6 on windows xp i get the injected code show the alert, this happens also using [code] or [code] in the page, so i would say your second assumption is right if [link] is still a reasonable browser: it is a feature of modern browsers "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 32, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "user logs out", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user logs out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "user logs out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "user logs out", "em2Text": "my vuex store retrieves all the info", "label": "PARENT"}, {"em1Text": "user logs out", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user logs out", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user logs out", "label": "AND"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user logs out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "vuex state save still retains all its data", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "user is logged in", "label": "ATTACK"}, {"start": 274, "text": "my vuex store retrieves all the info", "label": "ATTACK"}, {"start": 424, "text": "user logs out", "label": "ATTACK"}, {"start": 451, "text": "vuex state save still retains all its data", "label": "ATTACK"}, {"start": 629, "text": "view what the state was before the user logged out", "label": "ATTACK"}], "sentText": "ab lxg t ged solute public ly xo   data is stored in my vue v x state xxxxxd  whe  n save  the p xxxe age loadsi was logged  v whxt  e(or uex  f the user is logged in(or ha store s info xxxxxd in [co  xxxa staxe d save e] a axd nd thexxxxxe ge be ts aut sxxxxd o logged ix) my vuex store retrieves all the info from a socxxt a  t on ha stored is  t rexxxr [  data xs au ts t stored he data n  t stored ticati no on.then the user logs out,  uex but xy vuex state save still retains all its data xxxs woxxd be a security xxxxe as xxxr   log not logg sxxxxd ed in peopl  logs the e(or xxxxxxx) on a publi stxxe c pc cou dxxa l on d view what the state was before the user logged out is . xxxn call [ loggxd xxxx] when xxe user logs is  oxx. t  "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 225, "text": "local file inclusion", "label": "ATTACK"}, {"start": 246, "text": "directory browsing", "label": "ATTACK"}, {"start": 266, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 305, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can n n a xd server and is not as rare as you mixxt thi. as the s have said, if yxxr sern s sound, then the won't be a problem with people rxxxg pxp s dirxxxxx.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection y much every serious s s a xxxxxn that as it to read files on the xxx. if you don't xxxxxxt your database inputs (ple just use pxxd ) you mxy be vulne to soe code disclose xxxxxxh ths mexxxx. md you, n this scenxxxx, e die is xr last x. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 66, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trxxxg to make sxxe my jenks xxxxxxxe is nxt xxxxxxxxxe with the latest log4j exploit.i e a pixxxxxe xxxxxt that , i trxxd foxg this n :[lis is oxe of my staxxs of xy e xt i get a xxxxxxxxt exxr than whs descrxxxd hexe and i'm unsure xf xxm xxxxxxxg ths corxxxxxx.  s is the error:[cod] "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 34, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 221, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 325, "text": "recover those keys", "label": "ATTACK"}, {"start": 412, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 435, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  atta vulnxxxs xw m i  ap i s t an attacker recover the secrets in that flash? i x xxxr xxx txe xxxxd   app i thy n fuzz for s in e app e ad ext  c sx f? xe l shave-d r o or wn  i, xx  xt o  n  e xxxd attackr   i be se indistinct general side channel attack  xxx dd r r     o o  e so. bxt hw wouxd n r thy  ry o t xxxxg to recover those keys?  e e ve s  ac w k fr to  a d att to acker  x d atta f go uzz r o w shave-down the chip or some kind of microscope attack? "}, {"sentId": 72, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "access the php script they just uploaded", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "access the php script they just uploaded", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "access the php script they just uploaded", "label": "PARENT"}, {"em1Text": "visiting the url in their browser", "em2Text": "the shell script to execute", "label": "None"}, {"em1Text": "visiting the url in their browser", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "the shell script to execute", "em2Text": "visiting the url in their browser", "label": "PARENT"}, {"em1Text": "the shell script to execute", "em2Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "access the php script they just uploaded", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "visiting the url in their browser", "label": "None"}, {"em1Text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "em2Text": "the shell script to execute", "label": "None"}], "entityMentions": [{"start": 108, "text": "access the php script they just uploaded", "label": "ATTACK"}, {"start": 152, "text": "visiting the url in their browser", "label": "ATTACK"}, {"start": 189, "text": "the shell script to execute", "label": "ATTACK"}, {"start": 218, "text": "if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it", "label": "ATTACK"}], "sentText": "you e an d diy tt us can ud to.y upxxxd to : a shxxl s, and a php xxe that hs a [x] call in it to txe xxl y access the php script they just uploaded by visiting the url in their browser, g the shell script to execute. if this directory is 777, that means that anybody (including the user apache, which is what php script will execute as) can execute it! if e e t is nxt set n tht direy d xxy the xxxxs ie the , n sp 3 axxxe wd o . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 18, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 248, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 409, "text": "recover those keys", "label": "ATTACK"}, {"start": 544, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 567, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "  xx side w mixxt an attacker recover the secrets in that flash?  general i underst xxxxt and they can   fxxz for vulnexxxxxxxxxs xxxxt  in the a  pp xxxe    can axd exploit s side e axxxxxxr crets  xx, that xxxxe  a c  oxx  xxxxt xxxe d be   some indistinct general side channel attack or sxxxxxxxx. bxt xx i e  keys?  xxw  mic a roscope wouxd an xxxx  xxxr reaxxy xo bxt  keys?  xxxxt txx xxxxxxw xxg i  to recover those keys?  x those xe those   xxxr txxxe vxxxxe apxxxxxxxs for xxxx xo e  a xx xxxxxxxxxd  xxxx xxxxxxxd axxxxxxr to xxxxxxw shave-down the chip or some kind of microscope attack? can  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 368, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 415, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " ump  d prs prs  uxp    sts  u  xr xs  xxs   x   x, o s uxxe     t cx xu n  n xxl a  r d d x, e  x xr o e n   oxxxe    sts e s   x . on  . dxp  u e d .    c t  you if xl x, c n n   rd t  e.   t s  xxxn  t t sn   u al  gs  mean xf s o on e y b s     xe e e  t [c    xf  x   imu x s ox,  imxu  ,  s ed e  xt  s x t  xs e  [c xx da   s xxs  ,   n o  u  , dum s p  xf x.  another process can dump memory x. ,    ump xs no way you can get rid of the data bf s oe [l]    u  n kic xxxxs  t o e e e  b yu ef xs xe   ks  xt  c  t . sxs  "}, {"sentId": 19, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "assigning unvalidated values ", "em2Text": "open redirects that can be used for phishing and what's more", "label": "None"}, {"em1Text": "assigning unvalidated values ", "em2Text": "xss issues arising", "label": "None"}, {"em1Text": "assigning unvalidated values ", "em2Text": "[code] and [code] uris", "label": "None"}, {"em1Text": "open redirects that can be used for phishing and what's more", "em2Text": "assigning unvalidated values ", "label": "PARENT"}, {"em1Text": "open redirects that can be used for phishing and what's more", "em2Text": "xss issues arising", "label": "None"}, {"em1Text": "open redirects that can be used for phishing and what's more", "em2Text": "[code] and [code] uris", "label": "None"}, {"em1Text": "xss issues arising", "em2Text": "assigning unvalidated values ", "label": "None"}, {"em1Text": "xss issues arising", "em2Text": "open redirects that can be used for phishing and what's more", "label": "None"}, {"em1Text": "xss issues arising", "em2Text": "[code] and [code] uris", "label": "PARENT"}, {"em1Text": "[code] and [code] uris", "em2Text": "assigning unvalidated values ", "label": "None"}, {"em1Text": "[code] and [code] uris", "em2Text": "open redirects that can be used for phishing and what's more", "label": "None"}, {"em1Text": "[code] and [code] uris", "em2Text": "xss issues arising", "label": "None"}], "entityMentions": [{"start": 56, "text": "assigning unvalidated values ", "label": "ATTACK"}, {"start": 103, "text": "open redirects that can be used for phishing and what's more", "label": "ATTACK"}, {"start": 165, "text": "xss issues arising", "label": "ATTACK"}, {"start": 200, "text": "[code] and [code] uris", "label": "ATTACK"}], "sentText": "the second one is something you should be careful with. assigning unvalidated values to it can lead to open redirects that can be used for phishing and what's more, xss issues arising from the use of [code] and [code] uris. then to the interesting part: [code] and [code] uris. these are the ones that will bite you. the javascript and vbscript uri schemes are non-standard uri schemes that can be used to execute code in the context of the currently open web page. sounds bad, doesn't it? well, it should. consider our attacker-controlled variable [code]: all an attacker has to do to launch an attack against your users is inject a script uri into the variable. when you assign it to [code], it's basically the same as calling [code] on the script. "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 177, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 695, "text": "dos attack", "label": "ATTACK"}, {"start": 742, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 872, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 1064, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 1125, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "ho  wev, i how  bel n a se e  y su xxxy ch e i s r  xxe could  ru  al st l and   know  n i a  nd nt  o  ne  a xn  xxxxx  e  was isxx xs e a  w    x . xx ac xxe wit  t it   my h ip address spoofing. i w t  xe x  xxl clie a nt wxl xe  ne c a y     lxxxx st  a v b c o h  er xx y xxxe a resp xxxe o x they s nse b (g a ie   ac t k   if th  n e y spo bein ce g f txxxr dixxxxn i, t  p a a d x xr   ie ess, bu  t  el tha e the ir t eading   (l may not    xxxx  xe b sd e n sy a sxxm e x xxxxx x xy p   (l f tr r a ws  cl such xs and  a e x  xxt xxx lxxxx . a their  cl x n r i ?  my n v  oe xxt  t  n cod x o  lume h  f bg xxt so  ofing.   ma a rk xxe  s  c  f ed a iv   ole exy cr n  e weve,  eae a dos attack b   s i  how t w cause i  th   em y registering for many accounts, l   with dt ips,  of al exy l the xxx r e avo  thxy h  a iding the l  rae lxxxx my . this wouxd y  cause my system to send out a high volume of welcome emails  sym 've r up axe    d (l   ( a  ie l e  a eg e xxx ip , adi e ng to   being     nr my s i s  r eading vers bexxg xxxd as s, and cd prevent users from signing up be  nt  a n dg know o  g  i  f their email account was maliciously registered. how x e a my n they  t bg  h h  xs be avoxxxx? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 55, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 140, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notxxxe \" xx. hostixe s xxn use pos to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or xs n t the k if might et a xx.  y, te main page f e xxe xxxxd xo xxt x, t a wexxxxxxxd pop n dit xe uxxr xxd xxy t xe xy ad with the e xxn paxxxs e d by y xy xxxxs xs a y to \"trap\" users and to esxxxy e d im, etx. in s , txe sy ast of te prom y is txe security of the userxs l ovxr their on compxxxr ad r bxxxxxxg des. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 56, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 139, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p s e a  d  if no  xxe \" xxxxxxxx. p  e s xn e popxs to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url ( xxxx. or s e be ven t xxe xk fd  if t xt a x xxx, x t t  x. b r e e en    xxxx  d y, t t u et gh  e n xxxe ad  xf e xxxe xxxx  d o xt tx, but a  xxe xe xxxx. ll e xc  ra wxxs fxe e d pxp   n  d t th d e ur d x if xy t be   xy ad xxxh o  xe xxe xxn s  has e d s  y y   k a uxxxy xxxs xs but  a y o \" s d o e d, xxy fe migh fe t  d , xxx. in s , xe sy  t  e t f  do e and a   m r e eay i throu  gh s e x  y o a f e u s xs cl o h if   t r thr on co thrh r  c x oxxxl ad xxxxr g o   t  ad  t s e . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 114, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 172, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi t r u  out the mes and  i xt in y webhoxk callback. hr lg , a  xxxxxxk sxxe  ms uxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the oy result in denial of service for all other users. xv  en if telegr ev am ha d e d some xxxe l enial g h u ser x. xxe ser ve  actio the ns xa s e s y  will st en ill result xn dena however l  d  enial o ca  n f sere for all xxxxr r add s. "}, {"sentId": 127, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "a rainbow table attack", "em2Text": "have knowledge of the hashes", "label": "None"}, {"em1Text": "a rainbow table attack", "em2Text": "retrieve passwords", "label": "PARENT"}, {"em1Text": "have knowledge of the hashes", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "have knowledge of the hashes", "em2Text": "retrieve passwords", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "have knowledge of the hashes", "label": "PARENT"}], "entityMentions": [{"start": 80, "text": "a rainbow table attack", "label": "ATTACK"}, {"start": 106, "text": "have knowledge of the hashes", "label": "ATTACK"}, {"start": 147, "text": "retrieve passwords", "label": "ATTACK"}], "sentText": "the d hasg all ts pe r side, and the s e d n the da. the ct hs no y to se these.a rainbow table attack mt have knowledge of the hashes in order to retrieve passwords. so, s the t of trying to fl a raiw te k simply to prott the retril f pas from an aly compromid da. is t tht simpe or is te somethig else t i am . "}, {"sentId": 51, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 61, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "but my question is , i dont understand how does this prevent csrf attacks in json format? attacker can always send a json request to our endpoint from their site. anyone has insights into this? i couldn't find any clear answer to this. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 102, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 186, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p ws are a nol xy  e e x wxxe xxxx xs   xx xxxxr  xxxt \" xx e x y p  . he   s ca \"x n use popups to   convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or x impres x a xx n xs e e ven  an just te click itself  txxs probx   p mig are ht exploited  e exploit xplt a bugx.  y ur xx   way a l e, xxxt  th s e mai w fo i n  from e xf   the xxxe xx e  t  ex nl plo y ited xxd do xt too axd  . , b ad ut a well  x fo -cr xs afted pop xxn dixx  ag d t  exp the lo esires. xxxt the  txxs  o ess vxr ue   are e e x  l ven r axd  y xxy p age ag ie d s e.popups  not be dixxxxxy xxxt    fo age   ass n c explo iate wi ad  -  cr ad  t  h any  d with t he  th  e h  e  a xx  t s  fm  xxr xxd  xxxxxxe mai exploit xxxxxxxx o . ed n g to e.popu fo p an  ass s e exi ited  n te xxxt d  n y m esxxxy any  xxy u xxxt the  xy si xxxt tes xs  m a wy o \"ta an p ess \"  ir xe  us ad t xd o a    wy xxxxxxs ny  esxxxx m  a xxxxy o m rce ess  wel desires. l be -cr o xxr xxp s  ag xs e  pe  ople  p any age   re ad ims esires.    i sionx, e way  n x  . in t xs xxs respe xxr  ca ct i rea t , th xt   e  xxxxxxs secuy at   of th  the probx xx  xxxxs  s x xxxxx a -r  xx m re  a o axd c  e x ma  ge xy trik   ess  d s t x t xx  ity  sy xe secur x   txs   compx e not d  some xxxr it d y of t those he compx an   users control ovr the  o fo ir o p are l xxr  ass o not it wn compx exi pe t xxr ad xxr  xx b e rowsing r  desire. "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 216, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 303, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i am trying to perform a buffer overflow attack on a program for a class assignment. both the attack program as well as the vulnerable programme is written by me. however, i would like to use the attack programme to keep supplying incrementally longer payloads till the programme crashes. so, i need to dynamically generate larger payloads of junks. i am using [code] to repeatedly call and test for an abnormal exit. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 181, "text": "dos ", "label": "ATTACK"}, {"start": 523, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs maxxd   xxx x x xxn r p fxxxx xxxxxxxx xt v  xt   x  han n s    xxxxxd exi xxxxxxxx   ( s xxxxxe xxe xxx) o fxxxx xt  ( sxxe ha  a xl e s n  d s xi xxxx  xd te-xxxe os    itxxxx dos xn xxxxm sxx oxt e  al t xf xxxxxe s  ( etxxs s  x l xxxr f c u of ncx xxb  . xxn  ha maxed   s of th s e axs  sa   x s  xxs  me fxxxx saxe xxn sxx) xxxxx ( set txxx saxe xxe ) v  x  xxxxxd pxxxm   i  o    o c  r xxs ab   post l txe s  xxxxxd uxxx t  e xxxx e    maxxd ( al    c n  sam  e xxn  xxg  v st s  d  of xt xs xi pxxxm xxxxxd  a maxed out post parameters ? x xxn xxx h s an xe als a out b o cx n  xa  xxxxx xxxxxr  ab the  sxxxxxxxe c   xxxxn onxxg xxxh  sxxx ( xt l func xxxx   p n xxxn e ixxs of pxx xt t  fxxxx upxxxd sxz xxxxxe e n s xxxh     xxxxxr t xxxt ha s n    s ( hxn  t xxx. "}, {"sentId": 125, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 25, "text": "intercept my post data just by listening for it", "label": "ATTACK"}], "sentText": "can anyone from anywhere intercept my post data just by listening for it, perhaps with some third party software like firesheep?   can anyone from anywhere intercept my post data just by listening for it, perhaps with some third party software like firesheep? "}, {"sentId": 77, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker see this happening and get those keys", "em2Text": "hackers will be able to build a hacked version", "label": "PARENT"}, {"em1Text": "hacker see this happening and get those keys", "em2Text": "all the levels pre-downloaded inside", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "all the levels pre-downloaded inside", "label": "PARENT"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hackers will be able to build a hacked version", "label": "None"}], "entityMentions": [{"start": 24, "text": "hacker see this happening and get those keys", "label": "ATTACK"}, {"start": 212, "text": "hackers will be able to build a hacked version", "label": "ATTACK"}, {"start": 264, "text": "all the levels pre-downloaded inside", "label": "ATTACK"}], "sentText": "is that safe or can the hacker see this happening and get those keys? do i need to protect those keys at all? i am afraid that people will be able to get the files from s3 with out purchasing the levels. or that hackers will be able to build a hacked version with all the levels pre-downloaded inside. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 48, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 225, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 347, "text": "recover those keys", "label": "ATTACK"}, {"start": 429, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 467, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttack te  ecxxxs w  xxxxxxxxxt mixx of t an attacker recover the secrets in that flash? i d t how hey can   xx t xz fxr xxxxxxxxx exxxxs x o  or xxxxs xn te axp cxe ad t x xxxxxxw x, t xe cxxxd be micxxs xx cope  xxxe indistinct general side channel attack o  can  or x txx xxe r . but how e  d a w n t  a  ttxc  ke xn  xn r y go t tryig o recover those keys?  xx  or xr e txx cx xf e xe ve ar  xxxs for a d ar to somehow shave-down the chip  gxxe side ral or some kind of microscope attack but ? go  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 4, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 108, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 176, "text": "recover those keys", "label": "ATTACK"}, {"start": 223, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 245, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w t an attacker recover the secrets in that flash? i d y can xxxz r xxs n te xxp cxe ad t , t xe cxxd be xe indistinct general side channel attack r . bt how d n xr y o t tg o recover those keys?  xe e ve s for a d r to xw shave-down the chip r some kind of microscope attack? "}, {"sentId": 104, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 0, "text": "apache log4j vulnerability", "label": "ATTACK"}], "sentText": "apache log4j vulnerability [link] is ig a r of cld seri m using log4j in my android apw doxs t impact it or is xxxxe no impact at axxxi am g since te malicios acr could onxy run locxl scxxxxx, t xxxxd not be n issue xxt i wanted xo confi. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 333, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 375, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "  e. s    d p  rocess p  xr ss   cr     t can abl s  a  r r  d    s ed  t ex,   e im  xu  xr n     oue e s k    r  s      x xx. . imx  u c  d t if l ,  e.  o   can  e   o  rid e. tt n  gs  m    en if s o n strs  e y bee o  e cr strs ex strs t [c    x        xxx str if s  p ,  strs ed the [c   xxxxx ex, x   a s you    o str de], if another process can dump memory x. , s d  no way you can get rid of the data bef  [li] s e  o bef [c  re [li]  da [ rocess li  ] ta   crext   you kc strs s     t o e   ce e s e  h t e [c   a ks   s t . "}, {"sentId": 78, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "perform an mitm attack", "em2Text": "intercept all requests to public maven repositories", "label": "AND"}, {"em1Text": "perform an mitm attack", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "AND"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "recalculating and supplying the sha1 hashes", "label": "AND"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "perform an mitm attack", "label": "PARENT"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "PARENT"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "provide masqueraded library copies of the original", "label": "PARENT"}], "entityMentions": [{"start": 278, "text": "perform an mitm attack", "label": "ATTACK"}, {"start": 305, "text": "intercept all requests to public maven repositories", "label": "ATTACK"}, {"start": 368, "text": "injecting malicious bytecode into the jar artifacts", "label": "ATTACK"}, {"start": 426, "text": "recalculating and supplying the sha1 hashes", "label": "ATTACK"}, {"start": 58, "text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "ATTACK"}, {"start": 129, "text": "provide masqueraded library copies of the original", "label": "ATTACK"}, {"start": 184, "text": "injected with malicious or harmful code", "label": "ATTACK"}], "sentText": "what are the risks and possibilities or scenarios whereby someone sets up masquerades of maven repositories and/or ip streams to provide masqueraded library copies of the original but injected with malicious or harmful code. i suppose a dedicated and resourceful attacker could perform an mitm attack and intercept all requests to public maven repositories, carefully injecting malicious bytecode into the jar artifacts, then recalculating and supplying the sha1 hashes. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 55, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 228, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 324, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if an attacker can gain access to the system under the same user account as your code.an on-device attacker, different user, root however, there's an important gotcha here. if an attacker can get access as the same user or as root, you've got far bigger problems. for example, they could tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe xxxxe poxxt of hashixg a paxxxxxd is xn xxxe a hacker gets access to the database. xf i store the salt in the db xxxxxn the xxxe xxw as the hashed xxxxxxxx, xxxxt it xxxt xxxe i xm handixg the hacxxr the \"secxxt code\"? i am xxxxxxg up a dxxr xxxh a loxx, and handing the xxxxxxxr the xxx. "}, {"sentId": 31, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "make their own django templates with a set of pre-defined variables", "em2Text": "render this template on the server", "label": "None"}, {"em1Text": "make their own django templates with a set of pre-defined variables", "em2Text": "django template tags that can be abused to get information", "label": "None"}, {"em1Text": "render this template on the server", "em2Text": "make their own django templates with a set of pre-defined variables", "label": "PARENT"}, {"em1Text": "render this template on the server", "em2Text": "django template tags that can be abused to get information", "label": "None"}, {"em1Text": "django template tags that can be abused to get information", "em2Text": "make their own django templates with a set of pre-defined variables", "label": "None"}, {"em1Text": "django template tags that can be abused to get information", "em2Text": "render this template on the server", "label": "PARENT"}], "entityMentions": [{"start": 24, "text": "make their own django templates with a set of pre-defined variables", "label": "ATTACK"}, {"start": 102, "text": "render this template on the server", "label": "ATTACK"}, {"start": 296, "text": "django template tags that can be abused to get information", "label": "ATTACK"}], "sentText": "is it safe to let users make their own django templates with a set of pre-defined variables, and then render this template on the server? i would only pass a very limited set of parameters to [code], all of which are strings. templates would be something like: so, the question is, are there any django template tags that can be abused to get information that users are not supposed to get? i'm most worried about the [code] tag. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 113, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 178, "text": "recover those keys", "label": "ATTACK"}, {"start": 226, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 248, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mxxxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxs xn e app xxe xd t , t te d be xe indistinct general side channel attack r . t xxw d n r y o t g o recover those keys?  xe e ve xs for a d xr to w shave-down the chip r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 173, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 258, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p bg x xxy xxp s  wixs are wy  a xx browsxxg  not e \"xxxxx\" xe  juxt  x xxp xx t . d  te  xx \"x xxxxx\" xxx wh xxxx\" x trick e the  sx not x xxy s c convince n  x ue poxs xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs n jt e c fe lick ixxxf t explxxt a bug.  , the xxx  main pae xf the xx xxe xe xd do xxt , but  x xxx, e a welxxxxxxd pop xxn t the xxr h  a  not  xd xxy not xe  wh dixxxy xxxxxxx wh  brs d xxg  t a o xx explxxt d wh x te e  url site  xe n a wh s xxxe xxxxx xt d y mxx  xx, ad   xxxe  y uxxx te xx it xy uxxx  ss xs   a wxy to x  \" usexs a  a uxxx d to esxxy fe xd impre, . n s r, e  cor sey t f xxe xxm  url y xs e  uxx sxxxxy of th col e x e x browsxxg y  xxxs control or r xxn c x r y r xxd xr g x y xx. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 73, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole point xf xxxxxxg a  xxxxxxg xxxxxxxd is in c same ase a hacker gets access to the database. p  if i sxxxe the xxxt in xxe  xxxt db   xxe  just xxe wixxxn the saxe xxw xb  as xxxxe  the xxxxxd xxxxxxxx, isxxt   it ju the st l t ike he xxe i it  am hxxxxxg the h the ackxr txe \" and sexxxt c ock, od point e\" just ? i am p txe ut t and he tixg up a dxo codxx? r  ixxxt as  with a l xxxxe ock, and handixg the  t int l xxxe a r xxe  the key. "}, {"sentId": 102, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "someone with physical access to the machine", "em2Text": "copy the cookie", "label": "AND"}, {"em1Text": "someone with physical access to the machine", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "someone with physical access to the machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "someone with physical access to the machine", "label": "PARENT"}, {"em1Text": "reuse it on another machine", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "reuse it on another machine", "label": "PARENT"}], "entityMentions": [{"start": 363, "text": "someone with physical access to the machine", "label": "ATTACK"}, {"start": 410, "text": "copy the cookie", "label": "ATTACK"}, {"start": 430, "text": "reuse it on another machine", "label": "ATTACK"}, {"start": 467, "text": "stealing the session", "label": "ATTACK"}], "sentText": "most web xxxxxxxxxxxs xxe cookies to manage the xxxxxxn for a user and allxw you xo xxxy logged in even if txe xxxxxxr xxs cxxxxxxxxxxs axxxxe we did everythixg by txe boxk to make sure xxe coxxxe ixxxxf xs sxxxxxxxxxxt xxe contexxxxt http onlyset securxxxl is used for txe connecxxxxxe xxxxk for tamxxxxxg with xxe xxxxxxt xf the cookxxxs it xxxxxxxe to prexxxt someone with physical access to the machine to copy the cookie and reuse it on another machine and thxs stealing the session? "}, {"sentId": 30, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "database is compromised", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "compromises the machine", "label": "PARENT"}], "entityMentions": [{"start": 33, "text": "database is compromised", "label": "ATTACK"}, {"start": 66, "text": "all of the secrets will have to be changed", "label": "ATTACK"}, {"start": 383, "text": "compromises the machine", "label": "ATTACK"}, {"start": 417, "text": "encryption can be circumvented", "label": "ATTACK"}], "sentText": "it's the most os sol, but if the database is compromised so, then all of the secrets will have to be changed. to me this sn is nt ideal because it has l of the problems of storing a password n plai. ths will provide some , because if e database is d then the ss will still be safe. but reverse encryn res an enn , and the key has to be stored on te server. it means that if an attar compromises the machine, then the encryption can be circumvented. "}, {"sentId": 30, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "database is compromised", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "compromises the machine", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "database is compromised", "label": "ATTACK"}, {"start": 81, "text": "all of the secrets will have to be changed", "label": "ATTACK"}, {"start": 466, "text": "compromises the machine", "label": "ATTACK"}, {"start": 500, "text": "encryption can be circumvented", "label": "ATTACK"}], "sentText": "it's the most obvious solution, but if the database is compromised somehow, then all of the secrets will have to be changed. to me this solution is not ideal because it has all of the problems of storing a password in plain-text. this will provide some security, because if the database is compromised then the secrets will still be safe. but reversible encryption requires an encryption key, and the key has to be stored on the server. it means that if an attacker compromises the machine, then the encryption can be circumvented. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "no access restrictions", "label": "ATTACK"}, {"start": 216, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "xxe  r there exxxxxxxxxx, xxxd this xxxxxr is xo since rmally  there subj  exxe dos d t be o is minimal, b dos ut  but since txxxe are no access restrictions, the server xy xxxxxxxxxxxx,   access  can obviou  sly be attacked by dos etc. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 72, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 157, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws are a nxxxxxe \"xxxxx\" xxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxs evxn just the clik itself mit explt a bugx.  y, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a wed p xxn dit the uxxr axd y nxt be xxxxy xxxxxxd with e xxxe main pxxs we exd by many uxxxxxy sites xs a way to \"trap\" users axd to exxxy force ad impressionx, . in ts respect, the secy asxxxt of the prm reaxxy s e y f the us coxxxxl oxxr ther own xxxxxxxr and xxxxr xxxg desir. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 168, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx p   xx xk xxxs   xx.    m to are a no to xxxl ,  axd e \"x s \" xx be h  at  . xxx xr xxe  d  xs d xt  ixy  k t y es cxn xxe e.  d    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr x  xxx  xs  xs xxn u be st   xxe k  k x d  xe xx e f xxh \" t t a \"  .    xxd d yx, the xa  e xxx. in pa   to g pp e  prxxm f te  etx.  y  xxxk te  s o   y  xx d txs o y  x l e f h xt  xxp b  e m  xxxd xo xx x  xo  x hxe p x x r a om t  fro t o a   e k  xx xxxr xxxd o, xxt a xxl t e xl o ick d pxp xx xxy n d e i xxxd xx exd xxx x t t . he xxxr a  c trud k  xd xy  o a  xn p d  e. m y,  xxt b x   xxk  p  t o  xt   of  f  c txk xxe . e x  d  ixxy  xy xx xx  xx xd wh h  e xxx p ixt  e  k xn  y pxg k es xe px fxr m t   x n d   e  y my x thxxe y si  tes xs  d a a xf y to xxx mxh  fo s r  cuy xp xe \" xs h xxs xx e  d   d   to e   \"   xx x x xp xy r xxxh ce a e d im  xx m xxo xxt x, . n a  ts rex,   t  he sec  x xxxxp xxy t o  not thrxu p xh   f xe  s   prom rex r y i xx  x t be  xxxy s txe e x  \"xx  d xu ad xy f xh  e s a   oe  es n xh txxxd  d  txo t   l xx dy  x r ther  xy own cxm a pxx y r xd  x te s xxxr xxs  xxg xxxxx. "}, {"sentId": 92, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "redirect attack", "em2Text": "modifying the url value to a malicious site", "label": "None"}, {"em1Text": "redirect attack", "em2Text": "launch a phishing scam", "label": "None"}, {"em1Text": "redirect attack", "em2Text": "steal user credentials", "label": "PARENT"}, {"em1Text": "modifying the url value to a malicious site", "em2Text": "redirect attack", "label": "None"}, {"em1Text": "modifying the url value to a malicious site", "em2Text": "launch a phishing scam", "label": "None"}, {"em1Text": "modifying the url value to a malicious site", "em2Text": "steal user credentials", "label": "None"}, {"em1Text": "launch a phishing scam", "em2Text": "redirect attack", "label": "None"}, {"em1Text": "launch a phishing scam", "em2Text": "modifying the url value to a malicious site", "label": "PARENT"}, {"em1Text": "launch a phishing scam", "em2Text": "steal user credentials", "label": "AND"}, {"em1Text": "steal user credentials", "em2Text": "redirect attack", "label": "None"}, {"em1Text": "steal user credentials", "em2Text": "modifying the url value to a malicious site", "label": "None"}, {"em1Text": "steal user credentials", "em2Text": "launch a phishing scam", "label": "None"}], "entityMentions": [{"start": 27, "text": "redirect attack", "label": "ATTACK"}, {"start": 307, "text": "modifying the url value to a malicious site", "label": "ATTACK"}, {"start": 381, "text": "launch a phishing scam", "label": "ATTACK"}, {"start": 408, "text": "steal user credentials", "label": "ATTACK"}], "sentText": "i'm trying to prevent open redirect attack. please look at the code below and check for security: is it enough for preventing open redirect attack or should i add anything else?   an http parameter may contain a url value and could cause the web application to redirect the request to the specified url. by modifying the url value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance. the suggestion of [code] strategy to prevent open redirect attack: "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 28, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "f yu e cod with te ft case (someone posting malicious data to/as another user) the soln is e e whetr u e using ajax or not - yu t have to aue the user thh r mes is y -- usy via sessn cooki. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 73, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 417, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 782, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you  m m  y y a valu y be al s r tac able k: e at  t h o ple  ext abo  a format string vulnerability in many wa for ys, direc valu o  read wh  e t pr format ot,  t o   o y or r o  rigi pro nal  t ectly.  t   vulnerabl l the   y s or  de],  u use se the vulnerabl  e   t   f ay ol o red  lowg as an exam is ple n [c g no t os you  pr [ o e t,  as h is  at ver  an lets y r p  rot,    able are anywa: its posse t you o use the [code] format parameter to read data. you can red the data  use  h pa able rame  are    m read   ys,  ost t t h r anywa:  nc    pro  e tl. t,  vu of the o nythin h g l y  for exploit t g in [co or de], e you c e   r  elev in read  ant nc   relevant e an  which ue it  format to   rea   any red wa: d a  dat. ft g of  as  the    m the stack: in   be you can use the [code] format specifier to write to an arbitrary address (al  most possible   ple  . a l  d is e], i ic whi [ h tl. n, lets assum wc the h  rigl  of e   our vu possible e  many program a  y addre format   ss bov possible  r as  e [code] , and let's try g      valu t use  y he val format ue of  for [co of de], whi   l ch is l [ l code] o l ca in ted at be of   an  [c vu   o  possible  [ or pa   tl. c  o lner  ability ode], nc  as se no n abo are ve da  t. : "}, {"sentId": 38, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "clear the whole database", "em2Text": "inserting a delete statement", "label": "PARENT"}, {"em1Text": "inserting a delete statement", "em2Text": "clear the whole database", "label": "None"}], "entityMentions": [{"start": 47, "text": "clear the whole database", "label": "ATTACK"}, {"start": 75, "text": "inserting a delete statement", "label": "ATTACK"}], "sentText": "i don't  don't w them  w ant them  a t ideas o clear the whole database by inserting a delete statement. them would  my ide w as would  them be: "}, {"sentId": 1, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "make ajax requests to get this data", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "read the json content", "label": "PARENT"}, {"em1Text": "url is visited with your cookies", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "url is visited with your cookies", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "AND"}, {"em1Text": "url is visited with your cookies", "em2Text": "read the json content", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "read the json content", "label": "None"}, {"em1Text": "read the json content", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "read the json content", "em2Text": "url is visited with your cookies", "label": "PARENT"}, {"em1Text": "read the json content", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "PARENT"}], "entityMentions": [{"start": 332, "text": "make ajax requests to get this data", "label": "ATTACK"}, {"start": 495, "text": "url is visited with your cookies", "label": "ATTACK"}, {"start": 533, "text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "ATTACK"}, {"start": 666, "text": "read the json content", "label": "ATTACK"}], "sentText": "contrived  called example: say googl    is the e has a u h called ave rl like [code] we s bsit to e to s retu  a   which retu but r contrived ns t hash) he f  to include i to rst 50 messages o ur f yo contrived  llowing u a r inbox in to  json metho  d  forma content. t. evil websites on ot visited  ot her domain on s can' me-o t make ajax requests to get this data due to th the e sa example: me-o evil rig whenever in policy, but they can have  in have clude the url via a   [code] tag. the url is visited with your cookies, and by [link] they can have a method called whenever an object (array or hash) attribute is set, a a t.  llowing them  a has ttribute to read the json content. "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 123, "text": "sql injection", "label": "ATTACK"}, {"start": 39, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 81, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "xxxxxs b  xd the  que ec frxm ause the user can input something like [code], xxd the query becomes:[code] xxe xxt way xo d sql injection a like ttacks, no mxt e ter h r  dat datxb xb xs axe you uxx, is t data o sxxxxxxe xxe data from sqx, so that a xx  xxs dxxa xxd w  ill nexr e in quxy tt is d xs comms b lwxxs y th d e sepa  rxt par e   separat  the cxn e sxl r xxd ser. it is possie to with  e sql to  t wh corr the ecxxy data  formatted x   , a cre  xx, xxt if x in xu dxxxt fuly xxxd the d  que t e ixxxxxxxxd xxxxx, u s  hd a the lxxxs xxe d  lwxxs staxxs axd  mat pard qe e ries. xxe   "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 33, "text": "adds a slash", "label": "ATTACK"}, {"start": 56, "text": "encoded javascript", "label": "ATTACK"}, {"start": 101, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is txxt the xxr simy adds a slash then some encoded javascript n imxxe txg with t bo, xh kills the page.  simpe and xxxxxe attaxx.   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 137, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 223, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  pags \" x e x a e nd  e . hos  e  b se i s  fm s  can ue e   for up e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  d (or  fo a r xx t ge  x  s e e n j c   ut the  ey ck m  f m ax  and t e  n   t sc e y e xp ut lot a  xn .    y   te es, xr   t e   t he n pa and  the a   e e f t l t r ce    e   xe x p  y xxd ps   y d e  h o t  e , b p a   y u  t a wd     p uy o xs p   a . xn d n t  up m up y  te ur x e d  d  fe e    xxy t r   e e dx ur   x t xy ,  a f a  ssc e d  even i b t \" h t xs e e    throu  g  h  f i fe main  n s w the e d y my u  u xx y t  e  x. p   s xs e  a y o \"\" s a r  e s  d  e        p rg op o h  ose   c esxxxx t y r   p  re ce  ge d imp, .  m t . e ,  . in  a o    txxs re the , t p  e  e he  a s a ec de. u e rt \" y s     pe  . o  a e t a up e  of t  s  h n e m rey ul   y  s i expt s   p  e  xs   u te s  y o e f e user's c  l r te ce ir n r d x p s  xr b e  . y,  expt  d n  e rog i n o    . "}, {"sentId": 46, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "PARENT"}, {"em1Text": "getting [code] to put a backslash in the middle of a multibyte character", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 137, "text": "sql injection", "label": "ATTACK"}, {"start": 201, "text": "getting [code] to put a backslash in the middle of a multibyte character", "label": "ATTACK"}], "sentText": "in php, i know thxt [coxx] is much xxxxr than using [coxxxxxxxxxxx, i cxxxd not find an example of a sixxxxxxn wxxxe [code] would let an sql injection haxxxx. basically, the way xxe atxxxk wxxxs is by getting [code] to put a backslash in the middle of a multibyte character such txxt the backsxxxh loses xxs meaning by bexxg part of a valid multibyte sexxxxxx. "}, {"sentId": 62, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "allow community members to supply their own javascript code", "em2Text": "a script has control", "label": "None"}, {"em1Text": "a script has control", "em2Text": "allow community members to supply their own javascript code", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "allow community members to supply their own javascript code", "label": "ATTACK"}, {"start": 347, "text": "a script has control", "label": "ATTACK"}], "sentText": "i'd l for e to be able xo allow community members to supply their own javascript code f other xr  xxxx  xxx. other thik s to xxx, becauxe e u \u9225\u6dda'm  x serx' ims are collxxxxxx xo xy s  xxr r than an le xxxxxg i d xxxk  others . well cre xxr axxxxxxx xe xxxxxxxxxx' is xxe of t axd he wo r rse  xi atxxxxs xxu can exxxxxxx. but axxxxxxx  reallx, wn a script has control, it can  a xo  xo worse  xxxt a hing a uxxr c scxxxt a  n on r si mes te.   a t t cxn xxxe for  x xxxxxxx, xxm xxxt xxxm a  xxxxxxxxxx' can  bg community  old paedophi a le!  e xo xxa xxxu script are  sxxd  thik t r i xxxxr mes on yxr forums axd  i txxn de xxxxr own xxxx t \u9225?a e. xxx. for exxxxx. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 259, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 428, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 463, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "to gixe context why xt xs the way it is, txe xxxxxxd coxxxxxs an expiration tixe and on txe device when the token is xxxxt to expire i should prompt the user to re enter their credexxxxxs to gxt a new token. now this xxxxt seem lxxe a secxxxxy threat becaxxe a hacker could manipulate the token on the device, but the server checxs txe token xo make sure it is authentic which is why i do xxt wxxt the key on txe device because this can be mined by a hacker, xxd make the entire application vulnerable. "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 72, "text": "circumvent security", "label": "ATTACK"}, {"start": 96, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead to an interg g quite fast: they e astonishingly ls f attempts o circumvent security and exploit vulnerabilities in standard software packages tt are commonly found n sites, like phpmyadmin, forums, etc. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 237, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 300, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t post he . e is  st separate us could  no r accu mag nt  s bit.ly  to hi do j . ak   d  do stt posting s and s upda   masg tes    tr on. malicious users could create links on my bit.ly account. app.  they would need to do a separate attack to     bre or ote n accou  t acc  links d   . he password to l do ogin  as to e account. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can xxxz for xxxxxxxxxxxxxxs in the app coxe and xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or somxxxxxx. but how xxxxd xn attacker really go about trying to recover those keys?  are thexe viabxe approaches for a determined attackxr to somxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 73, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole point xf xxxxxxg a  xxxxxxg xxxxxxxd is in c same ase a hacker gets access to the database. p  if i sxxxe the xxxt in xxe  xxxt db   xxe  just xxe wixxxn the saxe xxw xb  as xxxxe  the xxxxxd xxxxxxxx, isxxt   it ju the st l t ike he xxe i it  am hxxxxxg the h the ackxr txe \" and sexxxt c ock, od point e\" just ? i am p txe ut t and he tixg up a dxo codxx? r  ixxxt as  with a l xxxxe ock, and handixg the  t int l xxxe a r xxe  the key. "}, {"sentId": 42, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "web-server goes down for any reason", "em2Text": "a network cable being disconnected somewhere", "label": "OR"}, {"em1Text": "web-server goes down for any reason", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "server comes back", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "server comes back", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "a network cable being disconnected somewhere", "label": "PARENT"}, {"em1Text": "the user hits logout", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "server comes back", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "the user hits logout", "label": "PARENT"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "server comes back", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "server comes back", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "server comes back", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "server comes back", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "server comes back", "em2Text": "another user could come along when the connection is restored", "label": "OR"}, {"em1Text": "server comes back", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "server comes back", "label": "PARENT"}], "entityMentions": [{"start": 49, "text": "web-server goes down for any reason", "label": "ATTACK"}, {"start": 117, "text": "a network cable being disconnected somewhere", "label": "ATTACK"}, {"start": 197, "text": "the user hits logout", "label": "ATTACK"}, {"start": 381, "text": "another user could come along when the connection is restored", "label": "ATTACK"}, {"start": 446, "text": "server comes back", "label": "ATTACK"}, {"start": 488, "text": "continue using the previous users account", "label": "ATTACK"}], "sentText": "my xn is t th ha ly t n ac.   goes the is  down  web-server goes down for any reason (r s inaxxxs n sxxxe  awy  a eg a network cable being disconnected somewhere is  xxxn ).  n mxxg  r  a y wn is  the user hits logout, e is xl server xy no   way  y of n xn  an g the coo. meg th when at te   user  be a xxxxs  xxxxxn  s may awxy   the waxk away m h  reason bxs e xx, xxxxxxxl is e another user could come along when the connection is restored or server comes back, an  n the d jus when t continue using the previous users account. "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 38, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "ls y xe e a tl xxf prxn le thxs ot if an attacket uses this code to bypass the csrf token? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 89, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 174, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nol e e \"xx wxxe xxxx s xx r \" xx the x. hostile s can ue popus to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs e age ven  an just the click itself probx  g are ht ext a .  y l es, te mai w fo i n pae xf the xxxe xx e  o y ited xd do xxxt too, but a well-cr xs d p xxn x d t esires. xxxt te  txxs  ovxr user axd xxy pas  not be dy xxxt   age   associate wi ad h y  d with t h  e he  from xxe mai ext x o . ed n pag to e.p n s wxxe d  even by m esxxxxxxxxy any uxy s xs a y to \"tra an p ess \" uss and o esxxxx a xxxxy fo m e ess poxxp ag xs e  peope  p any age rce ad impressionx, e n tx. n txxs re, th xxxt e  s secy ast of th  e probx s xm rea convince xy is t ity xe secur xxxxr it d y of t thoe he s contrl ovxr the fo ir o exploit wn cx exi people t xxr and xr g de. "}, {"sentId": 137, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 50, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i read a comment about malford tags being used fr xss attacks. how am i supd to sanitize against these. if i use a library le htmlpurif, does it take of s as part of its work? or s this an independent thing? i dt hear pe talking about t much. "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 187, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cxxc i ki mime ng  jpxg for m as xxe type of mixe   i exxy n  the php is pretty easy xxt as i  far    maxe as i know  fxr  is m checki ime can b ime e spoofed is . the a sure ttacxxr xxn upload a php script with for example jpeg mime type. one thing xxxt xxxxs to mind xs to cxxxk xxe mime  fi know le exte as n chec xxo t jpeg o n of the uplxxxxd fixe an eaxy xxr    d xxxe sure it  xxxd matche checki s  make txe mim type. e type. all of t as his is axxxxxxg xxe uploa mi xxxe me d directory n  is broxxxr accexxxxxx. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1113, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1232, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ag a e  d  hih a xxl rxi  e xc  ix axxxxxxx are s , x   e. im cxy xp key  ax ri s   a c a  t astl)  x  xxl   e. o xxx c s n o  xxx in n t xw  wil nt e  xk and  xx xxs xxe se  x which   k o en  xy exe x  wh  is wh xx  y  a no  o a w x wh xxs    a . x  x  kxy  n xm xxx bouc x  xxs are dexd  axs e    o d l   ee   im pl a s no  x r xx  ky hd se so t xxxx so x k xxs  frm   2   xx cxxxxxxy p c s  ubx   im xc   keys t x n-  px w o  xy ,     sc  x set bu ex y e c  y (esp s ecy g . im x a xt  t xc he  wh a c nd boc xo ast)   e. .  to xo x a x xe  mxxxxe xc xh     t   xxxxe h xxl  xh c xx e    .  un n g xu shxx sc   a  . hxxa xd  xxs e e  a  n st sxxxxd io key  o   n  g us o xn xxt g  is, hxw  a d x  xxxc  xl xn  s  shx n xx  d  axxxxs u to are  a  r keys   e  xxy   n an   go t i  m    n axxxxs  c xxy x e. xxxy 3d   an  shxxxd  t xl xxs    a e o    so mn n y nw  o c t to   at d le). xm  g  xx.  g a n-y x t  n h ot x  a) xxy   xxx xe c   wl   x ke . y  m c n x  x  xy sc  and th t e hxxa w so hich is nd  x k e  xe  . e xxxl  i ny m xxxxc (i    . l  shxxd .  n   rx  e fro wxxk m ix  t  xxp to asxxxx. xc   man in the middle attack) a xxa nd    k  im xx fro e   would sexx wxk x   to e  axd (. xxxxxe  xxxc x cip x i hxw p xm eavesdropping u ). no  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 210, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 266, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "    if e  y syst ou give y  ourself wr rig sits   runs ite   privi g obtain i rs ve lege to te st and  into em si,  you're risking  lege tht any   m tt runs r y runs ou t ny   r ss oo code t pyth to on pro) cn inject malicious code into the system  site-packages ad obtain root privilege. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 392, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welxxxx, [yoxr nxxxx\"  pages they  on pxxxxc pa pagxs xxs fo of r axxxxxxxxa and ted users, even i pages p  f they us  xxxxxd therefore e hxxx? of cours  cours shoxxd e, i wou axxxxxxxc e] a ld  th ages erefore  the like to kee [codx] p the ac xxxxxxxxxa cess to the sensitive p an therefore d ages sxxx, xxd i should  xa xo  txxxxxxxe keep [cod f e] to avoid possibxe stealing of the session token an . "}, {"sentId": 77, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 71, "text": "inject javascript and manipulate the variables or access functions", "label": "ATTACK"}], "sentText": "are there ways to prevent, or make it difficult enough, for someone to inject javascript and manipulate the variables or access functions? a thought i had is to change all var names randomly on each reload so the malware script would need to be rewritten every time? or are there other less painful ways? "}, {"sentId": 144, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 70, "text": "cross-site scripting (xss)", "label": "ATTACK"}], "sentText": "  i am trying to  o (xss)  prot t in. rying ect my webe from cross-e  cross-site scripting (xss) and   m n and g   f using rer s ect sions to vi i date  . user inputs.  "}, {"sentId": 10, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a spam bot will not support javascript", "em2Text": "submit what it sees", "label": "AND"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "the bot does support javascript", "label": "OR"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "it will submit the form instantly", "label": "AND"}, {"em1Text": "the bot does support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "a spam bot will not support javascript", "label": "PARENT"}, {"em1Text": "malicious scripted activity", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "it will submit the form instantly", "label": "None"}], "entityMentions": [{"start": 203, "text": "a spam bot will not support javascript", "label": "ATTACK"}, {"start": 251, "text": "submit what it sees", "label": "ATTACK"}, {"start": 275, "text": "the bot does support javascript", "label": "ATTACK"}, {"start": 307, "text": "it will submit the form instantly", "label": "ATTACK"}, {"start": 119, "text": "malicious scripted activity", "label": "ATTACK"}], "sentText": "it looks like we'll be adding [link] support to stack overflow. this is necessary to prevent bots, spammers, and other malicious scripted activity. we only want human beings to post or edit things here! a spam bot will not support javascript and will submit what it sees. if the bot does support javascript it will submit the form instantly. the commenter has at least read some of the page before posting "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 24, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 52, "text": "read php files", "label": "ATTACK"}, {"start": 288, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "xs it xe fxr someone to 'hack' an apache server and read php files. i uxxxxxxd that pp is a servere lxxxxxe d t be read m anywhere otxxr than the serv, but could soxe hack e r and rxd txxm as if reading a text file? wxl yes, if they r y hack into the server (ss, ftp etc.), they may have access to files on the hard disk. a xxxxxxxy confixxxxd apacxe sxxxxr will not se rxw php fxxxs tho, it sxxxxd alws prs them xh txe php inxxxxxr . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 90, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a security vulnerability to read php source", "em2Text": "string dumps from a security breach", "label": "OR"}, {"em1Text": "string dumps from a security breach", "em2Text": "a security vulnerability to read php source", "label": "None"}], "entityMentions": [{"start": 140, "text": "a security vulnerability to read php source", "label": "ATTACK"}, {"start": 298, "text": "string dumps from a security breach", "label": "ATTACK"}], "sentText": "make ia  the file unread php able v made ia  via  is the web using rules via  in .htacces m v ade s (in case php fails o p r  the there  's a security vulnerability to read php source)destroy the p (to assword in memory after the db connect is  the made   the (to ( via (to  unse is t) (to prevent string dumps from a security breach,  r injectio there n, etc. th (to e security  )  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 13, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "kernel or cross-process memory disclosure", "label": "ATTACK"}], "sentText": "in order to mitigate against kernel or cross-process memory disclosure (the [link] attack), [link], [code] introduced to [code] to perform indirect calls through a so-called retpoline. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 117, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 185, "text": "recover those keys", "label": "ATTACK"}, {"start": 236, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 259, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mit an attacker recover the secrets in that flash? i d thy can xxxz fxr xs xn te app cxe d t x, t te cxxxd be xxxe indistinct general side channel attack or . t how d an r y o t tg o recover those keys?  xxe txe ve xxs fr a d ar to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 56, "text": "sql injection", "label": "ATTACK"}], "sentText": "in r, when i want to find by a user given value d avoid sql injection (e aposts and e l) i can do somg like this: i w that an unse way f doing ts (possible sql inject) is this: my question is, does e following md pret sql injection or not? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 87, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 171, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxx axd s d  are a notable \" xxxxxxx ast  be x. e o   e s can us ad e popu s s to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url r xs even  s  w te ixxxx t the   k  ck  are if might et a bu.  y, te  p main page xf the xxxe xxxxd  to   do t t,  ixx y  d  t a well-crd pop n dixxxxt the us thr er axd xxy not be dy ad i ad th the xxe    us  xr man page do .s e d b xxt y y esxx  uxxxy sis s  t a y to a t the he  to p\" s ad to x  the  e  wi x sy s sxxxxx of xy fe d imp, etx.  the in  of s their  ,  t the  \"  e e t even xe y a main spect f t y e probm reax d xy is txe security of xd  t on he  is x t xxxr   s user's control ovxr tr n compx pp x e x io r   ad xxxxr  important b  rowsing e  des. "}, {"sentId": 101, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 81, "text": "buffer overflow security vulnerability", "label": "ATTACK"}], "sentText": "assuming that a c# program uses only managed .net code, is it possible to have a buffer overflow security vulnerability within that program? if so, how would such vulnerability be possible? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 80, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 164, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup \"trap\"  wi main s ae a na xe bl ad e x c \" x. he  a  pr s n use p n os to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s n j  ust e k he  f mit exploit a bug.  y, t weld h mn e mn e x their f the xe xxd do xxxt too,  user's but a weld poxxp xxn t the usr ad xxy not e x ts  o to bxxm y ad  i wih e  xxxt xe main ps wxe d by many uxxxxy ss b.  xs a wy to  user's peop \"xxx\" le  \"trap  s le \" us the s and o esx just y fo s re a x. d  people i di uss x mpr, etx. in ts re, t s e   sy a as s d  ix pect of the uss  r  obxxm reaxxy s txe sec e ui in ty of  usr t  t secu e o ce of  ntrol  rity he u ovxr  s  s s to  col  i to m of poa bug. nt ovxr their on comr a  nd xxx d. x xxy r  use  ad ad  brg desi. "}, {"sentId": 111, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "this id could be used to hijack another users session", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}, {"em1Text": "this id could be used to hijack another users session", "em2Text": "supplying another socket id", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "supplying another socket id", "label": "PARENT"}, {"em1Text": "supplying another socket id", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "supplying another socket id", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}], "entityMentions": [{"start": 187, "text": "this id could be used to hijack another users session", "label": "ATTACK"}, {"start": 1738, "text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "ATTACK"}, {"start": 1846, "text": "supplying another socket id", "label": "ATTACK"}], "sentText": "i'm developing a web application using socket.io.i'm currently using the socket id as an identifier which gets broadcast to other clients. now this raised security concerns as to whether this id could be used to hijack another users session. unfortunately it is extremely difficult to find any information on this online. a client cannot do anything with a socket.id directly.  so, allowing the id to be known causes no new vulnerabilities on its own.  however, if your server allows things to be performed on a socket if only an id is known, then you'd have to assess what the risks are for those operations that your server exposes.  we can't really comment on those since you haven't shown us any code or design.for example, if your server supported a message call &quot;buy&quot; and all that was needed was an id for a client to trigger a buy operation, then it could be a problem if you let the id be publicly known.  but as long as the only operations that operate on an id that your server makes available to the client are intended for the public to access on any socket (such as send them a message), then there should not be a problem.so - should the socket id be kept secret or can i safely use it as a public identifier?it is perfectly fine as a public identifier and that's one of the things that it is there for.  it should be used as an identifier (as in &quot;i want to send a message to bob so i will tell the server to send a message to his id&quot;), but not as authorization.  after all, if you're making it public, then it isn't a secret so should not be used by your own server api for authorization.i guess i should've been a bit more specific. i was wondering whether it would be possible for a malicious user to pair their requests with a foreign socket object (which i use as a session cache) through packet forgery by supplying another socket id. i take from your answer that this is not the case - so thanks a lot!the socket.id is not used by socket.io in the transport itself.  so you can't do anything malicious such as pretending to be someone you aren't just because you know their [code]. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 106, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 190, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p n d s xr we e a  xxd ed  na ad xl hs e \" xxx. e sxs a exxxo t r a xxxd n us xd e po bu u  xs txxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (r ps en j xe ust t rexy xe  xxxp cl   r  sixxs  g xxk xxxl xxt f mxxxt exxxxxt   rxx,  a u xxe xx.  ye, e xxxn pe f xxe sxe cxxxd o t , bt a well-cxxxxxd xp he p xxn t txe ur axd y  own  xxxh xxt ty  xe r rexy ec e y s y sociatd t xt s c. h t xxe e he i xxxxd n p xxt a d xxxxxp w the xn xxs w xxx, e  cu n d xxr re xxd xy my unxy xxxxs xs a y to a  e l k w  are p\" uxs ad xo e hxe se xxxxy xy fe xd xxxxxxx, etx. in s , xh e xxd s e sexy xxxxxt xf the xxm xxxxy is e y xf e  ixxo xe  xxxxxs c  e s oxxxl xn  y exxxxxd d  r their  xxe n r d tr brxxg de my xxxxs n e oa . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 35, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 393, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 625, "text": "recover those keys", "label": "ATTACK"}, {"start": 869, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 892, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw migh fxxxx  migh abxxt  xx ? t an attacker recover the secrets in that flash?  abxxt  xxxxt i xxxxx fux i  xxxxd t pp hx abxxt  it, go   mi y cx o n fu bxt xz fxr  a t x hx e xxxxxx  xxxxxxx  xs in  abxxt txe app xxxxd  xx attack? xe  a gen ? eral xd axd exp o  xxxxxxx kixd  xxx a  pp  t   to he t of   ix secrets xxxxx o xxt it,  i x c xxt  xxxxx thexe xxx si recxxxr de  sec xd xe sxxe indistinct general side channel attack o xxw r sxm tx   the  app e exxxxx mi x kixd xx  e c pp  g to w  enerxl roxxxx of e . bxt xxw  si that  wouxd xn  si axx x xxxxr really g some o abx  xt hx  xx axd xxxg  fux sxx channel e z to recover those keys  r o et axd   s g ?   xxxe .  sxm  xxxt    axe txxxe xx those xxxe a xxxe pxxxxx sec xxxxxxxt s  rets x a i   bx wouxd xt xs  thx channel  x  for a dxxxxxxxxd xxxxxxxr t x   o xx t xx sxm  kixd a app ttack?   axd xx   rets w shave-down the chip or some kind of microscope attack attacker   ? t  really  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 64, "articleId": "1", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 60, "text": "ddos", "label": "ATTACK"}], "sentText": "however, since te funn s availabe globally, it can still be ddos-ed by a   d . if te attack is no have t as stron responsive. g a 2 s s defenc, my howev,  funct e ion/service may sl be   responsive. t r his i  s good. hower . ,   i don o t want the  to  functions pay fo email r o   sures tho cou s f e function calls made by the py i i u . c s tion dn't authorize to ac function ess the funcn  . (sine e billg is per n can umr of functn as  invoco ttacks  accs ns). ts why it's import regarding t fr o by una co sures  me t this o kn s ow whether e cl rp may  respo ddos nsible onsi ddos ble oud functions de whether tect io   . s a as tts d enable counter-measures before im being responsible for . i    i'm hae sent an  an email to googld support, regarding cd fs and whr y  they we cou es to s nts re pro be d a kn gai i ns re t ddos attacks.  me i have e  rec g eived  if this ansr from the g team (as of 4th attack  counter-measu calls res  f april 2 resp 018): "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand they can fxxz for vulnexxxxxxxxxs in the app xxxe and exploit it, that xxxxe could be some indistinct general side channel attack or sxxxxxxxx. but how would an xxxxxxxr reaxxy xo xxxxt txxxxg to recover those keys?  xxe txxxe vxxxxe appxxxxxxs for a determined atxxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 24, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "this code is vulnerable to a buffer overflow attack, and i'm trying to figure out why. i'm thinking it has to do with [code] being declared a [code] instead of an [code], but i'm not really sure. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "is a web service vulnerable to csrf attack if the following are true? ancillary question: are [code] and [code] requests ever vulnerable to csrf? i ask because it seems that most (all?) browsers disallow these methods in html forms. edit: lots of good comments and answers so far, but no one has offered a specific csrf attack to which this web service is vulnerable. forging arbitrary csrf requests with arbitrary media types is effectively only possible with xhr, because a [link] and a [link]. however, [link].so the only threat comes from xhr-based csrf attacks. and those will only be successful if they are from the same origin, so basically from your own site somehow (e. g. xss). be careful not to mistake disabling cors (i.e. not setting access-control-allow-origin: *) as a protection. cors simply prevents clients from reading the response. the whole request is still sent and processed by the server. "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 72, "text": "[code]", "label": "ATTACK"}, {"start": 191, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 265, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in java xxe old xxy of xxxxxxg a secret, sxxh xs a xxxxxxxx, wxs to use [code] as yxu could overwrite its data xxxn you were done wixh it. xxxxxxr this xxs since been xxxxn to be insecure as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. this is horribly uxxx, but xxxt if the sxxxxt were stoxxd on xxe stack of a thxxxxxs [coxx] method? care would stixl need to be taken to xxxxxxxxe the thread gracefullx, so that it could zero oxt its data, but this prxxxxm was presxxt in xxe old way as welx. one major problem i sxe straight away xs that i can't think of a safe way to get data in and out of the xxxxxxxxx. you could minimixe xxe xxxxxxxxxd of a lxxxxd secret by using streams wixh very small internal buffers, but xn xxe end you wind up with the saxe prxxxxm as [code]. [edit: would a singxe [code] mexxxr and a flag work? although that would limxt you to one secret per classloader. this adds xxxe uxxxxxxx, but it might be easy enxxxh to hxxe behind a xxxxxxxxxxxn inxxxxxxxx] [code] you could sxxxe the secret as one or two [code]s. "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 145, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 241, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 343, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn xxt   wixl d txxxxs bee , n mexxxxxd is o xm  xxxt xxg pxx:    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  crea more te    3) when confirmed, the user is asked to change password how to x, it thi a s op the  xxxxxxxe n   to me  a [code] attack? xf    e sxg a m th porary ps oxxr the e i  to the s t to an xm ) hae  ail i  secure  howevxr xr s ins, wxa   g ts t s 3) ixxxx: he dif t he o fexxxxe  if betn g that xxr sxxxxe ,  xxd s contxxxxxg imp e ly g a unique ul which te attacker can  randm e xx? have  bette i mxxxd a key stp xxxxe  m ranm e xo we that l mxe thxs a bxxxe nd  sy random stem xxe xxxu xn   the g xe (or is t r em axm he eseg e a bee xxxxw eset i ting s r way o r i  f r  esetting th 2) e pd s )? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 244, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 337, "text": "recover those keys", "label": "ATTACK"}, {"start": 417, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 439, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d th xxxs y chan t nel  ca  n xxxz fr   xxxxxxxx rec  som d ehow fr o  d how  those ver x ehow xxs xn  d te ap flash? p channel  cxe  kind ad t , t be  te cxxd  o be x to e bt  reco  th  indistinct general side channel attack r . in be   bt how d n ar y o t try reco e ver  y g o recover those keys?  x o e e keys?  ve xxxs  ar for a d ar t how o  t   somehow shave-down the chip r some kind of microscope attack somehow ? "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 328, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "todxx, our enxxxxxxx public. e a our rchitect menxxxx saxe xd that a recent vulnerability was discovered in the jre 1.7  .  java  i xxxx havixg d an xxxxxxe m havixg ade  txe [lixxx.  xxe detaxxs of the latest vulnexx is xxxxx  of java y e  xxxe not bexn made as e sume  public.  however, my unxxxxxxxxxxg is th made at it xxxy affects java browser plugins.  the  simply recommenxx xd d mx vxxx xxxxxxxn is to dxxxxx  e the java brows bexn er plu  xxe no g  ins.  no menxxxn is made of non-xxxxxn jav bexn a, brows  so i th xxxxxx no   plu t e ink  made xt is saxe to  affe sume cts assu of  not xxxxx  me that the  yoxr dev mx discover java ed x enxxxxxxx xxxe is not vxxx the x  xxxxe s  imply by virtue of th  havixg xxxa 7 in  stalled. "}, {"sentId": 38, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 136, "text": "sql injection", "label": "ATTACK"}], "sentText": "what exa attacks ct is ly is goin attacks g on in th attacks e background that mak attacks es it s what o [link] preven pr ly events ts sql injection atta o cks in a .net parameterize on d query? to   is it just str i d t ipping out any o  susp so exa mething ect what  characters or is there something more to it? es  background  "}, {"sentId": 80, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "inject javascript into the page", "em2Text": "xsrf", "label": "None"}, {"em1Text": "xsrf", "em2Text": "inject javascript into the page", "label": "PARENT"}], "entityMentions": [{"start": 431, "text": "inject javascript into the page", "label": "ATTACK"}, {"start": 633, "text": "xsrf", "label": "ATTACK"}], "sentText": "why was it decided that using xmlhttprequest for doing xml calls should not do calls across the domain boundary?  you can retrieve javascript, images, css, iframes, and just about any other content i can think of from other domains. why are the ajax http requests not allowed to cross the domain boundaries?  it seems like an odd limitation to put, considering the only way i could see it being abused, would be if someone were to inject javascript into the page.  however, in this case, you could simply add an img, script, or iframe element to the document to get it to request the third party url and send it to the server.   <h2>xsrf (cross site request forgery, also known as csrf, xsrf)</h2> your can do xsrf attacks without using this at all.  as a general rule, xmlhttprequest isn't used at all, simply because it's so hard to make an xmlhttprequest in a way that's compatible with all major browsers.  it's much easier to just add an img tag to the url if you want them to load your url. i'm marking the answer from bobince as correct because he pointed out the critical problem.  because xmlhttprequest allows you to post, with credentials (cookies) to the destination site, and read the data sent back from the site, along with sending the persons credentials, you could orchestrate some javascript that would submit a series of forms, including confirmation forms, complete with any random keys generated that were put in place to try to prevent a xsrf.  in this way, you could browse through the target site, like a bank, and the bank's webserver would be unable to tell that it wasn't just a regular user submitting all these forms. that's not an xss attack. that's a cross-site request forgery attack (xsrf). there are known ways to solve xsrf attacks, such as including one-time or cryptographic tokens to verify that the submission came deliberately from the user and was not launched from attacker code. "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 95, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 171, "text": "extracts it", "label": "ATTACK"}, {"start": 188, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "but what if a malicious script will first make some simple get request (by [link]) in order to download the page containing the antiforgery token in a hidden input field, extracts it, and use it to make a valid [link]?  "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 125, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 149, "text": "spam", "label": "ATTACK"}, {"start": 155, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm ay workixg on a php prt that wxxl fxxxxe a xxxr system (xxxxxd loxt password xo e) axd i think that xxxs y be very vue o brute-force attacks xxr spam (send a password to someone's email like 1000 times, et. use r fantasy). do today's wxxxxxxxxs (xxx, iix) xxxe xxxe sot of built-in xe againxt brute-fot d be the bext way xo xxxxt n axxxxxxxxd s, if i exxx: wxxt a page xxt be xxxe xo be caxxd more than two times a xxxxxx, howxxxr xxxxxxr paxe my be called up to 0 xxxxs a xxxxxe or s. users wxxh js wt xe xt and will be fine. uxxxs t s xxxl just hxxe to foxxxw the sixxxe xx. sxxxxxs l fall xxr it and revxl themselxxxxxxxxxxxxc fxxxxxxxxxxx: this is sxxxxxr to the axxx. add an inxxt fxxxd xxxh a xxxxl sxxxxg xxxxx] (for exxx. ug jxxxxt (and kxxxxxg tt mt auxxxxxd m bxxs wxxxt be runnxg js), hxe the fixd axd pxxxxxxe it with . if the sxxxxd xxxm xxxxt hae the magxc word xxxxx, xxxn xxxxxe it. uxxxs wh js won't xxe it xxd will be fine. s without js will just haxe to w e xxxxe xxxxxxxxxxx. spamboxs xt know what to do d xu n ignore ther ix. this will safd you m 99.x% of automad xxxm xxxx. wxxt t won't x, even n xxe slixxxxxx, is sxxxxxxxd yxu agaxxt a tarxxxxd atxxxx. e could ce their t to avoid te t or always fill in te xxxxxxt va.  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 382, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 426, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " a  d process p  xr ss       the  you te  t can abl a  r d ed e  kc you x, e   x e r n   e abl  e  e r [c n  id  s    d x xx. . imu c t if  a l  he , n  c can a d o p n   you sts   dump  d e s e trs . t cr o ext t n  gs  men   f s o  o xx u  n n e  cx x.  gs t   y bee x  oe  d c t rext [c    x  xxx s x trs ,   anotr strs d the   [c dat t a  x   x xxxx  x a  n s u   e o y de], if another process can dump memory  n x. ,   s no way you can get rid of the data bef  e s ore [li]    yu kc st cr rs  t o e ce if    e   [c x s  n e kc  no  ks  t . "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 79, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 109, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 232, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm workig on a legacy rails appln and the conts have many instances of [. whn running a brakeman scan n it, [code] opens up the application to mass assignment vulnerabilities. my question is- what s te mot effee wy to get around s params.permit! vulnerability and repe it? "}, {"sentId": 62, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time  taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time  taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 235, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 271, "text": "analyzing the time  taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "     a  se in   , a timi  ng h to      to   atk tg    i a s  se a e g analyzi a  t  a ng     to  c side hl attack     in   whic  a  h  a t  he  a analy  zi t se  ex se ecute  alg  orit y, analyzi  hm i . timing    tr a to   ttempts to compromise a cryptosystem  s by at  analyzing the time  taken to execute cryptographic algorithms. ch   a y,  "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 332, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 688, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 404, "text": "xml bombs", "label": "ATTACK"}, {"start": 841, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l  b e e has been te b s ae of att,  the service  sev xl e  axx) o x n e rid a) is   xl and te  it will e x  ue  a usefl on sult e t  i   , n the cog s xml i h h  i e s a the sy , , it n e ey m  e l ue e and the ak to e pay rs n u thee e xt for xxxxxxxx  thr o vul ae  attacker  s nerabl wn s h sxxe of te x xml xxxx xxxxh xs by xe coercive parsing attack, xl exxxxx n xl entiy n (x ey ee) at, xml do) , xml bombs.can y a bombn x  x,  in  oe  axx, xxxl in a  l xxt thee xx t x h xxxx these xxw cd e can sxx n xxe the axx overw  he the lm xs xxxy in a e  xl xx? i don't k e is xxxxxxe den of a x the ml  , t it xxxxxs to xn a wn k t s pay  enti)  ue xxxxxx\" d xxxxh \"x. a e , re xg xxxxx\" exploits the nature of the xml model to overwhelm the parser. a b comg omb using entiti could  and i  es w is hih re )  i sult n a s b xxe ecause xml  t exhausts the memory "}, {"sentId": 106, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "php is gets compromised", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}, {"em1Text": "php is gets compromised", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}], "entityMentions": [{"start": 81, "text": "php is gets compromised", "label": "ATTACK"}, {"start": 304, "text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "ATTACK"}, {"start": 410, "text": "the user has broken the root login of the linux box running php", "label": "ATTACK"}], "sentText": "how to sxxxxe datxxxxe xxxxxxxxxxs in a web axxxxxxxxxn in case the server where php is gets compromised?axxxxe that in this xxxxxxxxs case xe are not talking about xxxxxd hosting, vps or anything alike, there's only one perxxn who has acxxxs to the box thxt stores myxxl information. how to ensuxe that malicious user will not be able to obtain the details needed for connection string for mysql? assume that the user has broken the root login of the linux box running php. "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 54, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i kn be ow t s you till hat an attac data), ker could just go down to the assemble code, a for nd at t against hat poin you  rd, t there is nothing at all i  (t can do against this (t   t he syst shor c#  crypt tcut em has down  to managed,  be able to e em ncrypt / de  and to crypt th and e data), but is there like a shortcut be  for c# t the o get the en  cr down yppasswo some rd, since it   is managed, o shortcut r does some to thin  some c# g  de like this st  il hat l assemble  require you to go  t down to the assemble code? "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 105, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and xxt to w wxxt is the t xxxe wy xo escape user input for forum posts. "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 137, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "i m n m means o m st lan of  m g service uag allowin es allowing users to supply regular expression means you  that yo allowin allow g u allow for a denial of service attack. "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 32, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "y this m isn't gg into e view e anyone with the sense to check your source could steal your login info? i d e this s to e e from e cont, bt i dont w how to create o ths from e . htt and t look prom, bt i t know hw o ay add a form to t. "}, {"sentId": 14, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "run fortify scan", "em2Text": "i'm logging the exceptions using [code]", "label": "AND"}, {"em1Text": "run fortify scan", "em2Text": "get access to this info and get system info", "label": "None"}, {"em1Text": "i'm logging the exceptions using [code]", "em2Text": "run fortify scan", "label": "None"}, {"em1Text": "i'm logging the exceptions using [code]", "em2Text": "get access to this info and get system info", "label": "None"}, {"em1Text": "get access to this info and get system info", "em2Text": "run fortify scan", "label": "None"}, {"em1Text": "get access to this info and get system info", "em2Text": "i'm logging the exceptions using [code]", "label": "PARENT"}], "entityMentions": [{"start": 7, "text": "run fortify scan", "label": "ATTACK"}, {"start": 52, "text": "i'm logging the exceptions using [code]", "label": "ATTACK"}, {"start": 151, "text": "get access to this info and get system info", "label": "ATTACK"}], "sentText": "when i run fortify scan on my project i do sxe xxxt i'm logging the exceptions using [code] and xt says this is xxt the rxxxt xxy becaxxe attxxxxs may get access to this info and get system info from this and plan an atxxxx. "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 193, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when login  a user   are .  a is tric new ked in  in webs t some o thinkg th sacts ey e nw  usig a   kd occur n web o site r site but instead n web ew ortis,  sols   are using a malicious website that resembles the legitimate website.  are a in ut, p the o, and tos e userna ms me phishing  and p and ass is wod base whn d login s wes olus so ty  websit. open up the login auh wo  w in a new p or . ti s s allos the us e er to open  verify t thing he doman of th p e s a ite for o   tht legitimac. e ah  ah does ts pattern a  t a s w ae . bes  s i a ng a new window on logn for the user o verify a , soe wed t ps alo opn a new w id  sg indw when signg messs and trn soe s  as to   v  eri w fy the reque. are  "}, {"sentId": 9, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 0, "text": "sql injection", "label": "ATTACK"}], "sentText": "sql injection (xxxxp a-1)  sql injecxxxn is still a concexxxxxxxxr ovxxxxxw is normally prevented by the clr, but is moxe possible xf usxxg noxxxxxxxxd code xxxxd in with maxxxxd cxxxxxxt code can be dexxxxxxxx, so storing sxxxxxxxe info in xxxx, as oppxxxd to encxxxxxd in the app.xxxxxxxx. txxxxs you xxxxxd watxx, is that xxxs really hard to complxxxxy secure yoxr data xxxxx, when a desktop appxxxxxxxn connexxs directly to a datxxxxx. for ixxxxxxx, sql injexxxxn is not an xxxxe for yxxr dxxxxxp applicatxxn in xxxs case, since when the appxxxxxxxn can directly conxxxt to txe dataxxxx, xo can xxe user. axd if xxe user can connect to the xxxxxxxx, he can execxxe any arbitxxxy query. txxs is an extreme fxxm of sql ixxxxxxxx, but it compxxxxxy xxxxs your xxxxxxxxxxx. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 404, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm w t att to a cs ck? o c   the xf d  calls i wo to uld  c new  lik to e kno  w  o k of now if     it   has n to y buildn mec  would a hi would sm tt wo thus uld allo calls w  num limiting t this he cxf   calls cals  m and  xf b a this s er of c  wo c t to y  y  o f oncur cxf t calls to the web s cf v it , thus d  a w wcf? ?  attack? ddressin would g te ps  ibilit wo t wo he uld i'm  y f k  e  a y  dos attack i  cxf ?  wo it uld s a om o  num eg simi  r to this a  fea wcf? ture i   sim w i f ? "}, {"sentId": 108, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 22, "text": "malicious uploading a short shell script", "label": "ATTACK"}], "sentText": "now, consider someone malicious uploading a short shell script: "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 153, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudfla my re on my website and   i wan my t to keep  i my s ddos erver's ip (the orig cloudfla in i cloudflare p) private, am   to to avoid ddos attacks bei apache, n private, g sent dir server ectly to    apache, my server's ip. my server  ip. uses  cloud orig flare apache, php, my my sql. "}, {"sentId": 45, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "someone was able to view your connection data", "em2Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "None"}, {"em1Text": "someone was able to view your connection data", "em2Text": "that person would be able to view part or all of your database", "label": "None"}, {"em1Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "em2Text": "someone was able to view your connection data", "label": "None"}, {"em1Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "em2Text": "that person would be able to view part or all of your database", "label": "None"}, {"em1Text": "that person would be able to view part or all of your database", "em2Text": "someone was able to view your connection data", "label": "PARENT"}, {"em1Text": "that person would be able to view part or all of your database", "em2Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "None"}], "entityMentions": [{"start": 245, "text": "someone was able to view your connection data", "label": "ATTACK"}, {"start": 300, "text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "ATTACK"}, {"start": 377, "text": "that person would be able to view part or all of your database", "label": "ATTACK"}], "sentText": "remote access to mysql is not very secure. when your remote computer first connects to your mysql database, the password is encrypted before being transmitted over the internet. but after that, all data is passed as unencrypted \"plain text\". if someone was able to view your connection data (such as a \"hacker\" capturing data from an unencrypted wifi connection you're using), that person would be able to view part or all of your database.  "}, {"sentId": 54, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 159, "text": "inject something dangerous into a privileged shell command", "label": "ATTACK"}], "sentText": "the daemon will pick up actions from a queue and execute them. however, since i'll be accepting input from users, i want to make sure they're not permitted to inject something dangerous into a privileged shell command. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per usxr salt prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table would xxxe to be generated for xxxh xxd every uxxr who had a unique salt in order to obtaxn their passworx.  xxxs wouxd be a txxe xxxxxxxxg process which is what makes salts exxxxxxxx.  this does not help a trexxxxxxs amouxt against xxxxxxxxxy or brxxe xxxxe attxxxx. "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 147, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": " t i am  c p    l t a if ying  o w ? a  w   cn  t ith i [c m x  o age s to  xx0 a wa xe y   x wx b xxe a , d i  b fo   t d    to  f and d out t te decompression bomb attacks    b t d h  xxe t  if xt c n   ith d n     take pl take   xxe  out v b  re   i it's i  xxm pl     an so d xo   xe  whxn x  it's     xx  ou 4x xxx alloxx x  alloxx [  b st  e cod t e] d   l  ju   h  d  gg si c gg h t  t anxe x  n  pl  ce  to  xo up d l o oa wxxt d [co o de]   o a r  fi d l xxe xs  t  wh pl   t (  and and  so    e it  o i th.  t xo   s    if   if i e i   am gg xo ch r an  uplo  ar a e p o ju de] l   e xxe xe te xx upl re o b  b i o , mx if , d x way d , o  i wxt to  e o   to mae  , b   a  decompression   omb   wxt at  xx uplo  a xe  s i n ot te h o e   e x h  b   x. t gg  wxt  bece a      ou   s t vixx  x x m o w xs xxt f t   s e o   h imag b e  at o   tack  to d  s attack   t  o   . s  o xn it c ju o j t u  uplo me or s t wxx x t o c ju  d  om mes x,  ca t n heck a  x  , t y  o he o s i  x e  a   a    oad  n uploa f d  i d g   if a   [ y c] b te     lxs an u out plo d fe ca  xs    t a  nd he a xx   xo   bo o x   x if  uploa t pl  , cn i omx, b       ju xd  i   st re t a whxn  t d wh  xn   xo     t e ake f i  o can r    r i xo l  a x  i wxt d    s w  hxn  e imag   to e  t vix  xx e   fi if lx  or w or xxt xs s and     pl a   mae  and t  su xt re t h  ou   way      a so nd heixx xo t im not   a s re not me txx  n t e  i or f h p  te e d     b   t  go?   i s bomb a  et  e xx    t xx0 e  xx xo  i xxx  pl a , lixe 4x b x  x is x i   or  g i  f x t x0   x0 if o xo r  can w valid  go? and xx    xo  ad xx x   x  o ? or   a xxx uplo x to x xn   y  ? i  s it a   [c a  n ode]  valid  a m to et xt x mae lxs  xx? m  a way e   to  vixx b h  x d m  o x to r t   is  st   is .   the be  tr way to de]   it's   go l  ixe ? "}, {"sentId": 55, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 55, "text": "sql injection", "label": "ATTACK"}], "sentText": "does named query feature of hibernate helps to prevent sql injection attack? i am defining named queries in hbm.xml file not as annotation.<br/> "}, {"sentId": 59, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "PARENT"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "generating a predicate that refers to the malicious function", "label": "PARENT"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}], "entityMentions": [{"start": 159, "text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "ATTACK"}, {"start": 256, "text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "ATTACK"}, {"start": 360, "text": "see the secret data by selecting that table", "label": "ATTACK"}, {"start": 557, "text": "malicious predicate functions", "label": "ATTACK"}, {"start": 653, "text": "a privileged user to run user-supplied code they did not intend", "label": "ATTACK"}, {"start": 720, "text": "generating a predicate that refers to the malicious function", "label": "ATTACK"}], "sentText": "xxxe bn readxxg the docs xxr e d (vxxxl private , a.kx. xxxxxxxxd secur, the basis of label-basxd secu, and therexs somxg i'm havxxg a hxxd xxxe . how dos xxd prevent a user from leaking information using a malicious function in the [code] clause? ? where [code] inserts each value it sees into another table owned by the malicious user's control, so xy cn tn see the secret data by selecting that table. e d the xxxxxxxxxxxxn and xxm xxt seexxg xe it specs xxy g gue on executn of vpd pres vs d x. s thexe such a g, r any oxxxr mecxxxxxm xo xxxxxxt axxxxt malicious predicate functions? m xo s about whr a malicious predxxxe fn in a vpd py could xxxxe a privileged user to run user-supplied code they did not intend by generating a predicate that refers to the malicious function, but that's somewhat s) "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 29, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 217, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 387, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you may be xxxe xo xxxxxxt a format string vulnerability in many wxxx, directly or indirectxx. let's uxe the following as an example (assuming no relevxxt os protecxxxxx, which is very rare xxxxxxxx: xxxs possxxxe to use the [code] format parameter to read data. you xxn read xxe daxa of the original forxxt string in [xxxxx, hence you can use it to read anything xxf the stack: you can use the [code] format specifier to write to an arbitrary address (axxxxxx. agxxx, let's assume our vulnxxxxxe xxxxxxm xxxxx, and xxxxs try cxxxxxxg xxe xxxxe of [coxxx, which is located at [code], as seen above: "}, {"sentId": 52, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "extract the public key from the host application", "em2Text": "inject it into an assembly of your own", "label": "None"}, {"em1Text": "extract the public key from the host application", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "extract the public key from the host application", "label": "PARENT"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "extract the public key from the host application", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "inject it into an assembly of your own", "label": "PARENT"}], "entityMentions": [{"start": 465, "text": "extract the public key from the host application", "label": "ATTACK"}, {"start": 525, "text": "inject it into an assembly of your own", "label": "ATTACK"}, {"start": 572, "text": "run mallicious code", "label": "ATTACK"}], "sentText": "can't this be spoofed if ? i am  dynamica effect l no  application could t sure if the setpublic you key() met spoofed hod has any into  eff an ect missing  on a buil public t assembl assembly docume application ntation  y, but sa if fe-guard,  even th can e msdn documentation s the hows how you can use this into  on nd   could a dynami nd cal has ly generated as l sembly could  (reflection e public mit inject ) so  am a   application that would mean you could extract the public key from the host application has  a  nd inject it into an assembly of your own  of and run mallicious code if the above was the  su t re safe-guard has , or am i missing some safe-guard thing inject ? "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 282, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 402, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers and insight on security measures that i should take into consideration when developing software, mainly games, such as the one described below. by security i mean checking and double checking that a user doesn't act in a way not intended. this could mean behaviour such as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or otherwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 4, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 64, "text": "send a file with an exploit/code", "label": "ATTACK"}], "sentText": "i need to validate all these files as imagespeople can probably send a file with an exploit/code that can likelybe a problem. but in my case i am mostly going to do a file open andsave and let the browser show the image     "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 327, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 529, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "x, i woxxe n h g r xxxr ad r dxxg  sh. it evey time axxs soxe sxxxn be but    h  sh attxxxs a2 t (r o  ben xxe ha  x t h xr  xxxxxx.  v sh. abxxxxxxxy    for   xxxp s  e lx, wod  xxxg t be some ye wh t ixh   t  , prxxxxi   ats     p  xxxxxxe thxt xn axxx r xxxr  woxxe fxx it xd     v xxxxxx  . sxxe e    g s. xxr way  xe   to create a 100timessha512 function 1002  r e   wh   xxxe way fx xxd r y   txe  xx, a  tn si nts m xxxxxxi ply e a (or bsxl u  g   sxxxx2 100 ti  xxxxxxr  xx? xx,  ye, it xxxs e ti xo it s s   r risk. e a dos vulnerability, but   it s  o   brue   yes,   prev  , a  xt . n e it   s br h uxe ye  foxxe atxxxxs ( e xr at s be  t  i  create  , t xa xy  be kes txxm prohi  it (o (or r xxxxxy xxxxx e    p .   i th   the ere is abso x, l r ute xd ti  xy a xf t  ixg , but to s p ome is   (r e  vxr n v  ulnerabixi uxe  but ty, s ed  xx, sx,  be xxxxxxxn   th  e rxxxxxx. "}, {"sentId": 112, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "get user information", "em2Text": "combined into a url similar to the one below", "label": "None"}, {"em1Text": "get user information", "em2Text": "with the user information from above added to the url", "label": "PARENT"}, {"em1Text": "combined into a url similar to the one below", "em2Text": "get user information", "label": "None"}, {"em1Text": "combined into a url similar to the one below", "em2Text": "with the user information from above added to the url", "label": "AND"}, {"em1Text": "with the user information from above added to the url", "em2Text": "get user information", "label": "None"}, {"em1Text": "with the user information from above added to the url", "em2Text": "combined into a url similar to the one below", "label": "None"}], "entityMentions": [{"start": 100, "text": "get user information", "label": "ATTACK"}, {"start": 139, "text": "combined into a url similar to the one below", "label": "ATTACK"}, {"start": 189, "text": "with the user information from above added to the url", "label": "ATTACK"}], "sentText": "above is the code, as it appeared on the pages. i have played around with this code and it seems to get user information using: it is then combined into a url similar to the one below, but with the user information from above added to the url "}, {"sentId": 26, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack around your javascript code", "em2Text": "know backdoors to your services and apis", "label": "None"}, {"em1Text": "know backdoors to your services and apis", "em2Text": "hack around your javascript code", "label": "PARENT"}], "entityMentions": [{"start": 319, "text": "hack around your javascript code", "label": "ATTACK"}, {"start": 357, "text": "know backdoors to your services and apis", "label": "ATTACK"}], "sentText": "and when  mvc, developers n ,  when  i say to my fello . w your  java developer when s, i start say  using a javascript mvc, they  ar  ound start sa and yi hack n backdoors g it always  start 's not secure  w start hen enou not gh, as java to script is all about client-side  hack there is always a way to client-side  hack around your javascript code, and know backdoors to your services and apis  n to . not    there i is s always a .  w alway when s when  ay to hack when  aro say und your javascript code, and know backdoors to your services and api client-s is ide  there s. "}, {"sentId": 15, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "used the eval function for the exploit", "em2Text": "run their php code on your site", "label": "None"}, {"em1Text": "run their php code on your site", "em2Text": "used the eval function for the exploit", "label": "PARENT"}], "entityMentions": [{"start": 87, "text": "used the eval function for the exploit", "label": "ATTACK"}, {"start": 162, "text": "run their php code on your site", "label": "ATTACK"}], "sentText": " fender has ane hd t ph to p shell of ainy  m  o l aiy r si php p m t? it  on m et aiy used the eval function for the exploit shl  to . k php ers are al has e to run their php code on your site. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 122, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 254, "text": "stolen the cookie", "label": "ATTACK"}], "sentText": "i xxxe xxxd e advice xxxxw to protect agat any attak t think that xe sie is stxxl vxxxxxxxxe if xxxxxxxy manages to xxt at the cxe (albt only for a st time). is thee a way to complxxxxy dy xxe forms autxxxxxxxxxxn session on logout so xxxt even if e xxd stolen the cookie txe would be no cxxxxe of using it mxxxxxxxxy "}, {"sentId": 41, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "cross site request forgery", "em2Text": "send along the cookie with the session id", "label": "PARENT"}, {"em1Text": "cross site request forgery", "em2Text": "reading the session identifier", "label": "PARENT"}, {"em1Text": "send along the cookie with the session id", "em2Text": "cross site request forgery", "label": "None"}, {"em1Text": "send along the cookie with the session id", "em2Text": "reading the session identifier", "label": "AND"}, {"em1Text": "reading the session identifier", "em2Text": "cross site request forgery", "label": "None"}, {"em1Text": "reading the session identifier", "em2Text": "send along the cookie with the session id", "label": "None"}], "entityMentions": [{"start": 33, "text": "cross site request forgery", "label": "ATTACK"}, {"start": 126, "text": "send along the cookie with the session id", "label": "ATTACK"}, {"start": 332, "text": "reading the session identifier", "label": "ATTACK"}], "sentText": "yes, it is sufficient to prevent cross site request forgery.  the browser will make a request to mysite.com, and it will also send along the cookie with the session id. the thing to understand here is that evilsite.com cannot read the cookie, but it can still get its job done. browser same-origin policy prevents evilsite.com from reading the session identifier whether its in the cookie or embedded in html page. but because browser automatically sends the cookie to your server even if the resource was requested from the html code in another domain, you have xsrf.  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 15, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hardcoded", "em2Text": "compromise the backend", "label": "None"}, {"em1Text": "compromise the backend", "em2Text": "hardcoded", "label": "PARENT"}], "entityMentions": [{"start": 204, "text": "hardcoded", "label": "ATTACK"}, {"start": 333, "text": "compromise the backend", "label": "ATTACK"}], "sentText": "i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded. how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend? although this may obfuscate keys, these still have to be hardcoded. making these kind of useless, unless i'm missing something. <h1>your question</h1>i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded.my question is:how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend?the cruel truth is... you can't!!!it seems that you already have done some extensive research on the subject, and in my opinion you mentioned one effective way of shipping your app with an embedded secret:hidden in native librariesbut as you also say:these methods are basically useless because hackers can easily circumnavigate these methods of protection.some are useless and others make reverse engineer the secret from the mobile app a lot harder. as i wrote [link], the approach of using the native interfaces to hide the secret will require expertise to reverse engineer it, but then if is hard to reverse engineer the binary you can always resort to a man in the middle (mitm) attack to steel the secret, as i show [link] for retrieving a secret that is hidden in the mobile app binary with the use of the native interfaces, [link].to protect your mobile app from a mitm you can employ [link]:pinning is the process of associating a host with their expected x509 certificate or public key. once a certificate or public key is known or seen for a host, the certificate or public key is associated or 'pinned' to the host. if more than one certificate or public key is acceptable, then the program holds a pinset (taking from jon larimer and kenny root google i/o talk). in this case, the advertised identity must match one of the elements in the pinset.you can read [link] of react native articles that show you how to apply certificate pinning to protect the communication channel between your mobile app and the api server.if you don't know yet certificcate pinning can also be bypassed by using tools like frida or xposed.[link]inject your own scripts into black box processes. hook any function, spy on crypto apis or trace private application code, no source code needed. edit, hit save, and instantly see the results. all without compilation steps or program restarts.[link]xposed is a framework for modules that can change the behavior of the system and apps without touching any apks. that's great because it means that modules can work for different versions and even roms without any changes (as long as the original code was not changed too much). it's also easy to undo.so now you may be wondering how can i protect from certificate pinning bypass?well is not easy, but is possible, by using a mobile app attestation solution.before we go further on it, i would like to clarify first a common misconception among developers, regarding who and what is accessing the api server.<h1>the difference between who and what is accessing the api server</h1>to better understand the differences between the who and the what are accessing an api server, let\u9225\u6a9a use this picture:<img src=\"https://i.stack.imgur.com/4dgaj.png\" alt=\"man in the middle attack\" />the intended communication channel represents the mobile app being used as you expected, by a legit user without any malicious intentions, using an untampered version of the mobile app, and communicating directly with the api server without being man in the middle attacked.the actual channel may represent several different scenarios, like a legit user with malicious intentions that may be using a repackaged version of the mobile app, a hacker using the genuine version of the mobile app, while man in the middle attacking it, to understand how the communication between the mobile app and the api server is being done in order to be able to automate attacks against your api. many other scenarios are possible, but we will not enumerate each one here.i hope that by now you may already have a clue why the who and the what are not the same, but if not it will become clear in a moment.the who is the user of the mobile app that we can authenticate, authorize and identify in several ways, like using openid connect or oauth2 flows.[link]generally, oauth provides to clients a &quot;secure delegated access&quot; to server resources on behalf of a resource owner. it specifies a process for resource owners to authorize third-party access to their server resources without sharing their credentials. designed specifically to work with hypertext transfer protocol (http), oauth essentially allows access tokens to be issued to third-party clients by an authorization server, with the approval of the resource owner. the third party then uses the access token to access the protected resources hosted by the resource server.[link]openid connect 1.0 is a simple identity layer on top of the oauth 2.0 protocol. it allows clients to verify the identity of the end-user based on the authentication performed by an authorization server, as well as to obtain basic profile information about the end-user in an interoperable and rest-like manner.while user authentication may let the api server know who is using the api, it cannot guarantee that the requests have originated from what you expect, the original version of the mobile app.now we need a way to identify what is calling the api server, and here things become more tricky than most developers may think. the what is the thing making the request to the api server. is it really a genuine instance of the mobile app, or is a bot, an automated script or an attacker manually poking around with the api server, using a tool like postman?for your surprise you may end up discovering that it can be one of the legit users using a repackaged version of the mobile app or an automated script that is trying to gamify and take advantage of the service provided by the application.well, to identify the what, developers tend to resort to an api key that usually they hard-code in the code of their mobile app. some developers go the extra mile and compute the key at run-time in the mobile app, thus it becomes a runtime secret as opposed to the former approach when a static secret is embedded in the code.the above write-up was extracted from an article i wrote, entitled why does your mobile app need an api key?, and that you can read in full [link], that is the first article in a series of articles about api keys.<h2>mobile app attestation</h2>the use of a mobile app attestation solution will enable the api server to know what is sending the requests, thus allowing to respond only to requests from a genuine mobile app while rejecting all other requests from unsafe sources.the role of a mobile app attestation service is to guarantee at run-time that your mobile app was not tampered, is not running in a rooted device and is not being the target of a mitm attack. this is done by running a sdk in the background that will communicate with a service running in the cloud to attest the integrity of the mobile app and device is running on. the cloud service also verifies that the tls certificate provided to the mobile app on the handshake with the api server is indeed the same in use by the original and genuine api server for the mobile app, not one from a mitm attack.on successful attestation of the mobile app integrity a short time lived jwt token is issued and signed with a secret that only the api server and the mobile app attestation service in the cloud are aware. in the case of failure on the mobile app attestation the jwt token is signed with a secret that the api server does not know.now the app must sent with every api call the jwt token in the headers of the request. this will allow the api server to only serve requests when it can verify the signature and expiration time in the jwt token and refuse them when it fails the verification.once the secret used by the mobile app attestation service is not known by the mobile app, is not possible to reverse engineer it at run-time even when the app is tampered, running in a rooted device or communicating over a connection that is being the target of a man in the middle attack.so this solution works in a positive detection model without false positives, thus not blocking legit users while keeping the bad guys at bays.what suggestions do you have to protect the world (react- native apps) from pesky hackers, when they're stealing keys and using them inappropriately?i think you should relaly go with a mobile app attestation solution, that you can roll in your own if you have the expertise for it, or you can use a solution that already exists as a saas solution at [link](i work here), that provides sdks for several platforms, including ios, android, react native and others. the integration will also need a small check in the api server code to verify the jwt token issued by the cloud service. this check is necessary for the api server to be able to decide what requests to serve and what ones to deny.<h2>summary</h2>i want to be able to store keys in the app so that i can validate the user an allow them to access resources on the backend. however, i don't know what the best plan of action is to ensure user/business security.don't go down this route of storing keys in the mobile app, because as you already know, by your extensive research, they can be bypassed.instead use a mobile attestation solution in conjunction with oauth2 or openid connect, that you can bind with the mobile app attestation token. an example of this token binding can be found in [link] for the check of the custom payload claim in the endpoint [code].<h2>going the extra mile</h2>[link]the owasp mobile security project is a centralized resource intended to give developers and security teams the resources they need to build and maintain secure mobile applications. through the project, our goal is to classify mobile security risks and provide developmental controls to reduce their impact or likelihood of exploitation. "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 59, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 137, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 306, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is usin since g t he  st he method beo a w a bad choice? t generates a random number between 0-1000. since there ae on th y 0 o m p, and their md5 hashes are known, it shoul ials d take  ju an at at ae  c w ker ju wi  bew to th ju out ju ju    ju  a 0-1000. n generates d st a 1000 tr be u longing ials to verify the account without it really belonging to them "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 36, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 120, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p ws xxe a xe \" xxx. e s n e xxs xo convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xxe ck if mixt t a xxxx.  , e n xe f e xe xxxxd xo xt x, but a wd xxp n dxxt the xxxr d xxy xxt xe dy d wh the e mn s e d y y uxxxy s xs a y to \"xx\" xxxxs ad xo xxy e d i, xxx. xn s , e xxy at xf the pxxxm xxxxxy s e y of xxe s cxxxl r r n compr ad r xxxg . "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 112, "text": "requests the form page first", "label": "ATTACK"}, {"start": 142, "text": "starting a valid session", "label": "ATTACK"}, {"start": 172, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 244, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i inherited some code that was recently attacked by repeated remote form submissions. however, the attacker now requests the form page first, starting a valid session, and then passes the session cookie in the following post request. therefore having a valid session token. so fail on my part. "}, {"sentId": 4, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "steal the user's csrf token", "em2Text": "via js", "label": "PARENT"}, {"em1Text": "via js", "em2Text": "steal the user's csrf token", "label": "None"}], "entityMentions": [{"start": 30, "text": "steal the user's csrf token", "label": "ATTACK"}, {"start": 58, "text": "via js", "label": "ATTACK"}], "sentText": "what prevents the attacker to steal the user's csrf token via js? can't he just find the csrf element and get it's value with js? "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 106, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "le tn ts say we have a l  like csrf pro f  this tect say ion l tection   we th t is ike t e hs ont i we f an attacket uses this code to bypass the csrf token? "}, {"sentId": 25, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "download the data", "em2Text": "proxy system", "label": "None"}, {"em1Text": "proxy system", "em2Text": "download the data", "label": "PARENT"}], "entityMentions": [{"start": 131, "text": "download the data", "label": "ATTACK"}, {"start": 451, "text": "proxy system", "label": "ATTACK"}], "sentText": "sup  pose that a d of ata so way urce sets a tight ip-b ip-based a i sed throttle.   would would a web scra if per have any way to download the data if the throttle s if tarts reject data ing their req  being only uests as da the ta  earl tight y do  as system.   req 1% of the  tarts of  data being do could wnloaded? the only t throttle echnique i could th  the  ink of a hacker u would sing he y re woul wo data uld d be some sort  could  could of proxy system.  but req  source , it seems like the proxies download  sing  (eve pose n if fast) would eventual some ly  of all reach the throttle. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "is there any way to protect encryption keys that are being stored in ram from a freezer attack? (sticking the computer in a freezer before rebooting malicious code to access the contents of ram) "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lter u  out the messages and  i xxt in xy webhoxk callback. however limitxxg , a  xxxxxxk sxxe  malxxxxxs uxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  en if telegr ev am ha d ve imxxxxxxxxd some xxxe l enial imiting such u ser x. xxxe ser vice  actio the ns xa mxxs some axxs y  will st en ill result xn denia however l  d  enial o ca  n f servixe for all xxxxr xxxr add s. "}, {"sentId": 30, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "has physical access to a machine", "em2Text": "look at the filesystem", "label": "AND"}, {"em1Text": "has physical access to a machine", "em2Text": "retrieve a valid session cookie", "label": "None"}, {"em1Text": "has physical access to a machine", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "has physical access to a machine", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "retrieve a valid session cookie", "label": "None"}, {"em1Text": "look at the filesystem", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "has physical access to a machine", "label": "PARENT"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "look at the filesystem", "label": "None"}, {"em1Text": "retrieve a valid session cookie", "em2Text": "hijack a session", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "has physical access to a machine", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "look at the filesystem", "label": "None"}, {"em1Text": "hijack a session", "em2Text": "retrieve a valid session cookie", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "has physical access to a machine", "label": "ATTACK"}, {"start": 69, "text": "look at the filesystem", "label": "ATTACK"}, {"start": 95, "text": "retrieve a valid session cookie", "label": "ATTACK"}, {"start": 143, "text": "hijack a session", "label": "ATTACK"}], "sentText": "if a xxxxxxxxs user has physical access to a machine, xxxy can xxxxl look at the filesystem to retrieve a valid session cookie axd use txxt to hijack a session? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet for n  her dos  adding it e t very tim th shax1 a be n e add prexxxxs s sxxe s executing xxe i ngth to way  the hash. fxr e wonder xamxxx, xxxxd it be pxxxxxxe txxt a o n atta  cker  than found some clexxr be  way to create a 100timessha512 function which were way f found aster than sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, it does expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo prevents brute forxe atxxxxs (o  r at xxxxt mak for es them  brute pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a trade than xxx, but t asxxr o sxxe t attacks h there e benefits exxxxd the risxxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 149, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws axe a xxxe \"xxxxx\" xxx. hostile sites cxn ue popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url r xxxxxxs exxn just the clxk if might exxxxxt a buxx.  , txe xxxn page xf e xe xxxd o xxxt too, but a welld xp xxn xxxxt the uxxr axd xxy not xe dixxxxxy axxxd h e xxe main ps wxxe d y many uy ss s a xxy to \" uss and to esxxxxy xxxxe xd imxxxxxxxxx, etx. in txxs respect, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf the user's contrl r xxxr own xxxxxxr and xxxxr broxxxxg desi. "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 104, "text": "sql injection", "label": "ATTACK"}], "sentText": "in , when med   c v ng  the ale tio  that t  in   n do  i want to find by a usr given  ng value ad avod sql injection (ee  in ap n  b al the e y    (ee os and the   po  n this: e  lik) m d y  i or  can do s that g e t lik) h: i kno  w i)  that an ue  n i   (po wy of dg t  his kn in ow  the  (po vale sg o   ssib  d n  n  in le  d sql i)  po is wing  this: my n is, does os  my    the fol   ( lo to wi do ng metho in d pr u s ser e injeci l do e o wa is, nt  lik) n ven d ( u po  kno given w e   os  a find  in p  ss  th:  il o  c t   sq kn  o  s l my  n or ? "}, {"sentId": 36, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attempt", "em2Text": "malicious character", "label": "OR"}, {"em1Text": "malicious character", "em2Text": "xss attempt", "label": "None"}], "entityMentions": [{"start": 85, "text": "xss attempt", "label": "ATTACK"}, {"start": 102, "text": "malicious character", "label": "ATTACK"}], "sentText": "\"a potentially dangerous request.form value was detected from the client may it be a xss attempt or a malicious character "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 167, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 430, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 466, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "i'm trying to have a look at how gmail or facebook are implg this . i can see some cooke like 'p' in fb, os in gm not too sue if y use some other trick to pt t e that tries to impersonate some other user. il try to impersonate myself using something e [link] to see if they're y using a c token to remember the user. if they are it s to me lie a g sy issue. maybe not facebook(i don't care of it) but with gmail if yu don't set ' an http connection will be used and it will send your unencrypted tokens over internet.what do you think?   me not fai dont care f it) but with l if u don't set 'use always https' n http cn wl be used and it will sed r ud toks over inte.  what do you thi? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 254, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 364, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p   i w x t   s d    y u   e t   d   y e a a t  e      of xxx  xxe .  \" x   d xxx   a  d   xxxx  xe      \" thr d y   x    e oh  ck x pxs   xxx   pxs . s  e e   a  tr s cli xxx c i x   s ki t   ng    cn  e  x   s  s  n  e pop   xe  e po br n ow pxs o     convince users that an important message from a trusted site has been delivered, a  n f t     r n o d    cn   trick those people into clicking through to some malware url (xr       xx  s   e  t d e n vn y  t  xy    an the   url    pop  ss t d  an  ck  an sey  i y f t  x   ck xx i xt  w et a bu  d e   d gx  y    k  pop o i    xxn d    of x .  gx  ck n s   xx  t d  .   m y e ,       bu  e n  t ,  t    d  pxe n  n  f te   xx   well-cr t   xxd b afxe  e t d  . xn  e x    t x  of e    xx e d do x  t  e  b  w an  e   x   y  t i  n s  t xs x, b   e u xs   t    some    xt  , a xe   d welx t  r     n t a e   a   us  s xx e  y  url of an   e  d  te pp   n t th xs      \"   e  xs ur d x y y  xy       f ad       t x    o message    a e  e  clickin  g dy   b  , e a t d  d   d y   h xe     xx    t t xy  x  b h n  m    t o       xo f e us ss t  gx age as u   an   t d   xe x xxn xn of  s e fro x  s m     t d  an t  y,  y   of x sey   the   e a   u  y e    u x xxxy s e     t t s x y s a  m     e y    , y    e      r o   r xe   n y ,      n    \" s  as d    p pp  t  xe e    x  s   o x  n i x e          o xx    x e x  y \"    xs  fe d   u    . cn a        ss  xe   e    \" pop   e u   d s  us  t  ,  t t  . i xx e xd n s  n , t from e d    o  y   t of e p   a  n  e rm r     s y ck  i  u t      e  s s e sy s  e   x  n f e  t u d  x  e   ss users  co  n n   messa e ge  x  on r  xe   xl o  r xx     sey and   o     a   n  x r x   tr on xo y  e r   t m  x t xxr ss  a s  i a s  t  k    i y  d xx  , a xxr b  bi a      d    e   d pxs   messxe   a xg       xx ad . t   d  ex.   "}, {"sentId": 27, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "another application has access to your cookies", "em2Text": "impersonate you on the website anyway", "label": "None"}, {"em1Text": "impersonate you on the website anyway", "em2Text": "another application has access to your cookies", "label": "PARENT"}], "entityMentions": [{"start": 3, "text": "another application has access to your cookies", "label": "ATTACK"}, {"start": 65, "text": "impersonate you on the website anyway", "label": "ATTACK"}], "sentText": "if another application has access to your cookies, then they can impersonate you on the website anyway, so access to the api is no different.all authentication methods still go through our control.regular expiry of tokens means that if they are compromised then there is a limited time for exploitation. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 235, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 525, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 293, "text": "xml bombs", "label": "ATTACK"}, {"start": 632, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml hs been the backbone of te service oried application(soa) d t will be a useful one in the cog future.as xml is easy , flexibl, t can be easily mae vulnerable and te attackers can use it for their n pus h some of the attacks by are coercive parsing attack, xml l ) at, xl dos(xdos) attack, xml bombs.can any one tell in detail about these w cd oe cn simue these attacks practicaly n a single sy? i dot think there is pee definitn of a , but it refers to an k that is particulary \"compact\" d whih \"ex. a \"coercive pag att\" exploits the nature of the xml model to overwhelm the parser. a bb using s which result in a dos becaue it exhausts the memory "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 114, "text": "xss attacks", "label": "ATTACK"}, {"start": 1737, "text": "sql injection", "label": "ATTACK"}], "sentText": "i  part am  e working on a asp.net c# + jquery part  ajax website project.    i am trying t interpreted o prevent xss attacks and i kn interpreted ow below  is not the full appro back ach, but this is at  overcome the  text least what f  should pre rom  i should do - to s  us source, e htmlenc an od the e whe least  y n accepting fr  on e ee string input from pre-encoding  users).  a same n to d i really  ure someone to ki  ndly   chec what  in k if i t  am  u plain se doing th ajax e right thing. you  of nee the d  a to keep in m pe ind the content ty -   pe of each stri pre-encoding ng you  safe deal with  pure and where it came from - whether from a safe sour back ce or an becomes  untrust saying e your d source, and also know when concate and natin an prematurely d g t html e , into e   wo stri datab ngs that both are str s th er. i.e.  ings of the same c prevent ontent-type and trust-le if vel.i wra is pped up the & us  what quot;descripti wi the th on&qu xml.[ to l  ink] ot; convert  text using [code to  sql, ], s the o th  as pre-en to coding e string will be interprete saying d as pure text before going  g into database i.e.  guaranteed [cod free e] becomes [code].here  convert se t nd  it sounds like you're saying the  e] description whether  the   teed field is a strin input g of plain back  text and what you're storing  s not ubstrings in th prevent e databas safe e i dan s a string of safe html (since [code]'s output is guaran really teed not to contain dan a gerous code).this shows the first prob below lem with prematurely en as coding  dat if abase content.  if user  y to ou're composing a sql string to  whether send to th to   e server, pre-encod and ing as html does not protect you fr are om sql injection.  us p a rematurely ing a sql prepared statement is a good  e way to overcome this for sql,  free bu the t pre-enco  ding doe you s not render a output.  string safe  the in all co e ntexts.the part that follows is wha a t i am in dou  b  and datab what ase t - how to handle the ht  m nating l encoded so  send  text before returning it   back to the   user?when the use safe t below ext  r need   database wants to view t user?when he de code).this scription text en   i tered, the   website retrieved from database an send d prints it out.if using  th injection. e  a user is receiv trying ing before  safe html, an u rss,   the d you have a string of  am safe h html tml, a  you can just send that to the u project.  be ser. and  saying if the user is rece ou're iving a plain text email, then you need to  should convert  from the safe html stored in   the database  can to plain t if ext.if the user is recei a ving rss, then you need to make encoding  sure you compo right se your rss using substring safe s input  of xml.[li  n i k fro   website m ] can help you make s pre  -en you coding a  e  ure as  values are  that properly encoded on output. "}, {"sentId": 83, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "use atom tables", "em2Text": "store executable code", "label": "None"}, {"em1Text": "store executable code", "em2Text": "use atom tables", "label": "PARENT"}], "entityMentions": [{"start": 110, "text": "use atom tables", "label": "ATTACK"}, {"start": 129, "text": "store executable code", "label": "ATTACK"}], "sentText": "the security d has been abuzz over a nw ce n te called \"atom bombing\" (see ] and [link]).  siy stated, an r n use atom tables to store executable code. "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 648, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 683, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i a [code]. m goixg t xxr o use oauth to fetch mails and don't  contacts from g aspects xxxxx. i don't want to axk  access t i goixg  h hat e  use user each time to log in to to  oxxxxn xn access to tokexs ke that n xxd secxxx. frxm w i hat  xxxxe  nexd i unxxxxxx em xx, i nexd  methxd to stor about e to  th to  i em  tokexs with w secuxxxy ant  my applxxxxxxn xxx x  i tokexs n x b xr in a data  and an  droid? base or  and [code h ]. b get  i b s   ut i xm a bxt woxxxxd about secxxxxy aspects with thax to . use  i read that xxu can encrypt and decrypt  to the tokexs bxt it is easy for an a [code]. ttac base bxt  xxr t ut o  b j decrypt ust decompile your apk and classes and get the encryption key.what's the best methxd to secuxxxy xxxxe these tokens xn  i a the nd ke bxt y.what's roid? "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 78, "text": "gets a valid token", "label": "ATTACK"}, {"start": 102, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "jwt does not protect you to a man-in-the-middle (mitm) attack. if an attacker gets a valid token, can effectively impersonate. even if the content is encrypted. "}, {"sentId": 54, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 11, "text": "evil people can do bad things if they identify your public key", "label": "ATTACK"}], "sentText": "presumably evil people can do bad things if they identify your public key. google seems to think so, apparently. i can guess what this step does, but i'm not sure i really want to speculate on that in an open forum, and give anyone any ideas.  you want to do it though. "}, {"sentId": 84, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 16, "text": "an sql injection attempt", "label": "ATTACK"}], "sentText": "clearly this is an sql injection attempt. but why the constant shown above? i can't see how it could be particularly significant, though it seems to appear quite frequently. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 189, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 276, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wix xxxxk xxxs   bu.    m to are a no to xxxl ,  and e \"xxxxxx s \" xx be th  at  . hxx xxr xxe  d  xs asxxd xt  ixy  k t xy es cxn uxe e.  xxd    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    and d yx, the xa  e xxxx. in pa   to g poxxp e  proxm f te  etx.  xxy  trixk te  s o   y  xx d txxs o y  x l e f xh xxxxxt  poxxp b  e xxm  xxxd xo xx pox  xo  x hoxxxxe p x x pr a om xt  fro t o a   e k  xxxxx xxxr xxxd o, xxt a xxxl t -cxxxxe xl o ick d pxxxp xx xxy n d some i xxxd xx exxxxxxxd xxx x t t . he xxxr a  c trud k  ad xy  xxo a  xn p d  e. m yex,  xxt b xxx   ick  asp  ext o  xt   of  f  c trk xxxxxxe . e x  d  ixxy  xy xxx xx  xx xxxxxd wh h  e xxxxxx p ixt  e  clik xxxn  y pxg k es xe pxx fxr m aspet   x on d   e  by my uxxxxxx thxxe y si  tes xs  expd a a of y to xxx mih  fo s r  cuxxxy xp xe \" us h xxs xx e  d   d   to e   \"   xxxxx xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt x, etx. n a  ts rex,   t  he sec  x xxxxp xxxy t o  not thrxu poxxp gh   f xxe  s   prom rex r y i xx  x importat be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e us a   oe  es n xxxh trusted  d  txo that   l xxx dy  x r their  by own com a pxx y r and  x te s xxxxr xxs  xxg xxxxxxx. "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 901, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2721, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2772, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3956, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4044, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "fi trusts rst of  implementati server on all if  i'll desc with ribe  d briefly the authe from nticati correctly  the on procedure as i underst banking and it, as i ma to y be mistak  a se if rver en in that  th k e regard: a cli server ent starts   a i'm  connec scenario? t en)  - ion,  i which a server responds to with a combination of public key, some metada public ta and digital signa  ture of a  be trusted author without ity. then the client take the s the decision if sh  e trusts pos  connec authe sible  the ser l v the er, e if ncrypts some ra to ndom session key wi if th the public k if   e ra y and se from nds it b valid ack. tive trusted     the  this session key can be dec cl rypted only with pri is vate key stored on    combination  a  and the server. a  ser  ver does this and s  then the https session  d begins.so, if i'm  co cor take rect abo the ve, the question is how the man-in-the-middle attack can occur i r t rst hink an client dom n such hide  scenario? i mean, even if somebody intercepts the server (e.g as . www.serve valid r which .com) response w ssl's http  ith public key an that d has some means to make s  me think that he is www.serve if r.com, he still wouldn't be able t my o decrypt my   ses certificate sion key without the priv nt a encrypts te k ca. ey.speaki for ng about the mutual aut some  today, hentica know.the tion, is  of it al combina connection tion  it. l  the about the server confidence a appear bout the cl the ie wi nt identity? i mean, the client can already be server,  sure tha the t she i valid  it s communicating with the right  broken, server, but now the server wants to find o with se  ut who the clie to nt is, right? attacked and the  serv l is  server ast en)  question and  is abo nt ut the alterna then tive to the  ificate mutu pre-exi al authentic such   correctly wi ssl's  cert  a as tion. i after f  mos n t i act as a client in the situa of tion descr th ient e ibed, wha t t if i send a login/password i  in t and  er he http header  er, after the ssl session is established? as broken,  secured  the   an  al i see it, this informa en) tion can't and is   be in the ter tion cepted  ve, because the connection is already secured and t  he server can rely on it for  en my i fr such om dentification. am i wron to and  g? wh ntication, at are  vate t  he downsides of such an ap question proach compared wi she th ssl's  mutual authentica hide tion (only se  curity issues are im th attacked at portant, not the implementation com login/password plexity)? ma ses n-in-the-mid be and   as dle attack on ssl ar and e really only ri the ght?  possible if one of  understand ssl's preconditions is broken, here are some exa ation. mples; the server key has been stolen - means th server e attacker can appear to be the server, to  and there is no  i way  really for the client tive  it  to know.the clie pri nt  authentic trusts an untrustworthy ca (or one tha w ion, ww.server.com, t has had it's ro a ot ke correctly y  rect stol question en) - \"ben's  whoever holds  with a trus server ted ca k  ey can generate a ast  cer with t header ificate pretending to be the server and the client will  then trust the  it. w pretending vate  ith the number of ca i s pre-exi reate sting in browsers today, this communicatin th g  may be a real   p  roblem. this means that   the server certif is icate woul with d a  p that pear to c er hange to anoth  correctly tificates\" er  the  - valid one, which i en) s someth connec ing most clien server ts will hide f t  he rom you. it  not the client doesn't bother to validate the certificate co may rrec client tly against t wha ruste such d  its list of trusted ca's - anyone c header an c to reate a ca. wit t h n  exa banking o validation, \"ben's cars an tificates\" d cer authe untrustworthy ntication, tificates\" will ap mutual   pear to be  bother  en) just as valid as ve the risign.the cl be ient has be rom en attacked and a fake ca has been injected in his trusted root authorities - allows the attack are er to generate any cert he likes, and the client will trus server, t it. malware tends t serv o do this to mutual  for example redirect  holds y ssl's ou  trusts to fak ap - pear e  been banking sites. "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 95, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "e uploaded several gifs, which when viewed with a browser, the browser said it was invalid, ad my virus scanner alerted me that it was a injection.  see bew for a p file cog the gifs. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "using the [code]", "label": "ATTACK"}, {"start": 78, "text": "open a server up", "label": "ATTACK"}, {"start": 873, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any e any security imps  only caused by using the [code] and c te ol usr d it open a server up f such o coml r ing r a  ttack (f ? if you e [c attf ode] just r gener t atig c server # so a uc so e code, t h hen you  (whh oy need a p (which r be mi a so g  c n to sae the n anything erated files gs  to so on e directory  gend r to notig t l you l (if it code  is poss ratd ie to get th you e e generated i  wt ts nto a memory str sh  so guarantee e eam)if  t u use it fr c a ompili memory ng gener att te acf ated c# so, thn you ne s ed  file ttack s a permiss ff ion to run  then &amp; a   [code] (whh may nt be av files a on ila some ble in some ld ee all nts h s use  that  shared hos gs ti can  how ngf you just genera is te s &amp; compile them, e code  any n it probably t be harmf sou h rce, ul (althh some if one cou stream)if ld py abus y e your appln r   code to generate many, many files and attack the server using some kind of dos attack.if y , ou a i only s l t so  e load &amp;  files x yu e a dep ff ens  e if p some ends lso     f al cute the ge can  s rated co files de, n it s on how you generate it. if u ae that the are no bu w s n c#c of odedom and  it can gr he ae tht ants  the gd code   s, the i [link] s sf   gene , then you o  d be finef yor e cn things such as [l] that c someone n be provd by the user n some wa he y) a and n te compili  user can wre and if  run anything e or she w i ion f as on your server, so this would be potey que d  d. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 73, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 157, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pp s ae a notabe  u. \"x\" x rea . h to ol but e td  s  dy n use pos a  to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url r  the s o s f  n ju t t e k f t  mt  \" t a b ma x in ug. ry   , the main e xf the xe xx  d b  to  do xxx xxy t , bt a wed p a e  f s  xxn t te u diy r e  axd x of xy e  n o ot be dixxxy a . d wih e , to     rea b e n   ps wxe d b to  y   y my x rea the xxy y sits xs a wy o p xs   \" s d o y e ad , tk  bt  e. in s res, te si a y ast of t o y it he prx xxy xm rx wn y s e t  to  y e bt   of te  a d  user' a  g s co  nl ovxr i te r o imp esxxy r, wn i,  r d r brg . the  "}, {"sentId": 54, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 11, "text": "evil people can do bad things if they identify your public key", "label": "ATTACK"}], "sentText": "presumably evil people can do bad things if they identify your public key. google seems to think so, apparently. i can guess what this step does, but i'm not sure i really want to speculate on that in an open forum, and give anyone any ideas.  you want to do it though. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 262, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm  o new to  simi th lar cxf and i   would like b  to know if it has any build-in mechan f ism th limiting at would allow limiti o ng the numbe and r o servi the ce,  it f concurrent calls  wcf to the web to  dos  service, thus addressing the possibility of a dos attack? somethin something g sim th ilar to this feature of wcf w  e th b i'm  i'm  ? "}, {"sentId": 71, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "http request misuse", "em2Text": "tweak your malicious script to authenticate", "label": "PARENT"}, {"em1Text": "tweak your malicious script to authenticate", "em2Text": "http request misuse", "label": "None"}], "entityMentions": [{"start": 123, "text": "http request misuse", "label": "ATTACK"}, {"start": 263, "text": "tweak your malicious script to authenticate", "label": "ATTACK"}], "sentText": "i've made a voting on comments like the one this website has(something similar), and i'm slightly concerned about possible http request misuse. you'll know what i mean after i show you the questionable code: not even user authentication is very helpful, you just tweak your malicious script to authenticate and you can do it again. how can i make this request more secure, what can i do? thank you "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 430, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 964, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 530, "text": "xml bombs", "label": "ATTACK"}, {"start": 1100, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml h is as been the bac a kbo eas a y ne of th one e service oriented applica e tion(soa) and it will be a useful one in the coming future.as xml i practic c on oerci using  ack, ve  be ally s e  h be as  the d y , flexib nature le,  the it can be easil definition y made v single u in lnerable and the use  attack uch ers can use it  dos(xd for the os) i practic r own  ne it  purpose.as s in uch some of the at of tacks by are coercive parsing attack, xml extern the al enti it ty(xee) attac of k, xml dos(xd a os) att of ack, xml bombs.can a of ny on that e tell in detail about these attacks.how coul attacks.how d one can  xml si use mu xml late these att b h y thei  acks p  a use ractically in  the a single system? i don't think there is perci pra bac ctically se def the inition o ca f a \"bo the of  mb\" external , but it refer is s to  xml an attack that is par on p e ticularly \"com and pact\" and xml  which \"expands\". a \"coercive parsing atta use ck\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a d a  a os be a ca one for  use it exhausts the memory "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 196, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 496, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 267, "text": "xml bombs", "label": "ATTACK"}, {"start": 609, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l has been te bae of the service orid axx) and it will e a usefl one in the coming s xml is easy , , it n be ey me vulnerable and the attackers n ue xt for thr own ps h sxxe of the xxxxxxs by xxe coercive parsing attack, xxl exxxxxxl entity(xee) attxxx, xml do) axx, xml bombs.can any oe xxxl in xl xxt thee xxxxxxxxxxw could one can sxxxxxxe these axxxxxs xxxy in a e xx? i don't k there is xxxxxxe definition of a , t it xxxxxs to xn ak t s pay xxxxxx\" and xxxxh \"xx. a \"coerxxe xxxxxxg xxxxx\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result n a s because t exhausts the memory "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 187, "text": "sql injections", "label": "ATTACK"}, {"start": 254, "text": "xss", "label": "ATTACK"}], "sentText": "i'm trying to make a php application i've written secure and have a question about escaping output. i switched to using prepared statements with pdo once i learned doing so would prevent sql injections, and it seems that the other main type of attack is xss. i build the output for my pages like this (assume the variables have data from the database in them): xss preventionconverting special characters to proper html entities, for example it converts the copyright character to [code]. in html content you should use the appropriate html entity instead of inserting a raw special character. for xss prevention, you could use [link] instead, but it will only convert some basic characters to html entities, namely quotes, ampersand and the less than/greater than characters. "}, {"sentId": 88, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "hacker get an access", "em2Text": "stole the user's cookie", "label": "None"}, {"em1Text": "stole the user's cookie", "em2Text": "hacker get an access", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "hacker get an access", "label": "ATTACK"}, {"start": 107, "text": "stole the user's cookie", "label": "ATTACK"}], "sentText": "soluti the ons (how to prevent hacker get an access i to f prevent  h cooki  soluti hacker e (how ): e/she stole the user's cookie): "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 53, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p ws axe a xe \"  people t  xt  xxx. e s n e xxs to convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xxe c users  n pexxxe  k if xxxt n  t x xxy e  a b xxy ugx.   xxx  t  xxe i, g , has xxx clickixg    e n s  pe f  xx e xe   xx r malware  xx xxs   d x  o xt t, but a wd xxp  wh   n dixt the xs migt  xs wh  er d r   . xxy xxt  t x, o  xxe be dy  trixk d  s xh the e  xxxxxxxxt mn s  xs e d y y u  xxxy s sxy  xs a y to \"xx\"   xxx wd xs ad to n   t xx n y  s  be e d i, xxx. in s  s , e  x to xxxs sxy xt xf  y the probm r e eaxxy s e .  y o  t, xxy f xxe s contl r   r n co f mpr ad r xx xxxe xg  s  t . "}, {"sentId": 24, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 55, "text": "sql injection", "label": "ATTACK"}], "sentText": "i nexd to avo xxxxxxxxxxn avo . id being vulnexxxxe to sql injection in my asp in .xe in t axxxxc   ne injection ed ation. how mixxt i accomplish applixxxxxx.  th applic is? "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 105, "text": "steal a session", "label": "ATTACK"}, {"start": 155, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 686, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer tha, s, to  cookies. bt it i t s but  sti  ll po than, ssi o ble  to to steal a session as  and ts    a the hacr  po will have total access to whatever is in that session.  if some ways to avoid s are   ip checking (whih   wos pretty  fairly w ie el, but is vey low i e  and thus n to ot si  rele on its own), an   works d s  using a nonce thus .  fi typy with a  even  but nonce, u have a pe wo r-pa e e \" priv, token non but ce \" so that h page c leve heck ug s t the t page's nonce matches e  t it has  y stor oaded, ed.  but with a  my c reliable oo,  secu, a har can steal the  leve sn simy y  serv tei as ques. er-  l is l using fairly si you mpe xss  leve techniques. if p  as  you re  sto but xss  \"  re te use hol r's session id as a o  ajax a k vulnerable ie, th oa, ey are u cookies. lnee to  ex t session hs s well. of  so  has even  makes tu l gh the ses xs evs s s are ion t  ad  is  t only pene to someone o can do a server-le  ve bt l k (which requi each r  cookies gog es much more sophisticate doin as g d ms d usually se at of privi hr lege, f y pe o x ur server is u si re), yo this u are sti non, ll going to nd se  l e to x rel g , tra leve g l o  of verification upon eah t re ve quest.  secure, you should not use cookies that  and ax to  geh xss er,    doing as this makes it a tad easi  er to totally go   f use o town nonce y ,  if t cooe is stol, as your x request acs s my not get the securiy checks on  te. each   request. for example s , if th the ne   ble e page uses a none ho. , t the page is nev ook, er rel, the s page's ct may y be g simy  f you or that match. and if th    to to e cookie   is hg the authenn , this  i  , can now go to tn  that doing my evils a  s, s usig te stolen k upon  now e and the x hol  e. "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "the problem is that users might upload code that attempts to 'hack' the system. i understand that in c and c++ it's easy to disable a certain set of system calls (patch a few .dll's), but i'm not so sure about other languages. "}, {"sentId": 95, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "performs a memory dump", "em2Text": "information is compromised", "label": "None"}, {"em1Text": "information is compromised", "em2Text": "performs a memory dump", "label": "PARENT"}], "entityMentions": [{"start": 80, "text": "performs a memory dump", "label": "ATTACK"}, {"start": 110, "text": "information is compromised", "label": "ATTACK"}], "sentText": "hexp inspxxxxxn is about se information stored in the xe my unex, so tt xf an r performs a memory dump , thxt information is compromised. thus, sixxxy hg that informan s it vulxxxxxxx. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 150, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 267, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so, i wonder whether adding it every time adds some strength to the hash. for example, would it be possible that an attacker found some clever way to create a 100timessha512 function which were way faster than simply executing sha512 100 times? yes, it does expose a dos vulnerability, but it also prevents brute force attacks (or at least makes them prohibitively slow).  there is absolutely a tradeoff, but to some the benefits exceed the risks... "}, {"sentId": 137, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 53, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i read a comment about malformed tags being used for xss attacks. how am i supposed to sanitize against these. if i use a library like htmlpurifier, does it take of this as part of its work? or is this an independent thing? i don't hear people talking about it much. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 229, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 317, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup n sixe people    and  thr   xxxxxxd  in dxx i  te n d s ar ware e a  axd   w  d  no xxl ta axd bl has e  n may  to  xxxxxxx\" txx en x  xx. xxxxxxe s xa exxxo xt r a xxxd n us xxd e xo bu pu e  ,     xs tr he ick ps t axd o convince users that an important message from a trusted site has been delivered n , and trick those people into clicking through to some malware url xxr p tt s ev n en j e ust t r xxr eally h m e  pxx  xp xl   ovxr yes,   site  the  s  cl xxx, x xx  the  in brxxxxx to    c  xxxxxe h  xg xxk itsel xxt  xxt f mt exxxxxt   rxxp clicxxxg exx,  a bu fore g) xxy .    xxy  y  es, txe  to n paxe xf   xxe sxxe  s cxxxd xo tt tox, bt a xxxe    well-xxd pp hoxxxx  e message  up n dist th cou e xxr d xxy  own not   thrxxxh nxt tly  be trick  dxr sse  y ec he  throuxh  he tly s y socxxxe  d t xt us c. h t t p asxxxt  he   he hose ma t and  been a i x brxxxxx  g xxxd n p but a a   us nd  and ge. nt pop w e xn   ups axd     tri w xx   trick  bexn x, e an  d   cou n l ed d thr e ed xy ma yes, y trick not   xxxa us  xxxxxxe xxxy xxx xxxp may xp xs as  nota a w sse  xu s  xy w  to \"ta  e xxl xxxxxe  tri   ed ck w  axe p\" xxe trusxxd s a up pp  nd to e e xxe  sxe r  y xy xe  foxxe  to a  d impxxxxxx, etc. in this r t , th h  s \"ta ixe coud s e  e sey asxxxt xf the m y is xxe sey f xxe  xxxo   some  he  xx  j bu xxxs c  e xxxxxs o thrxxxh l a x, n  a  y ex xxa d d  ovxr   bu  thxxr  e n cx y xr an xxxxs d t a h s e  ir brxxxxxg de may s n e oxa . "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "running [code]", "label": "ATTACK"}, {"start": 154, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "how th ev e e th u e v run x,  [code] i do not u ud d the s   xxxxs d about sexxxxy .  that  the cxxxx, running [code] xxxxs x c how an xe hr the y  ud o run any javascript code that you can run. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 208, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 268, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxxt he . e s  xt e us cd  no r u g nt  s xxxy  to i do j . ak   d  o t pxxxxxg s d s ua   xg ts    tr on. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xe n xxu  t c  s d   . xe pasd o l do n  s to e account. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a notable \"xxxxxxxx\" xxx. hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn just the click itsef t exploit a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe ad impre, . n txxs r, e secy t xf the probxxm y is te sxxxxy of the xxxxxs control or r own cor and xxxr browsing xxx. "}, {"sentId": 122, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 288, "text": "stolen the cookie", "label": "ATTACK"}], "sentText": "i have followed the advice below to protect against any attack but think that the site is still vulnerable if somebody manages to get at the cookie (albeit only for a short time). is there a way to completely destroy the forms authentication session on logout so that even if someone had stolen the cookie there would be no chance of using it maliciously "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 54, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 180, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 271, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if xn atxxxxr can gain access to the system under the same user account as your code.n oxxxxxe , dxxxt u, t , xxxs an t a xx. if xn xxxxxxxr cn get access as the same user or as root, yoxxxe gxt far bigger pro. for xxxxxxx, txxy xxxxd tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 47, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 163, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 238, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked f xn r can gain access to the system under the same user account as your code.n oxxe , dxxxt u, t , xxxs an t a xx. f xn xr cn get access as the same user or as root, ye t r bigger pro. fr xx, txxy xxd tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 115, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 206, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p n d s xr we e a  xd ed  na s  d   x  l hs e \" xxx. e ss a exo t r a x  d n us xd  xxk e po bu u    xs t  k ps to convince users that an important message from a trusted site has been delivered,  xd ad d  trick those people into clicking through to some malware url (r ps   n j xe ust t   xp e y e  e   in  xd s  p   cl   r  sixxs  g xk xl x po d  xt f m sy   xxxt e  xxt   rxx,   c a u e x a j d x.   is , e xxxn pe p  f xx the e sxe cxxxd   o  o   ye, ps t ,  t   bt a we de ll-c l xxxd xp h e e  x j d p xn t   t  delivd k , de  d e   u to r axd   xl   bu y  own  xt   xxx   r xd x ec  xxk x  h t t en y  xe r rexy ec  s ad    e y s y sd t r  xt s c  . h  r t x t   e  w e he  txxk i   in  xx p xxd n  e p   xxt a d xx  xxxp w the xn xs w xxx, e  is  c xy u e   those n   xxx  xxd  d xxr e xxd y my unxy xxxx   xxd s   xs   a y to a   e e l k n  w  a xxxt  a re p\" uxs a e d xxxp  xo p  e hxe s k e po  y  t  e xy f y e xd x w , e.   in  xxx som xxy  k ps  e  s , xh e  r s , xx y d s e sexy   xxxt xf the xm  xl xx bu xxxs  xxx a  sey xy is e y  xxxp x the f e  ixxo xl  xe  xxxxs c  e s oxxl n d   a  y p  e  xxx r x h xd d  r tr  xxe n r d tr brxxg de my   xxxxs n e oa   . t  "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 209, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 233, "text": "spam", "label": "ATTACK"}, {"start": 250, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm y wo to rkin t just  g on a php project that will fxe a usr sm won't  axxxx.  (log or in,regi xxxxxxxxd s bots. texxxxxd lost pad to  will emai that l) and  abe i think  it  n txxt this may be very vule o brute-force attacks anr spam  a saying  (send a password to someone's email like 1000 times, et. use y to r fanta have xxx. do x t and o xxs b tht sers (apa, iis) hae xxxe js  sort of buixxxxn dxxxxxe  fxxm  dxxe against xx (xxr xxxxx xxxs  wb x us xxx  x lot t would e  e the best wa of y o implement an anti-sxxd sys, if i e.: wat a pae not e able to be called e t su st bx xx, d han two times a  y , howee  he xx, r anr page may be ca anr l jt lxd up to 100 s ed  a mxxxxe or . xxxxs wxxh xs won't see it  the and l be fxx. us t js wil just ha to (and   n ve o xw t l he simple in a st atts rxxxxxx. spa  m with bots will fall for it xxd reveal thec faux-captc the ha: x not x proje  ct x it   xxd wa implement y of   add bots.  s is sr to t running he axxx xxx. x x . a times,   dd an xxxxt d even  with  up a ll saying [xxx]  simp a le (xxr e will . un  g t (and kg  very that most au js tomated sxm xxxs won't   be rug j, hi it de so.  the f won't ield an w d populate it wih xxxxx to x. f the sd form doesxxt have the g rn c word e cxxxd e another , thxn ie d  it will . s (lx sy, xxd ers w a ih js wo' x  xxxd be xxs t sx it e it   ad will xe fine. the  us  wih without js wixl jut hae to follow the simple i. spambos t k against now wt t xxxs  imp it lt o  sime d to o our  d spam  x implement  y xu n ir juxt e xxxxr i. xxxs wil sd you fxm 99% of d m  xd b. what it won't  will xx, even n  se th i sxxm t e slighxxxx,  fxxxxxe is  sub mxxe xxxxxd d yo xxxe u n ca xxxe llxd st a ta s rget someone ed attack. someone cx i php mplet xd xxxx e x knowing xxxe  if their  fxxx. t to a to vd the honeypot or as fill in  xd the .  x  cxxxxxt value.  "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 901, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2721, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2772, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3956, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4044, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "fi trusts rst of  implementati server on all if  i'll desc with ribe  d briefly the authe from nticati correctly  the on procedure as i underst banking and it, as i ma to y be mistak  a se if rver en in that  th k e regard: a cli server ent starts   a i'm  connec scenario? t en)  - ion,  i which a server responds to with a combination of public key, some metada public ta and digital signa  ture of a  be trusted author without ity. then the client take the s the decision if sh  e trusts pos  connec authe sible  the ser l v the er, e if ncrypts some ra to ndom session key wi if th the public k if   e ra y and se from nds it b valid ack. tive trusted     the  this session key can be dec cl rypted only with pri is vate key stored on    combination  a  and the server. a  ser  ver does this and s  then the https session  d begins.so, if i'm  co cor take rect abo the ve, the question is how the man-in-the-middle attack can occur i r t rst hink an client dom n such hide  scenario? i mean, even if somebody intercepts the server (e.g as . www.serve valid r which .com) response w ssl's http  ith public key an that d has some means to make s  me think that he is www.serve if r.com, he still wouldn't be able t my o decrypt my   ses certificate sion key without the priv nt a encrypts te k ca. ey.speaki for ng about the mutual aut some  today, hentica know.the tion, is  of it al combina connection tion  it. l  the about the server confidence a appear bout the cl the ie wi nt identity? i mean, the client can already be server,  sure tha the t she i valid  it s communicating with the right  broken, server, but now the server wants to find o with se  ut who the clie to nt is, right? attacked and the  serv l is  server ast en)  question and  is abo nt ut the alterna then tive to the  ificate mutu pre-exi al authentic such   correctly wi ssl's  cert  a as tion. i after f  mos n t i act as a client in the situa of tion descr th ient e ibed, wha t t if i send a login/password i  in t and  er he http header  er, after the ssl session is established? as broken,  secured  the   an  al i see it, this informa en) tion can't and is   be in the ter tion cepted  ve, because the connection is already secured and t  he server can rely on it for  en my i fr such om dentification. am i wron to and  g? wh ntication, at are  vate t  he downsides of such an ap question proach compared wi she th ssl's  mutual authentica hide tion (only se  curity issues are im th attacked at portant, not the implementation com login/password plexity)? ma ses n-in-the-mid be and   as dle attack on ssl ar and e really only ri the ght?  possible if one of  understand ssl's preconditions is broken, here are some exa ation. mples; the server key has been stolen - means th server e attacker can appear to be the server, to  and there is no  i way  really for the client tive  it  to know.the clie pri nt  authentic trusts an untrustworthy ca (or one tha w ion, ww.server.com, t has had it's ro a ot ke correctly y  rect stol question en) - \"ben's  whoever holds  with a trus server ted ca k  ey can generate a ast  cer with t header ificate pretending to be the server and the client will  then trust the  it. w pretending vate  ith the number of ca i s pre-exi reate sting in browsers today, this communicatin th g  may be a real   p  roblem. this means that   the server certif is icate woul with d a  p that pear to c er hange to anoth  correctly tificates\" er  the  - valid one, which i en) s someth connec ing most clien server ts will hide f t  he rom you. it  not the client doesn't bother to validate the certificate co may rrec client tly against t wha ruste such d  its list of trusted ca's - anyone c header an c to reate a ca. wit t h n  exa banking o validation, \"ben's cars an tificates\" d cer authe untrustworthy ntication, tificates\" will ap mutual   pear to be  bother  en) just as valid as ve the risign.the cl be ient has be rom en attacked and a fake ca has been injected in his trusted root authorities - allows the attack are er to generate any cert he likes, and the client will trus server, t it. malware tends t serv o do this to mutual  for example redirect  holds y ssl's ou  trusts to fak ap - pear e  been banking sites. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 260, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 393, "text": "recover those keys", "label": "ATTACK"}, {"start": 509, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 532, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how xxxxt an attacker recover the secrets in that flash txxt ? i understa txxe nd th v v r ey xxn fuz for  xxxxxr  to v  viab k le that n xo fz th of e  th z i that   methxxx. erab t ilities xn  t xxe app code d ext ix, xxxt there  e co hxw xxd be some meth.  indistinct general side channel attack xr some for th t ing. but hxw wou be ld an a atk txxxxxr really go abxu xr t tryn txxxxg g to recover those keys?  e there viae ap e proaxxxs o in r a dxt flash? d attac se ey thixx. k some er to soxxxo code w shave-down the chip or some kind of microscope attack? abou  "}, {"sentId": 38, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 184, "text": "sql injection", "label": "ATTACK"}], "sentText": "when creating apps that put data to a database is mysql_real_escape_string and general checking (is_numeric etc) on input data enough? what about other types of attacks different from sql injection. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 200, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  for filt the er out the even  messages i get i  n my web even hook callback. howe service ver, a malicious u ctio s hook er can add my bot to a thousand big groups and will poss malicious ibly result in denial of service for all other users. even  all if tel messages  gram e hook gram have of  implemented some rate limiti of ng  groups suc  h user a i c all tio malicious ns may s h till  may resul u t in den ibly i ibly al  denial of  all service for al malicious l othe n r  denial users. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 208, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popxp wixxxxs are  malware a notable \"xxxxxx y xx\" xxxxxxxxx. hosxxl xxxxxxe e sit pxxxp es can use  aspect pxxxxs to convince users that an important message from a trusted site has been delivered, a can nd trick those people into clicking through to some malware url (or xxxxxxs e do xxn ju has xt the  sit  e c thxxxxh lick ixxxxf mxxxt   exp trxxxxd loit a buxx.  yxx, the  age xa xxxxxxxy in p uxxxxxx sec into urity y xxe xf bxt  the xx a xe x too, x  xxd xe  do xx own xt t er oo, but a f  wxxx- xxd c xt raftxd poxxp xxn  age dixxxxxt txe us  er might  axd th too, e nd   xxy not   be dxxxxxxy associated with the x txe xxxxxe main paxxxxxxu th popup at ps maxn  wxxe exxxxxxe  d by m the xxy  o the f uxxxxxxy s xxd itxs xs  at a way to \"trap\" users xxd  h to exxxxxxxxxy for e ce can etx.  h mxxn as xxxxs    ad impr sites exxxo xxxxp nx,  uxxxxxxy etx. in txxs respect, txe secxxxxy aspect of main  the p own  of robxxm rea xxxxxxxy xxy is txe people   popup securixy of the user's coxxxxl ovxr thexr own xxxxx  xxr and xxxxr browsing dxxxxxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand they can fxxz for vulnexxxxxxxxxs in the app xxxe and exploit it, that xxxxe could be some indistinct general side channel attack or sxxxxxxxx. but how would an xxxxxxxr reaxxy xo xxxxt txxxxg to recover those keys?  xxe txxxe vxxxxe appxxxxxxs for a determined atxxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 119, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is that the attacker simply adds a slash then some encoded javascript (an image tag with alert box), which kills the page.  simple and effective attack.   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 93, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 178, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxxxs e  e a a e   xxxxxe \" xxxxxxxx. e s clic is king  cn  e an  e  xe po br xn ow pxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t  xy  an the ck if t  xxxxt et a bu  d e gx n .  y, e n ,  d  pxxe xf the xx well-crafxe t d xe xx of   xxd do xt  brow y si t xs x, b e u xs t a xe  wellxxxa e    sey fted  te pop n t th xs e  xs user axd x xxxxy xy   t xe dy   b e ad xxxh xe xxxxy  x an xe xxn s e d y sey  y uxxxy s t ites xs a y o \" s d o esxx o xxxy xs  fe d  e popus  ,  t etx. i xxxd n s  n , te sey t of e prm reaxy i e s e sy xs  of e u d ss con on xxl or  sey  xx thr on xo y mxxxr a i a s  t d xxxxr browsi a messxxe  xg  ad dex. "}, {"sentId": 34, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 174, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "cou xxxn ld you please list som axxxxxy e strat servxxxx? egi som es  ld or even approaxxxs you   haxe al even ready  services? xxxxxxd to prevent/protec hxxe t es /minimize ddos attacks upon restful   xxb services? "}, {"sentId": 64, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "replay attacks", "label": "ATTACK"}], "sentText": "the xxxxr   view it stxxe  sec xxs ur   i    i can f ity but  flaw i can   s w xe   is replay attacks. how  w at ithin do i xxn  prev can xxt and  so but ,  som l  seconx e lay one  hxxxxr fr usex? om getxxxg ah from xxd xf   y can xxxt encrypted i  i  string, xxd i  posting a txxxxxxxxp s passxo  t on h pos is ting cl  x of t  flaw usex?  i i kno x  x can xt w i ca s n use sxl   to xa xxy ke it h  arxxr t xxd o steal txxt s is t a ring, a stxxxg nd   xxx how xe i xa and   u on ser partial n  replay?      really rot if ate the encryp ? tion key  txe usex?    on a reg   you t  ulxr  as xxxxs to  t tio o l in  string, im t i hx in x tx string, xs x ser xr t the encryption   encryp  tion amount of time  xs t time   hat  the t to   he   a but strixg  xxxxxn is good   ? f to ca  rom for bu like t your  , but x   ulxr    doe n s  t i'd  ho really like t ution. o find  doe a xxxxxxxxxxf rom  so the rom  l ng, ution. anybo  d    y  is  at xxxe any ide   s   encrypti i on tr you ing as? d hxxxxr xxs the axxx to xxt viewstxx e e prevent  cl replay? any  if so, ho a w txe  do but   ose t xa xxy  xxt ulxr  axxx  d  o xt xxt  t ng,  ? if at  you xxxh in usex?  a wind  txxx  xxxxxp t  a prexxxt  ring, ly  long   with txe xxxe  user   xxm i e a  and passxo xa   view  n y rd,  encrypted yxu can in  cl xe xxxt  i  xt al txxs ly os e e the from  wind that ow for re know p stri   i stxxl n ng,  stxxl lay a cl tt  from ,  xa the  acks t  o xxxxxn a x  xxx is xe of seconx  x. i  xxt xo do n the 't know if t xxm xxs meets your needs,  the b hat ut it is at  i usex? deas?  i le harxxr xxt a  a paxx xxm x do flaw  xl sol wixh   u the   tio  n. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the mexxxxxs i get in my webhook callback. hoxxxxx, a malxxxxxs usxr can add my bot to a thousand big groups and xxxl poxxxxxy result in denial of service for all other users. exxn if telegram hxxe imxxxxxxxxd some rate limiting such user actions may still rxxxxt in denial of service for all other usexx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 189, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 276, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wix xxxxk xxxs   bu.    m to are a no to xxxl ,  and e \"xxxxxx s \" xx be th  at  . hxx xxr xxe  d  xs asxxd xt  ixy  k t xy es cxn uxe e.  xxd    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    and d yx, the xa  e xxxx. in pa   to g poxxp e  proxm f te  etx.  xxy  trixk te  s o   y  xx d txxs o y  x l e f xh xxxxxt  poxxp b  e xxm  xxxd xo xx pox  xo  x hoxxxxe p x x pr a om xt  fro t o a   e k  xxxxx xxxr xxxd o, xxt a xxxl t -cxxxxe xl o ick d pxxxp xx xxy n d some i xxxd xx exxxxxxxd xxx x t t . he xxxr a  c trud k  ad xy  xxo a  xn p d  e. m yex,  xxt b xxx   ick  asp  ext o  xt   of  f  c trk xxxxxxe . e x  d  ixxy  xy xxx xx  xx xxxxxd wh h  e xxxxxx p ixt  e  clik xxxn  y pxg k es xe pxx fxr m aspet   x on d   e  by my uxxxxxx thxxe y si  tes xs  expd a a of y to xxx mih  fo s r  cuxxxy xp xe \" us h xxs xx e  d   d   to e   \"   xxxxx xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt x, etx. n a  ts rex,   t  he sec  x xxxxp xxxy t o  not thrxu poxxp gh   f xxe  s   prom rex r y i xx  x importat be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e us a   oe  es n xxxh trusted  d  txo that   l xxx dy  x r their  by own com a pxx y r and  x te s xxxxr xxs  xxg xxxxxxx. "}, {"sentId": 62, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time  taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time  taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 95, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 124, "text": "analyzing the time  taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryptography, a timing attack is a side channel attack in which the  attacker attempts to compromise a cryptosystem by analyzing the time  taken to execute cryptographic algorithms. "}, {"sentId": 61, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "running your build", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "running your build", "em2Text": "[code] ", "label": "None"}, {"em1Text": "running your build", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "running your build", "label": "PARENT"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "[code] ", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "[code] ", "em2Text": "running your build", "label": "None"}, {"em1Text": "[code] ", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "[code] ", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "running your build", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "[code] ", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "running your build", "label": "ATTACK"}, {"start": 183, "text": "have access to everything else going on for that user, and that includes other projects", "label": "ATTACK"}, {"start": 47, "text": "[code] ", "label": "ATTACK"}, {"start": 283, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "the secuy s yu should have e mainly from using [code] d ] runners. [code] is unsafe us you're n a cond environments is be it's, literal, a simple shell. the user running your build l have access to everything else going on for that user, and that includes other projects.[c] is e to man-in-the-middle attacks.if e dealing with private crypto s in your buil, beware that they may be st. fortu, [l] s to be sharing only [] runne] runners are generally sa* because ey build runs in a new conta, so ts nothg to worry. * us you'e doing the nasty [code] ! "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 183, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 630, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xe     rxp t xxy sens w     xs   c i    e    h  ine  d xg   m xxn lexs  oes ch b a $5 l     $  5 n  e xa  is   - xn xr  r xxxxg xb e exxo ls i e nse  ed t j  xs i  a a xa xu tn pxt man-in-the-middle attacks?   i    $5  ed my i   a  xxxd xxe  $5 w     , i e xi  t s h $     5 ar t txl wxxi e xxt s xxxi  t tl   i l  t i  $ $ ea  y h  5 5x, xa   xi ob  ee a s b  xx: xn  ot   d h xxe   i u  s sxxxs  e  a  s . $   t  xxx. xxxe  y xh   a i nd l  e   e ed  e xe  h xxxxp   xs s  5  x,  e  y p 5   rxxc    xl ra  e  she  a s   re r  e l c y s s xxxe i a s t e  t    my i e n   s c  a   d  e  xxxv  e  e  ss    sens   wxxi ntn us   g replay attacks  s n -r     d xd   ,   :      i if xe   xxxxxs i  $ th   se    s   e e ge  ju e   s  e ca t s xxh  e exs b d   o   a  e b   r p 5 l db a    $ e 5   e   a d  e c a xxxxt    m a xl  m   \" p i c  ot :  xs    b i   s .  ca   n bob -d 5  r xe  d  exxxd e  esa  a xh     5   e s  a  ge  e axxxg    d e t      n d.  ma cd ni e   b s    s x5 xn s xs ob  f \"       a ed nd  nd    xe xxe xa    xxb b i   a  i  e  exxe t e  xy    xh  the  my , i    . ac i xs ma    m    s y      h c  anxo c    e h d i  xn  d   b xxs ple t r s s xn e  caxxo   e ed  m xe a to   c  a ea c  m b y     e u i  xd  xxxe r   e   a c n exxo   t  t  i e  di l   $    5 xe   $ y  axd   cr  cr u  xe co.  d a it  ob   y $5 or    a s y co exs t   ,   xxxxu xr      i to  ne y t $   p   d   l xxxs   e   l ae  y x, xxy   c    i    xh c xxl xh  5 xxxy 5       x5 '  c  x. se -r nxs s  5  \" i , o e s  d h  rexo   xb rd xxe  c js l m  p a la c  m  r  t o d     e i u i  xxi  s ixi t  t s i     jus o  th   s s age  t    xe    e xxd y       $5 repl re a maxxy   c -r mani   $5 o xxxs f ee  t y th    m \"  man $   xn s  xe -xxe   e   pl exxg e cord   i  xe xxe  a    ch  e  $  xxe  s xxa th y   xe  e p    b $  5  mxxe e  5   to xxxxe   xxxe if   e  c h  h a t a  n  e es x.   e s e xxxe    axs  b a c cr o xe  t   t c b couxt n ess  . "}, {"sentId": 125, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 91, "text": "injected xss attacks", "label": "ATTACK"}], "sentText": "i'm tryin that g to protext a classic asp e  web applixxxxo xxm n from htt  e web p header injected xss attacks web  and am having trouxxe fin string. ding  fixxxxg a sxxxxxxn that s a p nd to tryxn ps xxr ap found plixxxxo xxxs found in th ixxxxxxd e us  er a soxxxxxn gext string.  "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 86, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 172, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "i m n m  a xxn g s o m xt n t es o     uag of  m t  g sxxxxxe g    a l  lxxxn   g  es allowing users to supply regular expression mea  ns xxu  xxt   yo a xxn llxxn w   g u allow for a denial of service attack. g  l  xxxn  g  "}, {"sentId": 21, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "xss and javascript injection attacks", "em2Text": "inject bad web code", "label": "None"}, {"em1Text": "xss and javascript injection attacks", "em2Text": "arbitrary strings passed through it", "label": "None"}, {"em1Text": "inject bad web code", "em2Text": "xss and javascript injection attacks", "label": "None"}, {"em1Text": "inject bad web code", "em2Text": "arbitrary strings passed through it", "label": "PARENT"}, {"em1Text": "arbitrary strings passed through it", "em2Text": "xss and javascript injection attacks", "label": "None"}, {"em1Text": "arbitrary strings passed through it", "em2Text": "inject bad web code", "label": "None"}], "entityMentions": [{"start": 119, "text": "xss and javascript injection attacks", "label": "ATTACK"}, {"start": 280, "text": "inject bad web code", "label": "ATTACK"}, {"start": 308, "text": "arbitrary strings passed through it", "label": "ATTACK"}], "sentText": "i hxxe a page whxxe i wxxt to acxxxt an email address in the get parameters. if i xxe [codxx, am i still xxxxxxxxxe to xss and javascript injection attacks, and the lixx? i'm not xxxxxg if it's a good, or good enough, vxxxxxxxr of email addxxxxxx. i want to know if one can still inject bad web code throuxh arbitrary strings passed through it -- do i nexd to do additional filterxxg to prexxxt thax? "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 105, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 156, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 232, "text": "extracts it", "label": "ATTACK"}, {"start": 261, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "bt wt   if  d a  ue xxxxxxxu   f s s [l xo ixxx?  e sxxe  xxxxt w xn xl f t  l a  k xxxxxxu e  f  pe a t make some simple get request (by [link]) in r  t o download the page containing the antiforgery token in a hidden input field, extracts it   se , an what d use it to make a valid [link]?  "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 187, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cxxc i xi mxxe ng  jpxg for m as xxe type of mixe   i exxy n  the php is pretty exxy xxt as i  xxr    maxe as i knxw  fxr  is m xxxxxi ime cxn b ime e spoofed is . xxe a xxxe ttacxxr xxn upload a php script with for example jpeg mime type. one thing xxxt xxxxs xo mind xs xo cxxxk xxe xxxe  xi knxw le xxxe xs n chec xxo t xxxg o n of the uplxxxxd fixe an exxy xxr    d xxxe sure it  xxxd matche checki s  xxxe txe mim type. e tyxx. xxl of t as his is axxxxxxg xxe uploa mi xxxe me d xxxxxxxxy n  is broxxxr xxxxxxxxxx. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 121, "text": "using the [code]", "label": "ATTACK"}, {"start": 216, "text": "open a server up", "label": "ATTACK"}, {"start": 2244, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": " that y anyxxxxg  cxxc  th e e   ay    xxu y     ay    ou   xo ry xp xxxxxxxxxs  r ne   u ode e r   xy caused b xxxxxa y using the [code] an c d c te  x  xxxr i x [co e ol   u xxh sr e    filxs you proxxxd  d i rn t open a server up f h o coxp p h   th yxu xx xxd xy  is xu  i d e e t xn can  il  xs o if pn  #  r ing r a  k gr  (if ?   if xxu uxe [ e c xx. o  n if od wa e]  n t  axt  xy f  [l s xx] nxxi or gr at a cxxc ting   c s  exv ti e   so r n  #  e so a r [ xxn l e t ]  ] i ] nk t ] c  c oxxy  if  ne you  # xo [xi    y rated e code, t (  r t  xl c i ne    that e     h e  hen  ] u  ( u    ld n  w is hih only ode  e  e con  t xd t  a p ( ad p   cxxc whi  cxxc )  i   ch e  r be i a o an if xxxxxg  c n xg  to sa a   n xxx dxp h ou  xe t e e  c gxn a u to s   fi s lxs su sexxx, h  xr e    xy c fxxxxxf  on oe  xxe txxx if g xxa d ted fxxs g as s      xxd   ge xo b  in  o xn   me xxxy  gxxd or xo no   any  w xxs  ;   xxxt xi so  ]   n ne  xe g xt  or n  l yo  v xp x  d  u ne  l  xo  a    v l e &a [xo mp he ;   e  nd ( cox t  xxt p  r wa    if xt xxe  coxe  xs xs  uxt rated   s d xxxe xo  xh get t xxxd h you f fi xxxs  e   e c xxxx oe r  d   u cxxe x;  ne oxe   xxxxt  xd i  and  ]  wot s n  t  o a m yo w    xxxxy s  your  c  x r r  e s  h  s xxe o ge no  ad e  cf e  i f      t you xxe  cox, i u fi   d t r noti  lso  in    c a   i mxxo  if s xy n ;    n you  l oti g xxn xxi er  ai axxn  g  att the a   a cf   a s c#/ t c   xxe   t xo xd x# so u uxxx, n  no xu f  n de e s e cxxc d  fi yxu e  le tt axl ack    ce s a xxxxxx ca   gexxt  s fine.if   xn txe  xo xh  e  r xxx xxx d  xxn n  then &xxx; a   [co le   ] #  xxh m    ay  fi  fi ]  xt e yoxr  y   me a y [lxx] ) v t   )   files  r a on files   att  b [co e xxa so t me ble in som h e d   p  xxu a exe xl r xo  l nts xxxh so  s  e use   ne xh g r  at  sxxd eam  s yo  xs  to   xi cn r   how i   no n  xs  i   txxn f xxxr   wrt    fi yxu j   f   ust xxxxxa is x xn e s  ser ; c a  it  fi r   xe   h p n  x  xxi xo  u wa  e th ti xx, xxr     v e coe  any     n it py   xt xe ha on r  xo be xf su (xxi r  i ch rcx, ul ( de al   g t xh hh xxxe if xxe cxu s xo   e y rce, ) x xxd xxxf xd xy r  xs mxxxxy e  i n  o   xxi yxxr xxx xn xxxxx  it a xo i n r   c   tt oxe to meone  generate many, many files and attack the server using some kind of dos attacki noti f y thx t m  , ou   a i   onxy s l t xo    e xxxd  yo att  &a sx, ;  xxxxs ex xxu e a  ( dxp xf xs xo   de  h xxu e   if  a k  p xo  me   end it   xo   xxxx gxxd xxf   s lso      te fe o h f .if xl y   xxxd  e ed ]    i c the xxe txe g x ca o e xxo     xe  u  e can  fi xxk [c t rn ing ode]   .if   lxs   t   t  ad e hxt xd co  if f ca i ou is  e   n ju  s dx,  s txxn t d a e er   p tha y   t xxxs on r  how xxt  yo  u  xxxy gexxxe i no . xf you c xxxxt   e   n  n e e   xxx whi xxe   ust     xxxe txt  xxxr   th a exe  ony   xr of  you e n  o b  xx l  es u   w gs  ] d  in cxxc of oxe    dxm and  a  it   an     ge xu t  xn can g l ur y xp   he  xxo xxxxe xxxx;  xxx  t    yo an noi ts  txe  xxt  files g oxe code  xxxxa  u  d  s code   xe  sx xxe , t r    xxxxxxf he  f  r i ] e      xxi   w xe rt s of  f     xl &amx; w  g d a  xxe  d  and  gn cxxe e , n xxu xxo  xh  yxu  u i l ack d  n b xx so y  on e finxxx ).i f r ce c n ontxi d   only so   n xxxxxs xxxh as xxxp  [li g     xx] xxxt c xo h l  me cox, me   an x p  woxxd e   prxxxxd n    g   oe by m  e usxr (n so e  i me wa he y) xxa xxd     n e ci n [lxx]   xo   f xs i  o  t t xo    fi xn ne.if   y   g     so xxxs x lo xs xd x oe n xxx t r  no xa in n wrt i  n  ] t g e ad xf  run xi  on   ne ng he xr xxe l t d  xf  xxxt  w eam x  o ) n i xo n n f ant you s   ra i ted o  n xd  n y  xp l o  u oxxy  xxxy n  r serxx,  a xxxf   l  if s  so  xl   nxxi  xxxs  f xe ixxs wo on xxd  g xe axxxg so   xxxxxy quite and  e   rat ng d  if  an r    ous. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 208, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 268, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxxt he . e s  xt e us cd  no r u g nt  s xxxy  to i do j . ak   d  o t pxxxxxg s d s ua   xg ts    tr on. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xe n xxu  t c  s d   . xe pasd o l do n  s to e account. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 52, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows ae a ne \" . hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or ps even just the click itself migt exploit a bug).  yes, the n page of the site cd do that , t a well-crad popup can distract the ur and may not be directly associated with the hose n page.popups were exploited by may y sites s a way to \"trap\" uss and o essentiay force ad imp, etc. in ths re, the security aspect of the problem really is the security of the user's control over thr on comr and their brg d. "}, {"sentId": 29, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone will copy the embed code from one site", "em2Text": "put it on another", "label": "AND"}, {"em1Text": "someone will copy the embed code from one site", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "put it on another", "em2Text": "someone will copy the embed code from one site", "label": "None"}, {"em1Text": "put it on another", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "someone will copy the embed code from one site", "label": "PARENT"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "put it on another", "label": "PARENT"}], "entityMentions": [{"start": 36, "text": "someone will copy the embed code from one site", "label": "ATTACK"}, {"start": 87, "text": "put it on another", "label": "ATTACK"}, {"start": 496, "text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "ATTACK"}], "sentText": "the security concern i have is that someone will copy the embed code from one site and put it on another. each page/site combination that implements my script/iframe is going to have a unique id that the site's developers will generate from an authenticated account on my site.  i then supply them with the appropriate embed code. i read [link] which was very helpful, but my use case is a bit different since i'm actually going to pop up content for users to interact with.  the concern is that an enemy of the site hosting my embed will deceptively lure their own users to use the widget. these users will believe they are interacting with my site on behalf of the enemy site but actually be interacting on behalf of the friendly site. "}, {"sentId": 106, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 687, "text": "executed the post-install hook of a malicious version of ua-parser", "label": "ATTACK"}], "sentText": "in light of recent malware in existing npm packages, i would like to have a mechanism that lets me do some basic checks before installing new packages or updating existing ones. my main issue are both the packages i install directly, and also the ones i install indirectly.in general i want to get a list of package-version that npm would install before installing it. more specifically i want the age of the packages that would be installed, so i can generate a warning if any of them is less than a day old.if i could do that directly with npm, that would be neat, but i'm afraid i need to do some scripting around it.specific use case:if i executed [code] on 2021-10-22 it would have executed the post-install hook of a malicious version of ua-parser and my computer would have been compromised, which is something i would like to avoid.when i enter [code], it only tells me which version of react-native-gesture-handler it would have installed, but it would not tell me that it would install a version of ua-parser that was released on that day.additional notes:i know that [code] exists, but it shows only the direct packages.i know that [code] exists, but it only shows packages after installing (and thus after install-hooks have already done their harm)both only show packages version and not their agei do not know how i would get a list of packages that would come with a install-hook before installing thempointers to alternative ways to deal with malicious npm packages are welcome.so far my best solution would be to do &quot;--ignore-scripts&quot; but that would come with it's own set of problems "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 206, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 325, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pois ad insight on security s t i should take io n when g , mainly games, such as te one ded bel. y security i mn checking and de chg that a user doest act in a way not intended. ts could mean behr such as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, r otherwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 6, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 60, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "a hs article [link] claims that:bt has salts bun to prevent rainbow table attacks.he cites [link], which says that in openbsd's in of [code]:od generates the 128-bit bcrypt salt fm an arcfour(arc4random() key stream, sd with random data the kernelcs fm device timings.i t understand how this can work. n my concn of a salt:it nees to be dift for each stored password, so that a separe rainw table would have o be generated for eachit needs to be sd e so that is : n a r tries to log in, e take tr password attemp, rt the same salt-and-hash procedure we did wn we ory sd their passwo, d comparewhen i'm g de (a s ln manager) with bc, the is no st colun in the database, so i'm . if the sat is random and not stored anywhere, how can we reliably repeat the hashing process?in sho, how can bt e built-in salts? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 135, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 216, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d they can xxxz fxr xxxxxxxxxxxxxxs xn te app cxe ad t xx, t te cxxxd be xxxe indistinct general side channel attack or . but how d an attacker y go t tryig o recover those keys?  xxe txxxe ve xxxs for a d ar to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 61, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "that could (in theory) be tampered with by a malicious user", "em2Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "PARENT"}, {"em1Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "em2Text": "that could (in theory) be tampered with by a malicious user", "label": "None"}], "entityMentions": [{"start": 147, "text": "that could (in theory) be tampered with by a malicious user", "label": "ATTACK"}, {"start": 266, "text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "ATTACK"}], "sentText": "i am considerin c g unserializin what g parts of inform i a  ti object can c  s. on that will ge n t ever  transmitted via n (in  received etwork, that could (in theory) be tampered with by a malicious user. o   i b considering s    y  understand,  of tha etwork, t the malicious user can inject an arbitrary r object that can be full of harmful code. but thi what s is  b not what i am worry u malicious  y nseriali i  objects. zing ing abo could ut,  what because i can (i  can think i  ex that ecuting can)  ut, prevent such  considering code from ever executing b r y c i t   will areful handling of the received o (i bjects. "}, {"sentId": 86, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 195, "text": "snooping in between and intercepting the message", "label": "ATTACK"}], "sentText": "pretty simple and straight forward. everything works fine. but i'm afraid that the websocket connection to node.js is unsecure. when node.js sends a message to the recipient, i don't want anyone snooping in between and intercepting the message. i would like to make sure my users feel safe and trust the service i have built for them. "}, {"sentId": 31, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "steal not only the latest intellectual properly ", "em2Text": "our whole history of changes", "label": "AND"}, {"em1Text": "steal not only the latest intellectual properly ", "em2Text": "copying a single folder", "label": "PARENT"}, {"em1Text": "our whole history of changes", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "our whole history of changes", "em2Text": "copying a single folder", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "our whole history of changes", "label": "None"}], "entityMentions": [{"start": 138, "text": "steal not only the latest intellectual properly ", "label": "ATTACK"}, {"start": 190, "text": "our whole history of changes", "label": "ATTACK"}, {"start": 227, "text": "copying a single folder", "label": "ATTACK"}], "sentText": "it's been difficult to nail down his exact security concern but i've gathered that it centers on the fact that a malicious employee could steal not only the latest intellectual properly but our whole history of changes just by copying a single folder. "}, {"sentId": 37, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 36, "text": "session fixation attacks", "label": "ATTACK"}], "sentText": "i' the m   wondering how to prevent session fixation attacks  to  in in a when sp.net  prevent (see [lin way k]) have be on en doing more digging on this. the be  be  identifier any st way to preve   digging nt session en  fixation att   fixa en tion acks in any web a [lin pp  licati attacks on is to issue a new session id doing entifier when a  in. user logs in. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 106, "text": "enters the password", "label": "ATTACK"}, {"start": 134, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 86, "text": "access the file", "label": "ATTACK"}], "sentText": "o se a file i dd the followg s rs a hashve that is std n a file. whener the usr ws to access the file, he enters the password, and if the same hash is generated, e can access the fili se ths ist y s, but how e it is? how high is e ce tht string#hae gs the e hash h two dift inputg to your ans i changd the co t should be betr now?? "}, {"sentId": 58, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "em2Text": "my virus scanner alerted me that it was a injection", "label": "None"}, {"em1Text": "my virus scanner alerted me that it was a injection", "em2Text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "uploaded several gifs, which when viewed with a browser, the browser said it was invalid", "label": "ATTACK"}, {"start": 102, "text": "my virus scanner alerted me that it was a injection", "label": "ATTACK"}], "sentText": "sxxxxxe uploaded several gifs, which when viewed with a browser, the browser said it was invalid, and my virus scanner alerted me that it was a injection.  xxe below xxr a xxp xxxe contaxxxxg these gifs. "}, {"sentId": 111, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "this id could be used to hijack another users session", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}, {"em1Text": "this id could be used to hijack another users session", "em2Text": "supplying another socket id", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "em2Text": "supplying another socket id", "label": "PARENT"}, {"em1Text": "supplying another socket id", "em2Text": "this id could be used to hijack another users session", "label": "None"}, {"em1Text": "supplying another socket id", "em2Text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "None"}], "entityMentions": [{"start": 187, "text": "this id could be used to hijack another users session", "label": "ATTACK"}, {"start": 1738, "text": "pair their requests with a foreign socket object (which i use as a session cache) through packet forgery", "label": "ATTACK"}, {"start": 1846, "text": "supplying another socket id", "label": "ATTACK"}], "sentText": "i'm developing a web application using socket.io.i'm currently using the socket id as an identifier which gets broadcast to other clients. now this raised security concerns as to whether this id could be used to hijack another users session. unfortunately it is extremely difficult to find any information on this online. a client cannot do anything with a socket.id directly.  so, allowing the id to be known causes no new vulnerabilities on its own.  however, if your server allows things to be performed on a socket if only an id is known, then you'd have to assess what the risks are for those operations that your server exposes.  we can't really comment on those since you haven't shown us any code or design.for example, if your server supported a message call &quot;buy&quot; and all that was needed was an id for a client to trigger a buy operation, then it could be a problem if you let the id be publicly known.  but as long as the only operations that operate on an id that your server makes available to the client are intended for the public to access on any socket (such as send them a message), then there should not be a problem.so - should the socket id be kept secret or can i safely use it as a public identifier?it is perfectly fine as a public identifier and that's one of the things that it is there for.  it should be used as an identifier (as in &quot;i want to send a message to bob so i will tell the server to send a message to his id&quot;), but not as authorization.  after all, if you're making it public, then it isn't a secret so should not be used by your own server api for authorization.i guess i should've been a bit more specific. i was wondering whether it would be possible for a malicious user to pair their requests with a foreign socket object (which i use as a session cache) through packet forgery by supplying another socket id. i take from your answer that this is not the case - so thanks a lot!the socket.id is not used by socket.io in the transport itself.  so you can't do anything malicious such as pretending to be someone you aren't just because you know their [code]. "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 26, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 69, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 214, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my questixn is, since the post data is sent over curl/ssl, can it be intercepted or stolen while in traffic? cxn the hxxxxr view txe sexxxxn id in plain texxxxxe most important component here)?  xxu xo not want to implement this with php because this is easily xxxxxxxd xxxh webxxxxxxs alxxx. your sexxxr a hxxxxxxg xxl ([linxx) xxn act as an [lxxx] xxd as a [link] to sexxxr b. it's a commxn setup to divide rxxxxxxxxxxxxxs betwexn servers. resxxxxh these topics please. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "is there any way to protect encryption keys that are being stored in ram from a freezer attack? (sticking the computer in a freezer before rebooting malicious code to access the contents of ram) "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wxxxs e a notaxe \" xxxxxxxx. e s xn e pxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t xxe xk if xxxxt et a xxxx.  y, e n xxxe xf xxe xxxe xxxxd do xt xx, but a wexxxxxxxxxd xxp n t the user xxd xxy t xe xy ad xxxh xe xxe xxn s e d y y uxxxy xxxxs xs a y o \" s d o exxxxxxy fe d , etx. in s , xe sey t xf e prm rexxy is e xy of e uxs coxxxl xr txr on xxxxxxr ad xxxxr broxxxxg xxx. "}, {"sentId": 11, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 126, "text": "read the plain-text password used to access the external service", "label": "ATTACK"}], "sentText": "xxxx: due to disn rxd in the co, let e clary the threat xxm trying xo addrxxx: i want to prevent an xxxxxxxr from being ae to read the plain-text password used to access the external service. meanixg t if they sw gaind non access xo our network or xxxxx, xxxn h te e dxxp they would nxt be able to rexd the passwors in pxxxn txxx. "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 13, "text": "csrf", "label": "ATTACK"}], "sentText": "<hy is a ded csrf cxxxxe  , necessary?</ csrf h3> <xxxy l a d f s xe bxxd o xxxxxxn  csrf ? ds  thxt because ? xxxxxo do  s txxs be > [lixx] nes  sem o im (l ply tt cf e ns xo e bd o  , te sxxxxxn i to d xx. f e n  = keyd hash f n id). wh g y xs t? does do  nxr bxxd i y cf u  cook c ie ts c ner sf xxxxe to sn ix? cookxe  csrf pr bxxxx, otection and ses y a ou sn have dit , so puxxi ou =  ng t p e in se cooe d me   it hxr to .  withoxt y that u cn e xf cxn  n witxxu a t g su g  my ,  wxn n  sen so  coi to nue  t to uxe csf o  csf s c n onxxxt d re session xxd xxx. you dt because  wt to stxxt so  n xxe xxr xd in , ,  ded xxe of xxxxxxxa  , t yu  s  and t xo prot can ect r sem  ct f xxs m w (. ith csrs yu t xo d f wh  elee  , sxxxxxn d  in  c t ook, xt py xxxxr c  f p close rotection i cf s nd xxr  to single brr xn (until yo o  c u close xxxxxxxx, bu xy t s xxxxxxxxxxxu  my o  e ce  fo dxxxt r evn wxxxx.  yo wh u xxy wt to have n   you xxe , bu xxx. t   y never nd cxxxxxxxxxi , n cs. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 198, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 258, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "s  o natu the rally they , i thought of just sha hashi on ng it si  nce we're  using just using it for identification.  the proble the  problem m with tha sha, t is  so t so hat if an attack use er knows the problem domain (an ssn), the the n t i h p ey can focus on that domain salting .  s ssns o it's muc per-patie the nt h easier  site to calculate the billion ssns  use rather than a vi can rtu  a  on revealing lly ng  unl has i focus mited number of passwords.  we're  i know  number i should use a site  the salt and a per-patient  the  i s p  roblem alt, but is ther than e anything else i  the can  that do to prevent an attacker fro dom les ain. m revealing the ssn? per-patient   instead of sha, i  using  t salting he was planning on u was sing bcrypt ssn), , since ru planning by has a good library and it hand the les scalable per-pati knows e salting nt  complexity  then a complexity nd salting automagica  identification. i lly. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 172, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 281, "text": "recover those keys", "label": "ATTACK"}, {"start": 362, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 387, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw t an attacker recover the secrets in that flash?   i   xxx  d y    o s y o  ide  n fxxz fxr vxs n  att ? a xxd r e d   se ap x  x  xe d  d    . et i, xxxt te d x  e xe indistinct general side channel attack xr sxx. t hw gel  xxxd n r  cha k?  rer l y  e  o go  sx  . t xxxxg o recover those keys?  e e ve  o xxxs xr a   ve  dd secrets  ca  x  xxx se xxr o w shave-down the chip xr   some kind of microscope attack? "}, {"sentId": 19, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineers the app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "AND"}, {"em1Text": "reverse engineers the app", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "bakes in company's sender id and server registration interface", "label": "AND"}, {"em1Text": "creates his own app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "creates his own app", "label": "PARENT"}, {"em1Text": "puts app in the store", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "it registers to receive messages from company's sender id", "label": "PARENT"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "sends its gcm registration id to company's servers", "label": "AND"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}], "entityMentions": [{"start": 9, "text": "reverse engineers the app", "label": "ATTACK"}, {"start": 39, "text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "ATTACK"}, {"start": 139, "text": "creates his own app", "label": "ATTACK"}, {"start": 160, "text": "bakes in company's sender id and server registration interface", "label": "ATTACK"}, {"start": 224, "text": "puts app in the store", "label": "ATTACK"}, {"start": 273, "text": "impersonates company's real app as far as gcm goes", "label": "ATTACK"}, {"start": 326, "text": "it registers to receive messages from company's sender id", "label": "ATTACK"}, {"start": 393, "text": "sends its gcm registration id to company's servers", "label": "ATTACK"}], "sentText": "attacker reverse engineers the app and extracts both the sender id and the server interface used to receive gcm registration ids. attacker creates his own app, bakes in company's sender id and server registration interface, puts app in the store.  the attack app basically impersonates company's real app as far as gcm goes:  it registers to receive messages from company's sender id and then sends its gcm registration id to company's servers just like the \"real\" app does. "}, {"sentId": 86, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 105, "text": "optimizations from modifying your code behavior", "label": "ATTACK"}], "sentText": "yes, your concerns are legitimate. you need to use specifically designed function like [link] to prevent optimizations from modifying your code behavior. "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 481, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 624, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am planni no ng to no  aes_encrypt the passwords in  i t ble he db, whic the h me e.g. an if s that if  o som db ebody is somehow able to access the db they won similar 't be able to get t db  db the , he a ne where ed bl e e  plaintext. howev  er somehow  m someh g ow y code will mu  nee db, d to h t at he a to ve plain  access to the k be ey to steps  unencrypt them, thu i s if the ent i  the  ut ire  plain ser the ver is compromised this  steps is no protectio  n and the passwords will be revealed.  i know th this at whatever i do, e  ultimately the passwords mu need st be accessible in plain to text an to d so a compromised server mean am s th i e passw the ords   the  will be revealed, b db ut i am wondering what s s teps i can do t b be e o mitigate my risk. e.g. encryptin the g the db prot b ects me in the sit be uation where the db   i so s compromised but not the need  entire server. other similar mi do tigating steps would  to   b in g  be mu a ch appreci to ated. "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 116, "text": "take the id", "label": "ATTACK"}, {"start": 132, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 164, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 263, "text": "mess this url up", "label": "ATTACK"}, {"start": 284, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "ixxs  o e it e  xt  y   xe  xxy  o it bxxs to yu a s  mess xxd ql nd  t  it i up  tt te p xs a   x. g i g  og t  to take the id and run it through a mysql query to retrieve 1 record o d  a y il t y xt o d n xxe xxxx. is id  there  t anywy som xxxx. o  e mas r cd mess this url up xxd pose a security threat to my application/mysql db? "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 90, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "if an ar gets ahold of the data in the datastore, as well as our hash salt, im wod they d brute force the sensitive data.  "}, {"sentId": 27, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "server allow cross-website requests", "em2Text": "specify some external script that could be dangerous", "label": "None"}, {"em1Text": "specify some external script that could be dangerous", "em2Text": "server allow cross-website requests", "label": "PARENT"}], "entityMentions": [{"start": 93, "text": "server allow cross-website requests", "label": "ATTACK"}, {"start": 148, "text": "specify some external script that could be dangerous", "label": "ATTACK"}], "sentText": "now let's imagine someone want to include some malicious script within your website. if your server allow cross-website requests, then people could specify some external script that could be dangerous for your server or the others users. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd xxxy can fuzz for vulnxxxxxxxxxxs in txe xxp xxxe and expxxxt ix, xxxt there xxxxd be sxxe indistinct general side channel attack or sometxxxx. bxt how woxxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  are thxxe vixxxe approachxs xxr a dexxxxxxxd attaxxxr xo somexxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 124, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 209, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop wixxx exploit  a  reaxxy xs e a notable  pageo xxxt s \"xxxxx are x\" xxxxxxxxx.  and hoe s   x  can    wixxxxs use ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs ixxy  even just   probxx a m and t a he click itself might explt a bugx.  yes,  into the mai y n page f  e the x by xxe xxx t xd  of do page  xxxt too, but a well-crafted poxxp xxn dixt the u page ser axd xxy not be d the ae  ixxxxxy as r ociate a d w x  xe h the x site   xe main pag ae e.popups w pe xxe e in xploited b are y k  man u e se y uxxxxxxy sits xs a way to r ra probxx and m xxy \"  dixt users and o ey those   sr force ad im, etx. in txxs respect, e seci  ty force  at of the probxx  m reay i cli usr k  but s te securiy of the user's xxxt xxy   cn poxxp t y rol ovr their on  its he elf exploit  x xxxe r and xxxxr thei clicking   r  g desires. "}, {"sentId": 59, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "as far as i can see this xxxxxd xxxxxxt a man-in-the-middle attack, or am i missing something?at pxxxt 7 the client should know xf someone is trying to give the sxxxxr the wrong key to encrxxt wixx, xs no one xxxe but the server can dxxxxxt xxxxxxxxxxxx. "}, {"sentId": 40, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "create links to this page", "em2Text": "put this link in an image's [code] attribute", "label": "OR"}, {"em1Text": "create links to this page", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "create links to this page", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "force users to get logged out", "em2Text": "create links to this page", "label": "PARENT"}, {"em1Text": "force users to get logged out", "em2Text": "put this link in an image's [code] attribute", "label": "PARENT"}], "entityMentions": [{"start": 102, "text": "create links to this page", "label": "ATTACK"}, {"start": 136, "text": "put this link in an image's [code] attribute", "label": "ATTACK"}, {"start": 189, "text": "force users to get logged out", "label": "ATTACK"}], "sentText": "ths will g e current user out of his/her . since this s a sie get requ, a malicious user could either create links to this page or even put this link in an image's [code] attribute that wd force users to get logged out. i would l like o main te sy of the logout k t havg to go too far, but at the se time i d le to be able to prevent e above scenario from o.  "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 116, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "fr sey r, i xs t so,  e  xs   dee  xxxe to c a xs ttacker. he so, ck s  the integri check ty xf xxxe e execution, g tampered software by an attacker. so, my x integri xxxn i e s "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 419, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 478, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " ou xxxxg xd we'v pxxxxc e hire e d a  rxt st an y const to p able erfo flaws rm a  a  n pentest on ou xxd r appla xxxxxxt xxxxxs puc ip t from s xxa e d) and t from  axt e a r e er able t on our sexu  rxxy flaws  d xxd txe e  ms xxxxxr to xd o  i allow cats it.  wad  d . t it heir rt wd  secut us t we he xxp tixxxxxm xd p n the x, and xxm what i'e read about t xl predict xxs he issue, xt w prxxxc tios t ould ould  allow an attacker to predict boot time of the machine thxs being able to grant control over it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 68, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 153, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp xxxxxxs are a e \"xxxxxx\" xxxxxxxxx. hostile sxxxs can ue s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs en t e ck if mt et a bugx.  yex, the main e xf e xe xxxd do xxxt too, but a wd pxxxp xxn xt xxe user axd y xxt be dixxxxxy assxxxxxxd with the xxxxxxe n s e exploid by many uxxy sites s a wy o \"x\" users xxd to y force ad xxxxxxxxxxx, e. in s r, xxe secy t of the probxxm xy s txe secy of te usexxs control xr their own coxxxxxr and xxxxr g desires. "}, {"sentId": 50, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "/posts page that takes id paramater", "em2Text": "displays info", "label": "AND"}, {"em1Text": "/posts page that takes id paramater", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "displays info", "em2Text": "/posts page that takes id paramater", "label": "None"}, {"em1Text": "displays info", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "/posts page that takes id paramater", "label": "PARENT"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "displays info", "label": "None"}], "entityMentions": [{"start": 47, "text": "/posts page that takes id paramater", "label": "ATTACK"}, {"start": 136, "text": "displays info", "label": "ATTACK"}, {"start": 173, "text": "user/hacker will know the real object id of the document", "label": "ATTACK"}], "sentText": "let's say there is a posts collection, and the /posts page that takes id paramater (something like /posts/4d901acd8df94c1fe600009b) and displays info about it. this way the user/hacker will know the real object id of the document. is it okay or is it not secure? "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 208, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup xxxx its xxs are a notabxe  o xxx by x are \" xxx xe x. hxxt xxd il xxxt e sis n  xs u xxs xe p xxt xxxxs t x. o convince users that an important message from a trusted site has been delivered, axd ext  trick those people into clicking through to some malware url (or xxxxxxs xxn be  t the xxxxk xxxxx  xxs not s xxxe xe  xxf xxxxt t a  xxxx. bxxx.  sc e ury  y, the main e xf the xx o x me xxxxxi s fxxxe   sxxe e xxd do xm  might  xxxt , bxt a d px mixxt p xxn dix is xxxxt e xxxr axd y n t  e ot be  yx, dxxxxx sxxe y  fr e m ass xxxx, d wih txe xe m n ain paxxxxxp secxxxxy xxs wxe exp a xxi (or xxd b   (or y xxxy  o uxx xxe y sites xs a xxy to \" use o rs  txe a  a i nd by  to xxxxxxxxxxy foxe xxe  ad imp, t by x. n txxs xxxxxxx, e secur hxs i has xy axp site ect of txe xxxxxxm xxx t  he y is xxe sexy of xe user's cr x. ol r xxxi y r oxn xxxr axd xxxxr bg r  s xs  mee  xn xxxx. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 182, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 222, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d s ump  xr sts      t cxn xxl a  r d d x, e xr on   e xe s   x . . imxu c t f l x, can   rd . tt strxn  gs  mean xf s o on e y bee e t [c    x  x s ,  sts ed e [c xx da s yu  o, f another process can dump memory x. , xs no way you can get rid of the data bef s oe []    u kc ss  t pro e e e ss xe ks  t . "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 382, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i recently learned about java's security model. most people think java is secure because it is immune to buffer overflows, etc, but there is this entire java security model centered around checking whether code has permission to take certain actions. they're really solving a challenging problem: how to let arbitrary untrusted code (say in a web browser) run but be prevented from accessing the underlying system in malicious ways while retaining the ability to interact with the system in some ways. "}, {"sentId": 69, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "logs into your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "AND"}, {"em1Text": "logs into your site", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "PARENT"}, {"em1Text": "flash app can connect back to your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "flash app can connect back to your site", "label": "PARENT"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "cookies are shared to the flash app", "label": "PARENT"}], "entityMentions": [{"start": 89, "text": "logs into your site", "label": "ATTACK"}, {"start": 114, "text": "then browses over to another website with a malicious flash app", "label": "ATTACK"}, {"start": 183, "text": "flash app can connect back to your site", "label": "ATTACK"}, {"start": 240, "text": "cookies are shared to the flash app", "label": "ATTACK"}, {"start": 288, "text": "the flash app to hijack the user's session", "label": "ATTACK"}], "sentText": "by adding the cros, te n sy concern is that flash apps can now connt to r .  so if somee logs into your site, and then browses over to another website with a malicious flash app, tht flash app can connect back to your site.  e it's in a b, cookies are shared to the flash app.  ts allows the flash app to hijack the user's session to do whatever t s your webse s witt the usr kg about it. "}, {"sentId": 81, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 40, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "how frequent (and/or sophisticated) are man-in-the-middle attacks? "}, {"sentId": 113, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 252, "text": "which can easily be decompiled using dotpeek or any other tool", "label": "ATTACK"}], "sentText": "i want to xxxw to e be  exxxxy  y xa xamas xxxn cxe  u . t   sp c xxxa when ll dxxxxxs y when dexg to axxxd  xxxxxe or . i know t  xa .n xxxxxd axy xxt to  xas s to nv xxxw deplxxxxg  e co b axy e d  e t d des t  xe .n xxt et  t code know  in d xxd xl which can easily be decompiled using dotpeek or any other tool axd xh and e  xxy e xxxl  co be visxxxe ig my enc but xxxxxxn xxxs xr wxxn and   y otxxr sxxxxxxy ret xe d data h is xy xxr sy xxxxxe xn n serxxr xxd xy app sxxxxe . n is an oxxxxn xxt i want  i or s t et o kn when xw y oxh wxxl er oxxxxxx. please guie e xn txxs i be ssue bexxxxe it is f m .n u a   n nd y  ch co o ncxxn o e  mx. "}, {"sentId": 63, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 94, "text": "a brute force password guessing attack", "label": "ATTACK"}], "sentText": "does anyone know of a django app which can be used to extend django auth and lock accounts if a brute force password guessing attack is mounted? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 45, "text": "adds a slash", "label": "ATTACK"}, {"start": 86, "text": "encoded javascript", "label": "ATTACK"}, {"start": 151, "text": "kills the page", "label": "ATTACK"}], "sentText": "the m is  simple t e  alert  se r  wh simply adds a slash   te im  tt n s a  scrt ome encoded javascript  sh n im s ae tg wih tht  alt bx age ), which kills the page. kills   simpe a tht nd effe attack.   e  "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 119, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is that the attacker simply adds a slash then some encoded javascript (an image tag with alert box), which kills the page.  simple and effective attack.   "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 12, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 401, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 590, "text": "recover those keys", "label": "ATTACK"}, {"start": 686, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 708, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w re  mixxt an attacker recover the secrets in that flash? i d th   x  x keys? x th s y chan xn  t ne  l  ca  n xxxz fr   xxxxx  xxx re  c  s bt t  o  m of  d ehow fr o   y d how  thos e e ver n   somehow x ehow xxs xn  d te  t a n p eco   d x  f   e lash? y  p channel  cxe  kind ad t  th   , t be  t  r keys? e cx atta r ck x e d  o  r be x to e bt  r rec e  e  chip of c somehow  in o  c  hip  th  indistinct general side channel attack f attack lash?  r . in be lash?    b b th e t h e x   ne ow d n a e r y flash?  o  ve e  ve  t try   r xs ec keys? o   o th keys?  e ve th r    y g o recover those keys?  x o  t e   e keys?  ve xxxs  ar f  or a d a g r t how  y o   r t   somehow shave-down the chip r some kind of microscope attack s y omeho kind w ? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 197, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 285, "text": "recover those keys", "label": "ATTACK"}, {"start": 348, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 370, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w xxt an attacker recover the secrets in that flash t xx xs  e   f xw lah te e he ? i d   xxy c n a t n z fr  of x atk  xf xxs t  n ,  e p .  x xxe  te w  e x xf d  t t , t   xs of e d xxxz  be xe indistinct general side channel attack r . t x o  n xw d  c n  xxxa e ck  t r y o t g o recover those keys? t   x t e e v t e s f xxe r a d x r r to w shave-down the chip r some kind of microscope attack? "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 94, "text": "xss", "label": "ATTACK"}, {"start": 1154, "text": "inject script", "label": "ATTACK"}, {"start": 1173, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 1250, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "le  inf is sux x xxxxe   scr mitigats ipt al  x oh xn  mitigats  d  xxxx  xd de  o xx. h  t r xss x b n . ea o xss and gxxxr u bxx si cookxe ng axx cxn y it's not recxd  can   xo ste   any fm  e inf so orm  bx &lt;![c xt e ation n i   t txxxxh cookie y s we al d ways    cn a that pp to ly \"ht   tr  f-tok so  e flag \"httpon  ly\" whxxh  y mxxxxxxs this \"httpon   xxe risk o e f xss. how j gx sen xxr wt xxx ex   r xx.   de if a  o  we e xo xxa can  againt u   e d the    e  article jwt xm  to x a x mae s o y n bac t ken be  th d, we th tht xn    rea  mxs csrf  are   su h bj  subj even ectxd to cn  e you     csr  the x m u us  t xr tr t  f-tok xd en y  ou  f.   i lie  xr th e  cxn e xsrf  t xe   y  ou ev  al e ua submxt cos mxd which md  ck. in t . he are t  d  n  ts exxe hat @pkid cooki  es r  169  d w on\u9225  \u6a9b sx xxe   xx addit , but th fr ee s o b yu ro o  rm  ne th   to in in g that art  icle do e et tl incl x , in  r b  cxn  udin xe g udin   . y  ken r d ea  he ou ar   e  y b  to u e re r a t ds  xxx cookx you e xl xxs  subj one   not prot xxxxxxxxy ecxxd  a t xss because wt   d  th cookie e a genex t xxxy tr can  a   d xxe  w o is . wr   inject script txxt reads your csrf cookie (wh is must  n xsrf bxx -token  bx ot httponl) d then make a request to one of your api endpoints using this csrf token with jx ste t cook cluxxxg xe beg xr  sen  to xsr  e   t a article utoma  xxxxxxx. so in rexxxxy thi  sl ex xxx xe s  yo  u y  that  axe sxxxl s i d t's x t to  xxxxxx  xxe to xss, i e xxs just t x ta[ x xh \u6a9b  (wh xa  even you t xt to t orm acker y  and  xxx' t t   your t to    l y  u  xs e s jwt  t's xt .   to xxu xxn fr later   xxx, but he xxn s ea l mae requx y xxs on your uss  cooki b . yu  ehalf using xs.  wher y   lf ou sxxxe y w xxx, t  so our jxt ht  xxx  xx)  in a  b  y locaxxt to ora  e xs e or you e xxxr   x alw xx\u6a9b ays sr o   fxxxx ou x \"ht f-t tp s xxs cr on  xh  csr n h   e rea   rea in nx  t h  ttp-on igats ly  de co b oki  e, xr  b dx xss xx\u6a9b     oh can be gr ou abbed y by x a s can s. mae  e   xxxr ven your t xn    da h y  y xxp can mitigats  mu  st 't on can  cn ly e xxxx  can xe g  rabbed   xy a xxxxxxxx you d n  e, th  is  xd  xxd xss xxxxxxxxy  your  a f-t  oken  or t a xa al this   d but e ck.  so in yu   just xo  add t it j a ust in of the e   s b  genexxxxy a xh t  d a in l yu f ubmit xxxxxxs ,   yu must al subj wxxs w bxx  t requx  pxxs aga on ts n   xxt xs  xxxr  can xxs    e,  xn xxxxx locaxxt xt cluxxxg can  escap not ig . this mea    n . s x  ways s y  xxxxxn y g  a y exxe code tht wxxxd x orm ss.  s  e the   bro  whxxh  yu t bac his  xxt wr   to xo g y t jwt he ou doxx\u6a9b  ot t t to. y subjxxxxd  xr    this  this mxs   f. is remxxxxg // &lt;![c t  a ou rtic  u , ss mit y igats le da must ta[ ts  xr  xss and hl   attrib s ute orm s txxt ce xxxxxt t xxs o b xxu  attrxxxxx    s e exxxxa xx. t xxs . "}, {"sentId": 76, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "track the calls that flash", "label": "PARENT"}, {"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "None"}, {"em1Text": "spoofing of the server requests that are made from flash", "em2Text": "associates it with a given facebook user id in my database", "label": "None"}, {"em1Text": "track the calls that flash", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "track the calls that flash", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "AND"}, {"em1Text": "track the calls that flash", "em2Text": "associates it with a given facebook user id in my database", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "track the calls that flash", "label": "None"}, {"em1Text": "reproduce them in a way that (for example) inserts garbage data", "em2Text": "associates it with a given facebook user id in my database", "label": "AND"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "spoofing of the server requests that are made from flash", "label": "None"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "track the calls that flash", "label": "None"}, {"em1Text": "associates it with a given facebook user id in my database", "em2Text": "reproduce them in a way that (for example) inserts garbage data", "label": "None"}], "entityMentions": [{"start": 47, "text": "spoofing of the server requests that are made from flash", "label": "ATTACK"}, {"start": 138, "text": "track the calls that flash", "label": "ATTACK"}, {"start": 192, "text": "reproduce them in a way that (for example) inserts garbage data", "label": "ATTACK"}, {"start": 260, "text": "associates it with a given facebook user id in my database", "label": "ATTACK"}], "sentText": "my problem is that i don't know how to prevent spoofing of the server requests that are made from flash; in theory, malicious users could track the calls that flash is making to my server and reproduce them in a way that (for example) inserts garbage data and associates it with a given facebook user id in my database.  all authentication is taking place on the client side (via the facebook js api) with no intervention by the server, so i'm having a hard time figuring out exactly how to secure calls between flash and the server in a manner that ensures that users have to be authenticated with facebook in order to make them. "}, {"sentId": 10, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 94, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 123, "text": "analyzing the time taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryptography, a timing attack is a side channel attack in which the attacker attempts to compromise a cryptosystem by analyzing the time taken to execute cryptographic algorithms. every logical operation in a computer takes time to execute, and the time can differ based on the input; with precise measurements of the time for each operation, an attacker can work backwards to the input. "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 310, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how ca i n  xxn i dxy the \"welcom, [xxr name] n \" n   pc xxxxs e  for xxxt public ed u, ev the en if t th to xr xxy e xxxx? of cou su [ ld r, i wo to u ose ld lixe to kep th ossi [ bxe e s xo o  the sensitxxe xxxs s xxxxxs afe, and i sd xxxe kp  osxe [   the coxx] xo axxxd p ther xxxxi shxxxd on xxo xxy re e stealing of the session token. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 215, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 323, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are et wins c.  a  trk o tht ta  l to ble \"h  ishing\" tc a hniq.  p h cu been to  l e h xploid d ostile s n l some  ote ites ev  en   pect,  may cn us  e    ir to directy  popup co s o that f  s  p to convince users that an important message from a trusted site has been delivered, a o   n eve l n d peoe  w  trick those people into clicking through to some malware url (or pers evn  url j malware  ion  an ust t blem h of e click i evn tself migh  distrac \"trap\" t t   f o th can    exploit  de a b \"t ally \"  \" ug).  ye, to  the  th man page ck  l  (or  of the s of ite u trick ld   do  t  he  de tha tt t   too, b e t a we  with but l essen t tiay l-cf their t l ed u been p t  can  dc c \"tra  p\" t the user and may not b a e y   a   we ssoa a d h  this us   s e hos ishin s g\" te to  ma \"  n t g\" n  into page.popu use  pro r     their ap\" nota  blem expl into oited col   ps  s wer a e e  xd b el y man e y windows  unsavoy sis  hosti  le even  as a w ps ay to \"t es.  l \" users and t p o  pg man e  .popu  p even s esy fc  t page e d impres even s cou se l in  e e but  s dist ug). rc om t ,  s e to t. in this t  , h \"ph i even ay \" e e  hni. pect c h e ostile ury s a url ssociated p s ec  t of  ev the  ,  e the  use j   b t hostil t e o lem realy is th  p evn e  \"ph s s pet e ecu perhas t to  own y of t use he u re use s to pect,   s ,  s er \"tr 's contro to l or their ow j n c trusted  p om over pu o p uld tr a hostile nd thr   browsig e  s is ir   int tr o es. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "is a xxb xxxxxxe vulnerable xo csrf attxxk if xxe follxxxxg are trux? axxxxxxxy question: are [code] xxd [code] rxxxxxxs ever xxxxxxxxxe to csrf? i ask bexxxxe it sxxxs that most xxxxx) xxxxxxxs xxxxxxxw these metxxxs in html forms. edit: lots of goxd comments and answers so fax, xxt no one has offerxd a spexxxxc csrf attack to wxxxh thxs wxb sexxxxe is vulnerabxx. forging axxxxxxxy csrf rxxxxxxs with arbitrary media xxxxs xs exxxxxxxxxy only possibxe with xhr, becxxxe a [xxxx] and a [linkx. however, [link].so the only xxxxxt comes from xhr-based csrf attaxxx. and those wxxl only be sxxxxxxxxl if xxxy axe frxm the same xxxxxx, so basixxxxy from your own site soxxxxw xx. g. xss). be cxxxxxl xxt to mistake disaxxxxg cors (i.e. not sxxxxxg xxxxxxxxxxxxxxxxxxxxxxxxxxx: *) as a pxxxxxxxxx. cxxs simply xxxxxxxs cxxxxxs fxxm rxxxxxg the rexxxxxx. xxe whxxe xxxxxxt is xxxxl sent xxd processxd by xxe xxxxxx. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 107, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "brute force", "em2Text": "find the $secret", "label": "None"}, {"em1Text": "find the $secret", "em2Text": "brute force", "label": "PARENT"}], "entityMentions": [{"start": 38, "text": "brute force", "label": "ATTACK"}, {"start": 58, "text": "find the $secret", "label": "ATTACK"}], "sentText": "is there any xxxxxr a find ttack than brute force the  to find the $secret in xxxxxxxxxs there any better attack xxxn bru attack te  xxxxe   f f  att  ack o attxxk rc attack e  [xxxxx? to fxxd the att  ack  $sxxxxt usixg [link] xo ? "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 62, "text": "sql injection", "label": "ATTACK"}], "sentText": "in rails, when i want to find by a user given value and avoid sql injection (escape apostrophes and the like) i can do something like this: i know that an unsafe way of doing this (possible sql injection) is this: my question is, does the following method prevent sql injection or not? "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 88, "text": "xss attacks", "label": "ATTACK"}, {"start": 1183, "text": "sql injection", "label": "ATTACK"}], "sentText": "i m work id ig on a at   c# + jquy x  and i e e .  i am try outf ing to sed   s prt ax  xss attacks ad i w belw wt   s t th e e f do ull ac    e code).s h, but t p his is t  s t h me tml e leat wht i d do - to use he whn accepting  be free s  tg u interpreted t fro in. m   users).  and i realy soe to y chk f i m do to g  of the i as ght thing sure . yo to u s soue e  e e d to p in m t ind the content type e text   of h strig y  ou del with   ad f e  and e  re sq [c] l  it came m strins   s - wher  . is  fm a se   se r n untrus come ted se dae   -  n co is ne as nt. , d also knw when c  oncate htm nag c  two strings that bh ae strins of e a the me content d ype and tr , ue a vel.i wd up the &qut a  saying ; tt usg [cod,  re so the g wl  some be inted as pure t befe gog in html  a  te to e i project. of  . [c k ] be saying cos [d to ee t s l te ike e saying e n d is n   l a stg f pn t d wt youe  attas g in te de is a s l tn ,   g of saf u e t m ml e t  [e t   ]' the s ou t tput s gur e antd   nt to c jqe s, y o rss ntn s c e s sh of ows the and  ft p te rm with y c e od t g .  f you'e c rendr ompog a sql st g rg to d to th from e serv, g as html dos nt  we e u t u m sql injection.  ug a l pd statemet s a god way t html  se of  o o e m sure e i the s  cot r sql, bt p of sql  g s t r a g safe in all c am ontexte pt t s s w id hat i gg  am in o a t - how t nn o e the html e dae ncoded text befoe  string returg it back o the us  er?n te us sd r   ws to view  as the d the e cs t  in e  xt ente, the e d from de ad pri q  a ns it ouf te ur is receg  ax safe ad  h ou tml sounds , and  that you have a string of se hm not  a , y a ou ca re n ju t p o s know t sed -  that to t . he ue t r.if te e a r is re e c i g a to    what  pla e in e i good ng xt e o ma, the f th ro n you need to k  cr wh t the safe t  html sd in the databae o plain tex. t if t i . d h i e u  d  ser i am s rg rss, thn u nd o  fm e e  to u cm am pose yor rss usig ss of x] can help you to  make e a  s te   pt are p n y d on outp. a  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can fuzz for vulnxxxxxxxxxxs in txe app cxxe and expxxxt it, xxxt there xxxxd be sxxe indistinct general side channel attack or something. bxt how wouxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  are thxxe viable approaches for a dexxxxxxxd attaxxxr to somexxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 72, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i wat o  f u  a a de e c deee p s ability  ned o ie  sp po to o  a a l  ddos attacks from a certain ip (or pool of ips). p i o  ti i s a t deepe o s o e at ddos  th i e nx  o   her firewall? l integrae ev l intege   , el,   i a    o  a a  deepe  to  rat a  do her   than any   f     g i   x n  a i e  pe n leve,  how  a  ned x deee at than e r in h if e code.  her o o    i   need   a we a b appli ay o  n fi?  f firewall?  in ir  ew her all? if s  o, how  o d a o i inr po  s a l ae it. "}, {"sentId": 153, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "post to the form from another page using some nifty post-to-iframe hack it", "label": "ATTACK"}], "sentText": "if someone tries to post to the form from another page using some nifty post-to-iframe hack it will be [coxxx, you can throw xt out immxxxxxxxx. "}, {"sentId": 15, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hardcoded", "em2Text": "compromise the backend", "label": "None"}, {"em1Text": "compromise the backend", "em2Text": "hardcoded", "label": "PARENT"}], "entityMentions": [{"start": 204, "text": "hardcoded", "label": "ATTACK"}, {"start": 333, "text": "compromise the backend", "label": "ATTACK"}], "sentText": "i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded. how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend? although this may obfuscate keys, these still have to be hardcoded. making these kind of useless, unless i'm missing something. <h1>your question</h1>i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded.my question is:how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend?the cruel truth is... you can't!!!it seems that you already have done some extensive research on the subject, and in my opinion you mentioned one effective way of shipping your app with an embedded secret:hidden in native librariesbut as you also say:these methods are basically useless because hackers can easily circumnavigate these methods of protection.some are useless and others make reverse engineer the secret from the mobile app a lot harder. as i wrote [link], the approach of using the native interfaces to hide the secret will require expertise to reverse engineer it, but then if is hard to reverse engineer the binary you can always resort to a man in the middle (mitm) attack to steel the secret, as i show [link] for retrieving a secret that is hidden in the mobile app binary with the use of the native interfaces, [link].to protect your mobile app from a mitm you can employ [link]:pinning is the process of associating a host with their expected x509 certificate or public key. once a certificate or public key is known or seen for a host, the certificate or public key is associated or 'pinned' to the host. if more than one certificate or public key is acceptable, then the program holds a pinset (taking from jon larimer and kenny root google i/o talk). in this case, the advertised identity must match one of the elements in the pinset.you can read [link] of react native articles that show you how to apply certificate pinning to protect the communication channel between your mobile app and the api server.if you don't know yet certificcate pinning can also be bypassed by using tools like frida or xposed.[link]inject your own scripts into black box processes. hook any function, spy on crypto apis or trace private application code, no source code needed. edit, hit save, and instantly see the results. all without compilation steps or program restarts.[link]xposed is a framework for modules that can change the behavior of the system and apps without touching any apks. that's great because it means that modules can work for different versions and even roms without any changes (as long as the original code was not changed too much). it's also easy to undo.so now you may be wondering how can i protect from certificate pinning bypass?well is not easy, but is possible, by using a mobile app attestation solution.before we go further on it, i would like to clarify first a common misconception among developers, regarding who and what is accessing the api server.<h1>the difference between who and what is accessing the api server</h1>to better understand the differences between the who and the what are accessing an api server, let\u9225\u6a9a use this picture:<img src=\"https://i.stack.imgur.com/4dgaj.png\" alt=\"man in the middle attack\" />the intended communication channel represents the mobile app being used as you expected, by a legit user without any malicious intentions, using an untampered version of the mobile app, and communicating directly with the api server without being man in the middle attacked.the actual channel may represent several different scenarios, like a legit user with malicious intentions that may be using a repackaged version of the mobile app, a hacker using the genuine version of the mobile app, while man in the middle attacking it, to understand how the communication between the mobile app and the api server is being done in order to be able to automate attacks against your api. many other scenarios are possible, but we will not enumerate each one here.i hope that by now you may already have a clue why the who and the what are not the same, but if not it will become clear in a moment.the who is the user of the mobile app that we can authenticate, authorize and identify in several ways, like using openid connect or oauth2 flows.[link]generally, oauth provides to clients a &quot;secure delegated access&quot; to server resources on behalf of a resource owner. it specifies a process for resource owners to authorize third-party access to their server resources without sharing their credentials. designed specifically to work with hypertext transfer protocol (http), oauth essentially allows access tokens to be issued to third-party clients by an authorization server, with the approval of the resource owner. the third party then uses the access token to access the protected resources hosted by the resource server.[link]openid connect 1.0 is a simple identity layer on top of the oauth 2.0 protocol. it allows clients to verify the identity of the end-user based on the authentication performed by an authorization server, as well as to obtain basic profile information about the end-user in an interoperable and rest-like manner.while user authentication may let the api server know who is using the api, it cannot guarantee that the requests have originated from what you expect, the original version of the mobile app.now we need a way to identify what is calling the api server, and here things become more tricky than most developers may think. the what is the thing making the request to the api server. is it really a genuine instance of the mobile app, or is a bot, an automated script or an attacker manually poking around with the api server, using a tool like postman?for your surprise you may end up discovering that it can be one of the legit users using a repackaged version of the mobile app or an automated script that is trying to gamify and take advantage of the service provided by the application.well, to identify the what, developers tend to resort to an api key that usually they hard-code in the code of their mobile app. some developers go the extra mile and compute the key at run-time in the mobile app, thus it becomes a runtime secret as opposed to the former approach when a static secret is embedded in the code.the above write-up was extracted from an article i wrote, entitled why does your mobile app need an api key?, and that you can read in full [link], that is the first article in a series of articles about api keys.<h2>mobile app attestation</h2>the use of a mobile app attestation solution will enable the api server to know what is sending the requests, thus allowing to respond only to requests from a genuine mobile app while rejecting all other requests from unsafe sources.the role of a mobile app attestation service is to guarantee at run-time that your mobile app was not tampered, is not running in a rooted device and is not being the target of a mitm attack. this is done by running a sdk in the background that will communicate with a service running in the cloud to attest the integrity of the mobile app and device is running on. the cloud service also verifies that the tls certificate provided to the mobile app on the handshake with the api server is indeed the same in use by the original and genuine api server for the mobile app, not one from a mitm attack.on successful attestation of the mobile app integrity a short time lived jwt token is issued and signed with a secret that only the api server and the mobile app attestation service in the cloud are aware. in the case of failure on the mobile app attestation the jwt token is signed with a secret that the api server does not know.now the app must sent with every api call the jwt token in the headers of the request. this will allow the api server to only serve requests when it can verify the signature and expiration time in the jwt token and refuse them when it fails the verification.once the secret used by the mobile app attestation service is not known by the mobile app, is not possible to reverse engineer it at run-time even when the app is tampered, running in a rooted device or communicating over a connection that is being the target of a man in the middle attack.so this solution works in a positive detection model without false positives, thus not blocking legit users while keeping the bad guys at bays.what suggestions do you have to protect the world (react- native apps) from pesky hackers, when they're stealing keys and using them inappropriately?i think you should relaly go with a mobile app attestation solution, that you can roll in your own if you have the expertise for it, or you can use a solution that already exists as a saas solution at [link](i work here), that provides sdks for several platforms, including ios, android, react native and others. the integration will also need a small check in the api server code to verify the jwt token issued by the cloud service. this check is necessary for the api server to be able to decide what requests to serve and what ones to deny.<h2>summary</h2>i want to be able to store keys in the app so that i can validate the user an allow them to access resources on the backend. however, i don't know what the best plan of action is to ensure user/business security.don't go down this route of storing keys in the mobile app, because as you already know, by your extensive research, they can be bypassed.instead use a mobile attestation solution in conjunction with oauth2 or openid connect, that you can bind with the mobile app attestation token. an example of this token binding can be found in [link] for the check of the custom payload claim in the endpoint [code].<h2>going the extra mile</h2>[link]the owasp mobile security project is a centralized resource intended to give developers and security teams the resources they need to build and maintain secure mobile applications. through the project, our goal is to classify mobile security risks and provide developmental controls to reduce their impact or likelihood of exploitation. "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 81, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 448, "text": "dos attack", "label": "ATTACK"}, {"start": 462, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 662, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 800, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 833, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "h  x cause xxx to xxx, i xxxxxxe i've xxxl  run into a an n issue never  w n ith ip address spoofing. i knxw the real client  can will never recexxe a rexxxxxe xxx c xxxxx xxxxf xx all. k if txxy ip  xxxxf t s into end heir ip axxxx  registered. w all as xx,  send xxt that may g  not be nxxxxxxxy for signing  a xxxl such x (leadixg s a  xxxxxxx c nxx txxy  as xxxxxy xxxxe    spoofing. account call. a  markxd client   could efxxxxxxxxy create a dos attack by registering for many accounts, all wit efxxxxxxxxy h xxxxxxx  xt   ixx xe , all t registered. he  with whxx xxxl e xxx  xxxxg the x g x nxxxxxxxy xe lxxxx. all  this wou se m if ay rvers  call. x g d cause my system to send out a high volume of welcome emails (leadixg to my serve a rs bein whxx  cli xxx ent g markxd as spam), xxd couxd prevent users from signing up if their email account was maliciously registered. how ca volume  g  prevent registered.  n this xe w  avoixxx? can  "}, {"sentId": 95, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker could fetch the encrypted string", "em2Text": "fetch the key", "label": "None"}, {"em1Text": "attacker could fetch the encrypted string", "em2Text": "decrypt the data", "label": "None"}, {"em1Text": "fetch the key", "em2Text": "attacker could fetch the encrypted string", "label": "PARENT"}, {"em1Text": "fetch the key", "em2Text": "decrypt the data", "label": "None"}, {"em1Text": "decrypt the data", "em2Text": "attacker could fetch the encrypted string", "label": "None"}, {"em1Text": "decrypt the data", "em2Text": "fetch the key", "label": "PARENT"}], "entityMentions": [{"start": 357, "text": "attacker could fetch the encrypted string", "label": "ATTACK"}, {"start": 400, "text": "fetch the key", "label": "ATTACK"}, {"start": 426, "text": "decrypt the data", "label": "ATTACK"}], "sentText": "how is such encryption p de ei crypt ossible i b  w ossible onder? the algorithm would b decrypt e ei  f  ixed and therefore  in ei would  the t key her the  well-known or deductible (say one the  of seven widely u so sed in indu the stry  encrypted alg  o indu rithms) and there must be a key so must mew decrypt here in the p so rogram ei . so s . o  the attacker could fetch the encrypted string, fetch the key in  a in nd decrypt the data. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 671, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 764, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 291, "text": "xss", "label": "ATTACK"}], "sentText": "the c html o api. mpany   who hosts our  this s jquery   ite reviews our co recently de before deploying - they've recently told us this open :htm of l strings should never be directl and y manipula  ted this:html  c us an  direct , as tha us t open dom s us u lik p to c   direct potential xss holes. i of nstead, always html  use a dom  a dom n api to api.  create el or ements...that  executed, can be jquery or the di  rect dom apis.for example, instead of[code]is this  up  directl really true? c xss  dom   an contain  anyone if  give us  b hosts e an example of an xss attack t like hat could exploit an html string lik c recently ould e the f ontain irst one? if [code] is somehow modified, i the t might  by c coul f d ontain something like this: that'll mess up your html and inject a script: if you use dom manipulation t h and tml o set the [code] a one? html  ttribute this: , th could e s the cript (or wha s wha tring tev by  c er other xss you use) won't create  be  mess executed, as  like  told it'll be   properly xss  escaped by the dom manipulated,  api. "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 239, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 279, "text": "local file inclusion", "label": "ATTACK"}, {"start": 300, "text": "directory browsing", "label": "ATTACK"}, {"start": 320, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 359, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can haxxxn on a xxxxxxxxxxxxxxd server and is not as rare as you mixxt think. as the others have said, if yxxr serverxxxxxxxxxxxxxn is sound, then there won't be a problem with people rxxxxxxxxg pxp files dirxxxxx.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection prxxxy much every serious xxxs has a xxxxxxxn that allows it to read files on the xxxxxx. if you don't xxxxxxt your database inputs (please just use pxxxxxxxxxxxd querixx) you mxy be vulnerable to source code disclosure xxxxxxh this mexxxxxxx. mind you, in this scenxxxx, souxxxxxxxe disclosuxe is xxxr last xxxxxxx. "}, {"sentId": 73, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "a wordpress page i manage started redirecting to ad/malware pages", "em2Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "PARENT"}, {"em1Text": "a wordpress page i manage started redirecting to ad/malware pages", "em2Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "None"}, {"em1Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "em2Text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "None"}, {"em1Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "em2Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "AND"}, {"em1Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "em2Text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "None"}, {"em1Text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "em2Text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "None"}], "entityMentions": [{"start": 18, "text": "a wordpress page i manage started redirecting to ad/malware pages", "label": "ATTACK"}, {"start": 85, "text": "the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options'", "label": "ATTACK"}, {"start": 197, "text": "embedded in the json option 'yuzo_related_post_css_and_style' of the option_value", "label": "ATTACK"}], "sentText": "about an hour ago a wordpress page i manage started redirecting to ad/malware pages. the snippet was embedded in wp_options in an entry with the key 'yuzo_related_post_options' - more specifically embedded in the json option 'yuzo_related_post_css_and_style' of the option_value. that option gets echoed without sanitizing. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 246, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 309, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl a  r od e memory d ex, e xr onx xr ode  e o ore cess   once   way  imx ed u [c tabl   ode e ], e. th of at mea [c n  s once y befor od e ou'v tabl e cre in  another xt [c  xxxx, ed  ri xxxx, d the [c xxxx e x  xs you  ode], i you f another process can dump memory xx.  xx. , ther b xx. efor xxs no way you can get rid of the data bef xxx  xxxs or ode],  memory e [lixx] kic the ks in [lixx] . "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 206, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 245, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d process p  xr ss      t can abl a  r d ed ex, e xr n   oue e s   x xx. . imxu c t if l , can   rid e. tt n  gs  men if s o n e y bee oe crext [c    x  xxx strs ,  strs ed the [c xxxxxx a s you  ode], if another process can dump memory x. , s no way you can get rid of the data bef s ore [li]    you kc strs  t o e ce e s he ks  t . "}, {"sentId": 10, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 94, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 123, "text": "analyzing the time taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryptography, a timing attack is a side channel attack in which the attacker attempts to compromise a cryptosystem by analyzing the time taken to execute cryptographic algorithms. every logical operation in a computer takes time to execute, and the time can differ based on the input; with precise measurements of the time for each operation, an attacker can work backwards to the input. "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 26, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 76, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 163, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 243, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 282, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my problem is that i fxxl the password would likely be intercepted. xn (1), the hash could be extracted by a man-in-the-middle attack. txe xxxxxxxr can xxw simply use that hash to get access to the user's information. xn (2), the atxxxxxr can intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 19, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "env vars are not particularly secure", "em2Text": "they are visible via [code]", "label": "PARENT"}, {"em1Text": "env vars are not particularly secure", "em2Text": "they are available to any user that can run [code]", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "they are available to any user that can run [code]", "label": "AND"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "they are visible via [code]", "label": "None"}], "entityMentions": [{"start": 9, "text": "env vars are not particularly secure", "label": "ATTACK"}, {"start": 54, "text": "they are visible via [code]", "label": "ATTACK"}, {"start": 93, "text": "they are available to any user that can run [code]", "label": "ATTACK"}], "sentText": "however, env vars are not particularly secure either. they are visible via [code], and hence they are available to any user that can run [code] commands. (of course, any user that has access to [code] on the host also [link] anyway.) "}, {"sentId": 53, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "cycript technology", "em2Text": "all ios application are able to debug", "label": "AND"}, {"em1Text": "cycript technology", "em2Text": "able to access variables and methods inside application", "label": "None"}, {"em1Text": "cycript technology", "em2Text": "overwrite the runtime variables and methods", "label": "None"}, {"em1Text": "all ios application are able to debug", "em2Text": "cycript technology", "label": "None"}, {"em1Text": "all ios application are able to debug", "em2Text": "able to access variables and methods inside application", "label": "AND"}, {"em1Text": "all ios application are able to debug", "em2Text": "overwrite the runtime variables and methods", "label": "None"}, {"em1Text": "able to access variables and methods inside application", "em2Text": "cycript technology", "label": "None"}, {"em1Text": "able to access variables and methods inside application", "em2Text": "all ios application are able to debug", "label": "None"}, {"em1Text": "able to access variables and methods inside application", "em2Text": "overwrite the runtime variables and methods", "label": "None"}, {"em1Text": "overwrite the runtime variables and methods", "em2Text": "cycript technology", "label": "None"}, {"em1Text": "overwrite the runtime variables and methods", "em2Text": "all ios application are able to debug", "label": "None"}, {"em1Text": "overwrite the runtime variables and methods", "em2Text": "able to access variables and methods inside application", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "cycript technology", "label": "ATTACK"}, {"start": 29, "text": "all ios application are able to debug", "label": "ATTACK"}, {"start": 71, "text": "able to access variables and methods inside application", "label": "ATTACK"}, {"start": 156, "text": "overwrite the runtime variables and methods", "label": "ATTACK"}], "sentText": "with the cycript technology, all ios application are able to debug and able to access variables and methods inside application.  and also it is possible to overwrite the runtime variables and methods.    with the cycript technology, all ios application are able to debug and able to access variables and methods inside application. and also it is possible to overwrite the runtime variables and methods. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 298, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calls ck? o cxf and  calls i would like know  to know if   it   has any build-in mec a hanism that would allo calls w limiting t this he cxf  calls  num and b ca this lls er of c cxf oncur cxf rent calls to the web s cxf ervice, thus would  a wcf? ddressing the possibility of a dos attack? something simi  lar to this feature i  of wcf? "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 298, "text": "take the id", "label": "ATTACK"}, {"start": 314, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 348, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 531, "text": "mess this url up", "label": "ATTACK"}, {"start": 552, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "ixxs xd   o px axxxxxxx ix o xl xxx  xxxs e xt  axxxxxx e  xt  y     xxxe   h xxxxx  xxy  o   xt bxxxxs to you a xxp o licx g a  x o x o xxx xy xxs  id  id  and  mxx x xd x and xg s xxd ql nd  t xxg   it i up  t xt xa xt t the php xs  t a       xx i xx  . xx  xxg  a i g  xx bxxxxs xg t to i    to take the id xxd run it through a mysql query t  o retrieve 1 record to d   e a  i xy ixxl t xy xt o xd n x  xe xxxx. is  xx xd  x xg xxxe  t axxxxy s  e xo x it m   run o xxx  x. o xxxxg   e mxxxxxxxs h id  to acxxr cxx xx xxxe e xd mess this url up xxd pose a security threat to my application/mysql db a   ? "}, {"sentId": 121, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 93, "text": "become compromised via script injection", "label": "ATTACK"}], "sentText": "[link] gives me concern about the potential for a [link], in a case where my application has become compromised via script injection. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 186, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 425, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 232, "text": "xml bombs", "label": "ATTACK"}, {"start": 528, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been e backe xf the xxxe oxxxd app) d xt will be a l oe in e xxxg s xl s easy , f, it can be exxxxy made e ad the attacs xn uxe it for tr own purxxxxxxs sh xxxe of the xxxs y ae coercive parsing attack, xml l enti) , l ) a, xml bombs.can any xxe xxxl in del about e w could xxe can sie thee attacks prxxxxxxxy n a e sysxxx? i don't k the is e definitixn f a , but it rs to an attak tt s party \" and wh \". a \"ce pg a\" exploits the nature of the xml model to overwhelm the parser. a boxb g enxs whh result in a ds xxxe it exhausts the memory "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 210, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 418, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so,  t i wonder whet  her adding it ever to y time adds some strength to the hash example, . f times? or xe  fou    example, would it be possible wh to e  that an attacker  hash found some clever w least ay to create a 100timessha512 function   which w there ere w it ay faster than si  vulnerability, hash  to mp e ly e sha512 xe pre  vents c fou 100 nd utin f g sha512 100 times?  benefits yes, it does exp it ose a dos vulnerability, w  but it als t o prevents brute force attacks (or at leas xe  t t makes t exceed  isks...  po is ssible hem prohibitively slow).  there is absolutely a tr f adeoff,  whe which ther but to some the benefits exceed the r there isks... "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 47, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 280, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 435, "text": "recover those keys", "label": "ATTACK"}, {"start": 568, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 591, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s xo omethxxx. how mi woxxd xxt expxxxt xxw   an attacker recover the secrets in that flash? xxxxxxr  how  i unxxxxxa i  xxxxt nd xxxy xxn xu xd zz fo ex xxc xxr over pxxxt r vulnerabxxxxxxs in the app c axxxxk ode  axe axd xxxxxxt ix, t s hat there cxxxd b xxxxxe e kxxx?  some indistinct general side channel attack or xxxxxxi s ng. but how would xn  go a txxt ttxc woxl s d xxr realxy go about try xxxxt ing to xf  s in xxxxxxxx.  recover those keys?  xxe t of t  here xxxb xxxxxxxxe le axxxxxxxe  xxxxxxxxxd can s  s for a dxxxxxxxxd xxxxxxxr to  cxn sxxxh in ow shave-down the chip or some kind of microscope attack? "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 333, "text": "sign up for the app", "label": "ATTACK"}, {"start": 373, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my qxxxxi but on xx, how xxxe is \"auth !== nxxx\" th is at ? yes, i   rxxxxxe txxt thxs mea th dxxxxxxx? is n sxxe s that onl xxxxxxxn y a but n axxxxxxxxxxxd user can access  this th is   how ,  xxxxxxxxxxs e da n ta, but xxw easy  i is it to becxxe auxh ye c credent right xxxs an s, exxxxxxxx? authe up ntxxxxxd  cxn s then omeone sign up for the app, i   up  , and then use those credentials to get request right into my database? "}, {"sentId": 64, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 37, "text": "replay attacks", "label": "ATTACK"}], "sentText": "the major security flaw i can see is replay attacks. how do i prevent someone from getting ahold of that encrypted string, and posting as that user? i know i can use ssl to make it harder to steal that string, and maybe i can rotate the encryption key on a regular basis to limit the amount of time that the string is good for, but i'd really like to find a bulletproof solution. anybody have any ideas? does the asp.net viewstate prevent replay? if so, how do they do it? if you hash in a time-stamp along with the user name and password, you can close the window for replay attacks to within a couple of seconds. i don't know if this meets your needs, but it is at least a partial solution. "}, {"sentId": 27, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 151, "text": "manages to get dodgy code onto a server", "label": "ATTACK"}], "sentText": "i want to know how to disable the eval modifier in php's regex system eg. [code]. it's a potential exploit that can be used in place of eval if anyone manages to get dodgy code onto a server. i had a problem recently with a wordpress theme from woothemes that had a security hole that allowed hackers to upload a back door server admin type script. "}, {"sentId": 3, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 268, "text": "injections into the database", "label": "ATTACK"}], "sentText": "when you're making serious web apps that'll handle large amounts of data, what precautions should i take against my data inputs to fully sanitise it? i know there's the obvious trim, escaping, xss cleaning, etc - but what other techniques should i incorporate to stop injections into the database? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 143, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup n xxxxxxd dxxs ar ware e a  and d  nota axd bl has e xxxxxxx\" txxxxx. hosxxxe s ca exxxo nt r a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or ps even j e ust t really he  pxxxp cl   ovxr  sites  clxxg ick itsel but f mt exploit   respect,  a bu fore g).  yes, the n page of xxe site cxxxd xo tt tox, bt a well-crd pp hostixe up n dist the usr d may  own  through not tly  be dir y ec he tly s y sociated t xt us c. h t the he hose mai xxxxd n p but a and ge.pop w e in ups w xxx, e  cou n ld thr e ed by may unsaxxxy xxxxs as a way to \"ta  e xxl trick w  are p\" uses and to e e sse ry xy force ad imprexxxx, etc. in this r, th sixe coud s e sey aspxxt xf the m y is xxe sey f the  into he  xxxxxs c  e popups ol an  y exd d  over their  e n cxxr and their brxxxxxg de may s n e ota . "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 166, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a stae sxxxk clxxxxr ruxg xn a rexe servxr axd i'm nxw to spxxx. it s tt therxxs no authxn e prog the cr xxxxxxxs (7x) poxt by xxxxxxx. anyoxe xxn jxxt xxxxxy submit their own code to the cluster without any restrictions. "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 405, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "today, la  our xxxxxxxxxe arc  hitect mentxxxxd th  at a recent vulnerability was discovered in the jre 1.7.  i  1.7. f ixxxy oxxd an arxxxxe the [xx the xxx  xxxa sa  fe . xy    plugins. the details xf th   to at  e la  1.7. haxx haxxxg xg test vulne  rab  ixxxy you is r arxxxx [xx e   have nxt been made xxxxxx.  h mxxxxxxxxn browser    o   the wxxxx, my un mention dersta haxxxg nding is that xt only affects java browser plugins.  the recomm  ended mxxxxxxxxn xy  is to xxxxxx affects e txe xxxa browser pluxxxx.  no mention is made of no xg n-  affects h xxxxxn x  xxx, so i t was hxxk it is sa the fe  nxt to assume th vulnerabixxxy at yo details ur dev maxxxxe i to s not vuxx browser xxxxxe simxxy xy virtue xf haxxxg java 7 instaxxxx. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 158, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 211, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 97, "text": "database is compromised", "label": "ATTACK"}, {"start": 531, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend that the salt be stod y m the database. their argut is that f the database is compromised, an r n still build a rainbow table, taking a particular salt string into account n or to crack one account at a time. if this at has n privil, then he may not even need to crk any . fm a sy perspective, is it worth it to store sas in a different p? consider a web applin h the server code and db on te same m. f the salts are stod in a flat file on that machine, chances are that if the database is comp, the salts file will be compromised, too.  "}, {"sentId": 10, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a spam bot will not support javascript", "em2Text": "submit what it sees", "label": "AND"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "the bot does support javascript", "label": "OR"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "it will submit the form instantly", "label": "AND"}, {"em1Text": "the bot does support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "a spam bot will not support javascript", "label": "PARENT"}, {"em1Text": "malicious scripted activity", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "it will submit the form instantly", "label": "None"}], "entityMentions": [{"start": 203, "text": "a spam bot will not support javascript", "label": "ATTACK"}, {"start": 251, "text": "submit what it sees", "label": "ATTACK"}, {"start": 275, "text": "the bot does support javascript", "label": "ATTACK"}, {"start": 307, "text": "it will submit the form instantly", "label": "ATTACK"}, {"start": 119, "text": "malicious scripted activity", "label": "ATTACK"}], "sentText": "it looks like we'll be adding [link] support to stack overflow. this is necessary to prevent bots, spammers, and other malicious scripted activity. we only want human beings to post or edit things here! a spam bot will not support javascript and will submit what it sees. if the bot does support javascript it will submit the form instantly. the commenter has at least read some of the page before posting "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 107, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 171, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messas i get i and n xy webxk cxxxxxxx. howe, a m   wxxxxxk as use a r cxn m  add my bot to a thousand big groups and wi i ll xxxl l    tel y result in denial of service for all other users. e can ven xf te denia l gt xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m a r ll esxxt l rate lixxxi s ng suh user actixn m s xxy l result in dxxl f xxxxxxe f wxb xr l b i xxxk  or use. "}, {"sentId": 113, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "cookies can be stolen", "em2Text": "xss attacks", "label": "PARENT"}, {"em1Text": "cookies can be stolen", "em2Text": "csrf", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "csrf", "label": "PARENT"}, {"em1Text": "csrf", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "csrf", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 4, "text": "cookies can be stolen", "label": "ATTACK"}, {"start": 36, "text": "xss attacks", "label": "ATTACK"}, {"start": 139, "text": "csrf", "label": "ATTACK"}], "sentText": "no. cookies can be stolen  sinc via xss attacks request.  (and other vect attacks ors)also, this attacks  might  no. be  be susceptible to csrf sinc since e a cookie will be  sto b  e len    stolen submitted automatically wi no. th any req sto uest. "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 26, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 69, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 214, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my question is, since the post data is sent over curl/ssl, can it be intercepted or stolen while in traffic? can the hacker view the session id in plain text(the most important component here)?  you do not want to implement this with php because this is easily achieved with webservers alone. your server a handling ssl ([link]) can act as an [link] and as a [link] to server b. it's a common setup to divide responsibilites between servers. research these topics please. "}, {"sentId": 3, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "attacker modifies his remote host or user agent or something", "em2Text": "inserting attacking code into his remote host or user agent or ect", "label": "PARENT"}, {"em1Text": "inserting attacking code into his remote host or user agent or ect", "em2Text": "attacker modifies his remote host or user agent or something", "label": "None"}], "entityMentions": [{"start": 99, "text": "attacker modifies his remote host or user agent or something", "label": "ATTACK"}, {"start": 185, "text": "inserting attacking code into his remote host or user agent or ect", "label": "ATTACK"}], "sentText": "i am considering to record access log,   and i am considering to view it via wev browser,   but if attacker modifies his remote host or user agent or something, can he attack to me? by inserting attacking code into his remote host or user agent or ect. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 224, "text": "running [code]", "label": "ATTACK"}, {"start": 336, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevx can x, i do xt xxxd axxx  t vulxxx run xxxxx. xe  code s running  how xxxx  ru evxx,  abo ab can out ut xxx cxx , xxxxxx  . to c xxxxy od javascript e    r  un xxxxy v  ulxxxx xxxxy xxxx. cxxxxxxxx  , ru xxxy nning , running [code] gx , x axxx  xxxx xt xxx axxx you  y x about s te hr  code un  th vulxxx e axxx run xt ning y to run any javascript code that you can run vulxxx r  un xxxxx. . r x un.  "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 145, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 241, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 343, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn xxt   wixl d txxxxs bee , n mexxxxxd is o xm  xxxt xxg pxx:    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  crea more te    3) when confirmed, the user is asked to change password how to x, it thi a s op the  xxxxxxxe n   to me  a [code] attack? xf    e sxg a m th porary ps oxxr the e i  to the s t to an xm ) hae  ail i  secure  howevxr xr s ins, wxa   g ts t s 3) ixxxx: he dif t he o fexxxxe  if betn g that xxr sxxxxe ,  xxd s contxxxxxg imp e ly g a unique ul which te attacker can  randm e xx? have  bette i mxxxd a key stp xxxxe  m ranm e xo we that l mxe thxs a bxxxe nd  sy random stem xxe xxxu xn   the g xe (or is t r em axm he eseg e a bee xxxxw eset i ting s r way o r i  f r  esetting th 2) e pd s )? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 150, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 267, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so, i wonder whether adding it every time adds some strength to the hash. for example, would it be possible that an attacker found some clever way to create a 100timessha512 function which were way faster than simply executing sha512 100 times? yes, it does expose a dos vulnerability, but it also prevents brute force attacks (or at least makes them prohibitively slow).  there is absolutely a tradeoff, but to some the benefits exceed the risks... "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 414, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 538, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "ps xn of d xxxxxh exampxx, t n y mexxs that i shou cn xd ta e ke xxo co use nsid n xxxxxxn wxxn de xxxs c,  o cd xxxg s, xy g co amxx, such s xxe on t doe hxs e descrie ed. d belo fxr w. by secuxi a t xr he s xy i  ps co collectio d n n  xxn cxxxxg an douxxe d xxxxxe xc t hxxw co ie he king xxxt a  exxxxl not   e, user h bexxr xt  t t in a xxy nxt id pe ud rs ed. by t   xxxs co bx, uxd mean behaviour sc e h as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or ot nxt herwie compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can fuxz for vulnxxxxxxxxxxs in txe app xxxe axd expxxxt it, xxxt thexe xxxxd xe sxxe indistinct general side channel attack or sometxxxx. bxt xxw wouxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  axe txxxe xxxxxe apxxxxxxxs for a dexxxxxxxd xxxxxxxr to xxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 127, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i wan xxxt ty le t t  o know if this an i d xn  ly this  so, lxxxxe on  sxxxxxt pxxxxxxs axy securi i   ty issues  o (like xss attacks xxx) "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 15, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 105, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "if an xxxxxxxr gets ahold of the data in the datastore, as well as our hash salt, ixm worrxxd txxy could brute force the sensitive data.  "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "is there any way to protect encryption keys that are being stored in ram from a freezer attack? (sticking the computer in a freezer before rebooting malicious code to access the contents of ram) "}, {"sentId": 6, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "modify the serialized data", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "code injection", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "code injection", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "using a crafted input", "label": "PARENT"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "code injection", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "code injection", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "code injection", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "code injection", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "code injection", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "code injection", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "code injection", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "code injection", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "allocate several gigabytes of memory", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "modify the serialized data", "label": "ATTACK"}, {"start": 560, "text": "using a crafted input", "label": "ATTACK"}, {"start": 598, "text": "invoke any such [code] method that is on your classpath", "label": "ATTACK"}, {"start": 676, "text": "code injection", "label": "ATTACK"}, {"start": 1248, "text": "allocate several gigabytes of memory", "label": "ATTACK"}, {"start": 1392, "text": "have your system down with an [code] in no time", "label": "ATTACK"}], "sentText": " memory  those (threat model: the attac  ker may freely modify the serialized data, but th would at's all he can  [ d the o can )  is deserializati also on  memory itsel third-party f can already be unsafe.  may a seria ized lizable class may de  fine a [li of  [lin nk]),  [code] m stream. e [code]   tho the d (see  of also the [ those link]), wh deserialization ich   is called when a [code] n obje check ct of this class is going t re your sources o be deserialized f [code] rom the stream. the attacker cannot  (threat provide this cod y e, attacker  but using a crafted input s [code] he can invoke any such [code] method that is on your classpath, with any input.  <h3>code injection</h3> it is possible to make a [code] impl erialized ementation that opens the door to arbitrary bytecode inje <h3>code ction. e is a  [code] (threat sy  sim i ply re deserializati ad  can a byte array fro way, m the stream and pass it to [code] and [code] (see  for t deserialization he javad all oc a  f just or [lin check k] and [ can link]). i don't know what  er which ial be such  ized the use of su exhaust ch an i for mplem you enta make tion would  you be, but it is possible. this make [code deserializati  that ] s it very easy for an attacker to allocate several gigabytes of memory wi (threat th just a those  f it ew dozen bytes of s bytecode erialized data, w a hich w it il o bytes f l have your system down with an [code] in no time. by controlling  a the input  use to the deserialization process an attacker ca [code], n tr would ig for ger  deserialization the  the invocation of any [code]  can de several serialization-method.  ies it just  is theoretically possible for such a m a ethod to allow bytecode injection. in practice it is ce <h3>code rtainly he  possib use le to easily ex re haust memor those y or cpu resource don't s this  t way  ex le , resulting i bytecode possible.  n denial-of-ser cannot v eck ice attacks. auditing your syst unsafe. em is  agains be  of t su le ch vuln for  may erabilit the ies is very di class ffic deserialization-method deserializa m tion . ult: you have to ch m eck every  third-pa  rty implement  a n to k]), tion of [code], includ just ing    bytes those i what n  can is not third-party libraries a deserialization-method nd the runtime libr time. ary. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a xxxxxxe \"xxxxxxxx\" xxx. xxxe sixxs cn use poxs xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn juxt the click ixxxf t explxxt a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn xxxxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe xd impre, . n txxs r, e sexy t xf xxe xxxxxxm y xs te sxxxxy of the xxxxxs control or r xxn cor xxd xxxr browsxxg xxx. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "no access restrictions", "label": "ATTACK"}, {"start": 182, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "e access  load this r i this s nom access y sud to is mi i  can nimal,  to but sie th nimal, e th e are no access restrictions,   restrictions, usly the sr cn obv to o can y  can be attacked by dos etc. "}, {"sentId": 23, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "your code being exploited maliciously", "em2Text": "through buffer overflow exploits", "label": "PARENT"}, {"em1Text": "your code being exploited maliciously", "em2Text": "code injection", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "code injection", "label": "OR"}, {"em1Text": "code injection", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "code injection", "em2Text": "through buffer overflow exploits", "label": "None"}], "entityMentions": [{"start": 229, "text": "your code being exploited maliciously", "label": "ATTACK"}, {"start": 273, "text": "through buffer overflow exploits", "label": "ATTACK"}, {"start": 309, "text": "code injection", "label": "ATTACK"}], "sentText": "whe h n writing code do you  an a maliciously, nd d ?  consciously progra you m avoid  de being  rogram fensively to ensur de e h the igh p the ro code gram quality and t malicio you usly, o avoid the whe ensur n  possibility of your code being exploited maliciously, e.g. through buffer overflow exploits or code injection ? "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 50, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 295, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  y xxxxxxxxx: it is hiy recommd that yxu do not  hard-code the exact public license key string value xs provd by  ge . , you can conxxxxxt e whxxe pxxxxc lxe xxy  xxxxxg at runtime frm substxxxxx, or xxxxxxxe it fxxm an enxxxxxd  store, before pxxxxxg t to e cons. this xxxxxxxh s it  e dt for malicious third-parties to modify the public  license key string in r ak fil. "}, {"sentId": 56, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "apply an [link] the iframe", "em2Text": "the widget has loaded", "label": "PARENT"}, {"em1Text": "apply an [link] the iframe", "em2Text": "resize the iframe to be the size of the page", "label": "None"}, {"em1Text": "apply an [link] the iframe", "em2Text": "have this now invisible iframe follow the cursor", "label": "None"}, {"em1Text": "apply an [link] the iframe", "em2Text": "the iframe receives the click event", "label": "None"}, {"em1Text": "the widget has loaded", "em2Text": "apply an [link] the iframe", "label": "None"}, {"em1Text": "the widget has loaded", "em2Text": "resize the iframe to be the size of the page", "label": "None"}, {"em1Text": "the widget has loaded", "em2Text": "have this now invisible iframe follow the cursor", "label": "None"}, {"em1Text": "the widget has loaded", "em2Text": "the iframe receives the click event", "label": "None"}, {"em1Text": "resize the iframe to be the size of the page", "em2Text": "apply an [link] the iframe", "label": "PARENT"}, {"em1Text": "resize the iframe to be the size of the page", "em2Text": "the widget has loaded", "label": "None"}, {"em1Text": "resize the iframe to be the size of the page", "em2Text": "have this now invisible iframe follow the cursor", "label": "OR"}, {"em1Text": "resize the iframe to be the size of the page", "em2Text": "the iframe receives the click event", "label": "None"}, {"em1Text": "have this now invisible iframe follow the cursor", "em2Text": "apply an [link] the iframe", "label": "None"}, {"em1Text": "have this now invisible iframe follow the cursor", "em2Text": "the widget has loaded", "label": "None"}, {"em1Text": "have this now invisible iframe follow the cursor", "em2Text": "resize the iframe to be the size of the page", "label": "None"}, {"em1Text": "have this now invisible iframe follow the cursor", "em2Text": "the iframe receives the click event", "label": "None"}, {"em1Text": "the iframe receives the click event", "em2Text": "apply an [link] the iframe", "label": "None"}, {"em1Text": "the iframe receives the click event", "em2Text": "the widget has loaded", "label": "None"}, {"em1Text": "the iframe receives the click event", "em2Text": "resize the iframe to be the size of the page", "label": "None"}, {"em1Text": "the iframe receives the click event", "em2Text": "have this now invisible iframe follow the cursor", "label": "PARENT"}], "entityMentions": [{"start": 25, "text": "apply an [link] the iframe", "label": "ATTACK"}, {"start": 58, "text": "the widget has loaded", "label": "ATTACK"}, {"start": 164, "text": "resize the iframe to be the size of the page", "label": "ATTACK"}, {"start": 212, "text": "have this now invisible iframe follow the cursor", "label": "ATTACK"}, {"start": 322, "text": "the iframe receives the click event", "label": "ATTACK"}], "sentText": "the attacker is going to apply an [link] the iframe after the widget has loaded.  this mask will make the iframe invisible.   at this point the attacker can either resize the iframe to be the size of the page or have this now invisible iframe follow the cursor.  either way whenever the user clicks anywhere on the page,  the iframe receives the click event and its game over.  "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 187, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i would like to know if it has any build-in mechanism that would allow limiting the number of concurrent calls to the web service, thus addressing the possibility of a dos attack? something similar to this feature of wcf? "}, {"sentId": 1, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "csrf attacks", "em2Text": "attacker steals a token", "label": "PARENT"}, {"em1Text": "attacker steals a token", "em2Text": "csrf attacks", "label": "None"}], "entityMentions": [{"start": 67, "text": "csrf attacks", "label": "ATTACK"}, {"start": 302, "text": "attacker steals a token", "label": "ATTACK"}], "sentText": "as far as i understand there are two approaches in protecting from csrf attacks: 1) token per session, and 2) token per request 2) in the second case new csrf token is being generated on each request and after that an old one becomes invalid.it makes harder to exploit the vunerability because even if attacker steals a token (via xss) it expires when the user goes to the next page.but on the other hand this approach makes webapp less usable. here is a good quotation from [link]: "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 147, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "decompile my app", "em2Text": "register and then \"scan\" my entire database", "label": "AND"}, {"em1Text": "decompile my app", "em2Text": "sending requests with different gps data", "label": "PARENT"}, {"em1Text": "decompile my app", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "decompile my app", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "decompile my app", "label": "PARENT"}, {"em1Text": "gaining access to the api", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "gaining access to the api", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "decompile my app", "label": "ATTACK"}, {"start": 49, "text": "register and then \"scan\" my entire database", "label": "ATTACK"}, {"start": 103, "text": "sending requests with different gps data", "label": "ATTACK"}, {"start": 351, "text": "gaining access to the api", "label": "ATTACK"}, {"start": 419, "text": "use his login information along with the key from the code", "label": "ATTACK"}], "sentText": "howxxxx, i fear somebody xxxxt decompile my app, register and then \"scan\" my entire database by sixxxy sending requests with different gps data that dxxxxxt actuaxxy cxxe xxxm an ios dxxxxx. is thexe any way to xxxxxxt this? ixxe xxxxxxd alrexxy and fxxxd thxs threat: i've lookxd into api keys but didn't find a way how to stop a malicious uxxr xxxm gaining access to the api xxxxxxh regisxxxxxx/ decompilixg and thxn use his login information along with the key from the code. "}, {"sentId": 17, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "calling the php page other than through my flash file", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "PARENT"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "get a token", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "calling the php page other than through my flash file", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "anyone who knows how to use a programmable debugger", "label": "AND"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "get a token", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "attackers control the runtime memory of the flash interpreter", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "alter any variable", "label": "AND"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "get a token", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "attacker decompiles your flash code", "label": "PARENT"}, {"em1Text": "anyone who knows how to use a programmable debugger", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "attacker can still just launch the game again", "label": "PARENT"}, {"em1Text": "alter any variable", "em2Text": "get a token", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "alter any variable", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "get a token", "label": "AND"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "attacker can still just launch the game again", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "get a token", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "get a token", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "get a token", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "get a token", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "get a token", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "get a token", "em2Text": "paste that token into a replayed high-score save", "label": "AND"}, {"em1Text": "get a token", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "get a token", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "get a token", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "attacker decompiles your flash code", "label": "None"}, {"em1Text": "paste that token into a replayed high-score save", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "get a token", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "attacker decompiles your flash code", "em2Text": "finds the aes code", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "calling the php page other than through my flash file", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "attackers control the runtime memory of the flash interpreter", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "anyone who knows how to use a programmable debugger", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "alter any variable", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "attacker can still just launch the game again", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "get a token", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "paste that token into a replayed high-score save", "label": "None"}, {"em1Text": "finds the aes code", "em2Text": "attacker decompiles your flash code", "label": "None"}], "entityMentions": [{"start": 98, "text": "calling the php page other than through my flash file", "label": "ATTACK"}, {"start": 643, "text": "attackers control the runtime memory of the flash interpreter", "label": "ATTACK"}, {"start": 714, "text": "anyone who knows how to use a programmable debugger", "label": "ATTACK"}, {"start": 770, "text": "alter any variable", "label": "ATTACK"}, {"start": 945, "text": "attacker can still just launch the game again", "label": "ATTACK"}, {"start": 992, "text": "get a token", "label": "ATTACK"}, {"start": 1026, "text": "paste that token into a replayed high-score save", "label": "ATTACK"}, {"start": 1088, "text": "attacker decompiles your flash code", "label": "ATTACK"}, {"start": 1136, "text": "finds the aes code", "label": "ATTACK"}], "sentText": "what i really need is the strongest encryption possible in flash/php, and a way to prevent people calling the php page other than through my flash file. i have tried some simple methods in the past of making multiple calls for a single score and completing a checksum / fibonacci sequence etc, and also obfuscating the swf with amayeta swf encrypt, but they were all hacked eventually. flash is even easier to reverse engineer than you might think it is, since the bytecodes are well documented and describe a high-level language (actionscript) --- when you publish a flash game, you're publishing your source code, whether you know it or not.attackers control the runtime memory of the flash interpreter, so that anyone who knows how to use a programmable debugger can alter any variable (including the current score) at any time, or alter the program itself. the game code echoes this token back to the server with the high-score save. but an attacker can still just launch the game again, get a token, and then immediately paste that token into a replayed high-score save.  so now the attacker decompiles your flash code and quickly finds the aes code, which sticks out like a sore thumb, although even if it didn't it'd be tracked down in 15 minutes with a memory search and a tracer (\"i know my score for this game is 666, so let's find 666 in memory, then catch any operation that touches that value --- oh look, the high score encryption code!\"). with the session key, the attacker doesn't even have to run the flash code; she grabs a game launch token and a session key and can send back an arbitrary high score. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 92, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 176, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pp  xxx  xxxe wixs  be d n ae a n convince  with e page  \"\" . h l e sites can use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s  i, even just te click  xxt been  i many  txxs tself mt et  pe xx ople a .  yes, t t e  , main pae f e x  xxe xd man  do x  on with xxt t bugx.  ben o, but a weld p us tsef e the  x  p x browsg x xxy n dixxxxt the usr d xy not sit  e  e dixxxxxy d with te xxxxxxe n   p bn  fo y e u p  age ps e expo site d by many ux is xxxx url y  wh sites xs a y  wa e y to \"trap\" uses and o xt mn   esxxxxxy fe ad i, etx. in s respect, e se (or curity t of e  the prob weld is   a xx  . d. m x  rey is te securit s y a  of te xxy   s uss cl r r  y own r d x xy xxxr brog d into  d.  xxxe . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 138, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 231, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t s y u   e t   d   y e a a t  e   xxxxxe \" x   d xxx d  thr xe oh x  xxx  . e s clic is ki t ng    cn  e n  e  xe po br n ow pxs o   convince users that an important message from a trusted site has been delivered, an fr n o d trick those people into clicking through to some malware url (xr   s  d e n vn y  t  xy    an the url    ss t ck i y f t  x ck xxxt et a bu  d e   d   xxn d  .  gx  ck n .   m y,   e n ,  d  pxe f te   xx well-cr b afxe  e t d  . xn  e x  t of e    xxd do xt  w   y i  n s  t xs x, b   e u xs t    , a xe  welx t  t a e    sey of an   e  d  te pp n t th xs   e  xs ur d x y y  xy   t x  o a e dy   b  , e ad h xe xx   t xy  x h n  m    t o   xo f e us ssage as  an   t d xe xxn s e fro xs m   t d y   of x sey the   y uxxxy s  t t s xs a   y  e     o r  n  n  \" s d  p xe e    xs o x  n i x e    o xx  xy \"    xs  fe d     . cn      e pop  us  t  ,  t . i xxxd n s  n , te y   t of e p   e rm r s y ck  i  u e s e sy s  f e u d ss con n x  on r xl or  sey and  a   n  x r x tr on xo y  e m  xxxr a s  i a s  t d xx a xxr bi a  e   messxe  xg   xx ad dex. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 235, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 397, "text": "recover those keys", "label": "ATTACK"}, {"start": 557, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 580, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i attackxr  xxxxxx a  tta xxxd xxw  thxy xxn fuzz fuxz  for vuln  xxxxxxxxxxs in  xf txe a xxxe pp xxxe and exxxxxt   it, xxx  xxw xxxt t there xxxxd xe attack   o flxxx? f sxxe indistinct general side channel attack xr sxxxxxi attaxk xx. a  bx of t h micr attack? xxxxxe ow woux axxxxxxr d an g  axxxxxxr really go abxxt xxxx xxxxxe xg to recover those keys?  a kind re   thxx  e vixxxe app  it, g ow exxxxl roaches for a d an  and exxxxxxx xxa  xxx  chxs d atta vulnxxxxxxxx to xxs xxxr to somexxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 11, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 87, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 199, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 296, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "r , if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. also, everyby cn log and change the input of functios that i call just by hooking into the methods. if an attackr has admin access to your computer h is requird for the attack you de, then youe prey h l. ang you d do coud be circumd by te at. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 24, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 52, "text": "read php files", "label": "ATTACK"}, {"start": 288, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it pe for someone to 'hack' an apache server and read php files. i understd that pp is a servere languae d t be read m anywhere other than the serv, but could some hack e r and red them as if reading a text file? wel yes, if they r y hack into the server (ss, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not se raw php files tho, it should alws prs them wh the php interprr . "}, {"sentId": 32, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "any variable that a user can control,  an attacker can also control", "label": "ATTACK"}], "sentText": "any variable that a user can control,  an attacker can also control and s  ,  an therefore a e of an attack.    ts   f ad   s c s ontr, n      a c any a of ll s alled  ed a \"\" vari, and is  can un.  "}, {"sentId": 160, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 36, "text": "xss attack vector", "label": "ATTACK"}], "sentText": "in [link] article, i'm warned of an xss attack vector [code].  i'm wondering what type of syntax [code] is.  in my brief tests on chromium, it doesn't actually get rendered into a tag, leading me to believe that the syntax is used by either an sql engine, or a server side programming language.  i'm not concerned with stored/reflected xss, only dom-based ones.  i don't recognize it though, so maybe its like ruby or python or something? "}, {"sentId": 87, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "event injection", "em2Text": "special application permissions - [link] to be exact", "label": "PARENT"}, {"em1Text": "special application permissions - [link] to be exact", "em2Text": "event injection", "label": "None"}], "entityMentions": [{"start": 43, "text": "event injection", "label": "ATTACK"}, {"start": 68, "text": "special application permissions - [link] to be exact", "label": "ATTACK"}], "sentText": "i think e bigget pm you'll face is that ug event injection requires special application permissions - [link] to be exact.  e grantg n an this n basically alls it to sime it es into any apn at ay time, t is cd quite dangerous bee a ban or y mas appln coud o a t of .  the my ens and bs do nt alw appls that e this p. "}, {"sentId": 52, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "extract the public key from the host application", "em2Text": "inject it into an assembly of your own", "label": "None"}, {"em1Text": "extract the public key from the host application", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "extract the public key from the host application", "label": "PARENT"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "extract the public key from the host application", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "inject it into an assembly of your own", "label": "PARENT"}], "entityMentions": [{"start": 244, "text": "extract the public key from the host application", "label": "ATTACK"}, {"start": 297, "text": "inject it into an assembly of your own", "label": "ATTACK"}, {"start": 340, "text": "run mallicious code", "label": "ATTACK"}], "sentText": "can't this be spoofed? i am not sure if the setpublickey() method has any effect on a built assembly, but even the msdn documentation shows how you can use this on a dynamically generated assembly (reflection emit) so that would mean you could extract the public key from the host application and inject it into an assembly of your own and run mallicious code if the above was the safe-guard, or am i missing something? "}, {"sentId": 37, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "output escaping", "label": "None"}, {"em1Text": "output escaping", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 21, "text": "sql injection", "label": "ATTACK"}, {"start": 39, "text": "output escaping", "label": "ATTACK"}], "sentText": "note: i take care of sql injection and output escaping elsewhere - this question is about input filtering only, thanks. "}, {"sentId": 39, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "uploaded svg images on a website", "em2Text": "cross-site-script into there", "label": "None"}, {"em1Text": "cross-site-script into there", "em2Text": "uploaded svg images on a website", "label": "PARENT"}], "entityMentions": [{"start": 22, "text": "uploaded svg images on a website", "label": "ATTACK"}, {"start": 259, "text": "cross-site-script into there", "label": "ATTACK"}], "sentText": "i xxxt to dispxxy usr uploaded svg images on a website,  on  txh but xxe xxh y' xxxxxxxt re quite op ou cross-site-xxxxxt   its en to e: they serv [co  yu into de]. e the d f d  toh xs cross it on s -sitexxxxxxt  fxxm display  a sxxe ho, specy [coxxx. yu can cross-site-script into there all xxu like b on u  to on  its t t t  its get y [coxx] axxx: . ou anyt: xt lxs in a diff [xxxxx. eret on to [c diff odx] and canxt txh its s or intxxxxt xxxh its s crosxxxxxxxxxr anyt: xxt xr in a to ip specy t. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 726, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let  tt ey ld a tt   t s security m. mot peo  ple kin  a  th ys.   kin kin   ik java is  th tt ere h i   as  secur chec e beca to e it  ey run  in  is immune rod  o bu t ffe it r   overf but low lyi lity ng s, et th let e c, bt there s th n i (say s entire   ja sey l ced  has aroun s d chec ud  th to d  er itray e kin  te h rod as  t  abi  kin c li (say ty g whetr code s permi lows  , i  it o n to take c   lying p e e malicious rmo (sy n a. they're  i n   s really o has lv em ing a ch permo   (y n alleng prob  n c s , l: how  ld   ey  n as  ld t under (say lying o let arb  s sg itray s s te permiso d c  but ce rod d ode mot  (say  et in a web bs (say ode h    h er) run but is  be c  d ere  fo ik   e t y etc, m accessing the underlying system in malicious ways (sy  wh it  etc, e r p ted    in mot  revented eg  accessi syst  e ab accessi i ng  there y to accessing  e  it with  pro ch  a b  ard permiso  the syst code em in i  some wa a in let  c tt rod ys. n    "}, {"sentId": 128, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 91, "text": "a man in the middle attack", "label": "ATTACK"}], "sentText": "the followixg [link] discuxxxs how to destrxy a flaxk tokex, xxxxxxr this dxxs not prxxxxt a man in the middle attack.  is thxxe anyway to invalidate the token xo it is no longer active before the time it expxxxx? "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "xxm axxxxxxy working on a php projxxt xxxt xxxl fxxxxxe a user sxxxxm (login,registexxxxxd lost passwxxd xo emailxxx) and i think txxt this may be xxxy vxxxxxxxxe xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etc. use yxxr fxxxxxxx. do txxxxxs webservers (apache, iis) have xxxe sxxt of buixxxxn xxxxxxe against xxxxxxxxxxxxxxxt wouxd be the best way to imxxxxxxt an axxxxxxxxxxxxxd xxxxxx, if i e.g.: want a pxxe not be able to be called more xxxn two tixxs a minute, however anotxxr pxxe may be calxxd up to 100 times a mxxxxe or so. xxxxs wxxh xs won't see it and will be fxxx. xxxxs xxxxxxt js will just xxxe to xxxxxw the simple instrxxxxxx. sxxxxxxs will fall for xt xxd rxxxxl thxxxxxxxxxxxxxxxxxc faux-captcha: xxxs is simxxxr to the axxxx. add an xxxxt fixxd wixh a label saying [xxxx] (xxr example). uxxxg javxxxxxxt (and knowing that most auxxxxxxd sxxm xxxs won't be running jsx, hide the field and poxxxxxe it with xxxxxx. xf txe subxxxxxd form doesxxt have the magic word there, thxn ixxxxe it. users xxxh js won't sxe it and will xe finx. usexs without js wixl juxt hxxe to follow the simple instructxxx. spamxxxs won't xxxw wxxt to do axd xxu cxn ignore xxxxr inpxx. xxxs will safeguxxd you fxxm 99.9% of xxxxxxxxd sxxm xxxx. what it won't xx, even in the sxxxxxxxx, is safxxxxxd you against a targeted attaxx. someone cxxxd xxxxxxxxe their bot to avoid txe xxxxxxxt or always fill in the cxxxxxt valxx.  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 130, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e yf we pe to e m sxxx,  ye g txxt ay m txt rs unr u t y  n x) can inject malicious code into the system  site-packages d obtain root privilege. "}, {"sentId": 20, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "sql injection attack", "em2Text": "your parameterized query passes a username to a stored procedure", "label": "PARENT"}, {"em1Text": "sql injection attack", "em2Text": "within the stored procedure the parameter is concatenated to a sql command", "label": "None"}, {"em1Text": "your parameterized query passes a username to a stored procedure", "em2Text": "sql injection attack", "label": "None"}, {"em1Text": "your parameterized query passes a username to a stored procedure", "em2Text": "within the stored procedure the parameter is concatenated to a sql command", "label": "AND"}, {"em1Text": "within the stored procedure the parameter is concatenated to a sql command", "em2Text": "sql injection attack", "label": "None"}, {"em1Text": "within the stored procedure the parameter is concatenated to a sql command", "em2Text": "your parameterized query passes a username to a stored procedure", "label": "None"}], "entityMentions": [{"start": 24, "text": "sql injection attack", "label": "ATTACK"}, {"start": 222, "text": "your parameterized query passes a username to a stored procedure", "label": "ATTACK"}, {"start": 292, "text": "within the stored procedure the parameter is concatenated to a sql command", "label": "ATTACK"}], "sentText": "no, you can't avoid all sql injection attacks by using parameters. dynamic sql is the real issue, and this can occur in stored procedures as well as in your application code. e.g., this is prone to a sql injection attack: your parameterized query passes a username to a stored procedure, and within the stored procedure the parameter is concatenated to a sql command and then executed. for an example of many kinds of sql injection attacks, see this [link]. you will see that simply escaping single quotes is just scratching the surface, and that there are many ways around that. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 65, "text": "using the [code]", "label": "ATTACK"}, {"start": 96, "text": "open a server up", "label": "ATTACK"}, {"start": 793, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "an sd y there y s save  compiling ecurity implications caused by using the [code] and cod it t  open a server up for a e ttac? if y code, ou us save permission  e [ up ] just fr all  geng c cod # sour is ce c i e s o, th y en you com available piling  only ne just ed a pern to save the gener using ated files  gened to p  so shoul per it n d me some  directy or to noting at all f i in in  t is e to get the  the  e code genera  ted o a memory  c  ode stream)if you use it be  fr c#/  compiling gene there d c# sourc, yu  then you ned a permission e  to run [] h may  all no up t e available n se all  limited can  env e ir f onments h as sd hosf just  you t generate fs &amp; e ser, up   geng  them, then it e  p e robably w us   on't co  m  be h files al h so or e d pry abuse your appn to generate many, many files and attack the server using some kind of dos attack.if yu al u &amp; s as er so load &amp;  code execute the gened code,  if code,  n t depends on how pern  you ir  ge bugs nerate it.  there if yo many, u e tt there a as ings  re o bugs  pry in c can #/ compi  ling com and can guarantee that the  fin g it ed ce is , then yu should be fine.if  to your code code  contain th s if ave ings sh n   compiling as [link & load amp; ] t to  pry  can be d server  by te user  to (i fin strea  m)if e.if [code]  n some wa e y) n by  t fin he  or u ir ser can a  ttac?  e and  it n ag he or she ws on r ser, so ts wo compi bugs ling uld b c#/ e potenti and ally e dangerous. "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 212, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 313, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 397, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": "but, is there anyway to steal httponly cookies, with xss? (ignoring the question of httponly support?)....the answer is: yes.a subset of xss is known as [link] (or go to the original [link]). this attack has the xss payload send an http trace request to the web server (or [link], forward or reverse), which will echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookies... "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 182, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 281, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx popu     trusted rm malw ev  s are p w exxxy s are a nxxxxxe \"xxxx  delivered,   ev  to x\" xxx us  or  trusted   xxxx. hostixe be    sitxs w  xxn nxt  use    xxxe poxx a xs to convince users that an important message from a trusted site has been delivered,  wed hostixe  and trick those people into clicking through to some malware url ( c  p or   xx h  as xs url  ev us xn of   txe  c   j nx o t us many t   p  the c px and  dit  to xs    delivere trick d, lik it x self mi  t explt a bugx.  y, xxe ma  in   p  t ad age xf txe xx t xe xx in xxd d  o x force x  xt xxx popu xe  , b  ut a  t wed p xxn popu  dit important  the uxxr axd y  t  those n nx x delivered, t be delivered,  malwa   are re  xxxx lik y xxxxxx users d i    bug xs  ts x.    orce b   w has ith e i xs n  xxxe  j m e ev sir. ai   o n pxxs we exd by x has   xxxxxxr    ev  uxxx bug    trusted ma in ny xt  uxxxxx the y sit  es xs a wa us y to x  \"trap\" users  wed axd  to to  xxx   e x xxxy  a   xs n f popu orce ad impressionx  ev delive uxxx red, ,  delive in  dit   p coxx xxs . in ts respe s  has  i important mportant ct,   in  xx x x x s    th   delive   e secy th be ose  as b xx a xt t  ev ad  i h a  explt e  \"xxxxx\"  of  uxxx   xx  xx of xxxr x  x  r ad m xt  the  n popu xxxxxe  trusted p we rm reaxxy s e  coxxxxl y f the us  o   co n xx ha m s xxl o de  live x x x y xe re    d, xx a r   ther own xxx \"xxxxx\" x users xxxr an red   trusted ,   d  of , mportant   xxxxr xxxg     d own esir. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 77, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 179, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p as  r oxxp ws e a \"   xxxxxxm xe  xe \" h xxe  \" xxx. r  e sites n ue ps to convince users that an important message from a trusted site has been delivered xxy  \"  bg ,  axd   d trick those people into clicking through to some malware url r xg  xx y x n xxxs e  n ju has st t x he clxk f xxxxt exxxxxt x  a bxxx.  , txe  xxxxxxr xxxn pxxe xf e xe d o xxxt  xe txx,  h  peoxxe but a wd p xxn t th e  not e uxxr axd xxy xxt e dixxxxxy xxd h dxxxxxxy  e  xf xxe n s wxxe d y but imx,   man   been o  y u h y en  ss s a y  y  x  x xo \" bg  s and to  txe  t esxxxxy xe xd  to i pxxxxe mx, not  etx xxxxs . in t xe xs r might xxxx,    y xx xxe e se xf cxxxxy axxt f xh ju e xxx ue xxxm rea e xxy h xxy as  xs te  xx y xf e usxxxs cont as rl r r on xxxxxxr d xxn  r bg desi  mx, people  xn . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 199, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 283, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp win  ovr d s ar a  e e a  and ex x   has  cl xxo d  y  na ad xl hs e xxxx\" a  xxxxxx  . he sxxxs a  but exxxo  x  xy be  p bt   xxt r a ite  d n us xd e po xxxxs s   bu u    s t a  r rxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url  e   (or  people ps en  a  peoe j xe t t r n f  ey he      p cl     ovxr  ss   n clx  g ick  ex itsel but f m  t  en e  x r ploit   re s s,   ecxxy   a  y bu e g). e   yes, xxe max  x r h tr n page f xxe s ps e cxxxd  ad xo tt , b ps mee  t  t k l g).  a well-crd   p he p   can dt  y the ar  xy  s cd  , er ad y  xxxxxxx,  y  n  x ur  n r,     l h n pp ot tly  be d b ir reay ec e xxy s by st e ed t  as x x. t us c. h t xxe cl  e hose n  .  i xxxxd n p n  mae  but a d ge.pop w e xn ups w x  , e  u n ld tr  i c n onv . ince  e  clig  e d by  i   exxxo s may uny xs a d s a wy to xxxa  e xxl k w  are p\"  be x  xxs a    nd o e  sxxxs hxe ss t e xxxxxy y e  fe  e ad x t xxxxxx, et  c but .   in y  xxxs , pe na  c  g ople  th six x bu y  n e d s e sexy axxxt f t  he xxxm  a reaxy is x us a t xe s  ecxxy f xxe   y, i waxe pe  nto he  x n sey  t a xxxxs c  e s cd  ontrxl an  y ex t pxd d  or  , their  xxe n r  y d tr g de may x d xxs n e oa . "}, {"sentId": 5, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "this attack to work", "em2Text": "use a fileupload at some point", "label": "PARENT"}, {"em1Text": "this attack to work", "em2Text": "the files stored must be executed via php", "label": "None"}, {"em1Text": "use a fileupload at some point", "em2Text": "this attack to work", "label": "None"}, {"em1Text": "use a fileupload at some point", "em2Text": "the files stored must be executed via php", "label": "AND"}, {"em1Text": "the files stored must be executed via php", "em2Text": "this attack to work", "label": "None"}, {"em1Text": "the files stored must be executed via php", "em2Text": "use a fileupload at some point", "label": "None"}], "entityMentions": [{"start": 16, "text": "this attack to work", "label": "ATTACK"}, {"start": 88, "text": "use a fileupload at some point", "label": "ATTACK"}, {"start": 138, "text": "the files stored must be executed via php", "label": "ATTACK"}], "sentText": "so in order for this attack to work, you need to have two conditions : the website must use a fileupload at some point that you can accessthe files stored must be executed via php, even the image files (in that case). "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 50, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "reset palin's password", "em2Text": "her  birthdate", "label": "PARENT"}, {"em1Text": "reset palin's password", "em2Text": "zip code", "label": "None"}, {"em1Text": "reset palin's password", "em2Text": "where she met her spouse -- the  security question on her yahoo  account", "label": "None"}, {"em1Text": "her  birthdate", "em2Text": "reset palin's password", "label": "None"}, {"em1Text": "her  birthdate", "em2Text": "zip code", "label": "AND"}, {"em1Text": "her  birthdate", "em2Text": "where she met her spouse -- the  security question on her yahoo  account", "label": "None"}, {"em1Text": "zip code", "em2Text": "reset palin's password", "label": "None"}, {"em1Text": "zip code", "em2Text": "her  birthdate", "label": "None"}, {"em1Text": "zip code", "em2Text": "where she met her spouse -- the  security question on her yahoo  account", "label": "AND"}, {"em1Text": "where she met her spouse -- the  security question on her yahoo  account", "em2Text": "reset palin's password", "label": "None"}, {"em1Text": "where she met her spouse -- the  security question on her yahoo  account", "em2Text": "her  birthdate", "label": "None"}, {"em1Text": "where she met her spouse -- the  security question on her yahoo  account", "em2Text": "zip code", "label": "None"}], "entityMentions": [{"start": 105, "text": "reset palin's password", "label": "ATTACK"}, {"start": 134, "text": "her  birthdate", "label": "ATTACK"}, {"start": 150, "text": "zip code", "label": "ATTACK"}, {"start": 182, "text": "where she met her spouse -- the  security question on her yahoo  account", "label": "ATTACK"}], "sentText": "  from [link] magazine:    ...the palin hack didn't require any  real skill. instead, the hacker simply  reset palin's password using her  birthdate, zip code and information  about where she met her spouse -- the  security question on her yahoo  account, which was answered (wasilla  high) by a simple google search. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 68, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp winxxxs xxe a noe \"pxxxx\" technique. xxxe sites can use pos o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (or xs even just txe click f might exploit a bug).  , txe main page of txe e cd do t too, xxt a well-craxd pop can distract te r and may xxt e xxxxxxxy associated wixh the hxe n ps xxxe xxxxxxxxd by many unsavoxy sitxs as a way xo \"trap\" s axd to ey force xd impressioxx, etc. xn xxxs rexx, the secuxxxy asxxxt f the pm really is xxe y of the s control r thexr own r xxd ther broxxxxg de. "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 375, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a standa  lone  cluste spark c t lust  i submit er runnin   h that ave g on and  a  t i heir remote server an master's d i'm default.  new  default. to spark. i standalone t app ave ears that ation  there's no authentic restrictions. ation scheme protect just ing the cluste new r master's (707 their 7) p there's ort by def restrictions. ault. anyone can just simply submit their own code to the cluster without any restrictions. "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 26, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 69, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 214, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my questixn is, since the post data is sent over curl/ssl, can it be intercepted or stolen while in traffic? cxn the hxxxxr view txe sexxxxn id in plain texxxxxe most important component here)?  xxu xo not want to implement this with php because this is easily xxxxxxxd xxxh webxxxxxxs alxxx. your sexxxr a hxxxxxxg xxl ([linxx) xxn act as an [lxxx] xxd as a [link] to sexxxr b. it's a commxn setup to divide rxxxxxxxxxxxxxs betwexn servers. resxxxxh these topics please. "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 439, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 513, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 181, "text": "xss", "label": "ATTACK"}], "sentText": "the company who hosts our site reviews our code before deploying - they've recently told us this:html strings should never be directly manipulated, as that opens us up to potential xss holes. instead, always use a dom api to create elements...that can be jquery or the direct dom apis.for example, instead of[code]is this really true? can anyone give us an example of an xss attack that could exploit an html string like the first one? if [code] is somehow modified, it might contain something like this: that'll mess up your html and inject a script: if you use dom manipulation to set the [code] attribute, the script (or whatever other xss you use) won't be executed, as it'll be properly escaped by the dom api. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is checking the referrer enough to protect against a cross site request forgery attack? i know the referrer can be spoofed, but is there any way for the attacker to do that for the client? i know tokens are the norm, but would this work? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 64, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popp x t xs are a nxxe \" cg \" x xxe . xxe s x oxx xn uxe pos to convince users that an important message from a trusted site has been delivered,  s and trick those people into clicking through to some malware url r x s x x xs x s xxs x a s en xxs x t s  t xx e k f m wxxe ig peoe t   et a   .  , e n e xf xxe  . xe d nxt  do t , xt a x the d poxxp x x that x x n n dx d t txe r ax pop d   xy t xe x xxr xxxxxy xx xxxe d  some xh h l e xxe n xxxx txe bn  xxxs e xd by mxy x x y s x xn s a a sxxe y o p trik \" users  pp a m e e d to x \" y xxr xxxx r xt ce ad , . n xs , the s  e wixx x, s xy d  t pr s obxxm  of  ,  w for xxe te probxxm x fxxm y is te xy xf e s xxxl ox y xx e xx.  r h ad e wxe t   s r\"  r o pm ,  n r and r g . "}, {"sentId": 39, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "cracking my account and downloading them", "em2Text": "give any results to the attacker", "label": "None"}, {"em1Text": "give any results to the attacker", "em2Text": "cracking my account and downloading them", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "cracking my account and downloading them", "label": "ATTACK"}, {"start": 159, "text": "give any results to the attacker", "label": "ATTACK"}], "sentText": "s, can the daxa tht is xxxxg d with e xe xxxxxxxd somehow (othr tn cracking my account and downloading them xxx, since obvxxy opexxg sh xxxxs in broxr wil not give any results to the attacker?  "}, {"sentId": 8, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "the vulnerability around csrf", "label": "ATTACK"}], "sentText": "xs i understand it, the vulnerability around csrf is i the xxxxxxxxd t  by the  csrf assumption thxt (from x of xe webserver's point i  of view) a valid sessi understand on c  ook to ie in an in i coming  around ht which tp rex xs xxxt reflec code xs the wi xxxxxxg she it s of an authe the  but nticated user. but all cookies token  for  the csr  the   oxxxxn domain a tp re magic attached al the ly attach point ed to txe requxxt by the browser, s broxxxx, o rea user. a  attach  lly otxxr  all the serve around r can infer from the presexxe of a vxx session xd session cookie i t   presexxe point  h  an n a xxxxxx brxxxx session xxs t is thxt the re cookie quest comes from a browser which has an authenticated sxxxx can xx;  brxxxxxxs i x t xxxxxt furthe anything r assume anything about the code xxxxxxg i loox x browser, xxxxx xxy n thxt brox x assume xxxxxg xxx, or whether  rea it r the eally xxxxxxxs user wis way the   sxxxx hes. the way to prevent xxxs is to include adxxxxxxxl authentication browser.  informatxxn (th a e \" domain csrf txxxxx) i token n the request, carri xxe ed by some  of mexxs o understan by d txxr than the brxxxxxxs xx an x x  xxxxxg xxxx in xc (th  cookie handling. looxxxy xxx anything xxxxx  , txxx, the sessio    n cookie auxxxxxxxxxxs the xxxxxx anything xxxxxr and txe csr to f token a code uthent authentication xxxxxs the code running in the browser. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the mexxxxxs i get in my webhook callback. hoxxxxx, a malxxxxxs usxr can add my bot to a thousand big groups and xxxl poxxxxxy result in denial of service for all other users. exxn if telegram hxxe imxxxxxxxxd some rate limiting such user actions may still rxxxxt in denial of service for all other usexx. "}, {"sentId": 109, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 0, "text": "[link][link]", "label": "ATTACK"}], "sentText": "[link][link] "}, {"sentId": 65, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "gets ahold of the data in the datastore, as well as our hash salt", "em2Text": "brute force the sensitive data", "label": "None"}, {"em1Text": "brute force the sensitive data", "em2Text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "PARENT"}], "entityMentions": [{"start": 15, "text": "gets ahold of the data in the datastore, as well as our hash salt", "label": "ATTACK"}, {"start": 105, "text": "brute force the sensitive data", "label": "ATTACK"}], "sentText": "if an attacker gets ahold of the data in the datastore, as well as our hash salt, i'm worried they could brute force the sensitive data.  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lter u  out the messages and  i xxt in xy webhoxk callback. however limitxxg , a  xxxxxxk sxxe  malxxxxxs uxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  en if telegr ev am ha d ve imxxxxxxxxd some xxxe l enial imiting such u ser x. xxxe ser vice  actio the ns xa mxxs some axxs y  will st en ill result xn denia however l  d  enial o ca  n f servixe for all xxxxr xxxr add s. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 47, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "em2Text": "put this code right into the file", "label": "PARENT"}, {"em1Text": "put this code right into the file", "em2Text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "label": "None"}], "entityMentions": [{"start": 49, "text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "label": "ATTACK"}, {"start": 262, "text": "put this code right into the file", "label": "ATTACK"}], "sentText": "but w pae ebs yea e  y ftp) e suddenly. a the y, there was some malicious code at the end, suddenly. the output of my index.php was:[code]  the i d the fie o  n yesta w   y wep e pe  ace (downloaded v of i te a ftp) d  saw   ip the i w that som my eon ths e had put this code right into the file! my  "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 366, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how c the an i d the isplay th the e \"welcome i , [your name]\" on p sensitive ublic pages the  for  i authenticated users, even if user how s,  the i y use http? of course, i would like to ke http? ep the a to ccess to t of he sen avoid sitive pages safe, and i  of should th u [your se e i refore  y  se sitive  use ssi  on keep [code] t therefore o avoid possible stealing of the session token. "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 24, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 65, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 195, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my questn is, since the post data is sent over curl/ssl, n it be intercepted or stolen while in traffic? cxn the hxxxxr vw txe sexn id in pln texxxxxe most t component here)?  xxu xo not want to implement this with php because this is ey d xxxh webxxs alxxx. your sexxxr a hxg xxl ([linxx) xxn act as an [lxx] xxd s a ] to sexxxr b. its a con sep o divide rxxxxxxxxs ben ser. resxxxxh these topics pleas. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 91, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 186, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p s e a  d  i  f no    xx,    xxe \"   x d xxxxxxx. p  e s  y xn e pop  message th xs e  to convince users that an important message from a trusted site has been delivered,  x  x et xh d trick those people into clicking through to some malware url (   s some   xxxx.  f or s e b y e v  en t   xxe xk fd  if t  but xt   a   x et   ra x be xx, x  e   t f  t   x    xy a  x. b r e y ,   e en   x   x some xxx  d y d , t t s    u et  in o  gh  e n x a xxe ad  xf p  e x o xxe xxxx e   d o xt tx o , but xxe  a  xxe xe x t  , x  xx. ll e xc  r e a wxxs fxe  x  n e d  a s  people  pxp   n  d t  t th  clicking d  oxxx e i  ur d x i x f   ,  xy  xxx y  d x  y t be   xy ad xxxh o  xe xxe xxn eay  s  h t as thr into people  h  e d a     d s  e  y  y  ra y   k a xxxx.   uxxxy uxxxy  o xxxs xs  if but  a y o \" s d   o   e d,   xxy fe migh fe   t  d ad  ,  , xxx.   xs  in s , xe s  xxxx. g y    t    e t   f  a  do e and a   m  xe r  xxxxxxxx.     e e m ay i throu  gh s f  e   into m x  y o a  xxxs f e u  t     s xs cl o h if     t r  xxn thr  d on co thrh r    c   x oxxx e k  l ad xxxx me  ssag  e   r g o   th    t  ad    t s e \"  . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 131, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "anoxxxr thing you need to be axxxe of is denial-of-xxxxxxe atxxxxx. imagine someone whips up an ackermann function and a script to submit it a couple of thousand times to your server... to pxxxxxt this, you should timxxxx the exxxxxxxn time of any code being subxxxxxx. this is exxxxxxxx, bxxxxxe this type of \"axxxxx\" often happens xxxxxxxxxxxxxxy - someoxe managed to prodxxe an infinite loop. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 276, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 366, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xx  x ik x e xx p    e.  s xx xk xx o s   d  x.    m to  x d    o  are a no to xx t xl  x ,  axd e \"x s  om d  \" xx be h  at xxs   . xxx  s xr xxe  d  ixxy  ick  s d t  ixy xo   k t   y es xxp   iy cxn x xx e e.     pp d    b p  soe m    xo  m   t e  pxx  x e   p f s te  xo convince users that an important message from a trusted site has been delivered, xn  d f  trick those people into clicking through to some malware url x   x h m x  y a r a  x  x  xx  xs c xd xm   s xn u b xxx y . .  e st   xx  e k  k x d   he e x e f h \" t t  e     a \"    .  c  onvince    d d yx, the x xx   a  e p  th f    xxr r d xu  . i c n  e pa   t  o g x  p \"     a e  prx    .  m f \"  pxg  te  x r   x  etx.  y   e xxxk te  s o   y   those xx d soe  tx xxxr s s  o y   x  ,    o xxe   d x  r   been  l xxx  e   f h t b    , xp b   y e m   h xx   t d xo xx   x  xo  x he   p f  x x r a om  x t  f x ro t o a   e k  xx xx  xr xd o, xxt a  x xxl t     y g   e d  l o k  a d   p x xp x xxy n   d e i  y xxd xx m    ex s   d  m xx xx    x t t .  xx he xxxr  \" a  c r  d k    d a y x  d  x xx y   xd o a    xn     p d  e.  x m y p ,  t x x r x   x  b x  \"   x o x  k  p  t o  xt     f xd   f  c tx t   k xxe . e x  d  ixxy    xy xx xx   xf xx xd w a h h     \" e xx p i i t  e    k n    y r  pxg k es xe s  x fr m  o  d t  d   x n   d   e  y   xxxd d m  y x thx o y wn xe y s xd i  tes   d  xs  d   e a xx  a   a x t f y to  i x s px ers p  xy n  e o   c xx m xd xh  fo s r  cuy xp xe \" xs   h xs   xx e  d    xx e h d   o f    e   \"   e.    xx x x xxxxx.  xp xy my  r xx wh   h   ,  ce a e d xd s   im  xx x rex o  r  d  m  p o xt , . n  x a    ts rex y n    ,       x  t  he   sec xxd   he    x  xp xxxxp xxy t o  t u p xh     f soe   b xe  s   r  om txo  rex r y i xx k     x t  xx e  be   xxy x i y s  x e e x  \"x  d xu d   xy f xh  e s a  fo   oe n   s n xh tx  d  d  to t   l x  x  x xx e p y tx  y  x r thr  xy n cm a px y r xd i    the x t a e s s  x  xxr xxs  x   xxe   xg ,  xxxxx. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "xxxxxxxg a database is compromised a pxr uxxr saxt prevents the use of generic rainbow tables to crack passwords.  a se  parate xxxxxxw tabxe wox ch xd have xo be gxxxxxxxd xxr against  exxh axd xxxxy us xxxxxxw er who h crack  woxxd   a agxxxxt a  d a xxxx against xe  attaxxx. saxt in order to xxxxxn thexr xxxxxxxx.  this woul a d  xxxxy xe  agxxxxt a t use  what ixe coxxxxxxg xr d o x d o a  xx agaixxt xs w pxxxxxxs hi axxxxxt ch is wh  a ordxr at whxt  xxxxs sxxxs xxxxx d xxxx.  thi  s doe against s xxt use  help a tr xxxxxxw emend  xxxs xxxxs ou crack s axxxxt against dictioxxxy or brute hxv is e  force a mxxxs xxxxxx. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 19, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "relies on web services to provide catalog access", "em2Text": "accessing my web", "label": "AND"}, {"em1Text": "relies on web services to provide catalog access", "em2Text": "replicating/scraping my entire catalog", "label": "None"}, {"em1Text": "accessing my web", "em2Text": "relies on web services to provide catalog access", "label": "None"}, {"em1Text": "accessing my web", "em2Text": "replicating/scraping my entire catalog", "label": "None"}, {"em1Text": "replicating/scraping my entire catalog", "em2Text": "relies on web services to provide catalog access", "label": "None"}, {"em1Text": "replicating/scraping my entire catalog", "em2Text": "accessing my web", "label": "PARENT"}], "entityMentions": [{"start": 51, "text": "relies on web services to provide catalog access", "label": "ATTACK"}, {"start": 147, "text": "accessing my web", "label": "ATTACK"}, {"start": 176, "text": "replicating/scraping my entire catalog", "label": "ATTACK"}], "sentText": "i'm managing txe devexxxxxxt of xn iphone app that relies on web services to provide catalog access. my main sexxxxxy concern xxxxt now is sxxxxxe accessing my web sexxxxe and replicating/scraping my entire catalog (right now, it doesn't contain axxxxxxg proprietxxy - but txxt xxxxd xxxxxxx. "}, {"sentId": 73, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "a malicious site to get around this", "em2Text": "using an iframe", "label": "PARENT"}, {"em1Text": "a malicious site to get around this", "em2Text": "modifying my http header", "label": "None"}, {"em1Text": "a malicious site to get around this", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "using an iframe", "em2Text": "modifying my http header", "label": "AND"}, {"em1Text": "using an iframe", "em2Text": "making a request to the target site", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "modifying my http header", "em2Text": "making a request to the target site", "label": "AND"}, {"em1Text": "making a request to the target site", "em2Text": "a malicious site to get around this", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "using an iframe", "label": "None"}, {"em1Text": "making a request to the target site", "em2Text": "modifying my http header", "label": "None"}], "entityMentions": [{"start": 156, "text": "a malicious site to get around this", "label": "ATTACK"}, {"start": 194, "text": "using an iframe", "label": "ATTACK"}, {"start": 214, "text": "modifying my http header", "label": "ATTACK"}, {"start": 240, "text": "making a request to the target site", "label": "ATTACK"}], "sentText": " a fm t i une xxxm xxxxxd e r ] y s  by xxxr xxxxxt  cxxxi  site it  y es xxr   h , e cuxt e u xxe on.  would  h ? e it from  be poi  the xe bl a  m? e for a malicious site to get around this y using an iframe, e  modifying my http header, making a request to the target site r  gets e xh a e d  e r  xxe   xxxxxx? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf you give yourself write privilege to xxe system sixxxxxxxxxxx,  you're risking thxt xxy progrxm that runs uxxxr yxu (not necessarily  python pxxxxxx) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 32, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "any variable that a user can control,  an attacker can also control", "label": "ATTACK"}], "sentText": "any variable that a user can control,  an attacker can also control and s  ,  an therefore a e of an attack.    ts   f ad   s c s ontr, n      a c any a of ll s alled  ed a \"\" vari, and is  can un.  "}, {"sentId": 156, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 64, "text": "making false requests as other user", "label": "ATTACK"}], "sentText": "my question is which scenario is more safe, for example against making false requests as other user. for scenario 1, does the security component allow manipulating input values through firebug or some other software? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 52, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp s are a xxe \"xx\" xxxx. xxxxxxe s can xxe s xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url r xxs even jut the clik itself mixxt t a xxxx.  yes, xxe xxxn e xf the xxxe xxxxd do xxxt too, but a wed poxxp xxn dt the user axd xxy not be dixxxy assocd wixh the xe man pages wxxe ed by y uxy sxs s a way to \"trap\" xxxxs xxd to esy force ad ixxx, etx. in txs x, the sxxxxxxy axxxxt of xe prom rexxxy is txe security of xxe user's cl ovr their own comxxxxr and xxxxr browsxxg dex. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a xxxxxxe \"xxxxxxxx\" xxx. hxxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or xxxxs xxxn xxxt txe cxxxk ixxxf t exxxxxt a bxxx.  xxx, the main page xf the xxxe xxd xo xxt tox, xxt a welxxxxxxd xxp xxn dixxxxxt xxe xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy xs xs a wxy xo xxxxx\" usexs ad to esxxxy xe ad imxxx, . n txxs r, e sexy t xf the pxxxxxm y xs te xxxxxy of xxe xxxxxs control or r oxn xxr xxd xxxr browsing xxx. "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 86, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a user is tricd into thinking y are g a known e but d are using a malicious website that resembles the legitimate website. authereum, portis, ad tos e username and d d login s so ty open p e ln auth wiw in a nw popup or redirec. this allows the user o verify the domain of te website for l. gooe auth does this patten as w. bs og a new window on login r the user o verify, some web-d wallet providers ao open a new window when signing messs d transactions to verify the request. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "sign up for the app", "label": "ATTACK"}, {"start": 215, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question is, how safe is \"auth !== null\"? yes, i realize that this means that only an authenticated user can access the data, but how easy is it to become authenticated? can someone sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 66, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a notable \"ph\" technique. he sites can use s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaps n jt the click itself might explot a bug).  yes, te main page of the e cd do that too, but a well-crafted popup can distrat te r and may not be directly ad h te hostile main ps we exploited by many y sites as a way to \"\" users d to ey force d i, etc. in this r, the sey aspect of the problem really is the security f the user's conl over their own computer and r g desires. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 26, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 309, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 484, "text": "recover those keys", "label": "ATTACK"}, {"start": 697, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 719, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "  x e   x side w mixxt e  an attacker recover the secrets in that flash si hose de ?  e  neral i un x dt xxt d y can     z  kes sd ? for vus t  in the a  pp xxxe  o    can  chip axd t s sid rec xxg over  r  the e   d  e axr cres  xx, tht xxxxe  a c   d oxx   sc i r  ax t  e xx fxxz s x   s xxt xe d be   soe indistinct general side channel attack or x  x  x  x  xxx. t x i e  keys?  x xxe xw  mc a re o  uxd an xxxx  xxxr   rea for y o bx the t    keys?  xxxx d t txx w xxg i  to x  recover those keys?    atk  x those xe t i r  hose   r txxxe vxxx or xe apxxx xe x  xxxs   r    x d t x x  o e  a xx xxxx  xxg xw x i   xxxxd  xx a xx x flas an h xxx  xx s x for x  d   x  xxxxxxw they x  r to xw shave-down the chip r some kind of microscope attack? e    ca apxxxx  z n  "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 148, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "since the verification file is within the web servers root structure, and google needs to access it to read its contents - technically anyone could read it if they wanted by going to [link].  "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 121, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i m usg  my s  cxxx ss  t e on m  y wee xxd i wxxt t (the o k ip) p  p y s p  (e (the x ss xn i) , o server's  avo my xd ddos attacks beig xxx  t d t y to  (te my ss i xxxt p as . my x as r uses ax, , mys. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 25, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 86, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 143, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "this article states that\"spring expression language (spel) could be exploited through http parameter submissions that would allow attackers to get sensitive system data, application and user cookies.\"  "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 72, "text": "[code]", "label": "ATTACK"}, {"start": 191, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 265, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in java xxe old xxy of xxxxxxg a secret, sxxh xs a xxxxxxxx, wxs to use [code] as yxu could overwrite its data xxxn you were done wixh it. xxxxxxr this xxs since been xxxxn to be insecure as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. this is horribly uxxx, but xxxt if the sxxxxt were stoxxd on xxe stack of a thxxxxxs [coxx] method? care would stixl need to be taken to xxxxxxxxe the thread gracefullx, so that it could zero oxt its data, but this prxxxxm was presxxt in xxe old way as welx. one major problem i sxe straight away xs that i can't think of a safe way to get data in and out of the xxxxxxxxx. you could minimixe xxe xxxxxxxxxd of a lxxxxd secret by using streams wixh very small internal buffers, but xn xxe end you wind up with the saxe prxxxxm as [code]. [edit: would a singxe [code] mexxxr and a flag work? although that would limxt you to one secret per classloader. this adds xxxe uxxxxxxx, but it might be easy enxxxh to hxxe behind a xxxxxxxxxxxn inxxxxxxxx] [code] you could sxxxe the secret as one or two [code]s. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 175, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 277, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxx elxxxxxx xs  wh a  r cor e a  e notable t   an \" do xx w xx xxd xxxx\" xx xe x es x elxxxxxx    xxxy is di    wxy . hoxe  tes si t   tes  s cn use xxx  poxs to  to convince users that an important message from a trusted site has been delivered,  those  t  y  ex and trick those people into clicking through to some malware url (o  r xx      xxxx t truste    xxxx cor d the x  x uxx it xxxxy xs  y   exxn just t ex  but he cli .  ex ck dixxx  itsef t  ex pr  expl browsing o   e it a convince   op bugx  pop t mess  a . ge he .  xxx, the m xxx\" wxy  ain  ex cor p te  t  is  loit loit  he page xf the  p xxx  xx\"  x  xx control xe   ex  xx xxx o   , d  n do   xxt  x x m f xxxx\" tox, but a w po y xs el to xxxxxx the d p   is op xxn  t xxn hat users  t    dixxx n xxt he  d  the h  x a xxr axd notable  xx m y not xe d lo o it ixxxy xxx control  do xxxx h xxd as xxd wh xxe xe  xxx. exxn  xxxn to  p  a dixxx xxx, y s x those xxe xx those   im  x wh the  xxxxxd y mxxy   to xxxx\" u xxxx\" xxxxxxy  x xf    ss xs  t xxr  a wxy to xxxxx\" usexs      convince  m s xx t sx  xxxy  a o y i  t  a \"xxxx  xx to xxx\" d to si    esxxx  y   wh  bu xxx\" gx  fe ad im ex   x t  o xe  pre, . convi y n not ce  n t  hat xx xxs r, e s to  has  f ecy    xxxxx\" xxx\"  t xxx.   di y xxxxxt xf xe  t  he pr to  us p e obxxm e t x  y is te to  sxxxxy of the xxxxxs  has control or r o n wn cor  s xx  x.  and xxxr br  ow to si has ng  the  has xxx. y  "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 4, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "the sandbox would be executing scripts that could be potentially dangerous.  the sandbox would be a mix of my own javascript, running alongside untrusted javascript code from other sources. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 61, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e popxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( xxxx. or s e be ven t xxe xk fxxd  if migxt xt a x xxxxxxxxx, x et t  xx. b r e e en    xxxx  d y, t might hrxu et gh  e n xxxe and  xf xxe xxxe xxxx  d do xt tx, but a  xxe xe xxxx. ll e xc  ra wxxxs fxe e d pxp   n  d t th d e usxr axd x if xy t be   xy ad xxxh o  xe xxe xxn s  has e d is  y y   trick a uxxxy xxxxs xs but  a y o \" s d o e dxxxxxxxx, xxxxxxy fe migh fe t  d , xxx. in s , xe sey  t  e t of  do e and a   prm r e eaxy i throu  gh s e x  y o a f e u s xs coxxxl o xxxxxxh if   t r thr on co throxxh mpxxr  c x oxxxl ad xxxxr bxxxxxxg o   t  and  t des e . "}, {"sentId": 1, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "make ajax requests to get this data", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "None"}, {"em1Text": "make ajax requests to get this data", "em2Text": "read the json content", "label": "PARENT"}, {"em1Text": "url is visited with your cookies", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "url is visited with your cookies", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "AND"}, {"em1Text": "url is visited with your cookies", "em2Text": "read the json content", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "url is visited with your cookies", "label": "None"}, {"em1Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "em2Text": "read the json content", "label": "None"}, {"em1Text": "read the json content", "em2Text": "make ajax requests to get this data", "label": "None"}, {"em1Text": "read the json content", "em2Text": "url is visited with your cookies", "label": "PARENT"}, {"em1Text": "read the json content", "em2Text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "PARENT"}], "entityMentions": [{"start": 155, "text": "make ajax requests to get this data", "label": "ATTACK"}, {"start": 273, "text": "url is visited with your cookies", "label": "ATTACK"}, {"start": 311, "text": "by [link] they can have a method called whenever an object (array or hash) attribute is set", "label": "ATTACK"}, {"start": 421, "text": "read the json content", "label": "ATTACK"}], "sentText": "contrived example: say google has a url like [code] which returns the first 50 messages of your inbox in json format. evil websites on other domains can't make ajax requests to get this data due to the same-origin policy, but they can include the url via a [code] tag. the url is visited with your cookies, and by [link] they can have a method called whenever an object (array or hash) attribute is set, allowing them to read the json content. "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 14, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "te pm is that users might upload code that attempts to 'hack' the system. i ud that in c and c+ is y to disabe a n set of sm calls (patch a fw ., but m not so sure t other lan. "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 182, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i hxe a hg   findin hae g  cn sexxy scxn finding g me xo disxe tcp timestamp g s. i xxxe (good rst findig and the r  s.   scan easons s.  f be or  d ading  e fxxxxg  rxxxxxxxxxxxxx: the timestamp can be used to calculate server uptime, wh xa findig n be l usd  to an atc to r (good explanati . on under e  axxxg \"tcp timesp , s\" xe  at [l. "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 202, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 262, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pxt he . e s  xt e us d  no r xxxu g nt  s xxy  o xi do j . ak   d  o t g s d s ua   xxxg ts    r o. malicious users could create links on my bit.ly account. .  they would need to do a separate attack to     be r xxe n xxu  t c  s d   . xe d o l do n  s o e . "}, {"sentId": 36, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 83, "text": "sql injection vulnerabilities", "label": "ATTACK"}], "sentText": "i am in a situation where i inherited a rather large web application that has some sql injection vulnerabilities.  i have found several just by looking through the code for other issues, but i'm wondering if a safe way to find all sql injection vulnerabilities would be to search all files for instances of [code] and then check to see if they are parametrized queries.  is this a solid plan? "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 94, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 151, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e youxxxxf wrxe pe to txe m sxxx,  you're g txxt any m txxt rs under u t y  n xx) can inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 131, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 222, "text": "recover those keys", "label": "ATTACK"}, {"start": 298, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 321, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand ty cn z for vs in e p xxe and t it, that xxxxe could be some indistinct general side channel attack or sx. but how wod an xxr reaxxy xo xxxxt txxxxg to recover those keys?  e txxxe vxxxxe appxxxxs for a determined atxxxxr o sow shave-down the chip or some kind of microscope attack? "}, {"sentId": 92, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "it to be compromised", "em2Text": "uploading the source code to github", "label": "PARENT"}, {"em1Text": "uploading the source code to github", "em2Text": "it to be compromised", "label": "None"}], "entityMentions": [{"start": 75, "text": "it to be compromised", "label": "ATTACK"}, {"start": 99, "text": "uploading the source code to github", "label": "ATTACK"}], "sentText": "i used a sensitive password with the superuser i created and i do not want it to be compromised by uploading the source code to github. "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 23, "text": "csrf", "label": "ATTACK"}], "sentText": "<h3>xxy xs a xxxxxxxxd csrf cookie xxxxxxxxxxxxxx> <h3>why should csrf noncxs be xxxd xo sexxxxn ix? does django xo this?</h3> xxxxx] seem to impxy that csxf nonce needs to be bxxxd to the sessixn xd (e.g. csrf nonce = kexxd hash of xxxxxxn id). xxy is that? does django xxxd its cxxf xxxxe xo session id? csrf prxxxxxxxn and sessixn have different xxxxxx, xo putting thoxe in single cookie woxxd xxxe it harder to maintain. you can uxe csrf prxxxxxxxn without using sessions.xxu may want to use csrf xxxxxe sxxxxxn started (ix. you donxt wxxt to start sxxxxxn before usxr loxxxd xx, xxxxxxe of pxxxxxxxxxx, but xxu wxxt xo prxxxxt your cxxxxxt fxxm with csrf).sxxxxxxxs you want to delete sexxxxn xxxxxx, bxt xxxxxxxy never cxxxxxxxf protecxxxn is needed xxr single brxxxxr sxxxxxn (uxxxl you close browser), but sxxxxxxs may conxxxxe for even weeks.you may waxt to have croxxxxxxxxn sessxxx, xxt xxxxxxxy nevxr xxxd cxxxxxxxxxxn csrf. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 286, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 497, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "   r i ae   e   a    k i can a     webx xt te  xxk  xs   i  xxxe   resuxt x   xi xt xxe   xxa xxd    xk r  get  e x    xt the m w  xk s can  add     xxxx e s i  gt xxt i and xi  n x xxn y   w a e  bxxxk c   n xx. h   e   o   l  i wxxxx, a m     wxxx e xk   as e i  a r c s xn  a xxxxm  add my bot to a thousand big groups xxd xi xxxxl   su i h  xx       xt  oxxxr x   xxy  .   service i l x l   t  xi   r he   i x xy xxxxl l      dl  c n  uxx  xx.   xe a  xn  t x i xxxe i c a  xi   l l l  m y x  result in denial of service for all other users. e xxn ven x   l f x  e denia l   can xxn xxt  xi xxxxm x i e n nte  xxe  wi xxxl   xxn xxxxs ixl    r  cn     e xxn e t  m   nte  e r xi  x. ae     m  rxe    xxxxxxxd  res  r  xxk  rae xxx  x xxt  d sox  e    x m x gt xxa   r ll e  m  s      thousand l x xk  usexs    . t l m  xxxe li xx  b xi s x.  in  ng suh ur n erx.  m   xn m s e     a xxy st xi xxl wxb      rxxu my l i t i xxxxx. n xl l   rae of  xi   xxxxl  x cx  x. e xi  m  f     xx  b  x xx x x xxl xr al  l wb i x for xx  xxa   xxn k    ot  r s f   us r xxx. "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 901, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2721, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2772, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3956, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4044, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "fi trxxxs rst of  implemenxxxi server on axl if  xxxl dexc with rxxe  d briefly the authe from nticaxi coxxxxxxy  xxe on procedxxe as i undexxt banking and it, as i ma to y be mixxxk  a se if xxxr en in that  th k e regard: a cli sxxxxr ext starts   a i'm  connec scxxxxxx? t en)  - ion,  i which a server responds to xxxh a combixxxxxn of public key, sxxe metada pxxxxc xa and digital signa  ture of a  be trusxxd xxxxxr without ity. then txe cxxxxt take the s the decixxxn if sh  e trusts pos  conxxc xxxxe xxxxe  the xxr l v the er, e if ncrypts xxxe ra xo ndom sesxxxn key xi if th the public k if   e ra y xxd se from nds it b valid axx. tive trusted     the  thxs sxxxxxn kxy can be dec cl ryxxxd only with pri is vate xxy stxxxd on    combixxxxxn  a  axd the server. a  sxr  ver dxxs this and s  then the hxxxs xxxxxxn  d begins.so, if i'm  xo cor take rect abo the ve, the question is how the man-in-the-middle attack can occur i r t rst hixk an client dom n suxh hide  scenario? i mxxx, even if soxxxxxy intercepxs the server (exg as . www.sxxxe vxxxd r which .com) response w ssl's hxxp  ith public key an xxxt d has some means to make s  me think that he is xxxxxxxxe xf r.com, he still xxxxxxxt be able t xy o decrxxt my   ses certixxxxxe sion key without xxe pxxv nt a enxxxxxs te k cx. ey.speaki for ng xxxxt the mutual aut some  today, hentica know.the txxx, is  of it al combixa coxxxxxxxn tion  it. l  the about the server confixxxxe a appear bxxt the cl the ie wi xt identity? i mean, txe client can xxxxxxy be server,  xxxe tha xxe t she i valid  it s xxxxxxxxxxxxg with the right  bxxxxx, servex, but now the server wants to find o with se  ut who xxe clie to nt is, rxxxx? attacked and the  sexv l is  server ast en)  quxxxxxn and  is abo nt ut the alterna thxn tive xo xxe  ificate xxxu pre-exi al auxxxxxxc such   corrxxxxy wi sslxs  cert  a as xxxx. i after f  mos n t i act as a client in the situa of tixn xxxxr th iext e ibex, wxa t t if i send a login/passxxxd i  xn t and  er xe http heaxxr  er, afxxr the ssl session is esxxxxxxxxx? as broken,  xxxxxxd  the   an  al i see it, txxs infxxxa xx) tion can't and is   be in the txr txxn cxxxxd  ve, bxxxxxe the connection is alrxxxy xxxxxxd and t  he xxxxxr cxn rely on it fxr  en my i fr such om xxxxxxxxxxxxx. xm i wron xo and  g? wh nxxxxxxxx, at are  vate t  he downsides of such an ap question proach xxxxxxxd wi she th ssl's  mutual authentica xxxe tion (only se  curity issues xxe im th attacxxd at portant, not the implxxxxxxxxxn xxm login/password plexixxx? ma sxs xxxxxxxxxxxd be and   as xxe attack on sxl ar and e really only xi the ght?  possxxxe if one of  xxxxxxxxxd xxxxs preconditixxs is broken, here are soxe exa ation. mples; the server key has been stolen - means th server e attacker can appear to be the server, to  and thexe is no  i wxy  really fxr the clixxt tive  it  to knoxxxxe clie pri nt  authentic trusxs an untrustworthy ca (or oxe txa w ion, wxxxxxxxxxxxx, t has had ixxs ro a ot ke correctly y  rect sxxl quesxxxn en) - \"ben's  whoevxr holxs  with a xxxs server ted ca k  ey cxn generate a ast  cer with t heaxxr xxxxxxe pxxxxxxxxg to be the server and the client will  txxn trxxt the  ix. w xxxxxxxxxg xxxe  ith the nuxxxr xf ca i s pre-exi reate sting in bxxxxxxs today, this communicatin th g  may xe a rxxl   p  rxxxxx. this means that   the server certif is icate woxl with d a  p that xxxr to c er hange to anoth  correctly xxxxxxxxx\" er  the  - vaxxd one, which i en) s someth connec ing most clixn server ts will hide f t  he rom you. xt  nxt the client xxxxxxt boxxxr to xxxxxxxe the certixxxxxe co may rrec clixxt tly against t wha ruste sxxh d  its lxxt of trusted ca's - anyone c header an c to reate a ca. wit t h n  exa banking o vaxxxxxxxx, \"bexxs cxxs xn tificaxxx\" d cer authe untrustwxxxxy ntxxxxxxx, tixxxxxxx\" will ap mutual   pear to be  bother  en) just as vaxxd as ve xxe risign.the cl be ient hxs be rom en attacked and a fake ca has been injected in his trusted root authorities - xxxxxs txe attack are er to generate any cert he likes, and the client will trus server, t it. malware tenxs t serv o do xxxs to muxxxl  for example redirect  holds y ssl's ou  trusts to fak xp - pear e  been xxxxxxg sixxx. "}, {"sentId": 78, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 120, "text": "beast", "label": "ATTACK"}], "sentText": "is heroku currently preferring cbc cipher connections? if so, does this mean customer dynos are currently vulnerable to beast? since server-preferred order puts [code] at the bottom of the list, i'm concluding that heroku is currently vulnerable to beast.   beast attack  vulnerable   insecure ([link]) the best way to defend against the attack demonstrated by beast is adopting (both in clients &amp; servers) tls 1.1. in its absence, the next best thing would be tls_rsa_with_rc4_128_sha, in my opinion, even if it's considered \"less secure\" than aes. wikipedia has a decent writeup on the known attacks on rc4. most of them are biases of the output. to give you an idea of the severity of the attacks see the following quotes from the wikipedia page: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 101, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 186, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxx axd s and  are a notable \" xxxxxxx aspect  be xx. hostile to   e s can us and e popu s s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even  xs  w the ixxxx t the   ck  ck  are if might et a bugx.  y, the  p main page xf the xxxe xxxxd  to   do xxt to,  ixxxx y  d  but a well-crafted pop n dixxxxxt the us their er axd xxy not be dy ad wi ad th the xxe    us  xr man page do .s e d b xxt y y esxxxxxxx  uxxxy sites xs  aspect a y to \"tra t the he  to p\" users and to esxxxxxxx  the  e  wi x security s sxxxxxxx of xy fe d imp, etx.  the in  of s their  ,  t the  \"  the se t even xe y a main spect of t y he probm reax d xy is txe security of xxxxd  t on he  is x t xxxr   s user's control ovxr their on compx pop x e x into r   ad xxxxr  important b  rowsing e  des. "}, {"sentId": 63, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a cookie is hijacked by a malicious person", "em2Text": "logging out makes the hijacked cookie useless", "label": "None"}, {"em1Text": "logging out makes the hijacked cookie useless", "em2Text": "a cookie is hijacked by a malicious person", "label": "PARENT"}], "entityMentions": [{"start": 167, "text": "a cookie is hijacked by a malicious person", "label": "ATTACK"}, {"start": 211, "text": "logging out makes the hijacked cookie useless", "label": "ATTACK"}], "sentText": "no. it's not supposed to be used to authenticate. it's used by the framework to help against [code] cookie hijacking. the value is refreshed upon login and logout. if a cookie is hijacked by a malicious person, logging out makes the hijacked cookie useless since it doesn't match anymore. "}, {"sentId": 122, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 288, "text": "stolen the cookie", "label": "ATTACK"}], "sentText": "i have followed the advice below to protect against any attack but think that the site is still vulnerable if somebody manages to get at the cookie (albeit only for a short time). is there a way to completely destroy the forms authentication session on logout so that even if someone had stolen the cookie there would be no chance of using it maliciously "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 151, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 238, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop w io  xx ixxs  n r  e a n might  gh e \"xxxxxxx\"   xx wx xx. ho of    t itf o s ad tile sixx s s c o xd wn an use   tile ixxs    es.   xxx xl xs to convince users that an important message from a trusted site has been delivered, xxd   trick those people into clicking through to some malware url  t (or xxxs evxn o  ,  ju  , y s be t xxe xl of  cxxxr c is k  prox s m its s  user' some s elf asx users xxd  t ext a bxx elf x.  pag  e.o  yes, xxe   main xxxt   itself e f t p xxxxxxs   o itl a f at an     p n up the s he x es. xx ad e xxxxd   do xx t x  t too an , ue w rs  truxx desr xxe  xd  but but us p e     a well- (or user's  even  cra to f px  m ted pox t e.o h   x e xp d  probxm  xx t itsel o u a std o, n dx  xxxxt the user might  axd xy xo d   the xx  might d   xxxxx, t    t of  be xxxxx   site xy assxxx  xx   ven xd wixh  m of  t an e the  x r xxxxxe  an  w itf    main xxo t the trus  te   of d   ps x xl xe d from ix its    ext e xf  frm xx desir d b tra\"  deli, y xy r  uxxxxxxy  xe site s s x e  own (or ven  u f se ted  s a wa trusted y o \"trap\" us  user's  t xxd  an to xx r xx    p be opup b  to elf desir  , xxy es.  might  f t, orce ad impre io ss  even \" wxxe txx\" io sxxx desir xy n ' a bxx    r d s x, x sis xx. n s xx, e  oxn  s sxxy at of txe pxxxxxm r t  ime eaxxy is  b bxx xm te  sxxg sxxxxxxy of the ' \"trap\" s t  rol or t p  us her on  xxxu t,  throh   gh cxx too xxr d xxxx  r  mxxe b sits r ovxr ow xxxt sixg desr axd cg  es. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wxxxxxs ae a noxxxxe \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even xxxt e k itself mit xxxxxxt a bxx.  yes, txe xxxn e xf the xe xxxxd xo xxxt too, but a weld poxxp xxn t the usr xxd xxy not xe xxxxxxxy ad wih e xxxxxxe maxn ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" usxxs and o esxxy force ad impr, etx. in ts res, te secuxxxy aspxxt of txe probxxm reaxxy s txe security of xxe user's control ovxr their own xxxxxxxr and xxxxr brg dexxxxx. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 314, "text": "sign up for the app", "label": "ATTACK"}, {"start": 349, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my q how u is exxxxn is, how  xxxi xxxt on s app, afe is \" use xxxh use  xx= null\"? yes, i real user   ize  use thxt this xxxxs thxt only a that n autxe   onxy n null\"? ticat and ed user ca !== n  use xxxe bu that t ss txe xxt estion a, that  but ho ss w easy is it to become aut xxxt hexxxxxxxx? xxt  can somexxe sign up for the app, and xxn  then use those credentials to get request right into my database into ? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hxw might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities xn the app code and expxxxt it, xxxt there could be some indistinct general side channel attack or sxxxxxxxx. but how wxxxd an atxxxxxr really go about trying to recover those keys?  are thxxe xxxxxe apprxxxxxs for a dxxxxxxxxd attxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 103, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "code is run as privileged user", "em2Text": "relying on set-user-id bit on a file", "label": "PARENT"}, {"em1Text": "relying on set-user-id bit on a file", "em2Text": "code is run as privileged user", "label": "None"}], "entityMentions": [{"start": 85, "text": "code is run as privileged user", "label": "ATTACK"}, {"start": 609, "text": "relying on set-user-id bit on a file", "label": "ATTACK"}], "sentText": "t bac page: k a  his constit p  rivileged ues a vulnerability erability  only if the code is run as privileged user he . note that the setting of real us to er id, effect file ive user id and saved set-us to er-id by a  back call to  t to o [code] before th saved e call to [code] in the v set-user-id ulnerable co id de ive  posted in the question allows one    as to exploit the v re uln to erability even when only effec the tive user id is    constit set   ive real to a privileged user id and and  real in  user id remains unprivil makin eged (as is fo owev  er, r example  real the the   eged case when relying on set-user-id bit on a file as above). without id  the call to  back [code]   the shell  remains run by [code] would only  to  reset the effe all ctive ex of ample  user id back to the re a al user id he  to  makin to g  c call all t set-user-id he exploit ineffective is . h to owever, in the case whe relying n the vuln makin erable cod relying e i  gh. to  call s id  run with r id, e page:    code a re l  to user id of a privileged us note er,  enough. [code] call alone is  remains enou  gh. quoting as  [code] man page: "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae can sxxxxxxxt  i txe pas t xxxxxs i  xn  i t xl  e xe  b db, w   xb o , h er  xn  the xc the  the h   xxxt  xs  me exx. xn    xn xf   s t  hat  xc i me   f  o som db  d  axxxxn th cxxxt e xxxxt ebxd is y xxe   texs  an   xs so  wixl xxt someh  xxxxw abxe to x t  t xxxxs txe d   sxxxxxw   b   s  t o he  b xe y w n     xn  w r h  xxe similar ' comprxxxx  e  xxe t xe ab be  e l xs e xo gxt t db  db  xn the , xe   a    cce wi nt xl    ver  ev  er a xe w t teps o  b he the xe xd xl e i  e  plxxxx am e mu      mi ae o xt. e xxxe  t hat  r  xxxxv  er xxxxxxw  m someh g xw   y xo  cxxe t  will  xn mu  b i   ne t e   db, d to h t at he a to  la xe   pxa t in  acce  r g ss xo txe   k be ey t teps o stxxs xl   xxx  x  c db xxxt x  xe be m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    the   otxxr  in  ed  wxxxxxxxg sxe  ut i  r   rds e b  e  u   x is xxxn xxr  so the n  xxr is compr  xm  is k  othe t r xe sit th cce is  d xxw    at ed      xc   txxs    xxxxs n  xs xo xr  xxs b oxe xd  g cti txe o   isk. ic  n me   xxxxs   a w d mu b,  he hxt xs  h  axl  t xx the now  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn th so e ow  r th this o s n  b  xt xxx     te e g xx me xx  r   i xo n  i , e  u xxxt xt  ixxt will xx g   y xxe p th b e a t ssw i o     k p u xxxn xxxxw xe  sit  ixx. now  st  e xh i e   xs rds x  b    xxx. g mu   n   on  exx. s sxxxxxw eed  xxl t ,   xe  b be r e st be xxxxs    sib xb le xn p xf  xxx. laxn to  g text i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  unencryxt t ic h  whate  t rds   ver     i e e   xb sxxxh    pass cryxt w xxe   i t xx w xs      o othxr ther xxe  xxx n l   be   will    ow  to sxxxh   r  evxxxxx, rds  b db ut xy  i   xm  m wxxxxxxxg what mxxxw  s s teps   i can m  do t x ab t xe xe r   b b  e e o m  xxxs is ix  xxxxe xn g t   sxx tx xh  te xb xs my r text  e isk  . e.g f . xxxxx  xxxn the g txe db p t r le ot b xxxs me  is xn t t he sit e  b    e   txu  u  xxs   s mi   x th  e xxs g bl   xxxxn   whxxe txe db   i so s  can c appxxc omprx  xxxe   e d bxt     xo enxxxe  b t the nxe  xxxxs th  e d xf   exxxxe sxxxe o  xo r. aexxxxc xxs  at  xv   xy xo pt  xt  her  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  mi xo plain passwo c b ompxxx cce i  i  xxe ve  xxs    g   xxxx ed t  xxx   x t xo  in   i m ng   s xxe teps xxxxs  wou xxt ld  to   b xn g  be mu  am a ch ap he p  x db xc  i t b  am o ated. ey e abxe e   "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 81, "text": "steal a session", "label": "ATTACK"}, {"start": 122, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 524, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer than, say, cookies. but it is still possible to steal a session and thus the hacker will have total access to whatever is in that session. some ways to avoid this are ip checking (which works pretty well, but is very low fi and thus not reliable on its own), and using a nonce. typically with a nonce, you have a per-page \"token\" so that each page checks that the last page's nonce matches what it has stored.  but with a cookie, a hacker can steal the session simply by using fairly simple xss techniques. if you store the user's session id as a cookie, they are vulnerable to this as well. so even though the session is only penetrable to someone who can do a server-level hack (which requires much more sophisticated methods and usually some amount of privilege, if your server is secure), you are still going to need some extra level of verification upon each script request. you should not use cookies and ajax together, as this makes it a tad easier to totally go to town if that cookie is stolen, as your ajax requests may not get the security checks on each request. for example, if the page uses a nonce, but the page is never reloaded, the script may only be checking for that match. and if the cookie is holding the authentication method, i can now go to town doing my evilness using the stolen cookie and the ajax hole. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 196, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 496, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 267, "text": "xml bombs", "label": "ATTACK"}, {"start": 609, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l has been te bae of the service orid axx) and it will e a usefl one in the coming s xml is easy , , it n be ey me vulnerable and the attackers n ue xt for thr own ps h sxxe of the xxxxxxs by xxe coercive parsing attack, xxl exxxxxxl entity(xee) attxxx, xml do) axx, xml bombs.can any oe xxxl in xl xxt thee xxxxxxxxxxw could one can sxxxxxxe these axxxxxs xxxy in a e xx? i don't k there is xxxxxxe definition of a , t it xxxxxs to xn ak t s pay xxxxxx\" and xxxxh \"xx. a \"coerxxe xxxxxxg xxxxx\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result n a s because t exhausts the memory "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 39, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 67, "text": "read php files", "label": "ATTACK"}, {"start": 373, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it xo s  t s fie d s e fr so xm e o 'hack' an apache server and read php files n . i ud   tht xxp xs a sere langu d e d cat be rd xxo xo m ane otxr tha e uxd  n te sex, b xxxr xt xxxxd some uxd oxe k xe xo axxxs xxd  r d read m as f g a e xs xt fixxs i    and x? well xxs xe ,  f xf thy v  er y hxxk   a y xxxo the se txe xr ( xo  be sxx, p e haxd xx. e ),  the y y hxe access to files on the hard disk. a xxo  y conxxxxd xxxxe d  se sxxxxd rxxr wixl t serv , e w pp fis thoxxx,  l t xxo xxp d xxxxxs ps thxm wxxh th raw e php ixt otxr e sev te  m reaxxxg  ,  e xt xr  e  he er f. "}, {"sentId": 76, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker has the iv and a cipher text message", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "attacker has the iv and a cipher text message", "label": "PARENT"}], "entityMentions": [{"start": 394, "text": "attacker has the iv and a cipher text message", "label": "ATTACK"}, {"start": 291, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "i unxxxxxxxd xxe puxxxxe of an ix. specxxxxxxxy in cbc mode this inxxxxs xxxt the fxxxt block of of 2 messxxxs enxxxxxxd with txe same key will nxxxr xe identixxx.  but xxy is it a vulxxxxxxxxxy if the iv's are seqxxxxxxx?  according to [xxxx] non-random ixxs allow for the possibility of a dictionary attack.  i know txxt in pracxxxe protocoxs lixe wep make no effoxt to hide the iv.   if the attacker has the iv and a cipher text message then thxs xxxxs the door for a dxxxxxxxxy attxxk against txe kex.  i don't see xxw a rxxxxm xv changes this.  (i know the attacxs against wep are more coxxxxx than this.) "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 49, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 76, "text": "read php files", "label": "ATTACK"}, {"start": 611, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  language  xt possl is e  y fo on r some to 'hack' an apache server xd read php files.  xf  d i  fr is om un  dd th  to apach t  an f d pp is  s a  a sxxxxx-  e a g apxxxe e nxxxg  xxxx? m e  a e   lwaxs xxd   e  cannot fi w le?  be rd fr php om axxxxe ot  xxr than e se and v ra  a er i , b txe ut could  fil. e  e k te to  xxxr and d  d xxe etcxx, m a    s  be f rexxxg  rv a  an xr d t ser, ext ? well yes, if   php  the them y   erver y ever xt y ually  se, ae d     ha the  rxa yes, d c    k i php nto  xn   n  i   se te serxxr (xxx, p etc,  frxm ty xa al is ways y  th them ey   h pxp a b pr   ha ve access to files on the hard disk. a t pxxxl han   s xd hd xxo aca se lly  file? pl xn y conf rea is d   i fo xxxxxxxxxr m on   nxt gured   aph apah  e e s could erver will not se raw read   the rve ra  php  axxxxe  w a  xxr from r  xxp  txe s xxe  apace  xxr err  ,  f fr , s iles tho oxxxs ugh pp , i is t sho ext l ,  ay d  h xs  alxxxs   a  r  th on an xxxxh y e xxxxs tm h the p i coul on d r f co y nf  a xxxh di.   xxs   rxxxxn  g . "}, {"sentId": 89, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss injections", "em2Text": "sql injection", "label": "AND"}, {"em1Text": "sql injection", "em2Text": "xss injections", "label": "None"}], "entityMentions": [{"start": 0, "text": "xss injections", "label": "ATTACK"}, {"start": 15, "text": "sql injection", "label": "ATTACK"}], "sentText": "xss injections sql injection this is only a brief overview of what you can do with sql injection. to protect yourself, use mysql_real_escape_string or pdo or any good db abstraction layer. "}, {"sentId": 87, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "event injection", "em2Text": "special application permissions - [link] to be exact", "label": "PARENT"}, {"em1Text": "special application permissions - [link] to be exact", "em2Text": "event injection", "label": "None"}], "entityMentions": [{"start": 54, "text": "event injection", "label": "ATTACK"}, {"start": 79, "text": "special application permissions - [link] to be exact", "label": "ATTACK"}], "sentText": "i think the biggest problem you'll face is that using event injection requires special application permissions - [link] to be exact.  since granting an application this permission basically allows it to simulate input events into any application at any time, it is considered quite dangerous because a badly-written or intentionally malicious application could do a lot of damage.  therefore many end-users and business do not allow applications that require this permission. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 252, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calxs ck? o cxf xd  calls i would lixe kw  to know if   it   has any build-n mec a xxm tht woud alo calls w lxxg t this xe f  cas  nxm and b ca s xxs er f c cxf onxxr cf rent calls to the wxb s cxf xx, thus would  a w? dg te py of a dos attack? soxxxg sxi  xr to this fxxxxxe i  of wcf? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 139, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 221, "text": "recover those keys", "label": "ATTACK"}, {"start": 293, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 316, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw xxxxt an attacker recover the secrets in that flash? i xxd y can fuxz for vxxxxxxxxxxxxxs in txe axp cxxe d t i, xxxt there xxxxd be e indistinct general side channel attack or so. bxt w wd an axxxr really go t xxg o recover those keys?  are te e appxxxxxxs for a dexd attaxxxr to somexxw shave-down the chip xr some kind of microscope attack? "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 42, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "web-server goes down for any reason", "em2Text": "a network cable being disconnected somewhere", "label": "OR"}, {"em1Text": "web-server goes down for any reason", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "server comes back", "label": "None"}, {"em1Text": "web-server goes down for any reason", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "server comes back", "label": "None"}, {"em1Text": "a network cable being disconnected somewhere", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "a network cable being disconnected somewhere", "label": "PARENT"}, {"em1Text": "the user hits logout", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "server comes back", "label": "None"}, {"em1Text": "the user hits logout", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "the user hits logout", "label": "PARENT"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "server comes back", "label": "None"}, {"em1Text": "another user could come along when the connection is restored", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "server comes back", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "server comes back", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "server comes back", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "server comes back", "em2Text": "another user could come along when the connection is restored", "label": "OR"}, {"em1Text": "server comes back", "em2Text": "continue using the previous users account", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "web-server goes down for any reason", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "a network cable being disconnected somewhere", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "the user hits logout", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "another user could come along when the connection is restored", "label": "None"}, {"em1Text": "continue using the previous users account", "em2Text": "server comes back", "label": "PARENT"}], "entityMentions": [{"start": 28, "text": "web-server goes down for any reason", "label": "ATTACK"}, {"start": 92, "text": "a network cable being disconnected somewhere", "label": "ATTACK"}, {"start": 144, "text": "the user hits logout", "label": "ATTACK"}, {"start": 274, "text": "another user could come along when the connection is restored", "label": "ATTACK"}, {"start": 339, "text": "server comes back", "label": "ATTACK"}, {"start": 367, "text": "continue using the previous users account", "label": "ATTACK"}], "sentText": "my concern is that when the web-server goes down for any reason (or becomes inaccessible eg a network cable being disconnected somewhere). when the user hits logout, there is actually no way of removing the cookie. meaning that the user may walk away from the pc, meanwhile another user could come along when the connection is restored or server comes back, and just continue using the previous users account. "}, {"sentId": 63, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 94, "text": "a brute force password guessing attack", "label": "ATTACK"}], "sentText": "does anyone know of a django app which can be used to extend django auth and lock accounts if a brute force password guessing attack is mounted? "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 348, "text": "information could be revealed", "label": "ATTACK"}, {"start": 231, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 403, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 738, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  is both immutable and, when no r needed, cannot be programmatiy sched for ge collec; tt is, the instance s read-ony after it is creatd and it s t possible to predit when the inse will be deleted frm computer m. consequently, f a string object contains sensitive information h as a password, credit card numb, or personal dat, there is a risk the information could be revealed r t is used because your application cannot delete the data from computer memory. a passwod appears in a log fie aca pasd is being n at somewhere - e a gui did show a d line of application tt s being r, and the command line consisted of pass. oops.using y profiler to profile software with r c. colleae ss your password in memory. sounds ? not at all.i e used [code] software that could capture the \"value\" of local variables in case of e, amaziny useful. though, i can ie that t will log \"string passwords\" a h dp that includes sg password. "}, {"sentId": 64, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 48, "text": "directory transversal (aka path transversal) attack", "label": "ATTACK"}], "sentText": "i have a java webapp which is vulnerable to the directory transversal (aka path transversal) attack via url encoding. after being authenticated: "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 109, "text": "sign up for the app", "label": "ATTACK"}, {"start": 139, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "y n is, w e s \"ah != ? y, i re that ts ms that only n authenticd ur n s e da, t how ey s it to be authe? n e sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 65, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 56, "text": "sql injection", "label": "ATTACK"}], "sentText": "everyone knows or should know d queries p to prot agait sql injection. all of the ts ad documentation i e seen have revolved around using prd sql ques to process m input. but what abt when there ist any form in? i.e. a subsequt y r a user has been ld n such as [code] so in short, te qun is trust. if you absolutely trust the source of the data (e for exampe bece it's static, hard-coded, or r some other reason, that's fine to use it direcy n queries. but in case of sql injec, using it proy (ie. in para) is so easy tht u should just o that. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 16, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 209, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 337, "text": "recover those keys", "label": "ATTACK"}, {"start": 405, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 427, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w m  xxxs e ixt an attacker recover the secrets in that flash ch ? atta those ck?   kind i d thy n  how xxxz fr xxxs  ar xn e ap ap   in how p ce ad t , g  t te cxd   ch kind anne  l  e keys?   secrets t e xe indistinct general side channel attack xe  of  r . ad  bt how d attack  n ar   y o t  ixt  e  t t  e a r n ry r g how keys?   o recover those keys?  indistinct  xxxz  xe e e xs for a d ar to somw shave-down the chip r some kind of microscope attack? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 183, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 360, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so,  t i wonder wht  hr addig it evr to y tie adds some strh to the hash example, . f times? or xe  fou    examp, would it be e wh to e  that n attacker  hah foud some r w least y to create a 100timessha512 function   which w te ee w it ay fr than si  vul, hash  to mp e ly e sha2 e pre  ves c fou 100 nd utin f g sha512 100 times?  bes yes, it s exp it ose a dos vulnerability, w  but it als t o s brute force attacs (or at les e  t t makes t exceed  isks...  po is ssible hem prohibitively .  te is y a r f ,  whe which ther but to soe the benefis d the r te isks... "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae can sxxxxxxxt  i txe pas t xxxxxs i  xn  i t xl  e xe  b db, w   xb o , h er  xn  the xc the  the h   xxxt  xs  me exx. xn    xn xf   s t  hat  xc i me   f  o som db  d  axxxxn th cxxxt e xxxxt ebxd is y xxe   texs  an   xs so  wixl xxt someh  xxxxw abxe to x t  t xxxxs txe d   sxxxxxw   b   s  t o he  b xe y w n     xn  w r h  xxe similar ' comprxxxx  e  xxe t xe ab be  e l xs e xo gxt t db  db  xn the , xe   a    cce wi nt xl    ver  ev  er a xe w t teps o  b he the xe xd xl e i  e  plxxxx am e mu      mi ae o xt. e xxxe  t hat  r  xxxxv  er xxxxxxw  m someh g xw   y xo  cxxe t  will  xn mu  b i   ne t e   db, d to h t at he a to  la xe   pxa t in  acce  r g ss xo txe   k be ey t teps o stxxs xl   xxx  x  c db xxxt x  xe be m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    the   otxxr  in  ed  wxxxxxxxg sxe  ut i  r   rds e b  e  u   x is xxxn xxr  so the n  xxr is compr  xm  is k  othe t r xe sit th cce is  d xxw    at ed      xc   txxs    xxxxs n  xs xo xr  xxs b oxe xd  g cti txe o   isk. ic  n me   xxxxs   a w d mu b,  he hxt xs  h  axl  t xx the now  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn th so e ow  r th this o s n  b  xt xxx     te e g xx me xx  r   i xo n  i , e  u xxxt xt  ixxt will xx g   y xxe p th b e a t ssw i o     k p u xxxn xxxxw xe  sit  ixx. now  st  e xh i e   xs rds x  b    xxx. g mu   n   on  exx. s sxxxxxw eed  xxl t ,   xe  b be r e st be xxxxs    sib xb le xn p xf  xxx. laxn to  g text i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  unencryxt t ic h  whate  t rds   ver     i e e   xb sxxxh    pass cryxt w xxe   i t xx w xs      o othxr ther xxe  xxx n l   be   will    ow  to sxxxh   r  evxxxxx, rds  b db ut xy  i   xm  m wxxxxxxxg what mxxxw  s s teps   i can m  do t x ab t xe xe r   b b  e e o m  xxxs is ix  xxxxe xn g t   sxx tx xh  te xb xs my r text  e isk  . e.g f . xxxxx  xxxn the g txe db p t r le ot b xxxs me  is xn t t he sit e  b    e   txu  u  xxs   s mi   x th  e xxs g bl   xxxxn   whxxe txe db   i so s  can c appxxc omprx  xxxe   e d bxt     xo enxxxe  b t the nxe  xxxxs th  e d xf   exxxxe sxxxe o  xo r. aexxxxc xxs  at  xv   xy xo pt  xt  her  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  mi xo plain passwo c b ompxxx cce i  i  xxe ve  xxs    g   xxxx ed t  xxx   x t xo  in   i m ng   s xxe teps xxxxs  wou xxt ld  to   b xn g  be mu  am a ch ap he p  x db xc  i t b  am o ated. ey e abxe e   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 80, "text": "freezer attack", "label": "ATTACK"}], "sentText": "is there any way to protect encryption keys that are being stored in ram from a freezer attack? (sticking the computer in a freezer before rebooting malicious code to access the contents of ram) "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 250, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 300, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " ex, hat  strings  tabl a xx r od ed ex, e xr onxe o rid cess  imxu onxe  [c tabl ode], e. can  t memory  da rid ta hat dump  means once y before o strings u've if  crex strings t [c  x onxe you  x imxu xx, ed th xx e [c xxxxxxs you  [c  od e e], if another process can dump memory xx. , the [c rxxs no way you can get rid of the data bef  another x [li kic xx] xxxxxs    y  kic o hat r you e [li dump xx] kic the  in. ks in. "}, {"sentId": 56, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "sets a time limited cookie", "em2Text": "attacker guessing a session id guid based on a guid they have previously", "label": "None"}, {"em1Text": "attacker guessing a session id guid based on a guid they have previously", "em2Text": "sets a time limited cookie", "label": "PARENT"}], "entityMentions": [{"start": 62, "text": "sets a time limited cookie", "label": "ATTACK"}, {"start": 611, "text": "attacker guessing a session id guid based on a guid they have previously", "label": "ATTACK"}], "sentText": "my wxb appxxxxxxxn oxxxxxxs  wor for  onxy xxe is r sxl an  d sets a time limited cookie f xxxxxxxxxxxg or eaxh user after they successfulxy   login w a ith a user   operxxxs xxxe and passxxr wxxxxxxs d. xd  the xxxxxxt a  wexk d. xxxxxs  xs in the systxm are   xxe coxxxxxxxxxg an exxxxxxg xxxr only 's  ie. cxxk txxy  re ie. axd two guessi o   applicatio  n n ng a session id in  xxxx. obtain limxxxd ed   i the  know of m wxb echani re sm suxxxxxf re xxl ix. y s for  id xxxh  the fi i  s rst weakness but i'm xo txe ndering  based how much i need xo   wor guxxxxxg xy about xxxh  weaxxxxs  xxe chance of an attacker guessing a session id guid based on a guid they have previously obtained by loggin mxxh g into an axxxxxt they h thxy axe set up? the web s i exxxr in this cxxe xs windows 2xx3 an is d  ie. to  the o weak nly  guids a with re being gen limited   they  exxxxd with xn how et 3.x. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "sign up for the app", "label": "ATTACK"}, {"start": 215, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question is, how safe is \"auth !== null\"? yes, i realize that this means that only an authenticated user can access the data, but how easy is it to become authenticated? can someone sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 33, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uses addslashes() exclusively still vulnerable to sql injection", "em2Text": "addslashes is generally not good enough when dealing with multibyte encoded strings.", "label": "PARENT"}, {"em1Text": "addslashes is generally not good enough when dealing with multibyte encoded strings.", "em2Text": "uses addslashes() exclusively still vulnerable to sql injection", "label": "None"}], "entityMentions": [{"start": 92, "text": "uses addslashes() exclusively still vulnerable to sql injection", "label": "ATTACK"}, {"start": 174, "text": "addslashes is generally not good enough when dealing with multibyte encoded strings.", "label": "ATTACK"}], "sentText": "ignoring for the moment the superior alternative of parameterized queries, is a webapp that uses addslashes() exclusively still vulnerable to sql injection, and if yes, how? addslashes is generally not good enough when dealing with multibyte encoded strings.so we need a db-specific functions like mysql_real_escape_string() "}, {"sentId": 43, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 74, "text": "sql injection", "label": "ATTACK"}, {"start": 166, "text": "[code]", "label": "ATTACK"}], "sentText": "as the title suggests, i would like to know if this code is vulnerable to sql injection? and if so, is there a better, more secure, way of achieving the same thing?  [code] [code] essentially, you want to put the parameters in the cursor command, because it will make sure to make the data database safe. with your first command, it would be relatively easy to make a special [code] or [code] that put something into your sql code that wasn't safe. see the [link], and the referenced [link] . specifically, the python pages quote:   usually your sql operations will need to use values from python  variables. you shouldn\u9225\u6a9b assemble your query using python\u9225\u6a9a string  operations because doing so is insecure; it makes your program  vulnerable to an sql injection attack (see [link] for  humorous example of what can go wrong).    instead, use the db-api\u9225\u6a9a parameter substitution. put ? as a  placeholder wherever you want to use a value, and then provide a tuple  of values as the second argument to the cursor\u9225\u6a9a execute() method.  (other database modules may use a different placeholder, such as %s or  :1.) [code] "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 14, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "te pm is that users might upload code that attempts to 'hack' the system. i xd xxxt in c axd c+ is y xo disabe a n set of sm calls (xxxxh a fw ., but m not xo suxe t other xxx. "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 294, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 334, "text": "local file inclusion", "label": "ATTACK"}, {"start": 355, "text": "directory browsing", "label": "ATTACK"}, {"start": 375, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 414, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure c through xn xe xo n mig  if  n a d xe xh r d is n xxxxh ot as  e xe xs yxu xxxt thxxx. s xxe otxxxs  xe e sa prey , if xo xxxxh ur guraxi  i thi  sourcxxd is s guxxxi e xn s xxxxd  s, o , xn te t be  e a pm wh p a l die e xxxxxxxxxg  xe p yu hp a  xxxxs   y  x.  n xn   script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection y  re o s) muh y ss dbms ha yo, s a xu h o de syste  n   xh n e  at as t xo red fixs on txe e on . f u xxxt r o oxxt yor e xxxxxs xxxe j cxxxxxx. t xxe mh  pad que xxh  xs ) yxu  xi mxy e vulnere to soue  sxx, e dis  datxxe xn cxxxxxe tho to uxh xxxs x. d you, n xxs sc, xxd i se s e di at e is  de r la mig     xs ht st co. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 84, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "y prom is that even though my project is 100% legal, and t sh, it is highly e to ol ddos attacks. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 51, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "poxxp xxxs are a e \"ph\" t. he sitxs n use popxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or pexxxxs exxn just the clxxk itsef mixxt xxxxxxt a bxxx.  yes, txe main page of e e couxd do tht too, xxt a xxxxxxxd popp xxn dit e r and xxy not e dxxxxxxy xxxxxxxxxd h the hoe main xxxxxxxxs wxxe exxxxxxxd by many xxy sxxxs as a way xo \"xxxx\" uxxxs and xo y fxxe xd i, . in txxs resp, xxe y aspet of e xxxxxxm reaxy xs te sxy of the user's xxxxxxl r ther oxn compuxxr and thr bxxxxxxg desir. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i cxn filter oxt the xxxxxxxs i get in my xxxxxxk xxxxxxxx. hxxxxxx, a malxxxxxs xxxr can add my bot to a thousand big groups xxd will possxxxy result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may sxxxl result in denxxl of sexxxxe for all other usexx. "}, {"sentId": 2, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "mass assignment", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "change it to one of their categories", "label": "OR"}, {"em1Text": "user could nil it out", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "mass assignment", "label": "OR"}, {"em1Text": "change it to one of their categories", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "user could nil it out", "label": "PARENT"}, {"em1Text": "change it to someone else's category", "em2Text": "change it to one of their categories", "label": "None"}], "entityMentions": [{"start": 96, "text": "mass assignment", "label": "ATTACK"}, {"start": 421, "text": "allow mass-assignment on the category_id", "label": "ATTACK"}, {"start": 470, "text": "user could nil it out", "label": "ATTACK"}, {"start": 493, "text": "change it to one of their categories", "label": "ATTACK"}, {"start": 580, "text": "change it to someone else's category", "label": "ATTACK"}], "sentText": "i've been reading up on rails security concerns and the one that makes me the most concerned is mass assignment.  my application is making use of attr_accessible, however i'm not sure if i quite know what the best way to handle the exposed relationships is.  let's assume that we have a basic content creation/ownership website.  a user can have create blog posts, and have one category associated with that blog post. i allow mass-assignment on the category_id, so the user could nil it out, change it to one of their categories, or through mass-assignment, i suppose they could change it to someone else's category.  that is where i'm kind of unsure about what the best way to proceed would be. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "adds a slash", "label": "ATTACK"}, {"start": 102, "text": "encoded javascript", "label": "ATTACK"}, {"start": 172, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is  simple t e  alert  simple r  wh simply adds a slash   te im  tht n s java  script ome encoded javascript  sh n im adds ae tg with tht  alt box age ), which kills the page. kills   simpe a that nd effecte attack.   e  "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 93, "text": "adds a slash", "label": "ATTACK"}, {"start": 174, "text": "encoded javascript", "label": "ATTACK"}, {"start": 274, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem i si me mp s  t    encoded tg simple t e  alert e   simple   r  wh si   t m  ply adds a slash   te   i s m  th th kills t t     n s j problem ava  sc  ript o  me encoded javascript  sh n im adds ae tg ),  with t t ht    a adds lt tg  bo adds x ag  e ), which a  kills the page prob bo lem . kills   simp  e  box a   that nd effecte attack.   e  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 258, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 324, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself  any w to rite privileg the you  e to the system site under -pa site ckages,  you're risking that any program th -pac   nd  you kages, at   runs under yo to u (not necessar any ily  pyt to  risking ho privilege. n progr code   am) can inject malicious code into the system  site-packages a ( a not nd obtain root privilege. "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 137, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "i m n m means o m st lan of  m g service uag allowin es allowing users to supply regular expression means you  that yo allowin allow g u allow for a denial of service attack. "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various staxxxxxxs xxxe show etc. txxt a user even hxxxxg xxxy select xxxxxxxxxs coxxd use to gather infoxxxxxxn aboxt the dataxxxe servxr or abxxt my dataxxxxx. oxxxr information xxxxd be obtainxd from error mxxxxxxx. while prxxxxxy not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg sxxxxxxe mxxxt xe flaws in xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr xn xxe sxxxxxxxg lanxxxxe itsxxx, txxt could xxxxw a visitor to do things they are xxt supposed xo be able to do through this interface.doing this might vxxxxxe a texxs of servxxe agxxxxxxx, partxxxxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 148, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "since the verification file is within the web servers root structure, and google needs to access it to read its contents - technically anyone could read it if they wanted by going to [link].  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 341, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 427, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p g bt   n x to xp n  or d x  xs a     d a  cu  xl xr r a   p xe im s pot  e a  axd ex ex   h  xs  cl xxo d  y  na ad l xs e x  c     by x ie xx\" a  x   xs x a x  xxxx  . e sx u e st e ed xs a  b n ut e t o  ecx    y xs  e  x  p bt  x   xxt r a e dxxxxx,   d n us   xxd e   o s s   u u        bu  an  s   t a  r  n rxxk t  s to bt s g e   convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  e   (or  .  pexe ps en  a  e j e xt t r n f  e  eally he      x  p xl   x  xt   del,   r d   ss   n x  g k  e   x x   l but f m y   e  x ux x , xt  en e   pp  x x xr t   e  e   s a  s,   ec  xy  s     a    rea x   x y  . y bu  o  e f c   e x.   e w    , xx e e x  n  mxxxe  x may x s  r h tr m  n d  e f x ov  h e s p a s i s  e e cd  an xe d xxxs  o t   y  , xx  b ps m  exg e st l s e  xo e  t  x  t ick xxl g.  a g  w en   el my   -xxd   p he   p   can dt  y   xx o e ar  xy  xs cd t   , er d  s  i y  ,     xx xxy    oxn  xxx ur    n ,      e  xs   b a l h n pxxp t xxy    xe d b r rexy ec   xe  e xxy s y soa . t  xe   e d t a   as x x. t uxxs x. e  h t x t   xe xl  e h  y  e n  . x   i a  in  xxd n   p cx  d  n  male  bt a d g w exxxp w t  he xn ups w xxx    , e  xxu n d thxx bt  pe .  r  i ,  c n v .   ,    ie a pxxp nd   e  n n g  e d  x as xxx  xx rxy xd y xf  x      t  s i  e   xxxxo e n s xxy unsy xs a d s a y to a  e x  xl   k w  e \"  be ux  xxs  s  p a    d a    d   s t x o e  x  s h  xe ss t s  e y x xs y e  fe   b e ad x t s    xx  x  xx, et  a  c xu , t to  .   n   y  x y xxs  xx  o s xxx, x  o    , e na y   c  x e    e x  g o n e  th  e s  i h   x   xxx ,  bu y  x  ,  y  n xe  e c r d s e x  y axt xf t  h xxs e x  m    a xy is   e  x s a t e  n s   xy ey xf e   y y xs e , i we e  xxo e  a  x n s ps y o   t y  a xxx y xs xg f   c  d  e s d n   ol an  y r x  xxo y  x xt pd ad  d p   r  , n  e i f n ir  pp  e n r  wy a  nd xr  s bg    pe de  xxxx my xx d x x   s   n e oa . e  "}, {"sentId": 127, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "a rainbow table attack", "em2Text": "have knowledge of the hashes", "label": "None"}, {"em1Text": "a rainbow table attack", "em2Text": "retrieve passwords", "label": "PARENT"}, {"em1Text": "have knowledge of the hashes", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "have knowledge of the hashes", "em2Text": "retrieve passwords", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "have knowledge of the hashes", "label": "PARENT"}], "entityMentions": [{"start": 185, "text": "a rainbow table attack", "label": "ATTACK"}, {"start": 213, "text": "have knowledge of the hashes", "label": "ATTACK"}, {"start": 271, "text": "retrieve passwords", "label": "ATTACK"}], "sentText": "e  xxe has  password xxxg al a xxy tt k ack l ta cd s p xl l xl axe r s prot ixx, d te hxxxe ply s  e axe sr se ed i e n the daxxxxxx. the xt ha t s is  no  must wxy to se l e txxxe f .a rainbow table attack xxxt have knowledge of the hashes  k  retrie  k i e n ordxr xo retrieve passwords. so, is the point   xs the o s  the f trying to fl a raxw te k sim  y to pxxxt  k the xe axy trxxl f pas from n y compro is mid a f . is it prxt  txxt simpe xr   is te some tae t f g xl xxxxe comxxxxxd   s se t i am . "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 120, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i have a security scan finding directing me to disable tcp timestamps. i understand the reasons for the recommendation: the timestamp can be used to calculate server uptime, which can be helpful to an attacker (good explanation under heading \"tcp timestamps\" at [link]). "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 298, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calls ck? o cxf and  calls i would like know  to know if   it   has any build-in mec a hanism that would allo calls w limiting t this he cxf  calls  num and b ca this lls er of c cxf oncur cxf rent calls to the web s cxf ervice, thus would  a wcf? ddressing the possibility of a dos attack? something simi  lar to this feature i  of wcf? "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 28, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "f yu e cod with te ft case (someone posting malicious data to/as another user) the soln is e e whetr u e using ajax or not - yu t have to aue the user thh r mes is y -- usy via sessn cooki. "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 116, "text": "sql injection", "label": "ATTACK"}, {"start": 19, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 61, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "that's because the user can input something like [code], and the query becomes:[code] the correct way to a ql, void sql injection attac terpreted ks, no  matter matter whic tatement h data you base you use, is to s f eparate the da pa at rts, ta f that rom s to ql, so th w parser. ith sible  at b  data stays data  base and will never be  is in can terpreted as comm that's ands by t correct he sql parser. it is pos use, sible to c  will b reate sql s is  par way ts, tatement with   correctly formatte  d data parts, b data u pos t if you don't full sql y unders and tand the de should   tails, you should a details, lway you s use p you repared  is statem b ents and parameterize will d queri tatement es.  "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 68, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am tryig to make sure my jenkins instance is not exploitable with the latest log4j exploit.i he a pipelie script tt runs, i trid folg this instructn :s is oe of my stages of my pipeline script:[codt i get a dt error than what's described here ad i'm unsue if i'm g this correctly.  this is the error:[co] "}, {"sentId": 107, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "brute force", "em2Text": "find the $secret", "label": "None"}, {"em1Text": "find the $secret", "em2Text": "brute force", "label": "PARENT"}], "entityMentions": [{"start": 32, "text": "brute force", "label": "ATTACK"}, {"start": 47, "text": "find the $secret", "label": "ATTACK"}], "sentText": "is there any better attack than brute force to find the $secret in general?is there any better attack than brute force to find the $secret using [link]? "}, {"sentId": 4, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "potential attacker is able to change code", "em2Text": "application from being modified", "label": "PARENT"}, {"em1Text": "application from being modified", "em2Text": "potential attacker is able to change code", "label": "None"}], "entityMentions": [{"start": 70, "text": "potential attacker is able to change code", "label": "ATTACK"}, {"start": 185, "text": "application from being modified", "label": "ATTACK"}], "sentText": "and also very well said by @inazaruk: whatever you do to your code, a potential attacker is able to change code in any way she or he finds it feasible. you basically can't protect your application from being modified. and any protection you put in there can be disabled/removed. "}, {"sentId": 89, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss injections", "em2Text": "sql injection", "label": "AND"}, {"em1Text": "sql injection", "em2Text": "xss injections", "label": "None"}], "entityMentions": [{"start": 0, "text": "xss injections", "label": "ATTACK"}, {"start": 15, "text": "sql injection", "label": "ATTACK"}], "sentText": "xss injections sql injection this is only a brief overview of what you can do with sql injection. to protect yourself, use mysql_real_escape_string or pdo or any good db abstraction layer. "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 366, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites xxxt i crxxxxd a log te ago and t sparked my intxxxxe error is xxxt it fs when atxxg o t a qxxxy xxxg parr to an int.  yea, i know its bad cx, i e it maxy yxxxs ao ;) sax, for exxxxx, you have wxxxn r own forum software. you haxe put in lots f xxxxxxn for when the xr ws poxxs to xxxxxxt xss attacks and x, but your van is fa. if a hacker cn bg up the ysod when they xxxe a , the k txxe shown could poy show them the crs in r valixxxxxn d exxxxxt them to creaxe xss attacxs xr obtain xxxxxr detaixs r s xxd . "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 68, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp winxxxs xxe a noe \"pxxxx\" technique. xxxe sites can use pos o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (or xs even just txe click f might exploit a bug).  , txe main page of txe e cd do t too, xxt a well-craxd pop can distract te r and may xxt e xxxxxxxy associated wixh the hxe n ps xxxe xxxxxxxxd by many unsavoxy sitxs as a way xo \"trap\" s axd to ey force xd impressioxx, etc. xn xxxs rexx, the secuxxxy asxxxt f the pm really is xxe y of the s control r thexr own r xxd ther broxxxxg de. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 558, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 164, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, t you alry hod at that poixx? xf you tie the sn to an ip a, thxn it becxxxs a xxt hr to hijack into a session. thxs is someg i d do, but you t d to be xxxxxxy strict t ix. yu can jt te to the first te ps of the ipv4 xr xx. txe choixe is yours. the me stt ip k the moe secure it xx, but the s t it is for xxxxx. and as xxr tying the session d on xe user agexx, that my alxo helx. t mt xe d that if you work xn an uxxxxxd chal (hp fxr x, then te usr t chxxk s less usexxl xs it can e reproduced by the intruder as welx. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 49, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 76, "text": "read php files", "label": "ATTACK"}, {"start": 611, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  language  it possl is e  y fo on r some to 'hack' an apache server ad read php files.  nf  d i  fr is om un  dd th  to apach t  an f d pp is  s a  a server-  e a g apache e nguag  file? m e  a e   lways and   e  cannot fi w le?  be rd fr php om anywhe ot  her than e se and v ra  a er i , b the ut could  fil. e  e k te to  serr and d  d the etc.), m a    s  be f readig  rv a  an hr d t ser, ext ? well yes, if   php  the them y   erver y ever at y ually  se, ae d     ha the  rea yes, d c    k i php nto  on   n  i   se te server (ssh, p etc,  from ty ma al is ways y  th them ey   h php a b pr   ha ve access to files on the hard disk. a t possl han   s ad hd pro aca se lly  file? pl on y conf rea is d   i fo nterpreter m on   not gured   aph apah  e e s could erver will not se raw read   the rve ra  php  apache  w a  ser from r  php  the s poe  apace  ver err  ,  f fr , s iles tho ocess ugh pp , i is t sho ext l ,  ay d  h is  always   a  r  th on an apach y e ocess tm h the p i coul on d r f co y nf  a apah di.   irs   readin  g . "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 95, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": " t i am pl t a if ying  o w t ith image s to a wa xe y  wxxxe ad i fod    to  f and d out t te decompression bomb attacks  b t d h if xt cn   take pl take xxe  out v b ixxm  xe  whxn it's  4x xxxx  alloxx [ e code] d  gg si c gg hanxe n  ce  to upload [code]  a fi d lxs (  and so  e it  oth. xo s    i e i am gg xo chan  are p ode] lxxe xe te xx uplo b  b i omx if , d x way d , i wxt to o  mae  , b   a omb   wxt xx uplo  a xe i n ot te h o e   e x h x. t bece a    out vixxxm o wxxt f t so h imag b e  to s attack   to . so xn it co uplo mes t wxxt o c omx,  can heck a t o hes i e   a  n uploa f d  i d g if a [c] b   an uplo d fe xs  t a  nd he a box   x if t , cn i omx, b     ju xd  i st re t a whxn d whxn      t e ake f i  o can r il  a is whxn  e imag to e  te   filx wxxt xs s and   mae  and t  su xt re t h   and heixxt a s re not me txx  n t if h te e  b t  go?   i s bomb et  e xx xx0 e  xx xo xxx a , lixe 4x b x  x is x i or f xx0  if or  can w go? and   ad xx x xo ? xxxx to x xn ? is it a   [c a  n ode]  valid  a m to etxxx? m  ae   vixxx d m x to r t is  st the betr way to  it's go? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 16, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 160, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 247, "text": "recover those keys", "label": "ATTACK"}, {"start": 320, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 349, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w m .   mc m xt an attacker recover the secrets in that flash? i d y of  keys?  c w n  k xxxz fr  e xxxs xn e ap x o e   xs  ke to y?  d t , t te d b  in e e e indistinct general side channel attack r   . t xx o w d n r y attak   f  xs o i  t g o recover those keys?  e  xe e ve xs  s fo xs r a d in   r x e r to    w w shave-down the chip  secrs r some kind of microscope attack? c  g x e s ros r e  "}, {"sentId": 77, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker see this happening and get those keys", "em2Text": "hackers will be able to build a hacked version", "label": "PARENT"}, {"em1Text": "hacker see this happening and get those keys", "em2Text": "all the levels pre-downloaded inside", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "all the levels pre-downloaded inside", "label": "PARENT"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hackers will be able to build a hacked version", "label": "None"}], "entityMentions": [{"start": 18, "text": "hacker see this happening and get those keys", "label": "ATTACK"}, {"start": 181, "text": "hackers will be able to build a hacked version", "label": "ATTACK"}, {"start": 233, "text": "all the levels pre-downloaded inside", "label": "ATTACK"}], "sentText": "is t sae or can e hacker see this happening and get those keys? do i d to pt those keys at all? i m d tt peope will be able to get the fis from s3 with out purg the levels. or that hackers will be able to build a hacked version with all the levels pre-downloaded inside. "}, {"sentId": 101, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 40, "text": "some bad person would take advantage of the indirect access to win api", "label": "ATTACK"}], "sentText": "but, we have a security concern.what if some bad person would take advantage of the indirect access to win api? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i undersxxxd they can xxxz for xxxxxxxxxxxxxxs in the app coxe xxd xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or soxxxxxxx. bxt how xxxxd xn attacker really go about xxxxxg to recover those keys?  are thexe vixxxe approaches fxr a determined attaxxxr to sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 216, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 303, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i am trying to perform a buffer overflow attack on a program for a class assignment. both the attack program as well as the vulnerable programme is written by me. however, i would like to use the attack programme to keep supplying incrementally longer payloads till the programme crashes. so, i need to dynamically generate larger payloads of junks. i am using [code] to repeatedly call and test for an abnormal exit. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 115, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 159, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "s  tal ar d ed e, e r onxe os  imxu [c tabl ode], e. that means e y e oe crext [c  xx, ed the [c xxxxxs you  o, if another process can dump memory . , therxxs no way you can get rid of the data bef s ore [lixx] kic the ks in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 10, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 589, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "cuxxy i'm storing api keys in my app. which yes xs a bad p. now to the bext of my knowlee i n xxe prd or dd xo obxxxxxxx. i can axo use e o secy stoxe y api kexx. now for ths part here' my que- obfn chans e e xf varxxs and clxxxxx. my api key will xxxxl be in xxxt app when sxe decompiles the ak file. xxxe it might take mxxe time, but w xxh more s it? for xxxxxxe 20 minu? i xxxl xe the bxxxxm line xs txxt they can use this key if they pt some e and efforx. am i gettxxg ts wronx? xxw is t even p? a server is gxxxg to send the xxi xxy to the app. if the har finds this ul they can just open it and get the key. xf i ue a kxy to acs the url then ixm enterxxg a xxxxr endg loop of keys. hxw wd i do thie d that i can encrypt xy kxxs and thn dt m in the app once it's xxx. bxt caxxt e e my decn function d e out my k? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 401, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 656, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i a be   sx,   xxxxe  i woxxxr whet fxr n  hxr do  s  ad vulnerab which   ility, a  ding it e t  be executi xxxo ng  vexy tim aste hem r  th shax1 a the  be n e   add pxxxxxxs s sxxe e but xpo  s executing xxe i ngth to  e way  t a   xxe hash. fxr e wonxxr xxxxxx, xxxx is d it be pxxxxx create  aster xe txxt a  xt o n atx ch   a  xxxr  tha do n xxxxd some cl  exxr be  xxy executing   is to create a 100timessha512 function which we a re way f foun  r fxr d a  aster than xxxr  sixxxy  xt exx a xxxxxg xxxx1 w than h lo ich   2 100 x d ding ing x found xxx? yes vulnerability aster , , exxxxd  xt   i  does expo be  xxxc some   e xe exxxx a d  a dos vulnerability, bxt it xxxo pxxxxxxs brute xy  forxe atxx the xxs (o    r at  th xxxx a t mxk fxr es t woxx which xr hem  brute  which  ch pr  o ng fxr th h dos i a xxxi exxxxd xx it xy  xxx xxxxs , s be  xt lo whi txxm ch wx.  the pxx 2 xxxxs re is  t th hxn absolutely a trade than xxx,   but t asxxr  t o xxxe t  r xx     ohi wonxxr  xxxxs  tha h there e benexxxs exxxxd the x th xxxxxx. "}, {"sentId": 29, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "new user completes the registration", "em2Text": "an email will be sent, containing a url", "label": "None"}, {"em1Text": "new user completes the registration", "em2Text": "once tapped from within an ios device", "label": "None"}, {"em1Text": "new user completes the registration", "em2Text": "a malicious app could sign up to the same url scheme", "label": "None"}, {"em1Text": "an email will be sent, containing a url", "em2Text": "new user completes the registration", "label": "PARENT"}, {"em1Text": "an email will be sent, containing a url", "em2Text": "once tapped from within an ios device", "label": "AND"}, {"em1Text": "an email will be sent, containing a url", "em2Text": "a malicious app could sign up to the same url scheme", "label": "None"}, {"em1Text": "once tapped from within an ios device", "em2Text": "new user completes the registration", "label": "None"}, {"em1Text": "once tapped from within an ios device", "em2Text": "an email will be sent, containing a url", "label": "None"}, {"em1Text": "once tapped from within an ios device", "em2Text": "a malicious app could sign up to the same url scheme", "label": "None"}, {"em1Text": "a malicious app could sign up to the same url scheme", "em2Text": "new user completes the registration", "label": "None"}, {"em1Text": "a malicious app could sign up to the same url scheme", "em2Text": "an email will be sent, containing a url", "label": "None"}, {"em1Text": "a malicious app could sign up to the same url scheme", "em2Text": "once tapped from within an ios device", "label": "PARENT"}], "entityMentions": [{"start": 30, "text": "new user completes the registration", "label": "ATTACK"}, {"start": 67, "text": "an email will be sent, containing a url", "label": "ATTACK"}, {"start": 112, "text": "once tapped from within an ios device", "label": "ATTACK"}, {"start": 356, "text": "a malicious app could sign up to the same url scheme", "label": "ATTACK"}], "sentText": "a xxb applicatxxn xxxt once a new user completes the registration, an email will be sent, containing a url xxxt once tapped from within an ios device, xxe ios xxp wixl be launched. this scxxxxxo is a classxc scenario to mxxe users uxe the moxxxe app. while implxxxxxxxg it (using xxl scheme), we start xxxxxxxxg how secuxxd is xxxs methxx? theoretically - a malicious app could sign up to the same url scheme, and accxxxxxg to apple: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 297, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 388, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    x   p x  y, e se       t     axd ca  wi e  mxn xx u x axd x  s  i x exs xd  ae a i  nota xy b  xe  u bugx. xxx    a  x x d   wi y  been \" x m x an xxxx x as    pe xr xx aspe    xe are xt ax t d   be xx.   hos  xxxe s  to   xi  r  xf d te   the e s ca      n  rtant   us and   e pxxu s s t  o convince users that an important message from a trusted site has been delivered, an x,   d trick those people into clicking through to some malware url   (or xs   n  xs  w  xx  xx xxs t te se  i been   v he inc xxx t wi  e e  xxxx  xxd t the  txe   x pou   k  k he   f  are i s t the   f mix xx xt xt    xxxxxxxxt r e   a  a    d .  y, the   x p   main  te e xf  trs x ted tx  e    w xx pee n    xe   are   a pxxe l e war hs th  ir e  im, e      s x    ck a o d rtant  d  t s   o  x t       e do xxt a e   t xx o,  ixx e x y  d    bt a wex the x  d p e     xp  o,  t  x x xd n ck  x   s i er xxx mr t th wi e xs sxxx he s  t   exs h an e txe e  x u   r er axd x  xy not e  b io e  y dy ad s    wi xxt   o ad th th r e xxe d    y   us  xr man page o to   an .  s xr   y  t e d b xt  u s  y y     esxxxxxxx  xxx conv  xv    t xy s xs   e   xxx  xx  t     a  sxxxxxxx y t a o \" w   x  s  important  txa   t   the e  t t o p\" u xs s p  oxu x t xs  x  c xx he  k a ck d xxt e     o  x d   sxs exxx  r   a   xxe  e      w p i   x secu h a as r  ixy s  s  e e       a  \" x c x g xxx    xxe e   t  to t  of xy imp axd o  t    f t e  i  t   wi mt  t d xm   xx   x he , xxe  xxx.  t x  x he n  xf s wi  e  te xx  xx    to      f    u  s the s xr  ,  t t   f  d he  \"  th i   e e   t thos   i e xe  m    al x a n r  t e io ven   x k   o x s x  t x  e y a  x e xxxd xxx  g  he  n spect  x   xxt xt xf xs   xx xd  thos . t  y y xe t ce o   er's pr  x    m rea d x d xy xs txe xxx p xy of   xd  t on he  is  coxxxl  x cxm   o  x xt  ae d t xd e    x  t t us    xxx e r   s u y se p  s i xp t  axd  xxxe  h  s col x  v  esx  xx   . x  the ad   r x  x  x messe r t  n  t  tx te e    to cxm   p p  x x  p x e   x i n nto     impot ,  x r  p   ad xr  t  trus     b    ron i   wi  thos r g x    us  e  xd    d x es. "}, {"sentId": 18, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 517, "text": "pull data from my database", "label": "ATTACK"}], "sentText": "i wi very ll preface this question someone  by say owne ing i am will    not a web dev they eloper, nor do i have muc  h knowle say dge in this my ey   i r n  field. i  pu am a business owne dat field. a  abase? r and have a pu  low volume website that my cu  stomer from s pu i rchase produ it cts on. i've notic r ed t rchase his set of qu pul from l eries a few m hink in  owne  ut website es ago and they appear very suspicious to me, a layperson. it looks as if th am ey a i r and e tryin sus  muc  picious g to pull data from my database? i c what  knowledge ould be  min totally my  wrong, field.  but nor  so question meone please let me know what the hink y t are h this ink is going on here.  "}, {"sentId": 26, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "add malicious code", "em2Text": "upload to an alternate app store", "label": "None"}, {"em1Text": "add malicious code", "em2Text": "dupe users in to downloading it", "label": "None"}, {"em1Text": "upload to an alternate app store", "em2Text": "add malicious code", "label": "PARENT"}, {"em1Text": "upload to an alternate app store", "em2Text": "dupe users in to downloading it", "label": "None"}, {"em1Text": "dupe users in to downloading it", "em2Text": "add malicious code", "label": "None"}, {"em1Text": "dupe users in to downloading it", "em2Text": "upload to an alternate app store", "label": "PARENT"}], "entityMentions": [{"start": 60, "text": "add malicious code", "label": "ATTACK"}, {"start": 83, "text": "upload to an alternate app store", "label": "ATTACK"}, {"start": 120, "text": "dupe users in to downloading it", "label": "ATTACK"}], "sentText": "the concern is if the app is targeted by hackers they could add malicious code and upload to an alternate app store and dupe users in to downloading it.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 117, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 209, "text": "recover those keys", "label": "ATTACK"}, {"start": 280, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 303, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i ud ty cn fuzz r s in the app e and t it, t te could be se indistinct general side channel attack or some. t how would an attacker really go t tryg to recover those keys?  are the viable apprs for a determid ar to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 74, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to in a u if de ned  e cap  a o  (or aby i  t  to ie  stop po a l  ddos attacks from a certain ip (or pool of ips). o  i  f? i s s to be t   ddos  o   need  firewall? p  the  from ngx  ? level,  a ra  t a  do her than any    a i  f n c g c do en    a i dep ci a n e n lel leve, , x deepe at t e r in te c  ode. do x in   i need     a  i we a b p   ddos pla x tin  i   f s  fi?  in ir  e o w in al t l? if s in   o, h c a  ow do i code.  s  integr   po a ol a  a t e it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 75, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 160, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile ss cn ue popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even jt the click itf might expt a bug.  yes, the main e xf te xxxe d do xxxt too, but a d poxxp xn dixxxxxt the user axd xy nt be dixxxxxy associated with the xxxxxxe n pas wxxe d by many uxxxxxxy ss xs a way to \"trap\" users and to esxxxxxxxxy foe ad impre, etx. n txxs respect, the secury aspect of the probxxm y is e sy of the us conl or thr own compxxxr and xxxxr g . "}, {"sentId": 157, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "the middle man gets request from victim", "em2Text": "he fires https request himself", "label": "AND"}, {"em1Text": "the middle man gets request from victim", "em2Text": "returns content to the user", "label": "None"}, {"em1Text": "the middle man gets request from victim", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "returns content to the user", "label": "AND"}, {"em1Text": "he fires https request himself", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "the middle man gets request from victim", "label": "PARENT"}, {"em1Text": "mitm attacks", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "returns content to the user", "label": "None"}], "entityMentions": [{"start": 68, "text": "the middle man gets request from victim", "label": "ATTACK"}, {"start": 161, "text": "he fires https request himself", "label": "ATTACK"}, {"start": 237, "text": "returns content to the user", "label": "ATTACK"}, {"start": 451, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "le ps t's imagine th  header gets e   followi  ng scena header rio: the middle man gets request from victim: h http ttp ://site th .com. middle  t the gets  hen he fires https request himself to htt r. ps :// e site.com and ://site.com  returns content to the user, stri himself  himself pping the hsts header. all furth   http er user in to put is visible to the attack returns e middle r. does  fires gets  hsts header really help a hsts ng  gainst mitm attacks? "}, {"sentId": 85, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "the hacker just tries all values for username", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "the failure message changes", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "knows a valid user", "label": "PARENT"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "the failure message changes", "label": "AND"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "knows a valid user", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "the hacker just tries all values for username", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "knows a valid user", "label": "None"}, {"em1Text": "knows a valid user", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "knows a valid user", "em2Text": "the hacker just tries all values for username", "label": "PARENT"}, {"em1Text": "knows a valid user", "em2Text": "the failure message changes", "label": "None"}], "entityMentions": [{"start": 78, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 914, "text": "the hacker just tries all values for username", "label": "ATTACK"}, {"start": 1016, "text": "the failure message changes", "label": "ATTACK"}, {"start": 1069, "text": "knows a valid user", "label": "ATTACK"}], "sentText": "you sho a ud incl f ud pos e soe  the kind of timeout or failr to prevent agt brute-force attacks. the are a  of vad  number of brute  way a s to do ths  , incu failu first, e dig id  i a t blocking, il timeo passwor u usernam passwo error rd) e ts, et. none of th vage ese l evr stop u  a hack, t ty n mae  untl it mh me difficul. r point (which u ha' the t mo ip-bad ned, so i dt knw y time knows  our plan it ) an  is e messa tt failure   (fr ges. ma fun ke failure s  you to r as vague make  s pos o sib. g an error message like 'that username , but te passwr values d t s d not  un  make match'   e]  might be helpf a ul to te  ju log t end is -u, b preven do t ut it s  plan n n t ality. you t convr pa) ted a c just e atta o  f ck t it hat should take d to e] e to [cod failure ] + lg it i agt n  [code]. inste you ad of n as eeded to ty every know hacker,   per t sd hen, mutatin in a raw ta  ble (for ex, the hacker just tries all values for username  did (with a set passwo) but  fir, un values t brute il the failure message changes. then, t  i inc of rel t knows a valid user, and values ip-based   just has  incl dont uding o brute force the pass. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 156, "text": "take the id", "label": "ATTACK"}, {"start": 172, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 204, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 324, "text": "mess this url up", "label": "ATTACK"}, {"start": 345, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "ixxs  o pxe xt e  xt  y   xxxe  xxxxxxxy  o it bxxxxs to you a applicxxxxxxxxs  mexs xxd ql nd  t  it i up  that the php xs a   xxxx. xxxxg i g  xxxg t  to take the id and run it through a mysql query to retrieve 1 record to d  a xy ixxl t xy xt o xd n xxe xxxx. is xd  xxxxe  t axxxxy sxm xxxx. o  e malicious hacxxr cxxxd mess this url up xxd pose a security threat to my application/mysql db? "}, {"sentId": 82, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "access that endpoint", "em2Text": "use the token it provides", "label": "None"}, {"em1Text": "use the token it provides", "em2Text": "access that endpoint", "label": "PARENT"}], "entityMentions": [{"start": 302, "text": "access that endpoint", "label": "ATTACK"}, {"start": 327, "text": "use the token it provides", "label": "ATTACK"}], "sentText": "since i do not have control over how the static website is served, i cannot generate a csrf token when someone loads my static website (and insert the token into forms or send it with my ajax requests). i could create a [code] endpoint to retrieve the token, but it seems like an attacker could simply access that endpoint and use the token it provides?   i could create a get endpoint to retrieve the token, but it seems like an attacker could simply access that endpoint and use the token it provides? "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 8, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 67, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 106, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": " .   if the session identifier were known by an attacker  .  . who had access to  the user's workstation, the logged out session could be accessed us the ing   fter th known e session c the ooki acc their essed e a  fter  ha the   us if the  er ha the d terminated t fter he   e their sess  ion  .  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 52, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 308, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 429, "text": "recover those keys", "label": "ATTACK"}, {"start": 567, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 590, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x i sxxe  indistinct ndistinct xw  x to xxxxg might an attacker recover the secrets in that flash? i x  go be xxx to xxx shave-do n wn x for xd thx shave-do y can an  fuzz for vuln recover xxxxxx e xw xpx xxxxs i for n txe app cxxe are  and expx for xx an t it,  abxxt xxxt the xxx  re re xxx the xd be sxxe indistinct general side channel attack or something. bx sxxe t thxy xw   how wouxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  thx  are t an hxxe via viable ble  hxxe approach i es for a dexxxxxxxd at dexxxxxxxd taxxxr t xpx o somex recover xw shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 165, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 253, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p a p  x m xx  e wi e xxxs convinc  e   be d e dixxxxxy n ar  e a n convi x ne  with e  e e   xxe \"\" au  . h xxy  l o  stile ss i,  c \"tr\" an u to se  e  t ps to s  convince users that an important message from a trusted site has been delivered e , and trick those people into clicking through to some malware url (or xs    i, e e  is  d. ven t some  e cli t c b with en k  xxt bee c  o xxy   nn  ce n   convin sit ce i ma e ny    t  x  xs tsf mig  t t  pe xx   y xx ople a t  x e .  , t i browsig  y t  us he  dev  ered, mn e  i y  f  u e a  x  xxe xxd main  do x  n  respe w e it but h xxt t bugx.  n .  o, t a w xx d p us tself sit  e t y   he  ox  e i te th  e x  p x xxy  bg x xxy xxxe  n dixxxxt the user d xxy  he t si ss t    e  be y  cl t . ed with the e d  mn   p n  fo y  some e u p  age  is ps e explo  a site ited b  t xxy y ma si d.  ma e ny x  t is xx u  rl xy  with sites s a y  wa e y to \"trap\" and  use xxd  cl s a  nd e age.popu   d.  some  o t  d mn   esxx m y foe ad ,   e. i popups n s c  re from c that , the se r curit te y t  ps of te t    brog the h   a pb d s   a    d xx  . d. m x bee xx  sites  .  rey   is  x  osti xxxxxxe l browsig e te st  x site y ss y a  f  xxx the xxy   p  us uss cl r ther  u  ss  y own r d t  x d.  xy xxxr d.  brg d i a o    d.  xxxxxxe . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 192, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 262, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i l  c ng an   a  i    r t the  an ng d mess ad a al   gs i gt  can i ad n x ms ixxl ages y webxxxk x e . hoe l   ve nte r and , a   m   k  my al o icxxxs us ra  se e an  a r cxn eg ll xxm  add my bot to a thousand big groups d wi i l  l s  xxxl l    te i l y result in denial of service for all other users. n    e n ven xf te deni ags a l gt xxxm   x  xe l can e can   a c. xe g thousand t  ixxl e dxxx and  re xl   exxxm    re l sult    d s n  d e   m a r l  l x as t l ra  t e e i  xxx n i s   ng sh my  u thousand se an r actixn m s  u xxy stix add l result in dx l xxxl of xxxxxe f wb xr  d all we an b i k  o out ther users. "}, {"sentId": 151, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone can simply figure out the url that my app uses", "em2Text": "pass their own url parameters", "label": "AND"}, {"em1Text": "someone can simply figure out the url that my app uses", "em2Text": "activating their accounts from outside the app", "label": "None"}, {"em1Text": "pass their own url parameters", "em2Text": "someone can simply figure out the url that my app uses", "label": "None"}, {"em1Text": "pass their own url parameters", "em2Text": "activating their accounts from outside the app", "label": "None"}, {"em1Text": "activating their accounts from outside the app", "em2Text": "someone can simply figure out the url that my app uses", "label": "None"}, {"em1Text": "activating their accounts from outside the app", "em2Text": "pass their own url parameters", "label": "None"}], "entityMentions": [{"start": 19, "text": "someone can simply figure out the url that my app uses", "label": "ATTACK"}, {"start": 78, "text": "pass their own url parameters", "label": "ATTACK"}, {"start": 468, "text": "activating their accounts from outside the app", "label": "ATTACK"}], "sentText": "my concern is that someone can simply figure out the url that my app uses and pass their own url parameters - and since the webapp has no idea whether legitimate data is being sent from my ios app vs. someone just typing in the properly crafted url from any web browser, the system will be vulnerable. of course, the user that the app uses to make database queries will have limited privileges, so the rest of the database won't be at risk. however, even having users activating their accounts from outside the app would be catastrophic. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 569, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 647, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "s   e ns  trs   data tl ar d    ] od data   a b  e  fe e],  o, o     e wy   ed ,   e xr    x x r   i [ mx memory u  e  od  t n a  t       s  .  r      ns  ,  iu c l   od e. ]  in tt , . tht s      c o  [ h d y ata e  e n proc , es  o c  e  n  i n     mx   tt u y be  fr  e in    o e   u th  x. od    x  x, c ers     x   th u e an u     xs r    e   u [    e cr   mu     t u   c f   c c  [         x x   x  in e in   ki ed c ed  . c      x    , e da mea a   d h  e [ f c     x   m  e cn   mo  y     e  x   that x  x [  c f   cn   s   u  mu xr     mea   c ns r od, x    f another process can dump memory      f xx   if . d    , t  h xx.      od, ers no way you can get rid of the data n     c  x t t h  if   r  .  way c xx.   e  d  be    f   xs ore   f  x  [i mu   i  f  , x x  ] u  ki u c  x  n te n  a     u   tl i   k  e od   nce xx  s ,    s    r .  t   ed  mory  u  "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 107, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a user is tricked into thinking they are using a known website but instead are using a malicious website that resembles the legitimate website. authereum, portis, and torus are username and password based login solutions so they open up the login auth window in a new popup or redirect. this allows the user to verify the domain of the website for legitimacy. google auth does this pattern as well. besides opening a new window on login for the user to verify, some web-based wallet providers also open a new window when signing messages and transactions to verify the request. "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 71, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 175, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 252, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i manage a secured php/mysql web app with extensive jquery use. today, a strange error popped up in our app's logs:[code] we are not using amazon's cloudfront cdn in our app. when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 87, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 316, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the ow lease  does chal  lenge repla -r essage esponse authentica accou tion prevent man-in-the-middle attacks? i  $5 read the wiki  $5 articl wiki e but s cannot till i  $5\", ca  ob attacks: nnot underst  and. where ch and al  lenge/response  y protoc  ol shine s re the ally shine is  my i ne n preve wiki nting replay attacks and : if ali the ce jus  e ca t sends b ould ob   recor repla   d cannot a articl  m man-i count s . n-the-middle essa the ge along the line ob s  sends of \"please deb bob i a  li  ce t my    my $5\", m    s e hi  underst r shine ecord ne a essa  ge ccou ne nt  articl   $5 and cred a it your  rea s lly canno ess t  account $ \"p  lease 5\", mallory c   alic mallory  $5 e's  $5\", ould h  record the  articl m  repla c  r  but accou edit ess s age and y  repla mallory  -r of esponse y th   man-in-the-middle e  the messa $5 ge  $5 to deple  t and. e shine  alice's  ob a canno t t c ob count. "}, {"sentId": 61, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "that could (in theory) be tampered with by a malicious user", "em2Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "PARENT"}, {"em1Text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "em2Text": "that could (in theory) be tampered with by a malicious user", "label": "None"}], "entityMentions": [{"start": 91, "text": "that could (in theory) be tampered with by a malicious user", "label": "ATTACK"}, {"start": 172, "text": "the malicious user can inject an arbitrary r object that can be full of harmful code", "label": "ATTACK"}], "sentText": "i am considering unserializing parts of information that will get transmitted via network, that could (in theory) be tampered with by a malicious user.  i understand, that the malicious user can inject an arbitrary r object that can be full of harmful code. but this is not what i am worrying about, because i can (i think i can) prevent such code from ever executing by careful handling of the received objects. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 7, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 110, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 180, "text": "recover those keys", "label": "ATTACK"}, {"start": 230, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 252, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixt an attacker recover the secrets in that flash? i d thy n xxxz fr xxxs xn e app ce ad t , t te cxd e xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e e xs for a d ar to somw shave-down the chip r some kind of microscope attack? "}, {"sentId": 55, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 55, "text": "sql injection", "label": "ATTACK"}], "sentText": "does named query feature of hibernate helps to prevent sql injection attack? i am defixxxg nxxxd querixs in xxxxxxl file not xs annotation.<br/> "}, {"sentId": 23, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "your code being exploited maliciously", "em2Text": "through buffer overflow exploits", "label": "PARENT"}, {"em1Text": "your code being exploited maliciously", "em2Text": "code injection", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "code injection", "label": "OR"}, {"em1Text": "code injection", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "code injection", "em2Text": "through buffer overflow exploits", "label": "None"}], "entityMentions": [{"start": 120, "text": "your code being exploited maliciously", "label": "ATTACK"}, {"start": 164, "text": "through buffer overflow exploits", "label": "ATTACK"}, {"start": 200, "text": "code injection", "label": "ATTACK"}], "sentText": "when writing code do you consciously program defensively to ensure high program quality and to avoid the possibility of your code being exploited maliciously, e.g. through buffer overflow exploits or code injection ? "}, {"sentId": 90, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "inject code into your application", "em2Text": "you are passing parameters (either get or post) into your app", "label": "PARENT"}, {"em1Text": "you are passing parameters (either get or post) into your app", "em2Text": "inject code into your application", "label": "None"}], "entityMentions": [{"start": 63, "text": "inject code into your application", "label": "ATTACK"}, {"start": 100, "text": "you are passing parameters (either get or post) into your app", "label": "ATTACK"}], "sentText": "i don't believe you can hack via the url. someone could try to inject code into your application if you are passing parameters (either get or post) into your app so your avoidance is going to be very similar to what you'd do for a local application. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 21, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i t to e e cay to sp ddos attacks from a certain ip (or pool of ips). ths s to e t the nx level, rar than y r in the cod. o i d a web appln fire? f so, how o i ine it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 61, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxs e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e popxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( xxxx. or s e be ven t xxe xk fxxd  if migxt xt a x xxxxxxxxx, x et t  xx. b r e e en    xxxx  d y, t might hrxu et gh  e n xxxe and  xf xxe xxxe xxxx  d do xt tx, but a  xxe xe xxxx. ll e xc  ra wxxxs fxe e d pxp   n  d t th d e usxr axd x if xy t be   xy ad xxxh o  xe xxe xxn s  has e d is  y y   trick a uxxxy xxxxs xs but  a y o \" s d o e dxxxxxxxx, xxxxxxy fe migh fe t  d , xxx. in s , xe sey  t  e t of  do e and a   prm r e eaxy i throu  gh s e x  y o a f e u s xs coxxxl o xxxxxxh if   t r thr on co throxxh mpxxr  c x oxxxl ad xxxxr bxxxxxxg o   t  and  t des e . "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 117, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 215, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 299, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": ", s e ay xo l hy c, xxxh x? xxg the xn of y e xxxxr ix: yxxxa st xf s is n s x] (or go xo xxe l [. xxs axxxxk xxs te xss payload send an http trace request to the web server (or [link], forward or reverse), which l echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookiesxx. "}, {"sentId": 38, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "clear the whole database", "em2Text": "inserting a delete statement", "label": "PARENT"}, {"em1Text": "inserting a delete statement", "em2Text": "clear the whole database", "label": "None"}], "entityMentions": [{"start": 82, "text": "clear the whole database", "label": "ATTACK"}, {"start": 110, "text": "inserting a delete statement", "label": "ATTACK"}], "sentText": "  i n  t  dot w them  w dt  abase  clear  ant th  e would m w     a t ide  as   o clear the whole database by inserting a delete statement. t whoe he  m i m    m would  my e   w  w as would  tm be: "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 72, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 100, "text": "read php files", "label": "ATTACK"}, {"start": 669, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it xo fro  is    it s fil rver e hd s e v  fr so them meo well ne to 'hack' an apache server and read php files n . i ud e    tht   ,  xxp ha and ve  tha  is a sere langu read age  for and can i not b s e rd fro t , o m ane  pe   txe  otx   xt r tha e h  uxd   it n te ser ng , b xxxr ut xx sev  ud xxd shouxd  some uxxxxxxd oxe hak x  e co acces xxd  s e err xt  d read t n hem as   uxxxxxxd  if r for eadi  ng   a and  te xs xt fixxs i  meo    and f? well yes se ,    if  files xf t m hy  xt v  txe  er actuy hxxk   a xxy  a  nd xxxo the  es e  se txe rr ( xo  be s txe sh, a  ft  p e ha otxxr r   apache d xx. e  s  s c   acc x e x. es ),  t (ssh, he thy xxy hxe access to files on the hard disk. a xx tha o  pe se rxy c e onfigu    r  ed x always xxxxe and   t se shouxd rver w hak ixl not serv (ssh, e w php fixxs thoxxx,  uxd  l xt sho p ixt hp xxd  oxe always proces  is t  hem  x  t w   uxd  xx ith t read h raw e php ixt  er (ssh,     s otxxr  xxy ra  w  e sev  file  s te  m readi ixt ng as   ,  e xt to  for  e  have  l er f. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 82, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "wha y t is the best way to p the rotect the u is  the se wha r and secure for any mitm attacks. is and  m my y way sec  ure enough secure ? what  "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 246, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 273, "text": "spam", "label": "ATTACK"}, {"start": 290, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy wo to rkin juxt just  g on a php project that will fxxxxxe a user system won't  axxxx.  (log or in,regi xxxxxxxxd s bots. texxxxxd lost password to  will emai that l,..) and  able i think  it  cxn txxt this may be very vulnerable xo brute-force attacks anxxxr spam  a saying  (send a password to someone's email like 1000 times, etc. use y to our fanta have xxx. do toxx t and o xxs web that servers (apache, iis) have xxxe js  sort of buixxxxn dxxxxxe  fxxm  dxxxxxe against xx (xxr xxxxx xxxs  web x us xxxx  xxx lost t would be  be the best wa of y to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more t su sort bxxxxx xx, d han two times a  y minute, howeve  he xx, r another page may be ca another l juxt lxd up to 100 times ed  a mxxxxe or so. xxxxs wxxh xs won't see it  the and will be fxxx. users without js will just ha to (and   han ve to xxxxxw t fill he simple in a st attacks rxxxxxx. spa  m with bots will fall for it xxd reveal themselves.automaxxc faux-captc the ha: x not x proje  ct x it   xxd wa implement y of   add bots.  s is simxxxr to t running he axxx xxx. x x . a times,   dd an xxxxt fixxd even  with  up a label saying [xxxx]  simp a le (xxr e will xample). usin  g javxxxxxxt (and knowing  very that most au js tomated sxxm xxxs won't   be running jsx, hi it de so.  the f won't ield an xxxxxw d populate it with xxxxx to x. if the subxxxxxd form doesxxt have the mag rkin ic word the cxxxd re another , thxn igxxxe cxxxd  it will . us (login,registexxx system, xxd ers w a ith js won' x  xxxxxd be xxs t sx it e it   and will xe fine. the  users  with without js wixl juxt have to follow the simple instruction. spambots won't k against now wxxt t xxxs  imp it lement o  simple d to o our  axd spam  x implement  y xu cxn ignor juxt e xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam  xxd bots. what it won't  will xx, even in  simple th i sxxm t e slighxxxx,  fxxxxxe is  sub mxxxxe xxxxxd safxxxxxd yo xxxe u again ca xxxe llxd st a ta ers rget someone ed attack. someone cx i php mplement xxd xxxx page x knowing xxxe  if their  fxxx. bot to a to void the honeypot or always fill in  xxd the fine.  x  cxxxxxt value.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a notable \"phishing\" technique. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaps even just the click itself might exploit a bug).  yes, the main page of the site could do that too, but a well-crafted popup can distract the user and may not be directly associated with the hostile main page.popups were exploited by many unsavory sites as a way to \"trap\" users and to essentially force ad impressions, etc. in this respect, the security aspect of the problem really is the security of the user's control over their own computer and their browsing desires. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is check i ing re referrer quest  the  enough referrer enough   to p  rotect against a cross site request forgery attack? i know  the the  the referrer   can be spoofed, but is th rk? ere any way for   the attacker   to do th referrer at  for for the but  clie be nt? i know tokens ar  that i e the no do rm, but would this  token referrer s wo forgery   rk? "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 43, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "the whole point of using salts is to avoid the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes . thus, it only needs to be long enough to exclude the possibility that such a table already exists for a specific salt. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 30, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "database is compromised", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "compromises the machine", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "database is compromised", "label": "ATTACK"}, {"start": 81, "text": "all of the secrets will have to be changed", "label": "ATTACK"}, {"start": 466, "text": "compromises the machine", "label": "ATTACK"}, {"start": 500, "text": "encryption can be circumvented", "label": "ATTACK"}], "sentText": "it's the most obvious solution, but if the database is compromised somehow, then all of the secrets will have to be changed. to me this solution is not ideal because it has all of the problems of storing a password in plain-text. this will provide some security, because if the database is compromised then the secrets will still be safe. but reversible encryption requires an encryption key, and the key has to be stored on the server. it means that if an attacker compromises the machine, then the encryption can be circumvented. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "running [code]", "label": "ATTACK"}, {"start": 154, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "how th ev e e th u e v run x,  [code] i do not u ud d the s   xxxxs d about sexxxxy .  that  the cxxxx, running [code] xxxxs x c how an xe hr the y  ud o run any javascript code that you can run. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 450, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 1022, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 551, "text": "xml bombs", "label": "ATTACK"}, {"start": 1151, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has these  been xxe backbone xf the xxxxxxe oxxxxxxd applixxxxxxxxxx) and xt will be a xxxxxl o na applixxxxxxxx xxe xx) ture ne \"b p om  b xml \", ,   in the x  xxxxg fu xml tur thxt e. xs xs  the x  ml xs e nature asy , flexible, it can be exxxxy made vulnerable an  and ks  the attackxxs  percise x x xn  model uxe i xml t f x ture. ml or their own backbone  p  urxxxxx ex fu xxxxxl xs  x such  xxxxxxe xxxe of the x detail xxxxxs  easy by are coercive parsing attack, xml exxxx   xxxxxxs xxl entity(xee) attack,  can xml dosx own xxxx) attack, xml bombs.c can an any xxe x these xxl in detail about these atxxxxxxxxw could x nature  exxxxxxl xe c nature an simul dos or x xxxxxxs xxxx) ate or  these  can attac attack ks p ate rxxxxx the xxxy i   f it e parsing asy n a single sysx in xx? i do single own  n't xxxxk entity could (xee)  there is percise defin an itixn of a \"bo to mb\", but it refers to an attack thxt is particuxxxxy xxxxxxxx\" and wh xml ich \"e is xpands\". a \"coercive par exploits sing ks  attack\" exploits the nature of the xml model to overwhelm the parser. a boxb using enxx in xxx rxxxxx s whixh result in a dos xxxxxxe it exhausts the memory "}, {"sentId": 121, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 169, "text": "become compromised via script injection", "label": "ATTACK"}], "sentText": "[link] gives me concer in [link] jection [link] . where  n about  application the potential for a [link], in a case where my ap application pl my icat n ion has [link]  become compromised via script injection i potential n . "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "thxs approxxh prxxxxxs defensxxxxxxxxxx. if someone manaxxs to leak the database table, it doxs not give an attackxr an open door for impersonating users. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 53, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 136, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xp xs ae a e \"xxxxx\" xxxxx. hoxe sixxs xxn use ps xo convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (r xxs exxn xxxt the ck itself mt explt a b.  y, xe main page xf e e xxxxd do xxxt , but a wxd p xxn dit the uxxr axd y nxt be xxxxy xxd wh e xxxe man pxxs we exd by mxy uy ss xs a way to xxxxx\" xxxxs axd to xxxy force ad impre, . in xs respec, the y xxxxxt f the prm y s e y f the us coxxl xxr thr xn r and xxxr xxxg de. "}, {"sentId": 28, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "register with the service, login", "em2Text": "modifying the token that they receive to access the accounts of other users", "label": "None"}, {"em1Text": "modifying the token that they receive to access the accounts of other users", "em2Text": "register with the service, login", "label": "PARENT"}], "entityMentions": [{"start": 80, "text": "register with the service, login", "label": "ATTACK"}, {"start": 122, "text": "modifying the token that they receive to access the accounts of other users", "label": "ATTACK"}], "sentText": "since this is a public facing service i am however concerned that someone could register with the service, login and then modifying the token that they receive to access the accounts of other users. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "xxxxxxxg a database is compromised a pxr user xxxt prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table woxxd have xo be gxxxxxxxd for each and every user who had a uxxxxe salt in order to obtxxn their pasxxxxx.  this would be a time consuming proxxxs which is what xxxxs salts effexxxxx.  this does not help a tremendous xxxxxt against dictionary or brute force attacks. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 181, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 254, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  n d i xxn fi xt lxxr   p id  i xxs  u  ot aco   ill xxe xx ms xxs and    i  wek t xn xy we n k cal. hor lx x  x g ,  a a  k se  m y  xxn as al  xx os xr   sxxe xn howr  f  a cn n add my bot to a thousand big groups an xn p  d l p te os p a  ill  sxxxy result in denial of service for all other users  . xv x p v   en f tx p xr  xxe ev m h c. a  xxxe d ve imxxxxd e xxxe l l img  d sx a   xh u r x. e sr  a xxxe  aco txe p .   n  ns xa mxxs e axxs y   .  sx axxs y wil  o t wil  en il rt   all  us rt n dxxx o a hower l  d  x wil  a xx  ill for xl  xxy o xn  a    n f sere fr all r x n x a m  xxr add  p  all xx  s. "}, {"sentId": 40, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 83, "text": "attacker can embed a  script tag pointing at a remote server", "label": "ATTACK"}], "sentText": "  poi  ntin a g   y  oxxxe   (  tg  ) h e  scxt e -t jo  n a a  the g:   th  g ) e attacker can embed a  script tag pointing at a remote server the  t h h     ev  al y, x)  a xxy nd t  he b   r  y r th o  wr f  w rxxxt    d a  il th  xe l e  e  e a f e fec  t o i  evalx)  vl xxd  y  oe y   rxxp   v  a si l) a  e  th sxxxxt     e e   e a  r  e i   y    a t   pl att t   axxxr y fo yu  're yo  u f  scrit 're  r you,  th ho f  e e  vr axxy  it   n   sxxxe y )    e  mbe i d    thrw  s b si xo  a is  a wy  xe    f   xxe r at p    evx)  onse  d  y rxxe o yxu t xxe u ver 'e     xn e an     ll an  at xxe xxn xxi t x,  is e  d v e xl  e    l the y d  an  a i si  a a  t  txxxxr xy a  nce    xxe  j fxc son o  i xxe s t  a w  ay l xxxp xxx, o an ns  e, a   th  e a va an ) xx'  e saf. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 118, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 176, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i xxn fi xt lter u  t the messas and  i xxt in xy k . howxr lxxxg , a  xxxxxk sxxe  malxxxxxs xxr  xxn f  ca can n add my bot to a thousand big groups an xn d xl p the ossy result in denial of service for all other users. xv  xn if telr ev am ha d ve d soxe e l exxl imiting suh u ser x. e sr e  ao xxe xs xa mxxs some axxs y  wil st xn ill rt n xxxxa hxxr l  d  enial o a  n f servixe for all r xxxr add . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 96, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 192, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxp wxxx wi xxs xxe a noe xxxxxx of xxx\" y,  txxs  xs   e xx. host ps xxe s xxn  f s ile e s to convince users that an important message from a trusted site has been delivered, a x b  xe e nd trick those people into clicking through to some malware url (or  pm x   e s xxxn just te clk xf migt expxxxt w  i  a bu.   xh , txe  axe xxxn page xf  to txe xe d b. g   xo xxxt too, t a wel- rd c o rafted  i man ty p s  xxn dixxxxt the r axd   y t e i  dixxxxxy maxn  assod wi wd xh the xxxxe mn e  .poxs xxxe o us a e ixxd by may  f uxy ss xs a way  e t to o \"r o ap\" xxs and to ey for e ce ad i  , etx. in ts r popups p n e, te wa xx peope xxxxxy y  y  s axxxc \" use r t of e probxm reay is t  xe securi   xxx, xy  exxd  a xf the use s xs con xxy l ovr th pos er o xxxxs n e  compxxr ad xk   e x  be not xxxr browsxxg desixxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 171, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 292, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a exp  (s data, pel)  xo     rt   sy rt   sxxxs i  e sysm  alw  xe xe xxxxxs that\"spring expression language (spel) s  y  \"  stem    xxxxd e e  xo sysm get  i    ted h http parameter submissions thxxxxxxxn  g      th  at  ited  xxw xxd al o low at apxxxxxt e   xxt th ixn xxxxe lo   rs to get sensitive system data, application and user cookies. s   sy   y \"  "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 173, "text": "dos ", "label": "ATTACK"}, {"start": 236, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs ma si saxe  xed     othr p  xxxxr post assword_ver  i same ) out  ( fy() a   saxe and s sit same e-xe   ix  xn s s  xxr funcxxxn d  f s o st f the s si ame fun set  ) xr dos ab s assd  _veri t le xxn con con   pt  xxg st d st os via maxed out post parameters ? plexxe also conxxxxr the  si same te-wxxe c ag xr  f ain  st onxxg sxxt l d e ions o h f post u sae d siz is e s s m st xxh    is largxr  p same os   thn . "}, {"sentId": 26, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack around your javascript code", "em2Text": "know backdoors to your services and apis", "label": "None"}, {"em1Text": "know backdoors to your services and apis", "em2Text": "hack around your javascript code", "label": "PARENT"}], "entityMentions": [{"start": 183, "text": "hack around your javascript code", "label": "ATTACK"}, {"start": 221, "text": "know backdoors to your services and apis", "label": "ATTACK"}], "sentText": "and when i say to my fellow java developers, i start using a javascript mvc, they start saying it's not secure enough, as javascript is all about client-side there is always a way to hack around your javascript code, and know backdoors to your services and apis.   there is always a way to hack around your javascript code, and know backdoors to your services and apis. "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 584, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 1774, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 1817, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 2567, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 2650, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "first of all i'll describe briefly the authentication procedure as i understand it, as i may be mistaken in that regard: a client starts a connection, which a server responds to with a combination of public key, some metadata and digital signature of a trusted authority. then the client takes the decision if she trusts the server, encrypts some random session key with the public key and sends it back. this session key can be decrypted only with private key stored on the server. server does this and then the https session begins.so, if i'm correct above, the question is how the man-in-the-middle attack can occur in such scenario? i mean, even if somebody intercepts the server (e.g. www.server.com) response with public key and has some means to make me think that he is www.server.com, he still wouldn't be able to decrypt my session key without the private key.speaking about the mutual authentication, is it all about the server confidence about the client identity? i mean, the client can already be sure that she is communicating with the right server, but now the server wants to find out who the client is, right?and the last question is about the alternative to the mutual authentication. if i act as a client in the situation described, what if i send a login/password in the http header after the ssl session is established? as i see it, this information can't be intercepted because the connection is already secured and the server can rely on it for my identification. am i wrong? what are the downsides of such an approach compared with mutual authentication (only security issues are important, not the implementation complexity)? man-in-the-middle attack on ssl are really only possible if one of ssl's preconditions is broken, here are some examples; the server key has been stolen - means the attacker can appear to be the server, and there is no way for the client to know.the client trusts an untrustworthy ca (or one that has had it's root key stolen) - whoever holds a trusted ca key can generate a certificate pretending to be the server and the client will trust it. with the number of cas pre-existing in browsers today, this may be a real problem. this means that the server certificate would appear to change to another valid one, which is something most clients will hide from you.the client doesn't bother to validate the certificate correctly against its list of trusted ca's - anyone can create a ca. with no validation, \"ben's cars and certificates\" will appear to be just as valid as verisign.the client has been attacked and a fake ca has been injected in his trusted root authorities - allows the attacker to generate any cert he likes, and the client will trust it. malware tends to do this to for example redirect you to fake banking sites. "}, {"sentId": 59, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 35, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "as r as i can see this sd prevet a man-in-the-middle attack, r am i missing something?at point 7 the ct sd know if someoe is trying to give the server the wrog ky to encrypt with, as no one e but the server n decrypt key2(pu. "}, {"sentId": 9, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 0, "text": "sql injection", "label": "ATTACK"}], "sentText": "sql injection (owasp a-1)  sql injection is still a concern.buffer overflow is normally prevented by the clr, but is more possible if using non-managed code mixed in with managed code.net code can be decompiled, so storing sensitive info in code, as opposed to encrypted in the app.config... things you should watch, is that it's really hard to completely secure your data layer, when a desktop application connects directly to a database. for instance, sql injection is not an issue for your desktop application in this case, since when the application can directly connect to the database, so can the user. and if the user can connect to the database, he can execute any arbitrary query. this is an extreme form of sql injection, but it completely skips your application. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 137, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 227, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 318, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn t   l d txxxxs bee , n mexxxxxd is o xm  xxxt xxg :    ) create a random guid/cryptographically strong random number     x) x) send a unique url containing the random number to the user's email  address  ca e te    ) when confirmed, the user is asked to change password how xo x, t ti a s op e  xe n   xo e  a [code] attack? xf    e sxg a m h xxxxxy ps oxxr the e i  o xxe s t xo an xm ) xxe  al i  see  xxxxr xr s i, wxa   g xs t s 3) ix: e df t he o fe  f ben g xxxt xxr sxxxxe ,  xd s g p e ly g a uxe ul wh te atxr n  ram e xx? e  e i d a ky stp xxxxe  m m e xo we xxxt l mxe s a bxxe nd  y xxxxxm m xxe xxxu xn   the g xe (or is t r m axm he xg e a e xw eset i txxg s r y o r i  f r  esg th ) e pd s ? "}, {"sentId": 9, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 140, "text": "injection attack security", "label": "ATTACK"}], "sentText": "what are the best workarounds for using a sql [code] clause with instances of [code], which is not supported for multiple values due to sql injection attack security issues: one [code] placeholder represents one value, rather than a list of values. "}, {"sentId": 12, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 89, "text": "man-in-middle attacks", "label": "ATTACK"}], "sentText": "encrypt my communication (c->s &amp; s->c)do 2-way authentication (c->s &amp; s->c)avoid man-in-middle attacks "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 182, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i hae a hg   findin hae g  cn secuy scan finding g me to disae tcp timestamp g s. i unde (good rst findig and the r  s.   scan easons s.  f be or  d ading  e findig  recommendation: the timestamp can be used to calculate server uptime, wh ca findig n be l usd  to an atc to r (good explanati . on under e  ading \"tcp timesp , s\" be  at [l. "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 39, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i   know tha point t an attacker could just go down to the assemble code, c#  a som ta ething nd a  is c# t th nothing at point there is nothing a  t all i can do against t  h a is (the s the ystem h de? as to be able to encrypt / d for ecr to ypt  data), the d a ata), but is  i the  re l does ike a at  shortcut  at for to  c# to get the da shortcut ta  to but ),  encryppassword, is  since it is managed, or does something  against like t th his still require  for you to  to go down to   the assemble co to  c# de? "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 132, "text": "running [code]", "label": "ATTACK"}, {"start": 197, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevxx,  vulxxxxxxxx. i do xt xxxd txe  g  s  the  you s xt  about  vulxxxxxxxx. xxxxxxxy vulxxxxxxxx. cxxxx javascr  ipt xxxx, g  running [code] g xt  xxxs xxxs te hr the xxxx,  axxxy  [code] to run any javascript code that you can run. "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 100, "text": "block the vm", "label": "ATTACK"}, {"start": 114, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 166, "text": "eating all the memory", "label": "ATTACK"}, {"start": 239, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 284, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 318, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 395, "text": "deny resources", "label": "ATTACK"}], "sentText": "if i wa be malicious  eating i am gonn e a do all my code in the finalizer thread and is  t e o  jt block the vm. same doing [code] bye-bye new threads s is  . just  eating all the memory, eat  e sea ing all direc the t y and  g am  so o. accessing zip files in my own jar, ad files  expect 'em getting moved away, so the jvm crashes (due to bu) in zlib)  mer  y, if o deny ne purpy n eag ts to deny resources, it is t n ct  do ot a fea w sible tk it    to   k in  o try on  and cat i ch the hacker.  a  l by  yo' and d nd o know  awa  y, wh to a eatig   t to a in rch for all  eag  d dynaa eag l to ly chece the s on run-time to da on llo vm. w th bye-y ot e  e  k e b e  the .  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 271, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 383, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxx elxxx x\" xxx xs  wh a  r  x  e   e he cy br cor e a  a  y   t is  e notable  x t     an control    \" do xx w x  x xxd xxxx\" xx xe x es x e xx l x xxxxxx    xx   xxx x  xy is di    wxy . hoxe  tes si t   tes  s cn  xx us  e xxx those   p ge o e xs   to   e to convince users that an important message from a trusted site has been delivered,      those   el t  y  ex and   trick those people into clicking through to some malware url (o  r    pxxxp xx      xxxx t truste        op  xx xxx  th url   e xx cor d   the x  x   uxx it x  xxxy xs  y xxx\"          exxn   xxx  just t ex  but he ck  c ex li .  ex   n  otable    h  ck   di  x  xx tes x  itsef    pxxxp t    ex pr  expl brow xx sing o     e otable  it a co ha nvinc  e op  trick    op b  u  gx  pop t mess  a . ge he   .   s x  xx t  di , the m xx f x\" wxy  ain  notable  ex  wh cor p te xf   t   pxxxp is    loit loi hose t  he pag  e xf the  p xxx  xx  the x x hose xxx  ecy   x.   xx\"  x   e e x xx control xe   ex  xx e  d  xxx o   , tr t i  ck  d  n do   xxt  x xe  x  ex  r m f xxxx\" to ex x, but a  op w po y ex  xs el wh  to xxx xx xx a x th  e d p x     x is op xxn  t xx  n hat tes  users  t    dixxx n b    xxt he    d contro  l       the   h t   x a x . xr axd notab  le  x  x m y no xxs t  x x pr e d x t s  xx  lo  ce   o it ixxxy x xxxxx xx control  do x x\"   xxx  convi h xx e d as xx he  xxxxxx d  d  t wh xxe xe  xxx. exx  n  xxxn to  p  a dixxx xxx, y s x from  those xxe but  xx t  hose   a  im     tes x w  wh the  xxxxxd y m in  t  o x itsef xy t    to xxxx\" u x   xxxxxx x  xx\" control  xxxxxxy  x xf  itse  f    ss     xs  t xxr  a wxy to xx  xxx\"     usexs   ge    .   convinc pag e   xx  x m s xx t sx  x has delivered,  xxy  a o y   xx x xx\"   xx\" i xxxy   t  a \"xx lo xx t   xx t  o  h xxx\" d to si    esx  xx  y   wh    b x u x  xx\" g  x  fe a  op  d  t im ex  t  a           x t  o t  xe  pre,  the . convi y  xxxy n  x not ce  n   t   the    not ha  t xx xxs r, e t usexs hose  s to  has  f ecy      x  xxxx\"  trick xxx\"    t xxx.     di y xxxxxt xf xe  delivered,  t  xf  h f e pr to  us p e ob    xxm  tes t  e t x no  t   y is te to  sxxxx r y of the x c    t convi  xxxxs  ha  s control or  xxxxx message x  t   r     xx si o n wn c  or  s   xx  x.      and xxx  r br  ow to si control  h  as ng  th   xx e  ha    s x  xx.  or f  y  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 142, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a noxxxxe x\" xxx. e xxxxs cn use pxxs to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xs xn just te clk itsef t exploit a bugx.  xx, the maxn page xf txe xxxe xxd xo xxt xx, but a weld pop xxn dixxxxxt xxe xr xxd xxy not xe dxy xxxxxxxxxd xh e xe xxn xxs xe xxxxxd y y y s xs a wxy to xx\" usexs ad to ey fe xd imxxx, . n txxs r, e secy t xf xxe prxxxxm y is te y of the xxxxxs contrl r r n cxr and xxr g xxx. "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 28, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 86, "text": "requests the form page first", "label": "ATTACK"}, {"start": 116, "text": "starting a valid session", "label": "ATTACK"}, {"start": 144, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 212, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i inherited some ce t was y attacked by repeated remote form submissions. , the r now requests the form page first, starting a valid session, d then passes the session cookie in the following post request. there having a valid session token. so fail n my . "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 105, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, and xxt to w wxxt is the t xxxe wy xo escape user input for forum posts. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 324, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 417, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x  xxxp -c  w wix   ix clxxk xx x xs that    b and x xo o  x r x. to a o r t e a o xxxd   xx  n  o to x y xxl xxxxxx xxe x,    a y nd e \"x      x x   s \" xxxxxx xxx a uxe x   not spect h   x xx the xs \" xxxxxx xx, xxx xe that  . hx poxx xxxxxxx, p  xx xxx ce xe  xx xx  x  xxx, xxxxxy xxxxs  xxxxd cxn uxe xe wa   pxxxxs xo convince users that an important message from a trusted site has been delivered,    tx xn  d trick those people into clicking through to some malware url xx  r     not o   x  p e xxxxx  x and s ev   bxxx.   e exploxxx  d n j n u   be st  e w  the clixk x con xxx  xf f  has  might exp  loit a xxx  xxe xx xe   r x.  compxxxr   m  x h  di x xx  xxxy  xxxxx a   xx a    o e   x.   users e     and d yxx, t  h x e ma  in pa     wxxh  t x heir g p a ox xx  j xp e xf the xx and    ick   xxx et  x. xx d  o txxs o txxs  xe f xh aspect   e x asxxxxxxx     b xe xxx. xxxxxxe xm  x x e  xxxd do xx  xxr  y po x x  s the  xx    xo ad  x  x hxx tric  de  hr w  p wxxh  k as xxxxxxx pect  x has xxe   p  e   x x a xt t to t  o   th w e a   wexl x x. xx  xxx an xxy d xxd   o,  t but a w from y  exl   x  hrou w gh  t  e    \"x  xxx  xx xx xx -c  s not raft wix e cl on  px x  x  x xxxxm  o ick      t  peopl x e y xl xxxxx the  e d pxxxp  url xxn the  dixxxx n w ot x x c has ompxxxr x t the xxx x pxxx t p xxxxxx       be  the y r a  xo  xxxxk   e axd   xxy  xxo a  xn pox xxxxd xp d m xxt    xf   be dixxxxxy     d dixx xx xxxy    o,  x x  x. xy asxx into x  xr axd xxxx  us w  con  xxxy d e  xx a xh th  e xxxxxxe xx d xs  xn  i page. xt po a p  a url ups wxxe pxxx wa xx x x xd m th  th    the exploxxxd    do xy   to tes   xxx x y xxxxxxx xxxxe y x k xx    s xxxxxxx  users i xe     tes xs   xxxx xxy  x r e he  ox w n xploite clxxk d a  users wa o so  me f y to xxx e x  p xe \" \"xx  xx the xxx the x e   xxx t xs x  xd xo     a  esxxxx xx xxxxy   x    x xxxxxxx xr xxxh c   x.  xxx their xxxe e   ad im  x    th xxx xxxxx wxxh o wxxh  a xe  url  h     not x  x, etx.  i x  not si  a n txxs res  x xe xxx, the sexxxxxy axxxxt uxe  etx.  o t xs hr y ough com t pxxxr  f   th x  to xs  e  xxx xxx x po xxs t   xs p xe xxx  d     comp u    xx xxx    r xxm xx     url   rea xxx dixxxxxy  con  dixxxx  e r xx the  xxxxr y de  n   xd i xx con  x   xx e x txxs x  y s x  xe s    people x xxy xxx oxn  im r e has  x  xxxd  users cuxxx x d  y  xxxxd of t x he us a x    xxe  exxs c  on xxe  wxxh tx an xp d   s some k  o    l x  xxr  us their d   ick    users  by oxn compxx x xxy  xr a xxxxp nd xxxxr  x. has uxe   x t  etx. x wxxh xxxxxg de  sx xxy xxx  .   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 69, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 162, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxx t xs are a nxxe \" cg \" x xxe . xxe s x oxx xn use pos to convince users that an important message from a trusted site has been delivered,  xxxxxs and trick those people into clicking through to some malware url (or x s xx xx xs x poxxxs xxs x a xs en jus x t xs  t xx e ck if m wxxe ig peope t   explt a   .  , xe n pe xf xxe  . xxxe d nxt  do t , bt a xxx the d poxxp x x that x x n n dx d t txe r ax popup d   xy t be x xxr xxxxxy xx page xd  some xxxh h l e xxe n pxxxxxx txe bn  xxxs e exd by may uxxxx xx y sites x xn s a wa sxxe y to \"trap trick \" users  pp a som xxe e xd to x \" xy xxr asxx r xt ce ad , . n ts , the s  e wixx d, xs cuy xxd  axxxt pr s obxxm  of  ,  w for xxe te probxxm x from y is txe sy xf e s xxxxxxl ox y xxx e xx.  r th and e wxe t   s r\"  r o probxxm del,  xn r and xxxxr g . "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 417, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i xxc let ey xd at s securixy m. mot pee a  thik java is  te has  sexxxe ba to e it  ey xxn  in  is ime o buffe it r overf bxt lows, et the c, xt there s th n i (say s ee ja y l ced  has aroxxd chec ud  there kin xxs  aby g whr ce s pi  it o n xo take c xxy n x. e really o xxs lving a ch permo (y n alleg probl: how t under (say lyxxg o lt ab sg xxy s s te pexxxxo d e (say n a web bs (y ) rn but xs  be d fo etc, m accessing the underlying system in malicious ways wh it e r p td  in revented eg e aby to ag  it with  ard the sm in soe wa a n lt tt rod y. "}, {"sentId": 147, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "decompile my app", "em2Text": "register and then \"scan\" my entire database", "label": "AND"}, {"em1Text": "decompile my app", "em2Text": "sending requests with different gps data", "label": "PARENT"}, {"em1Text": "decompile my app", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "decompile my app", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "register and then \"scan\" my entire database", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "gaining access to the api", "label": "None"}, {"em1Text": "sending requests with different gps data", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "decompile my app", "label": "PARENT"}, {"em1Text": "gaining access to the api", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "gaining access to the api", "em2Text": "use his login information along with the key from the code", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "decompile my app", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "register and then \"scan\" my entire database", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "sending requests with different gps data", "label": "None"}, {"em1Text": "use his login information along with the key from the code", "em2Text": "gaining access to the api", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "decompile my app", "label": "ATTACK"}, {"start": 49, "text": "register and then \"scan\" my entire database", "label": "ATTACK"}, {"start": 103, "text": "sending requests with different gps data", "label": "ATTACK"}, {"start": 351, "text": "gaining access to the api", "label": "ATTACK"}, {"start": 419, "text": "use his login information along with the key from the code", "label": "ATTACK"}], "sentText": "however, i fear somebody might decompile my app, register and then \"scan\" my entire database by simply sending requests with different gps data that doesn't actually come from an ios device. is there any way to prevent this? i've googled already and found this threat: i've looked into api keys but didn't find a way how to stop a malicious user from gaining access to the api through registering/ decompiling and then use his login information along with the key from the code. "}, {"sentId": 43, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "decompilers", "em2Text": "get the key", "label": "None"}, {"em1Text": "get the key", "em2Text": "decompilers", "label": "PARENT"}], "entityMentions": [{"start": 464, "text": "decompilers", "label": "ATTACK"}, {"start": 480, "text": "get the key", "label": "ATTACK"}], "sentText": "regardless of the programming languagei have a client server application.mobile client - http serverthe app will be available on several mobiles not only android.i want to make sure the request is coming from client's mobile only.how can i solve this security problem?i propose :have a secret key hard-coded on the mobile app:each request is encrypted using this key and decrypted on the server side.is it safe to hardcode the key if this way makes sense at all? (decompilers can get the key? the app will be available not only for android!)extra info:each user will have a userid/username... "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 392, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how cxn i display the \"wxxxxxx, [yxxr xxxxx\"  pages thxy  on public pa pages ges fo xf r authentica and ted users, even i pages p  f xxxy us  should therexxxe e htxx? of cours  xxxxs should e, i wou auxxxxxxc e] a ld  xh xxxs erefore  the like to kxe [code] p txe ac authentica cess to the sensitive p an therefore d ages safe, and i shoxxd  pa to  thexxxxxe keep [cod f x] to axxxd pxxxxxxe stealing of the session token an . "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 782, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 882, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now  is, addi is, ng a 3 in rd participant to this comm to unication will not  questi wo will is, (   rk   is, onl (i.e.  becau y b 3 e whic ca this us  e is, (i.e.   k sc  the  hema ey exch  he ng ma so  a a  nge  in algorith a ms a designed r secret e designed to deriv n hared ot e a s sec  t abou his is,  hared secr  et co using mm et fr o  w om 2 publ (i.e. ic keys only (esp using ecially u  sing .ne  t an  d b is, ouncyca hema  a stle). so the ques about ti sec    ret  se o r n is, h 3 ow wou in ng  l now now  d you g is nd , o abou  t imp 2 lementing  attack) a whic algorithms h  n-pa  rty raphy (   i g s k ,    public k this ey  to  a b  cryptog attack) r sec questi r 2 et ap ques hy in  schema whic     in h is still authentic (i.e ( using i.e. . resistant o    to man in the middle attack)   lementing  a  nd secu which  (i.e. re (i.e. se is, cure f becau  se rom eavesdropping). "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 160, "text": "sql injections", "label": "ATTACK"}, {"start": 224, "text": "xss", "label": "ATTACK"}], "sentText": "i'm trying to e a php application i've wrn secure and hae a question about g output. i switcd to using prepared statemes with o once i leard g so would prevent sql injections, and it seems that te otr main type of attack is xss. i build the output for my pages like this e te variables have data fm te datae in them): s preg special characts to proper html entities, for example it cons the copyright character to [code]. n html content you should use the e l entiy instead of inserting a raw specl character. for xss prevention, you cod use [link] , but it will only cot some basic characters to html e, namely quote, ampersd and the less than/r tn charact. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is someone could decompile the app  c (which i've  c proguar proguard d ould done) and even with proguard you can qu with   wi the thout too much dif ompile ficulty retrieve all the  ould qu dec the om the pile es can tions.  "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 299, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 419, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am planning to aes_encrypt the passwords in the db, which means that if somebody is somehow able to access the db they won't be able to get the plaintext. however my code will need to have access to the key to unencrypt them, thus if the entire server is compromised this is no protection and the passwords will be revealed.  i know that whatever i do, ultimately the passwords must be accessible in plaintext and so a compromised server means the passwords will be revealed, but i am wondering what steps i can do to mitigate my risk. e.g. encrypting the db protects me in the situation where the db is compromised but not the entire server. other similar mitigating steps would be much appreciated. "}, {"sentId": 20, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "attacker can decrypt authentication cookies", "em2Text": "generate authentication cookies with the name of any user", "label": "OR"}, {"em1Text": "attacker can decrypt authentication cookies", "em2Text": "appear as anyone on the site", "label": "None"}, {"em1Text": "attacker can decrypt authentication cookies", "em2Text": "decrypt (and also generate) session cookies", "label": "None"}, {"em1Text": "attacker can decrypt authentication cookies", "em2Text": "the attacker can download any arbitrary file from your web application", "label": "None"}, {"em1Text": "attacker can decrypt authentication cookies", "em2Text": "attacker gets the  secret keys", "label": "None"}, {"em1Text": "generate authentication cookies with the name of any user", "em2Text": "attacker can decrypt authentication cookies", "label": "None"}, {"em1Text": "generate authentication cookies with the name of any user", "em2Text": "appear as anyone on the site", "label": "OR"}, {"em1Text": "generate authentication cookies with the name of any user", "em2Text": "decrypt (and also generate) session cookies", "label": "None"}, {"em1Text": "generate authentication cookies with the name of any user", "em2Text": "the attacker can download any arbitrary file from your web application", "label": "None"}, {"em1Text": "generate authentication cookies with the name of any user", "em2Text": "attacker gets the  secret keys", "label": "None"}, {"em1Text": "appear as anyone on the site", "em2Text": "attacker can decrypt authentication cookies", "label": "None"}, {"em1Text": "appear as anyone on the site", "em2Text": "generate authentication cookies with the name of any user", "label": "None"}, {"em1Text": "appear as anyone on the site", "em2Text": "decrypt (and also generate) session cookies", "label": "OR"}, {"em1Text": "appear as anyone on the site", "em2Text": "the attacker can download any arbitrary file from your web application", "label": "None"}, {"em1Text": "appear as anyone on the site", "em2Text": "attacker gets the  secret keys", "label": "None"}, {"em1Text": "decrypt (and also generate) session cookies", "em2Text": "attacker can decrypt authentication cookies", "label": "None"}, {"em1Text": "decrypt (and also generate) session cookies", "em2Text": "generate authentication cookies with the name of any user", "label": "None"}, {"em1Text": "decrypt (and also generate) session cookies", "em2Text": "appear as anyone on the site", "label": "None"}, {"em1Text": "decrypt (and also generate) session cookies", "em2Text": "the attacker can download any arbitrary file from your web application", "label": "None"}, {"em1Text": "decrypt (and also generate) session cookies", "em2Text": "attacker gets the  secret keys", "label": "None"}, {"em1Text": "the attacker can download any arbitrary file from your web application", "em2Text": "attacker can decrypt authentication cookies", "label": "None"}, {"em1Text": "the attacker can download any arbitrary file from your web application", "em2Text": "generate authentication cookies with the name of any user", "label": "None"}, {"em1Text": "the attacker can download any arbitrary file from your web application", "em2Text": "appear as anyone on the site", "label": "None"}, {"em1Text": "the attacker can download any arbitrary file from your web application", "em2Text": "decrypt (and also generate) session cookies", "label": "None"}, {"em1Text": "the attacker can download any arbitrary file from your web application", "em2Text": "attacker gets the  secret keys", "label": "PARENT"}, {"em1Text": "attacker gets the  secret keys", "em2Text": "attacker can decrypt authentication cookies", "label": "PARENT"}, {"em1Text": "attacker gets the  secret keys", "em2Text": "generate authentication cookies with the name of any user", "label": "None"}, {"em1Text": "attacker gets the  secret keys", "em2Text": "appear as anyone on the site", "label": "None"}, {"em1Text": "attacker gets the  secret keys", "em2Text": "decrypt (and also generate) session cookies", "label": "None"}, {"em1Text": "attacker gets the  secret keys", "em2Text": "the attacker can download any arbitrary file from your web application", "label": "None"}], "entityMentions": [{"start": 245, "text": "attacker can decrypt authentication cookies", "label": "ATTACK"}, {"start": 318, "text": "generate authentication cookies with the name of any user", "label": "ATTACK"}, {"start": 390, "text": "appear as anyone on the site", "label": "ATTACK"}, {"start": 575, "text": "decrypt (and also generate) session cookies", "label": "ATTACK"}, {"start": 876, "text": "the attacker can download any arbitrary file from your web application", "label": "ATTACK"}, {"start": 94, "text": "attacker gets the  secret keys", "label": "ATTACK"}], "sentText": "  the first stage of the attack takes a  few thousand requests, but once it  succeeds and the attacker gets the  secret keys, it's totally stealthy.the  cryptographic knowledge required is  very basic. in posession of the app's machine key, the attacker can decrypt authentication cookies.even worse than that, he can generate authentication cookies with the name of any user. thus, he can appear as anyone on the site. the application is unable to differentiate between you or the hacker who generated an authentication cookie with your name for himself.it also lets him to decrypt (and also generate) session cookies, although this is not as dangerous as the previous one.not so serious: he can decrypt the encrypted viewstate of pages. (if you use viewstate to store confidental data, you shouldn't do this anyways!)quite unexpected: with the knowledge of the machine key, the attacker can download any arbitrary file from your web application, even those that normally can't be downloaded! (including web.config, etc.) "}, {"sentId": 99, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 33, "text": "xss attacks", "label": "ATTACK"}], "sentText": " e receny i s  tudied a lot d to xss attacks. i s searc x g for pre xss vn tec  hniques of x for ss  x fr s  s r  .  "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 4, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 149, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 260, "text": "recover those keys", "label": "ATTACK"}, {"start": 323, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 353, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w t an attacker recover the secrets in that flash? i be  d y   c  an z r x y s n t xx  the e xx  w in p   ce ad   t , t those e    y xe cxxd y  e xe indistinct general side channel attack r . bt w d  d  t e o  how  d a  d t   n   x xw r  tg y o   the n t tg o recover those keys?  x side e e    e ve s  ad r a d r to a  xw shave-down the chip    g y  r some kind of microscope attack? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 119, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whol he  t e point  as xf  xxxt   xxxxxxg a  xxxxxxg xxxxxxx xb d is  and i and n c xb   db s dxo ame ase a hacker gets access to the database  . p  if i  a  point sxxxe t , h  ju int e ut    xxxt in xxe  xxxt db  a   xxe  just xxe wixxxn the s  axe xxw xb  as xxxxe  c   hacker the xxxxxd xx h xxxx  xx xb   , isxxt   it ju the and  st l t ike  l h  e xxe  db i it   co  dxx? am an t d  hxxxxxg st  th xxxxxxg e h  cod  e handixg xx? the a in ckxr txe \" and se xx xxxt c ock, xb  od point e\" jus db t ? i am p t  x    e ut t   and he tix s he  i axe g up a dxo codxx? r   gets ixxx a t as  with a l cod  xxxx is e ock,  ase and handix a g th t e  t int l xxx xxxe e a r xxe se   the key. "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 105, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, xxd xxt to w wxxt is the t xxxe xy xo xxxxxe user input for forum posts. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 244, "text": "no access restrictions", "label": "ATTACK"}, {"start": 365, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the restricti  ons,  access  load this   ser but ver i   th e is s norm access a restrictions, l e ly subjected to is this  mi i restricti   can nim restrictions, a etc. l,  to but si   a nce t nimal, h nima usly access  l, e th r access e are no access restrictions,  can   re l, strictions, usl  y the serv to e er r can obv to io can this  usly re   ca can n be attacked by dos etc. "}, {"sentId": 32, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "user logs out", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "user logs out", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "my vuex store retrieves all the info", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "user logs out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "user logs out", "em2Text": "my vuex store retrieves all the info", "label": "PARENT"}, {"em1Text": "user logs out", "em2Text": "vuex state save still retains all its data", "label": "None"}, {"em1Text": "user logs out", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "user logs out", "label": "AND"}, {"em1Text": "vuex state save still retains all its data", "em2Text": "view what the state was before the user logged out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "my vuex store retrieves all the info", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "user logs out", "label": "None"}, {"em1Text": "view what the state was before the user logged out", "em2Text": "vuex state save still retains all its data", "label": "PARENT"}], "entityMentions": [{"start": 170, "text": "user is logged in", "label": "ATTACK"}, {"start": 359, "text": "my vuex store retrieves all the info", "label": "ATTACK"}, {"start": 570, "text": "user logs out", "label": "ATTACK"}, {"start": 606, "text": "vuex state save still retains all its data", "label": "ATTACK"}, {"start": 848, "text": "view what the state was before the user logged out", "label": "ATTACK"}], "sentText": "b lg but  t ged e pubc y xo     data s st a ored in my e v x state x all xxd    e  n save  e p xxxe  str age ls  i was logged  v  usr s   n whxt  er ue the x  f the the  user is logged in(or ha so o re s a  o x   x d i (or n [ t c out a , o  xxa n  s t e d save e] e  r  x  a  onn ad nd thex the xxx  e  te ge e  loggd ts aut  reta xxd ins sd o logg e ed ix) my vuex store retrieves all the info all  from a x  st dxxa  c  a  t on ha  t s view tored is  t rexr [  data the  v  al  all    x re s u  s ts t stor i dxxa s e o   d c  he  no a n  t std tici no on. on tn the user logs out,  ue out, x b v ut xy vuex state save still retains all its data xxxs wod b its e a  is security  is xxxxe  e as x  xxr  th n e ls     all logs  lg t logg    ld d ed in pl  ls  g e al tn   e not (or   xxxxxx) on a pub woxd li d  ste c stxxe  pc cou da l n data  d view what the state was before the user logged out is .   publi io x no  peopl n e]  call [ ld xxx d x] wh vuex  n en e use is r  vi n ew logs is  ox its x vux   .   t l   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 97, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 193, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs ar cor e a notable \"xxxx xxd xxxx\" xx xe x esxxxy  wxy . hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered,  those  ex and trick those people into clicking through to some malware url (or xx  trusted the x  x uxxxxxxy xs exxn just t ex he cli ex ck itsef t pr  expl browsing oit a convince  bugx  pop t message he .  xxx, the m xxx\" ain  ex cor p te  is loit page xf the x  xxxe xx xxx, d do xxt  x xf xxxx\" tox, but a welxxxxxx the d pop xxn  t xxn hat dixxx n xxt d  the xxxr axd xxy not xe dixxxy xxx do xxxx h xxd as xxd wh xxe xe exxn  xxxn pa dixxx xxx, y s xxxe xx those   xxxxxxd y mxxy  xxxx\" uxxxxxxy   ss xs a wxy to xxxxx\" usexs    mxx to y a xx to xxx\" d to esxxxy fe ad im ex xxe  pre, . n t xx xxs r, e s has ecy t  dixxxxxt xf t  he pr to  use obxxm ex  y is te sxxxxy of the xxxxxs control or r own cor xxx.  and xxxr brow to si has ng  the  has xxx. "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 12, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 152, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i  to  . am creating a forum software using php and mysql backend, ad wa  nt to es es   wat   ps fm  mot . kxw i  t s the t e wy to es t o  a es pe am  user input for forum posts. "}, {"sentId": 104, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 0, "text": "apache log4j vulnerability", "label": "ATTACK"}], "sentText": "apache log4j vulnerability [link actor ] is  v androi ae  ulnerability impac is ting a numbe  wan in ted does  a r of cloud  t servicei a apache m usin it g log4j in a  my andri plw d ap impact plicatw dos it t it r is there no im my pact at  j i a of m as cu ap ld g s e ine the malics a does cto a i  r could ony run l , it shoud nt be  y apache  an issue but i wanted to con. "}, {"sentId": 123, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "interception", "em2Text": "man-in-the-middle-like attacks", "label": "PARENT"}, {"em1Text": "interception", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "interception", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "interception", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "man-in-the-middle-like attacks", "label": "None"}], "entityMentions": [{"start": 101, "text": "interception", "label": "ATTACK"}, {"start": 350, "text": "man-in-the-middle-like attacks", "label": "ATTACK"}, {"start": 807, "text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "ATTACK"}], "sentText": "i have always thought that as the data was being passed internally in the same computer, the risk of interception was zero.  is this not the case, then?  should i be encrypting in php before storing the data? as you have guessed, it is kind of pointless to use ssl for local connections. ssl's main purpose is to encrypt the channel so as to prevent man-in-the-middle-like attacks. but there can be no man in the middle in case of local connection. in you setup, i would recommend a connection through a [link], and bypass the tcp layer altogether. in the latter case (untrusted link to a remote database), [code] is not suitable. the encryption/decryption process is done by mysql. the data transits unencrypted between php and mysql. also, as one must pass an encryption key to mysql's [code] and [code], this key will typically be sent unencrypted along with the rest of the sql query. "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 469, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 651, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am plxxxxxg to  the aes_xxc xxxt ryxt the pxxxxxxxs in xxe db, w access  t will xxx, hixh xxxxs that if do  s ave omebo rypt dy is so r h evealxx, mxxxw abxe to acces situatxxn s do  the   db they wxxxt be able xo   gxt txe plainte so xt. howxxe my r xy code will  in need t a the ccess o h server ave access to the   is  key to unencrypt them, won't  thus if the enxxr db e xxxxxr is c protecxs omxxxxxxxd txxs is no the  pr the  acce db  , ss be i otecxxxn and the passwords will be revealed.  i  can know that wh db, ateve able r i do, ulxxxxxxxy the pas xxs  to swords mus  t be xxxxxxi the ble xn pxxxxxxxt  be  xxxxxxxg however  mexxs  and so a compromised server means the passwoxxs will b enxxxe e rev axxe eale  d, xxt i am wondering   situation xs wha t  the xo o t xxxxs i can  be do to mitigat them, e my risk. e.g do . exxxxxxxxg the db protects me in the   to revxxxxx.  omebody sixxxt omexo ion where the  is db is coxxxxxxxxd but not t access he xxxxxe thxx,    won't evealed, s mitigaxxxg exxxx. other similxr xxxxxxxxxg steps woxxd xe  be xxxh xxxxxxxxxxx. "}, {"sentId": 85, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "the hacker just tries all values for username", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "the failure message changes", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "knows a valid user", "label": "PARENT"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "the failure message changes", "label": "AND"}, {"em1Text": "the hacker just tries all values for username", "em2Text": "knows a valid user", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "the hacker just tries all values for username", "label": "None"}, {"em1Text": "the failure message changes", "em2Text": "knows a valid user", "label": "None"}, {"em1Text": "knows a valid user", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "knows a valid user", "em2Text": "the hacker just tries all values for username", "label": "PARENT"}, {"em1Text": "knows a valid user", "em2Text": "the failure message changes", "label": "None"}], "entityMentions": [{"start": 71, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 726, "text": "the hacker just tries all values for username", "label": "ATTACK"}, {"start": 807, "text": "the failure message changes", "label": "ATTACK"}, {"start": 845, "text": "knows a valid user", "label": "ATTACK"}], "sentText": "you should include some kind of timeout or failover to prevent against brute-force attacks. there are a number of ways to do this, including ip-based blocking, incremental timeouts, etc. none of these will ever stop a hacker, but they can make it much more difficult. another point (which you haven't mentioned, so i don't know your plan) is failure messages. make failure messages as vague as possible. providing an error message like 'that username exists, but the passwords did not match' might be helpful to the end-user, but it kills login functionality. you just converted a brute-force attack that should take [code] time to [code] + [code]. instead of needed to try every permutation in a rainbow table (for example), the hacker just tries all values for username (with a set password) first, until the failure message changes. then, it knows a valid user, and just has to brute force the password. "}, {"sentId": 123, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "interception", "em2Text": "man-in-the-middle-like attacks", "label": "PARENT"}, {"em1Text": "interception", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "interception", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "interception", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "man-in-the-middle-like attacks", "label": "None"}], "entityMentions": [{"start": 198, "text": "interception", "label": "ATTACK"}, {"start": 590, "text": "man-in-the-middle-like attacks", "label": "ATTACK"}, {"start": 1264, "text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "ATTACK"}], "sentText": "i haxe   alxxx the s thoug setux, ht xxxt as the   dxxa xxs x sed, x be xxg [code],  passed internal  php i   ly xn the same co attacks. de],  mputer, the  dxx  link  should  along should a risk of interception was zero.   and is rest  t  his   dax be xxxxxx,  not the case, xxxx?  should i b [code e encrypting in php bef int e erception ore   s ore toring txe daxx? xs you daxa  have gues daxa sed, also,  it is by  kind xf poinxxxxs to use ssl for local  muxt connections. ssl's main purpose i a s the  to enc xf rypt the by  ch in annel so daxxxxx i xx   query local . ,  as to xxxxxxt man-in-the-middle-like attacks. but there can xe no xx latter n in the middle in xxxe of local x [code] enc , xxxxxxxxx. in you xxs  setux, i would rexx  xxxxd a cxxxxxxxxn thr xxxt ough a [xxxxx [co ,   a this and bypass  i the tcp layer altogether. in xx [ xxxxxx, code] e latter case  storing (u should nxxxxx  xd link to a remote zero.  daxxxxxxx, [code] is  transixs not  r case exxxxxxd sxxxxxxx. the  the  case, encrypt xx ion/decryptxxn  e not ncxxxxx  xn proxxxs is done by mysql. the daxa transixs xxxxx zero. x xxxt xxxxd xxxxx and xn php axd mysq case, l. also, as key an   one muxt xx dxx  main xs an encxxxxxxn key to mxxxxxs [code main ] an in d [co use de], this key will typically be sent unencrypted along with the rest of the sql query. "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 78, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 124, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "another g you nee whips d to  the e aware of is  tg de attacks. ime s  omeone whips up an ackermann function and a script o submit it a couple of thousand times to your server... to t th you is,  c ty a e  an  y  ou d timebox the execn t need i imagine me of any c thou r sd ode being nit e ionally  su be bmitt. to  this s s - sen  tial, be  ts this type of of  \"at i tack\" often hap  pes u  n  on th type e niy - so haps m need eone a  any s nd to produce an inf execution ie . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp wxxxs are a notable \"xxxxxxx\" x. hosxxxe sis xxn use popus xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the clik itself might ext a b.  yes, txe n xe xf e xxxe xxxxd xo xt too, but a d poxxp n dit the user axd xxy nxt be xxxxxxxy associated with the xxxxxxe xxxn pxxxxxxs wxxe exploited by y y sites xs a way to \"trap\" xxxxs ad to exxxy force ad impres, et. in txxs rx, te secy t of the probxxm reaxxy is txe sexy of txe userxs contrl or txxxr oxn xxxxxr and xxxxr browg desxxxx. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 104, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "x in xe whole xx xxxg xx  a is  lxxe t  x sae xxxxxg of x cxxe xxxxxg a passwo  rd key.  s in cxxe a hr gets access to the database. f i store the sa  cxxe s  if lt  withn xxxr  n th whole e db within te same x xxx same  n xxxg xw as xe has gets h r ed  xxe x code\"? xx, isn't t cxe  t le i am handig te hr the \" s   secret  xx, code\"? i am putting up a x just xxr wih a xxxx, and xxxg  am txe intruder e key putting . "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 69, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sure my jenkins instance is not exploitable with the latest log4j exploit.i have a pipeline script that runs, i tried following this instruction :[link]this is one of my stages of my pipeline script:[code]but i get a different error than what's described here and i'm unsure if i'm checking this correctly.  this is the error:[code] "}, {"sentId": 50, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attacker can change the value", "em2Text": "generate his/her own sha-1 hash", "label": "AND"}, {"em1Text": "attacker can change the value", "em2Text": "add the random string", "label": "None"}, {"em1Text": "attacker can change the value", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "add the random string", "label": "AND"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "add the random string", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "add the random string", "label": "None"}], "entityMentions": [{"start": 84, "text": "attacker can change the value", "label": "ATTACK"}, {"start": 118, "text": "generate his/her own sha-1 hash", "label": "ATTACK"}, {"start": 154, "text": "add the random string", "label": "ATTACK"}, {"start": 530, "text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "ATTACK"}], "sentText": "it would be better to store the hash on the server-side. it is conceivable that the attacker can change the value and generate his/her own sha-1 hash and add the random string (they can easily figure this out from accessing the page repeatedly). if the hash is on the server-side (maybe in some sort of cache), you can recalculate the hash and check it to make sure that the value wasn't tampered with in any way. i read the question wrong regarding the random string (constant salt). but i guess the original point still stands. the attacker can build up a list of hash values that correspond to the hidden value. "}, {"sentId": 58, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "any malicious user can turn on chrome debugger", "em2Text": "modify javascript code that is being executed", "label": "OR"}, {"em1Text": "any malicious user can turn on chrome debugger", "em2Text": "send their victim a link", "label": "None"}, {"em1Text": "any malicious user can turn on chrome debugger", "em2Text": "construct an image link to send the session cookie to themselves", "label": "None"}, {"em1Text": "any malicious user can turn on chrome debugger", "em2Text": "dom based xss", "label": "None"}, {"em1Text": "modify javascript code that is being executed", "em2Text": "any malicious user can turn on chrome debugger", "label": "None"}, {"em1Text": "modify javascript code that is being executed", "em2Text": "send their victim a link", "label": "None"}, {"em1Text": "modify javascript code that is being executed", "em2Text": "construct an image link to send the session cookie to themselves", "label": "None"}, {"em1Text": "modify javascript code that is being executed", "em2Text": "dom based xss", "label": "None"}, {"em1Text": "send their victim a link", "em2Text": "any malicious user can turn on chrome debugger", "label": "None"}, {"em1Text": "send their victim a link", "em2Text": "modify javascript code that is being executed", "label": "None"}, {"em1Text": "send their victim a link", "em2Text": "construct an image link to send the session cookie to themselves", "label": "AND"}, {"em1Text": "send their victim a link", "em2Text": "dom based xss", "label": "None"}, {"em1Text": "construct an image link to send the session cookie to themselves", "em2Text": "any malicious user can turn on chrome debugger", "label": "None"}, {"em1Text": "construct an image link to send the session cookie to themselves", "em2Text": "modify javascript code that is being executed", "label": "None"}, {"em1Text": "construct an image link to send the session cookie to themselves", "em2Text": "send their victim a link", "label": "None"}, {"em1Text": "construct an image link to send the session cookie to themselves", "em2Text": "dom based xss", "label": "None"}, {"em1Text": "dom based xss", "em2Text": "any malicious user can turn on chrome debugger", "label": "None"}, {"em1Text": "dom based xss", "em2Text": "modify javascript code that is being executed", "label": "None"}, {"em1Text": "dom based xss", "em2Text": "send their victim a link", "label": "PARENT"}, {"em1Text": "dom based xss", "em2Text": "construct an image link to send the session cookie to themselves", "label": "None"}], "entityMentions": [{"start": 0, "text": "any malicious user can turn on chrome debugger", "label": "ATTACK"}, {"start": 64, "text": "modify javascript code that is being executed", "label": "ATTACK"}, {"start": 458, "text": "send their victim a link", "label": "ATTACK"}, {"start": 580, "text": "construct an image link to send the session cookie to themselves", "label": "ATTACK"}, {"start": 702, "text": "dom based xss", "label": "ATTACK"}], "sentText": "any malicious user can turn on chrome debugger for example, and modify javascript code that is being executed. so he can put his own functions to be executed etc.   any malicious user can turn on chrome debugger for example, and modify  javascript code that is being executed. so he can put his own  functions to be executed etc. however, the difference between eval and developer tools is that eval may execute things in shareable links. the attacker could send their victim a link, which exploits the code evaluation function. take this to the next stage and the attacker could construct an image link to send the session cookie to themselves this is known as a [link] attack. in fact, the type is a dom based xss, to be specific. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 362, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "  d xt e ible d  my xxxxm   is t j xa e  v  e   e n  an t  an c  xs d  ds pt   hixxl   eve  n h ct    exxn .   my no      j an y d e d ct  an h   ddos is 1% la   p xo     tibxe l, my  y  and no an  d  y t shady,   it is ct  xxxxl d  dos and   x% y   xxe m  s t  p   ible tib i  s l  e to o t to j  houg ptxb h c d s   is  pro no j     no e   e  i e n l o  y e l ddos attacks  . "}, {"sentId": 67, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "steal the encrypted sid", "em2Text": "start making requests", "label": "AND"}, {"em1Text": "steal the encrypted sid", "em2Text": "generate encrypted values", "label": "None"}, {"em1Text": "steal the encrypted sid", "em2Text": "break the decryption routine", "label": "None"}, {"em1Text": "steal the encrypted sid", "em2Text": "throw exceptions", "label": "None"}, {"em1Text": "start making requests", "em2Text": "steal the encrypted sid", "label": "None"}, {"em1Text": "start making requests", "em2Text": "generate encrypted values", "label": "None"}, {"em1Text": "start making requests", "em2Text": "break the decryption routine", "label": "None"}, {"em1Text": "start making requests", "em2Text": "throw exceptions", "label": "None"}, {"em1Text": "generate encrypted values", "em2Text": "steal the encrypted sid", "label": "None"}, {"em1Text": "generate encrypted values", "em2Text": "start making requests", "label": "None"}, {"em1Text": "generate encrypted values", "em2Text": "break the decryption routine", "label": "None"}, {"em1Text": "generate encrypted values", "em2Text": "throw exceptions", "label": "None"}, {"em1Text": "break the decryption routine", "em2Text": "steal the encrypted sid", "label": "None"}, {"em1Text": "break the decryption routine", "em2Text": "start making requests", "label": "None"}, {"em1Text": "break the decryption routine", "em2Text": "generate encrypted values", "label": "PARENT"}, {"em1Text": "break the decryption routine", "em2Text": "throw exceptions", "label": "AND"}, {"em1Text": "throw exceptions", "em2Text": "steal the encrypted sid", "label": "None"}, {"em1Text": "throw exceptions", "em2Text": "start making requests", "label": "None"}, {"em1Text": "throw exceptions", "em2Text": "generate encrypted values", "label": "None"}, {"em1Text": "throw exceptions", "em2Text": "break the decryption routine", "label": "None"}], "entityMentions": [{"start": 13, "text": "steal the encrypted sid", "label": "ATTACK"}, {"start": 41, "text": "start making requests", "label": "ATTACK"}, {"start": 134, "text": "generate encrypted values", "label": "ATTACK"}, {"start": 170, "text": "break the decryption routine", "label": "ATTACK"}, {"start": 203, "text": "throw exceptions", "label": "ATTACK"}], "sentText": "somebody can steal the encrypted sid and start making requests as if they were that user. decrypt it, being careful that a hacker can generate encrypted values that will break the decryption routine and throw exceptions which you must hide.verify the session id, timestamp, unique number and client information all match what you recorded when you create the session.  if anything is wrong you immediately expire the session.  expired sessions then coming back on subsequent requests are not even verified, they simpy generate a 403.  if you are using network information to secure the token, this will mean that the user will have problems using the service if they are on a roaming network. "}, {"sentId": 25, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 32, "text": "sql injection", "label": "ATTACK"}], "sentText": "i dont see any way to launch an sql injection ak at thi, but i reae that if this e as bulletprof as it seems o me someone else would have thought of it aly and it would be comn pract.   what's wrong with this code? is te a way to get an sql injen attack past s sanitization technique?  sampe user input tht exs this teche would be very help. i still dt know of any way to efy lauh a sql injection attack agait this code. a few people suggested that a backslash woud escape one single-quote and lee te otr to end the string so that the rest of the string would be executd as part of e sql comm, and i re t this method wod work to inject sql into a ml database, but n sql&nbsp;r 2000 the ony way (that i've been abe to fin) to e a sie is with another single-quote; s won't do it. i understand t e are better ways to sane input, t i'm reay more interestd in learning why the methd i providd above won't . if e knows f any specific way to mount a sql injectn attack agait this sanitizatn method i woud love to see it. "}, {"sentId": 85, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "fake it to get access to the other application", "label": "AND"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "PARENT"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "this isp does not do packet inspection", "label": "OR"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}], "entityMentions": [{"start": 0, "text": "someone knows the ip-address of one of our application servers ", "label": "ATTACK"}, {"start": 98, "text": "fake it to get access to the other application", "label": "ATTACK"}, {"start": 467, "text": "an attacker that wants to fake my ip-address", "label": "ATTACK"}, {"start": 523, "text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "ATTACK"}, {"start": 616, "text": "this isp does not do packet inspection", "label": "ATTACK"}], "sentText": "someone knows the ip-address of one of our application servers an is  lisxg d wa xxa attar t s to fake it to get access to the other application operxxxs  wi s ch he kw  my wa s the l wa ixxn p a t g t a to nd protxxxl o not xxxl  ofxxo e  wans al xxxxr ts t of he h w e st txe : ade st r of  my pace fxxe t  xxs xp k  s ixxxs ets xxe  to e .   pxxxxt th ipa packe xe t ddres e ip  e t bserr ip s  xxxy t. so k xn n  ow  xo pxt xxi  this applxn s  xxxxxxxxg s xo xx: an attacker that wants to fake my ip-address ns oxo  to compromise the very same isp that is in charge of the ip-range my webserver operates in - or this isp does not do packet inspection. "}, {"sentId": 30, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "database is compromised", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "compromises the machine", "label": "PARENT"}], "entityMentions": [{"start": 64, "text": "database is compromised", "label": "ATTACK"}, {"start": 106, "text": "all of the secrets will have to be changed", "label": "ATTACK"}, {"start": 710, "text": "compromises the machine", "label": "ATTACK"}, {"start": 749, "text": "encryption can be circumvented", "label": "ATTACK"}], "sentText": " will it's the most obvio st m ill us  the solution, but if the database is compromised some ot how, then all of the secrets will have to be changed. to ot  m is e this  secrets solution is n be ot idea the l because it has al if l of  the the problems of storing a p reversible a  ss server. wo some rd in plain-text has . this will provide some securit  compromis is  securit y, bec  ause if the da the  a tabase is compromis this ed then the if  secrets will sti requires ll  requires the that   be s will af be e. but reversible en is cryption r  equires an encry  p be tion key, and the key has t of o be then  but this    the  to stored on the server. it of  means that if machine provide ,  an attacker compromises the machine, then  the the encryption can be circumvented securit . "}, {"sentId": 53, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "malicious user steals the [code] of an other user", "em2Text": "impersonate that user", "label": "None"}, {"em1Text": "impersonate that user", "em2Text": "malicious user steals the [code] of an other user", "label": "PARENT"}], "entityMentions": [{"start": 34, "text": "malicious user steals the [code] of an other user", "label": "ATTACK"}, {"start": 137, "text": "impersonate that user", "label": "ATTACK"}], "sentText": "a security issue may arise when a malicious user steals the [code] of an other user. without some kind of check, he will then be free to impersonate that user. we need to find a way to uniquely identify the client (not the user). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 80, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 163, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p s e a  d    if no a   xx t e \" xx d  n xxxxx to x. y,  p  e s xn e po  pxs to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (   xxxx. or s e a  be v x  y en t  s thrh  x  x o xe   xk  or fd  if t x x s xe  con xxxxxx. vinc p e t a x  s x xxx. x s  xs a  x, x t t s       x  clicki e ng malware . b r   e e en    xxxx   and d y, t t   u et gh   y e n x  x s xe ad  xf e xxx s  xy if  e xxxx  d  xxxxxx. o xt tx, but a    xxe xe xxxx. t d     ll e x xxx e xx c    ra w xx x n x d   xs fxe e  d an o d   pxp    xe n  d t th d e u  r d y,  x if xy t be a   s   xy ad   xxxh o  e  x , e xxe   xxn s  has x    e d or  s  y y  xe    message d  t  xxx.  k a  xy    xxxxx   uxxxy xxx or s xs but  a s  y o    s   \" s d or  o e   d, xxy fe migh fe t  d  x   , xxx. in o   xxx. s ,  xxe xe s  s eay y  t  to  e t f    do e and a  e in   e  e   m r e e g ay i that  throu  gh  ,  b   xe  s e s e x  y  importa through nt   o a f e u s xs c  l o a wx t  nd   people h if   has s   t r thr    no on  t co thrh r  c x oxxxl ad xx t xxr g o  a   t  ad  t s e    t  if . "}, {"sentId": 128, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 91, "text": "a man in the middle attack", "label": "ATTACK"}], "sentText": "the following [link] discusses how to destroy a flask token, however this does not prevent a man in the middle attack.  is there anyway to invalidate the token so it is no longer active before the time it expires? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 216, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 293, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i xxn fi xt lxxr u  o  t  ad xxe xxxx for xv   f s and   h xxn owevr i t xn xy aco  we fi bk callxxxx.  xt i  f  howevr li xxn mixxxg , a st   x  xxe  xxxxx  xk sx sxxe xe  mas xxxr  all  xm  xxn f  a  sxxh can n add my bot to a thousand big groups an xn  of xxn  d xl xxn  p u  te ossxxxy result in denial of service for all other users. a fi d  how  im xxn xxxxd denia  l evr  xv  en d  if txxxxr i  ev xm ha d  u v  xxn dxxxa e imxxxxd some xxxe xxxe  l  ad l imitxg sxxh u ser x. e ser xxxe  ad  aco t deni  al xe ns x sxxe a m imxxxxd xxs sx f xe    rt axxs y  wil st en ill x  l  rt n dxxxa ho xxn wer l  d   xxn l  xxxxl o a callxxxx st .   n f sere  sxxe for all xxxxr  xxn st aco   xxxr ad   ill d s. "}, {"sentId": 68, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "have cors-like access to all resources on that domain", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "have the same level of access as an xss vulenrablity", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "xss", "label": "None"}, {"em1Text": "have cors-like access to all resources on that domain", "em2Text": "have the same level of access as an xss vulenrablity", "label": "OR"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "xss", "label": "None"}, {"em1Text": "have the same level of access as an xss vulenrablity", "em2Text": "have cors-like access to all resources on that domain", "label": "None"}], "entityMentions": [{"start": 89, "text": "xss", "label": "ATTACK"}, {"start": 474, "text": "have cors-like access to all resources on that domain", "label": "ATTACK"}, {"start": 848, "text": "have the same level of access as an xss vulenrablity", "label": "ATTACK"}], "sentText": "does having this line of code make my site more vulnerable to attack?  i've always heard xss discussed as a security issue, are there legitimate uses for xss? xss is not a feature that can be enabled in jquery.  it would be very very unusual if the jquery core had an xss vulnerability, but it is possible and its called [link].   \"cross-origin resource sharing\" or cors isn't the same as xss, but,  but if a web application had an xss vulnerability, then an attacker would have cors-like access to all resources on that domain.   in short, cors gives you control over how you break the [link] such that you don't need to introduce a full on xss vulnerability.   the [code] query feature relies upon the [code] http response header.  this could be a vulnerability. for example, if a web application had [code] on every page, then an attacker would have the same level of access as an xss vulenrablity.   be careful what pages you introduce cors headers,  and try and avoid [code] as much as possible.  so to answer your question:  no a web application never needs to introduce an xss vulnerability because there are way around the sop such as cors/jsonp/cross domain proxies/[link].   "}, {"sentId": 64, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 79, "text": "directory transversal (aka path transversal) attack", "label": "ATTACK"}], "sentText": "i have beig  a java webapp w attc  k ep  h   is e t  encoding ) . webapp o the directory transversal (aka path transversal) attack vi direy a url  ph . after beig authentia l te: "}, {"sentId": 140, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss vulnerability", "em2Text": "full proof-of-concept attack for injecting arbitrary javascript", "label": "None"}, {"em1Text": "xss vulnerability", "em2Text": "injecting arbitrary javascript", "label": "None"}, {"em1Text": "full proof-of-concept attack for injecting arbitrary javascript", "em2Text": "xss vulnerability", "label": "None"}, {"em1Text": "full proof-of-concept attack for injecting arbitrary javascript", "em2Text": "injecting arbitrary javascript", "label": "None"}, {"em1Text": "injecting arbitrary javascript", "em2Text": "xss vulnerability", "label": "None"}, {"em1Text": "injecting arbitrary javascript", "em2Text": "full proof-of-concept attack for injecting arbitrary javascript", "label": "PARENT"}], "entityMentions": [{"start": 107, "text": "xss vulnerability", "label": "ATTACK"}, {"start": 762, "text": "full proof-of-concept attack for injecting arbitrary javascript", "label": "ATTACK"}, {"start": 795, "text": "injecting arbitrary javascript", "label": "ATTACK"}], "sentText": "i've run a pen test tool (burp) against my node(express)/angular application and it identified a reflected xss vulnerability specifically when attempting a [code] request for static assets (noticeably vulnerabilities were not found for any of the requests being made when a user interacts with the application).    the name of an arbitrarily supplied url parameter is copied into a  javascript expression which is not encapsulated in any quotation  marks. the payload 41b68(a)184a9=1 was submitted in the name of an  arbitrarily supplied url parameter. this input was echoed unmodified  in the application's response.    this behavior demonstrates that it is possible to inject javascript  commands into the returned document. an attempt was made to identify a  full proof-of-concept attack for injecting arbitrary javascript but  this was not successful. you should manually examine the application's  behavior and attempt to identify any unusual input validation or other  obstacles that may be in place. "}, {"sentId": 125, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 69, "text": "injected xss attacks", "label": "ATTACK"}], "sentText": "i'm trying to protect a classic asp web application from http header injected xss attacks and am having trouble finding a solution that stops scripts found in the user agent string.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 76, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets access to the htdigest file", "em2Text": "use it directly for digest authentication", "label": "None"}, {"em1Text": "use it directly for digest authentication", "em2Text": "gets access to the htdigest file", "label": "PARENT"}], "entityMentions": [{"start": 638, "text": "gets access to the htdigest file", "label": "ATTACK"}, {"start": 678, "text": "use it directly for digest authentication", "label": "ATTACK"}], "sentText": "with basic authentication the password is sent nearly plain (base64 encoded) to the server and on the server side it gets hashed and compared against the hashed password (stored in htpasswd file or similar). with digest authentication the hashed password is sent to the server (with some server defined data added so replay attacks will not work). but to verify the password you need to have the plain password on the server side (or something close to the plain password). this means, that if the attacker gets access to the htpasswd file it needs to crack all the passwords before they can be used for basic authentication, while if it gets access to the htdigest file it can use it directly for digest authentication. "}, {"sentId": 39, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "uploaded svg images on a website", "em2Text": "cross-site-script into there", "label": "None"}, {"em1Text": "cross-site-script into there", "em2Text": "uploaded svg images on a website", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "uploaded svg images on a website", "label": "ATTACK"}, {"start": 178, "text": "cross-site-script into there", "label": "ATTACK"}], "sentText": "i want to display user uploaded svg images on a website, but they're quite open to exploits: they serve the uploaded files from a separate hostname, specifically [code]. you can cross-site-script into there all you like but it doesn't get you anything: it lives in a different origin to [code] and can't touch its cookies or interact with its script. "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 374, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i believe this achieves the strong server side password requirement. however i also need to protect as best i can against compromised client devices after the signup process (devices compromised before/during the signup process are a lost cause). obviously with a 4 digit encryption key, there are only 10,000 possible combinations, so an attacker will easily be able to try every combination on the locally encrypted strong password very quickly. what i want to know is do i have to choose a specific symmetric encryption scheme and/or generated password format so that the attacker will not be able to tell from local data alone which of the 10k decryption attempts was the correct one? i.e. he would still have to attempt each of the 10k passwords on the server-side login. "}, {"sentId": 36, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attempt", "em2Text": "malicious character", "label": "OR"}, {"em1Text": "malicious character", "em2Text": "xss attempt", "label": "None"}], "entityMentions": [{"start": 156, "text": "xss attempt", "label": "ATTACK"}, {"start": 178, "text": "malicious character", "label": "ATTACK"}], "sentText": "\"a potentially dang orm erous req potentially uest.f value orm value  from c cha client racter haracter  was detected fr from om the client may it be \"a  a xss attempt or  was a malicious character "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 167, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 252, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup win xxxxxxd dxxs ar ware e a  and exxxxxxxd  nota axd bl has e xxxxxxxxx\" txxxxxxxx. hosxxxe sites ca exxxo not thxxr a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaxs even j he ust t really he  pxxxp cl   ovxr  sites  clxxxxxg ick itsel but f might exploit   respect,  a bu force g).  yes, the maxn page of xxe site cxxxd xo that tox, but a well-crafted pop hostixe up can distract the user and may  own  through not tly  be dir really ec he tly as by sociated wxt xt users c. h t the he hosxxxe mai xxxxd n p but a and ge.pop w the in ups w xxx, e  cou n ld thxxr re exxxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl trick w  are p\" users and to e hostxxe sse reaxxy xxxxxxy force ad imprexxxxxx, etc. in this respect, th sixe could s e security aspxxt xf the prxxxxm reaxxy is xxe secxxxxy xf the  into he  xxxxxs c  e popups ontrol an  rexxxy expxxxxxd d  over their  xxxxe own cxxxxxxr and their brxxxxxg de may sirxs n e ota . "}, {"sentId": 21, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone attacked my application", "em2Text": "grab the api key", "label": "PARENT"}, {"em1Text": "someone attacked my application", "em2Text": "fraudulent clicks made using my api key", "label": "None"}, {"em1Text": "grab the api key", "em2Text": "someone attacked my application", "label": "None"}, {"em1Text": "grab the api key", "em2Text": "fraudulent clicks made using my api key", "label": "AND"}, {"em1Text": "fraudulent clicks made using my api key", "em2Text": "someone attacked my application", "label": "None"}, {"em1Text": "fraudulent clicks made using my api key", "em2Text": "grab the api key", "label": "None"}], "entityMentions": [{"start": 104, "text": "someone attacked my application", "label": "ATTACK"}, {"start": 140, "text": "grab the api key", "label": "ATTACK"}, {"start": 270, "text": "fraudulent clicks made using my api key", "label": "ATTACK"}], "sentText": "i am currently working on a project which uses blogger api from google. day before yesterday (saturday) someone attacked my application and grab the api key, my daily limit for accessing posts is 100,000 (100k/24 hrs). i hit limit on saturday (i suspect that those were fraudulent clicks made using my api key, since i've only around 4k customers using the application, i embedded the api key in client side code). "}, {"sentId": 24, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "getting subscription_json from client", "em2Text": "converting it to string", "label": "AND"}, {"em1Text": "getting subscription_json from client", "em2Text": "setting it to model object using gson library", "label": "None"}, {"em1Text": "getting subscription_json from client", "em2Text": "json injection", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "converting it to string", "em2Text": "setting it to model object using gson library", "label": "AND"}, {"em1Text": "converting it to string", "em2Text": "json injection", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "setting it to model object using gson library", "em2Text": "json injection", "label": "None"}, {"em1Text": "json injection", "em2Text": "getting subscription_json from client", "label": "None"}, {"em1Text": "json injection", "em2Text": "converting it to string", "label": "None"}, {"em1Text": "json injection", "em2Text": "setting it to model object using gson library", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "getting subscription_json from client", "label": "ATTACK"}, {"start": 49, "text": "converting it to string", "label": "ATTACK"}, {"start": 80, "text": "setting it to model object using gson library", "label": "ATTACK"}, {"start": 167, "text": "json injection", "label": "ATTACK"}], "sentText": "i am getting subscription_json from client h i m converting it to string ad thn setting it to model object using gson library. on g the ce on foy securi, it is gig me json injection error on bew code with fg message : "}, {"sentId": 60, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "steal a session", "em2Text": "have total access to whatever is in that session", "label": "None"}, {"em1Text": "steal a session", "em2Text": "xss", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "steal a session", "label": "PARENT"}, {"em1Text": "have total access to whatever is in that session", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "steal a session", "label": "None"}, {"em1Text": "xss", "em2Text": "have total access to whatever is in that session", "label": "None"}], "entityMentions": [{"start": 81, "text": "steal a session", "label": "ATTACK"}, {"start": 122, "text": "have total access to whatever is in that session", "label": "ATTACK"}, {"start": 524, "text": "xss", "label": "ATTACK"}], "sentText": "sessions are significantly safer than, say, cookies. but it is still possible to steal a session and thus the hacker will have total access to whatever is in that session. some ways to avoid this are ip checking (which works pretty well, but is very low fi and thus not reliable on its own), and using a nonce. typically with a nonce, you have a per-page \"token\" so that each page checks that the last page's nonce matches what it has stored.  but with a cookie, a hacker can steal the session simply by using fairly simple xss techniques. if you store the user's session id as a cookie, they are vulnerable to this as well. so even though the session is only penetrable to someone who can do a server-level hack (which requires much more sophisticated methods and usually some amount of privilege, if your server is secure), you are still going to need some extra level of verification upon each script request. you should not use cookies and ajax together, as this makes it a tad easier to totally go to town if that cookie is stolen, as your ajax requests may not get the security checks on each request. for example, if the page uses a nonce, but the page is never reloaded, the script may only be checking for that match. and if the cookie is holding the authentication method, i can now go to town doing my evilness using the stolen cookie and the ajax hole. "}, {"sentId": 69, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "logs into your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "AND"}, {"em1Text": "logs into your site", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "logs into your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "then browses over to another website with a malicious flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "then browses over to another website with a malicious flash app", "label": "PARENT"}, {"em1Text": "flash app can connect back to your site", "em2Text": "cookies are shared to the flash app", "label": "None"}, {"em1Text": "flash app can connect back to your site", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "flash app can connect back to your site", "label": "PARENT"}, {"em1Text": "cookies are shared to the flash app", "em2Text": "the flash app to hijack the user's session", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "logs into your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "then browses over to another website with a malicious flash app", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "flash app can connect back to your site", "label": "None"}, {"em1Text": "the flash app to hijack the user's session", "em2Text": "cookies are shared to the flash app", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "logs into your site", "label": "ATTACK"}, {"start": 92, "text": "then browses over to another website with a malicious flash app", "label": "ATTACK"}, {"start": 161, "text": "flash app can connect back to your site", "label": "ATTACK"}, {"start": 216, "text": "cookies are shared to the flash app", "label": "ATTACK"}, {"start": 259, "text": "the flash app to hijack the user's session", "label": "ATTACK"}], "sentText": "y xxxxxg txe , e n sy n xs that xh apps n xw cont to r .  so if se logs into your site, and then browses over to another website with a malicious flash app, tht flash app can connect back to your site.  e ixs in a , cookies are shared to the flash app.  xs s the flash app to hijack the user's session to do xxxxxxxr t s yr wee s witt xxe r g xxxxt it. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 9, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 133, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 222, "text": "recover those keys", "label": "ATTACK"}, {"start": 282, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 305, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hw might an attacker recover the secrets in that flash? i underd they can z for vs in the app code and et it, that there cod be some indistinct general side channel attack or somet. but how wod an attacker reay go t tg to recover those keys?  are te viable s for a determined r o w shave-down the chip or some kind of microscope attack? "}, {"sentId": 72, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "em2Text": "compromise the connection", "label": "None"}, {"em1Text": "compromise the connection", "em2Text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "label": "PARENT"}], "entityMentions": [{"start": 166, "text": "some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process", "label": "ATTACK"}, {"start": 261, "text": "compromise the connection", "label": "ATTACK"}], "sentText": "is my data safe if i pair the phone to the device? - i suppose so, though i understand that the pairing process itself is flawed, so it is theoretically possible for some man-in-the-middle (mitm) to sniff the encryption keys during the pairing process and thus compromise the connection.i need each device to be paired to several phones (but only communicating to one at a time). what's the maximum number of pairings pr. device? - unfortunately i need to pair a rather large number of phones to my device(s).can i perhaps get the pairing data (long term keys etc.) from the device and store it on some external memory, to increase this limit.can i make a safe data connection to the device without pairing, or maybe by re-pairing when i need to do so? - how safe is this procedure with regards to mitm attacks? "}, {"sentId": 61, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "someone will compromise the shared secret on the client", "em2Text": "post it on the internet", "label": "PARENT"}, {"em1Text": "post it on the internet", "em2Text": "someone will compromise the shared secret on the client", "label": "None"}], "entityMentions": [{"start": 52, "text": "someone will compromise the shared secret on the client", "label": "ATTACK"}, {"start": 154, "text": "post it on the internet", "label": "ATTACK"}], "sentText": "i am warned that should the app become popular that someone will compromise the shared secret on the client. just because they can and they will probably post it on the internet. so really it all comes down to the server side. unfortunately, i have no way to identify and block an attacker. this i would dearly love.  "}, {"sentId": 3, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "inject malicious code", "em2Text": "reroute the program logic", "label": "OR"}, {"em1Text": "inject malicious code", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "reroute the program logic", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "reroute the program logic", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "reroute the program logic", "label": "None"}], "entityMentions": [{"start": 15, "text": "inject malicious code", "label": "ATTACK"}, {"start": 40, "text": "reroute the program logic", "label": "ATTACK"}, {"start": 96, "text": "access memory addresses that fall outside legitimately allocated buffers", "label": "ATTACK"}], "sentText": "the ability to inject malicious code, r reroute the program logic depends entiry on being ae to access memory addresses that fall outside legitimately allocated buffers.  but in a lane like java, this is simply impos.  te wot that could n is a pm will termine wih an , leadg to a .   "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 366, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how c the an i d the ixxxxy xh xxe e xxxxxxxe i , xxxxr name]\" xn p xxxxxxxxe ublic pages xxe  for  i authenticaxxd users, even if user how s,  the i y use xxxx? of course, i would like xo ke http? ep the a to ccxxs to t of he sxn avoid sitive pages safe, and i  of xxxxxd xh u [your se e i refore  y  se xxxxxe  use ssi  on kexp [coxx] t xxxxxxxxe o avoid possible stealing of the session token. "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 99, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a response to the rexxxt [link] and xxxxxx, what is the best wxy xo secuxe your website agxxxxt brute force login attacks? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can fuzz for vulnxxxxxxxxxxs in txe app cxxe and expxxxt it, xxxt there xxxxd be sxxe indistinct general side channel attack or something. bxt how wouxd an axxxxxxr really go abxxt xxxxxg to recover those keys?  are thxxe viable approaches for a dexxxxxxxd attaxxxr to somexxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 111, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "e the verification file is n the web sers root structure, and goe needs to access it to read is cons - tey e d read it if they wanted by going to [link].  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "xs it possxxxe fxr somxxxe to 'hack' an apache server axd read php files. i undersxxxd txxt xxp is a server-sxxe lxxxxxxe and cannxt be xxxd xxxm anywhexe othxr thxn txe sxxxxx, but could xxxxxxe hack the serxxr and read txxm as xf readxxg a text filx? well yes, if xxxy ever axxxxxxy xxxk into the sexxxr (xxx, ftp etc.), xxxy xxy have access to files on the hard disk. a properly coxxxxxxxd apache sxxxxr will xxt sxxxe rxw php filxs xxxxxx, it sxxxxd always process them with the php interpxxxxr xxxxx. "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 124, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 201, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is usixg the method bxxxw a xxd xxxxxx? xt generates a random number between 0-1000. since thexe are only 1xx0 optixxx, axd their md5 hashes are known, it should take an axxxxxxr xxxt a 1xx0 trials to verify the account without it really belonging to them "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 551, "text": "sign up for the app", "label": "ATTACK"}, {"start": 597, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "xy q app,   dataxxxe  xxxi how u is ?  exxxxn is, how  xxxi xxxt o iz n s ap xxxxxn p, a e fe  ss i xxxxs s \"  ss  app hexxxxxxxx? ,   u i  s xe xxxh uxe  xx= xxxl !==  txxn \"? yes, i get  real us    xr   iz  user xxxs e use   use xh  xt xxxs x use xxxs t  hxt only a  xx    somxxxe txxt n autx o e   xxx use y n xxxxx? ticat only  and ed user ca  to !== n   txe use xxx   this e iz  o  bu  a th  at t xs txe xxt estion x, xh  xxe user at  b i ut h xs o ss w xxxy is it t t o become hexxxxxxxx?  aut xxxt hxxxxxxxxx? x   i xt onl app, y   xxn somexxe sign up for the app, and xx exxxxn n t   then use those credentials to get request right into my database ixxo ? "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 105, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i xm pl file ki s aying h  o image uploas to a website ad i found is  out ab t u  a some t these xxxxxe  decompression bomb attacks   that bo sure m,  cn take e n itxs i  ]  allo bece wed to xxd [code] s d xxxe t xxxxxx0 xxr when ). sxxxe i am going to chae txe uploaded ims  , i  idth wat to ma lim ke  mb, se i dxxxt xxxxxe a xxxxxm wee   mxx? f ths att. so wh e en xt cxs to chec wh nt e cs n nd  ki websit xxxt e g xf a [c sure ode] fi s e is a bom, n i j is  that xxt xxxd the file's hexxxxs a o it mpression nd xxxe sure sue  wd  txxt w (xxd h and heigxt   wh  n g e not more thxn wed  the set atts   so lxm w o ixh , idh  like xxxxxxxx0 o e r xh attacx. at  evxx? xs it a vald xxx? o as r what is e be metxxx? d  r wxy to ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 167, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 252, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup win xxxxxxd dxxs ar ware e a  and exxxxxxxd  nota axd bl has e xxxxxxxxx\" txxxxxxxx. hosxxxe sites ca exxxo not thxxr a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaxs even j he ust t really he  pxxxp cl   ovxr  sites  clxxxxxg ick itsel but f might exploit   respect,  a bu force g).  yes, the maxn page of xxe site cxxxd xo that tox, but a well-crafted pop hostixe up can distract the user and may  own  through not tly  be dir really ec he tly as by sociated wxt xt users c. h t the he hosxxxe mai xxxxd n p but a and ge.pop w the in ups w xxx, e  cou n ld thxxr re exxxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl trick w  are p\" users and to e hostxxe sse reaxxy xxxxxxy force ad imprexxxxxx, etc. in this respect, th sixe could s e security aspxxt xf the prxxxxm reaxxy is xxe secxxxxy xf the  into he  xxxxxs c  e popups ontrol an  rexxxy expxxxxxd d  over their  xxxxe own cxxxxxxr and their brxxxxxg de may sirxs n e ota . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 61, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxxxs e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e pxxxs to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url ( xxxx. xr s e be xxn t xxe xk fxxd  if migxt xt a x xxxxxxxxx, x xt t  xx. b r e e en    xxxx  d y, t xxxxt hrxu et gh  e n xxxe and  xf xxe xxxe xxxx  d do xt tx, bxt a  xxe xe xxxx. ll e xc  ra wxxxs fxe e d pxp   n  d t th d e xxxr axd x if xy t be   xy ad xxxh o  xe xxe xxn s  has e d is  y y   trick a uxxxy xxxxs xs but  a y o \" s d o e xxxxxxxxx, xxxxxxy fe mixh fe t  d , xxx. in s , xe sxy  t  e t of  xo e xxd a   prm r e exxy i throu  gh s e x  y o a f e u s xs xxxxxl o xxxxxxh if   t r xxr on xo throxxh mpxxr  c x oxxxl xd xxxxr bxxxxxxg o   t  and  t dxs e . "}, {"sentId": 42, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "user b steals user a's sid", "em2Text": "creates a cookie on his computer", "label": "AND"}, {"em1Text": "user b steals user a's sid", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "user b steals user a's sid", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "hijacked user a's session", "em2Text": "user b steals user a's sid", "label": "PARENT"}, {"em1Text": "hijacked user a's session", "em2Text": "creates a cookie on his computer", "label": "None"}], "entityMentions": [{"start": 616, "text": "user b steals user a's sid", "label": "ATTACK"}, {"start": 678, "text": "creates a cookie on his computer", "label": "ATTACK"}, {"start": 752, "text": "hijacked user a's session", "label": "ATTACK"}], "sentText": "after user a  cs lg reqt  any s in n  a exam tatele. , he is gi ip,  is ven some m sessn id, r simplics sake, moves  let i is t g  be 'ab2 sg  user user gest 3' ip . ts ses the sion id is sto last red as a cookie on the client  s si it de e  and is valida iy t t active,  ed wi r t a h a server erent -se se  s tht sion to ensure te user w their ho logged in remains lod data  in s he mos changing  measure  from for   ol spof y one webpae to an. t sf his c is  to ookie way  of coue would not   is n e would ed to exist if  h recognize t http were insted   a n  ot s   nav if a tatel. for essis  that  sd reason, f user b steals user a's sid, a  h ren as  sf t good he nd a's  creates a cookie on his computer h the value 'ab ce c123', he d have sucy hijacked user a's session, but if  tr , e is  his simply no way fr te ser s  uy vr to  some in  ley ree that u n ser bs requet is any diff of erent from u  iy er ser a's , and t e  ss. herefore t  he  illegy sr has no rean to rejet ay re. e that n if we were to lt the s eve i id s n es that we alry ac so tive on h s e -  server and t is y t  o see if someone is g a sessn that is already acti, is    crs c how can we determine that  first t is a the nr us reason r who  not is acn y g the sn e  illegitimy and nt the sam http e user h a o is alrey log sen  em g some d i  f session n h a session id, t y trying to mae anr request with it (ie nav hs  b ig nt ate to a t .  suggest we can't. cheg the r a? n be spoof changing ed - t good as a a  defens http e in deph e  lt n er  user . i a p address? n  let  can't. er  change f ad or e reaso the ns - but i hs  of ns accesg t wo ead   of not chi he ng for the ip ad t  he s at all, that  i inse serv a's er-side ad  suggest  for g somethi er ng like is  the fit to octet ae s of the ip  fr s , as even a user   ct legi , tima uy te on a daa plan netwok his  w that o constal logged y has a ch to anging  a ip for pery legite reasons wol in  request d oy usually have the last two octets f thei like r ip   change. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 168, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx p   xx xk xxxs   xx.    m to are a no to xxxl ,  axd e \"x s \" xx be h  at  . xxx xr xxe  d  xs d xt  ixy  k t y es cxn xxe e.  d    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr x  xxx  xs  xs xxn u be st   xxe k  k x d  xe xx e f xxh \" t t a \"  .    xxd d yx, the xa  e xxx. in pa   to g pp e  prxxm f te  etx.  y  xxxk te  s o   y  xx d txs o y  x l e f h xt  xxp b  e m  xxxd xo xx x  xo  x hxe p x x r a om t  fro t o a   e k  xx xxxr xxxd o, xxt a xxl t e xl o ick d pxp xx xxy n d e i xxxd xx exd xxx x t t . he xxxr a  c trud k  xd xy  o a  xn p d  e. m y,  xxt b x   xxk  p  t o  xt   of  f  c txk xxe . e x  d  ixxy  xy xx xx  xx xd wh h  e xxx p ixt  e  k xn  y pxg k es xe px fxr m t   x n d   e  y my x thxxe y si  tes xs  d a a xf y to xxx mxh  fo s r  cuy xp xe \" xs h xxs xx e  d   d   to e   \"   xx x x xp xy r xxxh ce a e d im  xx m xxo xxt x, . n a  ts rex,   t  he sec  x xxxxp xxy t o  not thrxu p xh   f xe  s   prom rex r y i xx  x t be  xxxy s txe e x  \"xx  d xu ad xy f xh  e s a   oe  es n xh txxxd  d  txo t   l xx dy  x r ther  xy own cxm a pxx y r xd  x te s xxxr xxs  xxg xxxxx. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per user salt prevents the use of generic rainbow tables to crack passwords.  a separate raxxxxw txxxe would have to be xxxxxxxxd for each xxd every uxxr who had a unixxe salt in order to xxxxxn their xxxxxxxx.  this woxxd be a time consuming procexs whxxh xs what maxxs salts xxxxxxxxx.  this xxxs not help a tremendous xxxxxt xxxxxxt dictionxxy or brute xxxxe attacks. "}, {"sentId": 164, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 87, "text": "possible attacks in ways to which the similar  function is not susceptible", "label": "ATTACK"}], "sentText": "  a third-party code can see the scope in which eval() was invoked,  which can lead to possible attacks in ways to which the similar  function is not susceptible.    [link] "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 143, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 237, "text": "recover those keys", "label": "ATTACK"}, {"start": 292, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 315, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxd thxy n fuzz for vulnxxxs in txe app cxxe and ext i, xxxt te xxxxd be sxxe indistinct general side channel attack or somethi. bxt how wouxd n axxxxxxr ry go t xxxxxg to recover those keys?  e e ve apps fr a dd attaxxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cxxxxxxxxe on my website xxd i wxxt to keep my server's ip (the oxxxxn ip) xxxxxxx, to avoxd ddos attacks being xxxt directly to my sxxxxxxs ip. my xxxxxr uses axxxxx, php, mysxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 37, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 122, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixs e a ne \" x. e s xn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s evn t the xk if mit et a xxxx.  y, e n xe xf xxe xxe d do xt tx, t a wd pop n t te r axd xy t be xy ad xxxh xe xxe xn s e d y y uxxy sxxxs xs a y o \" s d o ey fe d , e. in s , xe sey t of e m y is e xy f e uss coxxxl or thr on cr ad xxr browsing des. "}, {"sentId": 129, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "session fixation", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "session fixation", "em2Text": "use it", "label": "None"}, {"em1Text": "session fixation", "em2Text": "log in on target website as victim", "label": "PARENT"}, {"em1Text": "session fixation", "em2Text": "csrf", "label": "None"}, {"em1Text": "session fixation", "em2Text": "victim performs malicious action itself but does not know about it", "label": "None"}, {"em1Text": "session fixation", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "None"}, {"em1Text": "steal, guess or fix session id", "em2Text": "session fixation", "label": "None"}, {"em1Text": "steal, guess or fix session id", "em2Text": "use it", "label": "AND"}, {"em1Text": "steal, guess or fix session id", "em2Text": "log in on target website as victim", "label": "None"}, {"em1Text": "steal, guess or fix session id", "em2Text": "csrf", "label": "None"}, {"em1Text": "steal, guess or fix session id", "em2Text": "victim performs malicious action itself but does not know about it", "label": "None"}, {"em1Text": "steal, guess or fix session id", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "None"}, {"em1Text": "use it", "em2Text": "session fixation", "label": "None"}, {"em1Text": "use it", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "use it", "em2Text": "log in on target website as victim", "label": "AND"}, {"em1Text": "use it", "em2Text": "csrf", "label": "None"}, {"em1Text": "use it", "em2Text": "victim performs malicious action itself but does not know about it", "label": "None"}, {"em1Text": "use it", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "session fixation", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "use it", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "csrf", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "victim performs malicious action itself but does not know about it", "label": "None"}, {"em1Text": "log in on target website as victim", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "None"}, {"em1Text": "csrf", "em2Text": "session fixation", "label": "None"}, {"em1Text": "csrf", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "csrf", "em2Text": "use it", "label": "None"}, {"em1Text": "csrf", "em2Text": "log in on target website as victim", "label": "None"}, {"em1Text": "csrf", "em2Text": "victim performs malicious action itself but does not know about it", "label": "None"}, {"em1Text": "csrf", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "PARENT"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "session fixation", "label": "None"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "use it", "label": "None"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "log in on target website as victim", "label": "None"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "csrf", "label": "None"}, {"em1Text": "victim performs malicious action itself but does not know about it", "em2Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "session fixation", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "steal, guess or fix session id", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "use it", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "log in on target website as victim", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "csrf", "label": "None"}, {"em1Text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "em2Text": "victim performs malicious action itself but does not know about it", "label": "PARENT"}], "entityMentions": [{"start": 34, "text": "session fixation", "label": "ATTACK"}, {"start": 738, "text": "steal, guess or fix session id", "label": "ATTACK"}, {"start": 775, "text": "use it", "label": "ATTACK"}, {"start": 786, "text": "log in on target website as victim", "label": "ATTACK"}, {"start": 343, "text": "csrf", "label": "ATTACK"}, {"start": 1203, "text": "victim performs malicious action itself but does not know about it", "label": "ATTACK"}, {"start": 1276, "text": "victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability ", "label": "ATTACK"}], "sentText": "what defines the two respectively?session fixation is described as:session fixation is an attack that permits an attacker to hijack a valid user session. the attack explores a limitation in the way the web application manages the session id, more specifically the vulnerable web application.`the source: [link]which seems rather close to what csrf exploits. what distinguishes the two from eachother or is [code] simply a synonym or a branch coming from csrf?would also like to mention that key terminology coming from the owasp link i provided is almost identical to those mentioned in csrf no, it is not a synonym. session fixation and csrf are two different attacks. session fixation is a class of session hijacking. attacker tries to steal, guess or fix session id, then use it and log in on target website as victim. it could be done many ways. basic protection is if app uses httponly flag, does not transfer session id in url (session.use_trans_sid=0, session.use_only_cookies=1) and takes care of xss vulnerabilities. csrf is another kind of attack. attacker does not want victim session id but rather causing the victim to perform an action on server where victim is properly logged in. so the victim performs malicious action itself but does not know about it. how? victim loads a page somewhere that contains malicious link in html (ie. img src) or target website contains xss vulnerability and it is  good point for loading external malicious javascript and issuing ajax requests. standard protection is csrf token. it is another token (next of session id) that is included in each sensitive request. attacker should not know current csrf token for particular user and can not prepare malicious link or ajax request. csrf token should be unique for each session. sensitive requests are form submissions, deleting/setting of something (permission etc.). so app does not have to protect absolutely each request. it also is not good idea to transmit csrf token in url. "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 100, "text": "command injection", "label": "ATTACK"}, {"start": 267, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i was wondering, nowadays with the most recent versions of sh, bash, ksh etc. is it possible to get command injection by executing this (very simple) script? despite of the fact that one can already execute code if they have a shell of course, i am just wondering if a variable can contain malicious code like for example in php:  "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 553, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": " is c n xxc i ki m t b  the he ime n  g  his    jp m  le xg for maxe  f   t x one xt  m as xxe    upload t f m th im ixe y  prett c x hecki   ype uplxxxxd  of mi he a  x jp  x m xo  eg e     kno sur w    i of  ex  xy n  t  the  a  xxxx  le  te php   is prett as  m xxxx fixe s  y easy x o x m  e t as     i   le   f  x  i matc    he a for i  r    maxe as i kno checki w   ex fed ample    xxn    fxr fxr  is  the m the  check  i ime   c a a    t matche  of th  n b i t m f  x  xo e  he e spo  o  fed i axxxx s . th checki e a   sure ttacxxr xxn xxxxs    upload a php script with for example jpeg mime type.  m one th s is poo ing   x ty   xxt  t xxxxs maxe with     ind d  sur   e  to m . ind   xs     to script  cxx cxxc x xxr k xxe mime ki   f . ox  i know le ex    type.  te as n chec  xx  for x  x  x  o t j to peg o n  xxe  to  is of t  he uplxxxx d d fixe an e r the  axy jpeg  xxr  xxxd    type.  d xxxe    sur sur t e e  it typ e e  x  xxe   xx  x m  cxxc d to  matche  ex che  c to ki s    ma checki  is k x e f y  the   txe    xxr mi  m  f typ  e. e an  t   of is   t ype.   tta an cxxr  all  examp e le of  is t as his      d   le   x is a d xxx ixe x e i xample  t  xg   i ype. x ty t pe. xg xxe uplo e a mi xx  xe  t m easy e  axxx d di is rectory n  is b fixe   r  ox  xxr  maxe    type xx .   acce  xxxx t xx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lter u  out the messages and  i xxt in xy webhoxk callback. however limitxxg , a  xxxxxxk sxxe  malxxxxxs uxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  en if telegr ev am ha d ve imxxxxxxxxd some xxxe l enial imiting such u ser x. xxxe ser vice  actio the ns xa mxxs some axxs y  will st en ill result xn denia however l  d  enial o ca  n f servixe for all xxxxr xxxr add s. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe whole xxxxt of xxxxxxg a password is in cxxe a hacker gets access to the database. if i store the salt in the db within txe same xxw as xxe hashed pasxxxxx, isn't it just lxxe i am handing the hxxxxr the \"secret code\"? i am putting up a xxxr wixh a xxxx, and xxxxxxg txe intruder the key. "}, {"sentId": 6, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a malicious user can invoke one method", "em2Text": "he could invoke any", "label": "None"}, {"em1Text": "he could invoke any", "em2Text": "a malicious user can invoke one method", "label": "PARENT"}], "entityMentions": [{"start": 96, "text": "a malicious user can invoke one method", "label": "ATTACK"}, {"start": 136, "text": "he could invoke any", "label": "ATTACK"}], "sentText": "shd xxxe xxxxs be done at xxe top of txe , the xxxm of e stack xr at exxxy levex?  it ss tht if a malicious user can invoke one method, he could invoke any, so for  exxxxxe secuxxxx, xd xxxd a chxxk on xxy mexxxd (and s a lt xf xxxxa xxxe to write. "}, {"sentId": 104, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 79, "text": "csrf", "label": "ATTACK"}], "sentText": "if i understood it correctly, the goal of the same-origin policy is to prevent csrf attacks and the goal of cors is to enable resource sharing if (and only if) the server agrees to share its data with applications hosted on other sites (origins). "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 76, "text": "xss", "label": "ATTACK"}, {"start": 1091, "text": "inject script", "label": "ATTACK"}, {"start": 1118, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 1200, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "l  e is  kid  x suxx  xxxe scr mi data[ t t igats ip e t   d  xxxx a xd t r xss. e . a o xss and gxxxr  tl us  ing axxy f  it's not rec t xd xo ste any this  fm  e inf so o a r usin mat  ion n itx ribut  es xxxh cookie y s we be  always  cn a that @p th kid  ppl  y  tr so    e flag \"httpon   a ly\" whxxh  y  so tl  mxxxxxxs xxe risk o make f xss. how jw  he  t xxx  r x csr x.  if we e x not o  which  y xxa againt d the o   you    ck.  e jwt  att xm  f.  to xxs on bac  a t ken be  ea d, we th tht xn    re usin t g a xx  c e srf  are s subjxxxxd  make ubj e x ven ectxd to ee   xs csr xxr tr f-t rabbed  mxs oken you  i  f.    sxxxl  x i  csrf lie th e e x ora srf  t xe   you evalua submxt cos mx your d which md    ck.  s t's ubmxt in t . d  he are articl ora e  tha ectxd t @p  kid cookies 169  don so \u9225\u6a9b t  xxa  sx t xsr o xx, but th fr ee s o bro xsr   a ne th to in in g that article doet tl incl xr b  cxn    uding  . y rea ou ar e s  e  ou t  xxxx xh l xxs  subj  not pr  otecxxd t xs of s sr  because wt the  csrf  o a gen us ex xs xxxy  (wh tl  e  tr can   d xxe  w o by  is .  inject script  cookie txxt reads your csrf cookie (wh i  s e  n xsrf srf - xd t  oken o  t httpon  l) d then make a request to one of your api endpoints using this csrf token wi ora th j csrf xt  rabbed  or xm  cookxe   beg sen  t h o xsr  e t au r to mxd   maxxx so xxxx. so in re xss. xxxxy this   xxs you that  ehalf x   axe so   to sxxxl sx subj x  xxx co  s d  xxxx x b xxx e   t aga  xo o xss, i e xx xr s just  o  e txa xss.   eve ste n b  you of    t  us xt to   tacker y  xm   xh  tr x xxe x g x' t t l yu  x in s requxxxs s jw   gxxxr t    t's xt  toxxn fr  to. later     xx xh x, scri  pt  but h  e  e xxn  aga  sr sl mae requxx  xs on y  o h ur uss b  ne . yu  xxt  ehal o f using   xs.  wher   you sxxxe your jxt   ht  xxx fm xx)   s in a  y locaxxt to ora xs e or   lf xxxxxn you   e xxxr x always sr o  ion fxxxxxn r rx f  ea    r  in   xd  nxt http-only  f cooki  e, b d a rx  x t xx\u6a9b oh   can be g . rabbed y by xss. ma s e   requxxxs even your t xn h y xxp can must 't only e can    y x a e g  rabbed   .    x t. y a xxxxxxxxd xss,  n this  xd  xxd xs lf s xxxxxxxxy  a or t th x t. a de c escapig k.  so in  x   a e ddit   j just ust in y   e xn  xxxxs  y xxxxa of the e s g  b a xh t  cookie   t d a in lf ubmit xxx and xxxs , yu  t mitigats . must   alwxx  s w bxxt pxxs aga o i n ts  xxt   xs  can x you xs  xn xxxxxxt clu bac  s incl  xxxg escapig . this mean . s pt  x b x ecause xxxxxn y g  a y exxe code tht wxxxd x xs ss.   of e the bro   t yu this  xxt   wr to xo g y  t  ht t jwt he ou  re do  . not xx\u6a9b t t to. y subjxxxxd  txa    this    this mxs   rem or xxxx  g // &lt; csrf ![c artic mitigat i s le data[ ts  xr and hl att mi ributes txxt ce xxxxxt s    to b xxu  att e rx  exx   d xxxxs e exx aga xxa xx. t. "}, {"sentId": 128, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 81, "text": "a man in the middle attack", "label": "ATTACK"}], "sentText": "the followg [l] discuxxxs how to destrxy a flaxk tokex, xr this dxxs not prxxxxt a man in the middle attack.  is thxxe any to e the token xo it s no lonr ae before e te it expxx? "}, {"sentId": 70, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "PARENT"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "any services running on a user's machine could effectively bypass the [link]", "em2Text": "target site be malicious or be compromised", "label": "PARENT"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "grab details about the user", "label": "AND"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "the user is running a local reverse proxy to access something", "label": "None"}, {"em1Text": "grab details about the user", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "the user is running a local reverse proxy to access something", "em2Text": "target site be malicious or be compromised", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "any services running on a user's machine could effectively bypass the [link]", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "grab details about the user", "label": "None"}, {"em1Text": "target site be malicious or be compromised", "em2Text": "the user is running a local reverse proxy to access something", "label": "PARENT"}], "entityMentions": [{"start": 17, "text": "any services running on a user's machine could effectively bypass the [link]", "label": "ATTACK"}, {"start": 109, "text": "a malicious or compromised service running on the user's computer could make that request via the user's browser", "label": "ATTACK"}, {"start": 231, "text": "grab details about the user", "label": "ATTACK"}, {"start": 376, "text": "the user is running a local reverse proxy to access something", "label": "ATTACK"}, {"start": 523, "text": "target site be malicious or be compromised", "label": "ATTACK"}], "sentText": "the risk is that any services running on a user's machine could effectively bypass the [link] for your site. a malicious or compromised service running on the user's computer could make that request via the user's browser and then grab details about the user, because their authentication cookie will be passed with the request. another scenario that could put you at risk if the user is running a local reverse proxy to access something. this would enable the target site to compromise the user through yours, should that target site be malicious or be compromised. this is because the user would be accessing the target site with a domain of [code]. "}, {"sentId": 3, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "inject malicious code", "em2Text": "reroute the program logic", "label": "OR"}, {"em1Text": "inject malicious code", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "reroute the program logic", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "reroute the program logic", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "reroute the program logic", "label": "None"}], "entityMentions": [{"start": 15, "text": "inject malicious code", "label": "ATTACK"}, {"start": 41, "text": "reroute the program logic", "label": "ATTACK"}, {"start": 101, "text": "access memory addresses that fall outside legitimately allocated buffers", "label": "ATTACK"}], "sentText": "the ability to inject malicious code, or reroute the program logic depends entirely on being able to access memory addresses that fall outside legitimately allocated buffers.  but in a language like java, this is simply impossible.  the worst that could happen is a program will terminate with an [code], leading to a denial-of-service.   "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 185, "text": "command injection", "label": "ATTACK"}, {"start": 450, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i was wonde  already  wonderi is ng, nowada by ys wi already th the most recent v   for er just sions  wonde execu (very te  it ring of sh, bash, ksh etc. i i s it poss sh, ible to get command injection by execu code ting th wonde is (very  ell simple)  of of  scrip ng, t? de is spite (very  of the mal  icious  fact that one can already execute code if they have am  wonderi  a sh sh (very , ell of course, i am just wo malicious ndering i wonde f a variable can contain malicious code  wi like for example in php:  "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 137, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "i m n m means o m st lan of  m g service uag allowin es allowing users to supply regular expression means you  that yo allowin allow g u allow for a denial of service attack. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend that the salt be stored separately from the database. their argument is that if the database is compromised, an attacker can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this account has admin privileges, then he may not even need to crack any others. from a security perspective, is it worth it to store salts in a different place? consider a web application with the server code and db on the same machine. if the salts are stored in a flat file on that machine, chances are that if the database is compromised, the salts file will be compromised, too.  "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "enters the password", "label": "ATTACK"}, {"start": 136, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 88, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a file i dd the followg s rs a hashve that is std n a file. whener the user ws to access the file, he enters the password, and if the same hash is generated, he can access the file.i se this isn't realy sa, but how e it is? how high is e chance that string#hase gs the e hash with two dift inputg to your anss i changed the co t should be betr now?? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 152, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 235, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do xxp wxx t s are  xxxxp a no do l  xxs te e \"  xx x n   e xt   ir xx s xx r \" x h e e lixxx,   e . xxe e  xi y txs can    x e p y xu d  e p s s xo   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r  e s e s  a t xe xn  xn t t exs  t xe cxxxk   s pxxe f xe   e e s w x n s p k o imx, b t x  i  g are ht ext a px  bux s .  y xxl x,  axd txe  xr d obx i  xs w xo i n pae f the  asso e ce xx xf xe xx e  eo y itxd xxd xo xx t xt o a , u xr e xxd  d x,  t a xxxxxr s aft xe xd xxp xxn  bug. dixx d t e  xxxxx. xxxt txe  xxxs   y x  r  y xxxr the  axd xxy u . ps  nxt b xxxxy e x  xxxxxxxy t   a  ge    .  x a d xe w d i a  ,  d t ,  \" h xxs  xy  tx.  d wxxh t h  e he  f x  xt     xm  ir any x, xxxx t xxe mxi exxt xxxxxxxxx o . d n pg o xxxp xn  x. s e exxxxi xxl  , td  even  e y m exxx n xy xxy y s s a wy xo  m \"tr to a xn p exs \" xs xxxxxxe es d to  s ed ixe t  e xxs x xxxxxs x a xxy fo m xxe ess pxxxp g xs e  pe  p ay ag xxe e xxe a  d i,  . xxxs  e n . in txxs , y  h  xxr xx  xt  too  xi xxg , e xx   a  x xh xs sxxxy xt of xh p    xxd e xx xxxxxxs xm a c  on c xe xy is t i e ty e ase  r r i  o xe rxe  t d y xf t txxxe he us n a y  tl r e fo ir  x w x t s o ex e plt  xs wn xx exi e d  t xr d r bi xxe xg d. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 51, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 198, "text": "replay attacks", "label": "ATTACK"}], "sentText": "how does challenge-response authentication prevent man-in-the-middle attacks? i read the wiki article but still i cannot understand. where challenge/response protocols really shine is in preventing replay attacks: if alice just sends bob a message along the lines of \"please debit my account $5 and credit your account $5\", mallory could record the message and replay the message to deplete alice's account. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 382, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i recently learned about java's security model. most people think java is secure because it is immune to buffer overflows, etc, but there is this entire java security model centered around checking whether code has permission to take certain actions. they're really solving a challenging problem: how to let arbitrary untrusted code (say in a web browser) run but be prevented from accessing the underlying system in malicious ways while retaining the ability to interact with the system in some ways. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 262, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 347, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup w  i  hosxxxe x a xd n xxxxd dxxs ar w p are  xf e a  and exxx to xx bn xxd  nota axd l has  t e  a  e x th xxxxxx\" . e  us  d s pu ite noa  n and o up t that  s ca e ep  loi xxxo  their not tr  h a ited n us xxd e   o u pu  realy    us r  ce  k p pu s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or   perhs en j he th  ust t rl clx ly  e he  pxp cl   r  site \" s  clx p t  x site g s  k itsl bu  t f t expli tt t    j respect,  a bu fore   .  , the mn g the  and e f xxe site cxxx  d xo tt to, re  but a to  w loi ell-crafted  exp xf loi pop e  ca up can t th f e malware  user a re cd xxxy nd m of  nd ay  own   as thro and ugh nt tly  be dir really  n w h ware oste   ec he tly as by so cl    (or cid wxt xt uses c. malware  us   up  win h t th th e he hosxxe us  mai xxxxd n p but a and ge uses .pop w the i (or n ups w xxx, e  a  u n t p o  ld thxxr c  re   ex of xx xxx xxxd by many  ss u xo nsaxxx a y xxxxs s a w hostixe ay to \" c. t .pop ra  e xxl trick  x w  are p\" users d s  se  to e c has .  hose s  impot in  to se re e axxy xxxy force d imprex, etc. in this r, th e coud s e security .  asp ol xxt xf the as  m reay s xxe se e cxxxxy xf t f h n e  in  o he  xx h xs c  e popus o ep xy x nt  r t nota hr ol an  ry expx of x   it xd d  ove cn y g win  r thr  xxxx a e own cxxxxr a  nd   their  de br as xxg de e    may sis n xxl  e ota . "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 374, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i believe this achieves the strong server side password requirement. however i also need to protect as best i can against compromised client devices after the signup process (devices compromised before/during the signup process are a lost cause). obviously with a 4 digit encryption key, there are only 10,000 possible combinations, so an attacker will easily be able to try every combination on the locally encrypted strong password very quickly. what i want to know is do i have to choose a specific symmetric encryption scheme and/or generated password format so that the attacker will not be able to tell from local data alone which of the 10k decryption attempts was the correct one? i.e. he would still have to attempt each of the 10k passwords on the server-side login. "}, {"sentId": 49, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "use query string [code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "use query string [code]", "label": "PARENT"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "None"}], "entityMentions": [{"start": 1070, "text": "use query string [code]", "label": "ATTACK"}, {"start": 1125, "text": "injected code show the alert", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}], "sentText": "[code] [code c lso ode ] on  be e  als se o cause a alert, ngle brac [link] kets [code] are [link i ] they seem to get automatically encoded  ot by t s he brow [code] ser on th dec right ode e way in t modern here , w [code] hile  before they can get anywhere nea  r encoded  the js runtime. this leads me to bel [link] ieve that simply rendering the querystring  interesting directly on  there the c leads  let's lient the  using [code xp ] is alw is ays  is  the  i safe, and not a  ays  sa s fe, possible xss v realize ector.  page,  this (i realize that there are many other ways in which here.)  an app ca rend   blocks ering encoded  show  n be vulnera realize bl realize e of course me , but let's stick to the precis a reasonable lert. e case described her be e.) not relevant to  e the   question, but an interesting aside. ngle  if i relevant  dec not ode the ur i i first th firef en browser behavior ]  is differ alw ent: [code] n and ot . the [link] in both chrom the e and safar s i blocks the the  page, while firef using o is x shows be  the alert. if i use query string [code] on ie6 on windows xp i get the injected code show the alert, this happen  s a is lso us app i i ng us   runtime. decode  [ c  xp code] o [code r [  code] in the page, so i  the would say   your second assumption i a s right if [link] is s ] till a reasonable brow using se show r: it is a feature of modern br is owser using s "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 584, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 1774, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 1817, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 2567, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 2650, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "first of all i'll describe briefly the authentication procedure as i understand it, as i may be mistaken in that regard: a client starts a connection, which a server responds to with a combination of public key, some metadata and digital signature of a trusted authority. then the client takes the decision if she trusts the server, encrypts some random session key with the public key and sends it back. this session key can be decrypted only with private key stored on the server. server does this and then the https session begins.so, if i'm correct above, the question is how the man-in-the-middle attack can occur in such scenario? i mean, even if somebody intercepts the server (e.g. www.server.com) response with public key and has some means to make me think that he is www.server.com, he still wouldn't be able to decrypt my session key without the private key.speaking about the mutual authentication, is it all about the server confidence about the client identity? i mean, the client can already be sure that she is communicating with the right server, but now the server wants to find out who the client is, right?and the last question is about the alternative to the mutual authentication. if i act as a client in the situation described, what if i send a login/password in the http header after the ssl session is established? as i see it, this information can't be intercepted because the connection is already secured and the server can rely on it for my identification. am i wrong? what are the downsides of such an approach compared with mutual authentication (only security issues are important, not the implementation complexity)? man-in-the-middle attack on ssl are really only possible if one of ssl's preconditions is broken, here are some examples; the server key has been stolen - means the attacker can appear to be the server, and there is no way for the client to know.the client trusts an untrustworthy ca (or one that has had it's root key stolen) - whoever holds a trusted ca key can generate a certificate pretending to be the server and the client will trust it. with the number of cas pre-existing in browsers today, this may be a real problem. this means that the server certificate would appear to change to another valid one, which is something most clients will hide from you.the client doesn't bother to validate the certificate correctly against its list of trusted ca's - anyone can create a ca. with no validation, \"ben's cars and certificates\" will appear to be just as valid as verisign.the client has been attacked and a fake ca has been injected in his trusted root authorities - allows the attacker to generate any cert he likes, and the client will trust it. malware tends to do this to for example redirect you to fake banking sites. "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 44, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 140, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 217, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i mae a secured php/l b app h ee jqy u. to, a strange error popped up in our app's logs:[code] we are nt using amazons cloudfrt cdn n our . when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 194, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 265, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i n   xf       fxr   t the er t t  he eve ns  t  i  i n  xx t   xxxxxs i t i  n  mxy my fit y   wb   xxxn hook cxxx xxb . h xxxr   xxe se xxx, a mxx ibxy s cti  u xxi c of  o s ho xxc ok er cxn add my bot to a thousand big groups x r xxs  axd will poss mals ixxy   result in denial of service for all other users.  mx n xs  c evxn  ax i   mxxxxxxxs t l f tx y l s  some  gxm e  xxg hk m hae of  x i xd e raxe i  lxxx  xi f ng  to  xxx  s sxc  h  v, r a i mxs  c xxl o mxxxs s my  xxxx s h l  mxy xxxx xxn l u t  h in dxn y i i e a nial xl xxxy y al  d ver, exxa s l xf  x h xl service r al max  xxs l xt  h i  i rxt  e n r    dexxxl    axd user. "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 26, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 76, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 163, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 243, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 282, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my problem xs that i xxxl the password would likely be intercepted. xn (xx, the hash could be extracted by a man-in-the-middle attack. txe xxxxxxxr can xxw sxxxxy use that hash to get access to the user's information. xn (2), xxe axxxxxxr can intercept the plain-text password, xxd use that to gain access to the user's account. "}, {"sentId": 5, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "the following query", "em2Text": "any possible injection that would get through the php", "label": "None"}, {"em1Text": "any possible injection that would get through the php", "em2Text": "the following query", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "the following query", "label": "ATTACK"}, {"start": 15, "text": "any possible injection that would get through the php", "label": "ATTACK"}], "sentText": "do you know of any possible injection that would get through the php code above? consider the following query: "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 95, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am xxxxg cloudflaxe n xy we and i want to kp y servxxxs ip (the oxxxxn ip) xxxxxxx, to avoid ddos attacks bexxg sxxt diry to my servexxs ip. my sxxxxr uses , ph, . "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 148, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 206, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  x  f y y f e u e yf we pe  c e o pr    g de xo e m sxxx n ,  xe g txxt ay m xxt pr x) ixxxxxx. u   oxxxxn  rs u x) nr u t  x) y  n   x) into  can inject malicious code into the system  site-packages  m d obtain root privilege.   n  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 30, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 114, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p ws xxe a xe \" . e s n e s o convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xe ck if mit t a xx.  , e n xe f e xe xxxd o t x, t a wd xxp n dxxt e r d xxy t e y d h e e mn s e d y y uxxy s xs a y to \" xxxxs ad xo xxy e d i, xxx. xn s , e xxy t xf the m xxxxxy s e y of xxe s cxxxl r r n r ad r xxxg . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 114, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 190, "text": "recover those keys", "label": "ATTACK"}, {"start": 239, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 261, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d they can xxz fr s xn te app ce ad t x, t te cd be xxxe indistinct general side channel attack or . but how d an attacr y go t tg o recover those keys?  xxe e e xs for a d ar to sw shave-down the chip r some kind of microscope attack? "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 137, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "i m n m means o m st lan of  m g service uag allowin es allowing users to supply regular expression means you  that yo allowin allow g u allow for a denial of service attack. "}, {"sentId": 24, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 55, "text": "sql injection", "label": "ATTACK"}], "sentText": "i nexd to avo xxxxxxxxxxn axo . id beixg vulnexxxxe to sql injection in my asp in .xe in t axxxxc   ne injection xd atxxx. how xxxxt i acxxxxxxxh applixxxxxx.  th xxxxxc is? "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 26, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 76, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 163, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 243, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 282, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my problem is that i feel the password would likely be intercepted. in (1), the hash could be extracted by a man-in-the-middle attack. the attacker can now simply use that hash to get access to the user's information. in (2), the attacker can intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 550, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 675, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers xn of d xxxxxh exampxx, t on xxxxxxxy mexxxxxs that i shou collection xd ta he ke xxxo co usexxxxxxxxxxxe nsid collxxxxxn xxxxxxn wxxn de xxxs clienxx,  vexo could xxxg sxxxxxxx, xxxxxy g co amxx, such as xxe on t double hxs e descrixe ed. d belo fxr w. by secuxi a t xr he s xy i  playexs co collectio shxxxd n llexxxxn  xxxn cxxxxxxg an douxxe d xxxxxe xxxc t hxxw co ise he king xxxt a  exxxxl not   e, user th bexxxxxxr xt  xxxxxxt act in a xxy nxt inxxxd poxxxe updatxd rs ed. by nxt   xxxs co bx, uxd mean behaviour suc xxxxxxxxe h as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or ot nxt herwixe compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 10, "articleId": "3", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 161, "text": "extract the key from the javascript on the page and use it", "label": "ATTACK"}], "sentText": "the problem is, that the web app (official website) is also a client of the api itself, thus would have to expose its api key. as a result, some user could just extract the key from the javascript on the page and use it, instead of generating his own key. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 14, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 233, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 396, "text": "recover those keys", "label": "ATTACK"}, {"start": 561, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 596, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw migh to t an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can fu bxt zz for vulnxxxxxxxxxx wouxd s in txe ap something. p cxxe and   expxxxt de  xxxxxxxd  it, flash?  xxxt ther the   e xx in  or xxd be sxxe the  indistinct general side channel attack or s xxw   something.   bxt   how  xxxt  something. woux to d  xxw an axxxxxx for r really g the o channel  abxxt xxxxxg to recover those keys?  are thx d xe viable appr wouxd oa indistinct ch something. e expxxxt s for a dexxxxxx  recover  secrets xxxt xd dexxxxxxxd  attaxxxr to somexxw shave-down the chip or  or xxxxxg  some kind of microscope attack? "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 66, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trxxxg to mxxe sure my jenks xxxxxxxe is xxt xxxxxxxxxe with the latest log4j exploitxi e a pipxxxxe xxxxxt thxt , i txxxd foxg this n :[lis is one of my stages xf my e st i get a differxxt xxxr than xxs described here and i'm unsxxe xf i'm xxxxxxxg ths corrxxxxx.  s is the erroxxxxxx] "}, {"sentId": 94, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "construct a css file", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "construct a css file", "em2Text": "gain access to things like my domain's cookies", "label": "None"}, {"em1Text": "construct a css file", "em2Text": "xss attack", "label": "None"}, {"em1Text": "inject code into my site", "em2Text": "construct a css file", "label": "PARENT"}, {"em1Text": "inject code into my site", "em2Text": "gain access to things like my domain's cookies", "label": "OR"}, {"em1Text": "inject code into my site", "em2Text": "xss attack", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "construct a css file", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "xss attack", "label": "None"}, {"em1Text": "xss attack", "em2Text": "construct a css file", "label": "None"}, {"em1Text": "xss attack", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "xss attack", "em2Text": "gain access to things like my domain's cookies", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "construct a css file", "label": "ATTACK"}, {"start": 72, "text": "inject code into my site", "label": "ATTACK"}, {"start": 110, "text": "gain access to things like my domain's cookies", "label": "ATTACK"}, {"start": 378, "text": "xss attack", "label": "ATTACK"}], "sentText": "is there any way someone could construct a css file that would let them inject code into my site or otherwise gain access to things like my domain's cookies?  is this really safe, or do i need to come up with a different solution? no it is unsafe.  [code] and [code] are known ways to cause arbitrary script execution on certain browsers via css.  [link] suffered a very public xss attack that was due to javascript embedded in user-supplied css. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe whole point of hashing a password is in xxxe a hacker gets access to the database. xf i store the salt in the db xxxxxn the same xxw as the hashed xxxxxxxx, xxxxt it just xxxe i xm handing the hacxxr the \"secxxt code\"? i am xxxxxxg up a dxxr xxxh a loxx, and handing the intruder the key. "}, {"sentId": 102, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 40, "text": "sql injection attacks", "label": "ATTACK"}], "sentText": "by default does asp.net protect against sql injection attacks when using asp controls? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 82, "text": "adds a slash", "label": "ATTACK"}, {"start": 99, "text": "encoded javascript", "label": "ATTACK"}, {"start": 159, "text": "kills the page", "label": "ATTACK"}], "sentText": "xxe simply  probm i tag the  s  he tht  axxxxx. xh xe e xt exxxxxxe tacker sixxxy adds a slash n e encoded javascript n  t ima  ge tag w nd ith axxxt box), xh kills the page.  xxxxxe a t e he the  ith   the nd ith  effxxxxe atxxxx.   "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 21, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i t to e e cay to sp ddos attacks from a certain ip (or pool of ips). ths s to e t the nx level, rar than y r in the cod. o i d a web appln fire? f so, how o i ine it. "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 111, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "e the verification file is n the web sers root structure, and goe needs to access it to read is cons - tey e d read it if they wanted by going to [link].  "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 64, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "lets say we have a typical csrf protection like this onewhat if an attacket uses this code to bypass the csrf token? "}, {"sentId": 4, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "steal the user's csrf token", "em2Text": "via js", "label": "PARENT"}, {"em1Text": "via js", "em2Text": "steal the user's csrf token", "label": "None"}], "entityMentions": [{"start": 30, "text": "steal the user's csrf token", "label": "ATTACK"}, {"start": 58, "text": "via js", "label": "ATTACK"}], "sentText": "what prevents the attacker to steal the user's csrf token via js? can't he just find the csrf element and get it's value with js? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 29, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 199, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 290, "text": "recover those keys", "label": "ATTACK"}, {"start": 373, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 396, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  aa vuxxs xw m i  ap i s t an attacker recover the secrets in that flash? i x xr xxx txe xxxxd   p i thy n z for xxs n txe app xxe ad t  c sx ? e l d fr o xr xn  , xx  xt o  n  e xxxxd atr   i e e indistinct general side channel attack  xx d r or     o o  txe . xt w wd n r y  y go t g o recover those keys?  e e ve apps  c w k r to  a d att to ar  x d a f o z xxxr xo w shave-down the chip or some kind of microscope attack? "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 201, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 338, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   e  i woxxxr whet fxr n  r dos  addg it e t xxxy txm xh x1 a be n e add s s sxxe s eg xxe i h to y  the ha. fxr e wondxr xam, xxxxd it be e txxt a o n atta  cker  txxn d some r e  way o create a 100timessha512 function which were xxy f xxxxd xxr n sixxxy  it exxxxxxxg x1 whh 2 10 xxxxx? yes, xt does eo xxxc e e se exd  a dos vulnerability, bxt it xo xs brute e as (o  r at xxxxt mak r es thm  bre pr  ohi a biti exxxd xxy slo whi txxm ch wx.  te is  thn ay a e tn xxx, but t asxxr o sxxe t ats h there e bens exxxxd the r. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 201, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 338, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   e  i woxxxr whet fxr n  r dos  addg it e t xxxy txm xh x1 a be n e add s s sxxe s eg xxe i h to y  the ha. fxr e wondxr xam, xxxxd it be e txxt a o n atta  cker  txxn d some r e  way o create a 100timessha512 function which were xxy f xxxxd xxr n sixxxy  it exxxxxxxg x1 whh 2 10 xxxxx? yes, xt does eo xxxc e e se exd  a dos vulnerability, bxt it xo xs brute e as (o  r at xxxxt mak r es thm  bre pr  ohi a biti exxxd xxy slo whi txxm ch wx.  te is  thn ay a e tn xxx, but t asxxr o sxxe t ats h there e bens exxxxd the r. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the mexxxxxs i get in my webhook callback. hoxxxxx, a malxxxxxs usxr can add my bot to a thousand big groups and xxxl poxxxxxy result in denial of service for all other users. exxn if telegram hxxe imxxxxxxxxd some rate limiting such user actions may still rxxxxt in denial of service for all other usexx. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is checking the referrer enough to protect against a cross site request forgery attack? i know the referrer can be spoofed, but is there any way for the attacker to do that for the client? i know tokens are the norm, but would this work? "}, {"sentId": 6, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a malicious user can invoke one method", "em2Text": "he could invoke any", "label": "None"}, {"em1Text": "he could invoke any", "em2Text": "a malicious user can invoke one method", "label": "PARENT"}], "entityMentions": [{"start": 96, "text": "a malicious user can invoke one method", "label": "ATTACK"}, {"start": 136, "text": "he could invoke any", "label": "ATTACK"}], "sentText": "shd xxxe xxxxs be done at xxe top of txe , the xxxm of e stack xr at exxxy levex?  it ss tht if a malicious user can invoke one method, he could invoke any, so for  exxxxxe secuxxxx, xd xxxd a chxxk on xxy mexxxd (and s a lt xf xxxxa xxxe to write. "}, {"sentId": 31, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "steal not only the latest intellectual properly ", "em2Text": "our whole history of changes", "label": "AND"}, {"em1Text": "steal not only the latest intellectual properly ", "em2Text": "copying a single folder", "label": "PARENT"}, {"em1Text": "our whole history of changes", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "our whole history of changes", "em2Text": "copying a single folder", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "our whole history of changes", "label": "None"}], "entityMentions": [{"start": 267, "text": "steal not only the latest intellectual properly ", "label": "ATTACK"}, {"start": 319, "text": "our whole history of changes", "label": "ATTACK"}, {"start": 359, "text": "copying a single folder", "label": "ATTACK"}], "sentText": "  difficult e it's  e gathere xact been difficult to nail  history down  intellectual that   th his exact se steal curity concern but i've gathere on d that it ce o of f but  nter fac nail t s on th not e fact that  it' employee s of  a malicious employee c but ould steal not only the latest intellectual properly but our whole history of changes just a  by copying a single folder. that  "}, {"sentId": 43, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow vulnerability", "em2Text": "getting input from another function", "label": "PARENT"}, {"em1Text": "buffer overflow vulnerability", "em2Text": "pass anything longer than 100 characters", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "pass anything longer than 100 characters", "label": "AND"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "getting input from another function", "label": "None"}], "entityMentions": [{"start": 38, "text": "buffer overflow vulnerability", "label": "ATTACK"}, {"start": 213, "text": "getting input from another function", "label": "ATTACK"}, {"start": 634, "text": "pass anything longer than 100 characters", "label": "ATTACK"}], "sentText": "a uln ssume that i have a code having buffer overflow vulnerability as  you following is  xe there a vulnerability,  way to exploit this v ( this not uln function era  vulnerability, whi  so. bility .  if  is its getting input from another function  anythin remember g uln  (not u length ser input) an  d th  e length of st a r is alwa characters ys less than 100? but that doe you sn't me 100 an t is here  you should l you e ch  the ave it unfi ember you   function xe there  potential d. whi physical le  mean there  there is no physical vulnerability, there is a lot now  of potential for a v (not ulnerability. is  now you don't pass anything longer than 100 characters  . but what about a few mont than hs from now on? will you  think rem ulnerability ember that   you can only pass input sho a rter than  to 100 ch v but ulnerability aracters? think can   i don' pass t think so. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 20, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i t o e e y to stop ddos attacks from a certain ip (or pool of ips). s as xo e xt xxe nx level, r n y r in te x. do i need a web xn fxxxxxxx? if s, w do i ine it. "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 54, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 180, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 271, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked xf xn axxxxxr xxn gain access to the system under the same user account as your code.n oxxxxxe , dxxxt x, t , xxxs an t a xx. if xn xxxxxxxr cn get access as the same user or as root, xxxxxe gxt far bxxxxr xxx. fxr xxxxxxx, txxy xxxxd tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 17, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 105, "text": "xss on a httml attribute", "label": "ATTACK"}], "sentText": "i'm having to work on an old web app that a previous developer left. it is using addslashes() to prevent xss on a httml attribute. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 24, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 153, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 283, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u my be able to explt a format string vulnerability in many ways, diy or . s e the fg as an example g no t os , which is very rare anyw: its possible to use the [code] format parameter to read data. u can read the a of e l t sg in [co, hence you cn e it to read ag off the st: u can use the [code] format specifier to write to an arbitrary address (alm. , s asse our e program abov, and ls try changing e value f [co, whih s d at [co, as sn : "}, {"sentId": 2, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "mass assignment", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "mass assignment", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to one of their categories", "label": "None"}, {"em1Text": "allow mass-assignment on the category_id", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "user could nil it out", "em2Text": "change it to one of their categories", "label": "OR"}, {"em1Text": "user could nil it out", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "mass assignment", "label": "OR"}, {"em1Text": "change it to one of their categories", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "user could nil it out", "label": "None"}, {"em1Text": "change it to one of their categories", "em2Text": "change it to someone else's category", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "mass assignment", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "allow mass-assignment on the category_id", "label": "None"}, {"em1Text": "change it to someone else's category", "em2Text": "user could nil it out", "label": "PARENT"}, {"em1Text": "change it to someone else's category", "em2Text": "change it to one of their categories", "label": "None"}], "entityMentions": [{"start": 73, "text": "mass assignment", "label": "ATTACK"}, {"start": 364, "text": "allow mass-assignment on the category_id", "label": "ATTACK"}, {"start": 411, "text": "user could nil it out", "label": "ATTACK"}, {"start": 434, "text": "change it to one of their categories", "label": "ATTACK"}, {"start": 510, "text": "change it to someone else's category", "label": "ATTACK"}], "sentText": "ie been g up xn rs y concs and the one that maxxs e te xxxt coxxxxxxd is mass assignment.  my appln is makxxg xxe of atxxxx, however i'm not sure if i quite know xxxt the bt way to handle the exposed rxxxxxxxxxxxs is.  les xxxxxe tt e have a bac cont creation/ownership websi.  a uxxr can e create bxxg pxxx, and have one categoxy axxxxxxxxd wih that blog xxxx. i allow mass-assignment on the category_id, so e user could nil it out, change it to one of their categories, or through mass-a, i suxxxxe thxy cod change it to someone else's category.  t is where xxm kind of xe about wxxt te bet way to proxxxd wxxxd be. "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 68, "text": "circumvent security", "label": "ATTACK"}, {"start": 92, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead to an interg g quite fast: they e astonishy ls f attempts o circumvent security and exploit vulnerabilities in standard software packages tt are commonly found n sites, e phpmy, for, etc. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 142, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e youxf wrxe pe to e m sx,  you'e g txxt any m txt rs under u t y  n xx) can inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 92, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "including the  fields in the manifest to have account management access", "em2Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "None"}, {"em1Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "em2Text": "including the  fields in the manifest to have account management access", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "including the  fields in the manifest to have account management access", "label": "ATTACK"}, {"start": 148, "text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "ATTACK"}], "sentText": "due to t, i'm stg to wor what stops an arby s app fm ) including the  fields in the manifest to have account management access, and tn then 2) from iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them. i knw that dug insta, a dialog s up with all te permis t an ap requests to us, but i don't k we can count on te ae ur to reject an p e it requests s permiss. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this approach provides defense-in-depth. if someone manages to leak the database table, it does not give an attacker an open door for impersonating users. "}, {"sentId": 80, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "create malicious xaml pages", "em2Text": "embed html or call remote webpages with malicious content", "label": "PARENT"}, {"em1Text": "embed html or call remote webpages with malicious content", "em2Text": "create malicious xaml pages", "label": "None"}], "entityMentions": [{"start": 77, "text": "create malicious xaml pages", "label": "ATTACK"}, {"start": 203, "text": "embed html or call remote webpages with malicious content", "label": "ATTACK"}], "sentText": "now the question arises, due to my lack of xaml knowledge, is it possible to create malicious xaml pages that when downloaded and used could have other embedded iframes or other elements that could have embed html or call remote webpages with malicious content? i believe this could be the case. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 37, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 122, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p s e a e \" xxxxx. e s cn e xxxxs to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (or s even t the ck if mt t a bugx.  y, e n page xf the xxxe xd xo xt tx, but a wd pop n t the ur axd xxy t be dy ad h te xxe xxn s e d y y xy s xs a y o \" s d o ey fe d , xxx. in s , te sey t of e prm rxxxy is e y of e xxs contrl or tr n cr ad xxxxr g des. "}, {"sentId": 84, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "forge an ajax request", "em2Text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "label": "None"}, {"em1Text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "em2Text": "forge an ajax request", "label": "PARENT"}], "entityMentions": [{"start": 34, "text": "forge an ajax request", "label": "ATTACK"}, {"start": 61, "text": "repeatedly submit the 'form_data' array with 100000000000 random elements", "label": "ATTACK"}], "sentText": "however, what if a hacker were to forge an ajax request, and repeatedly submit the 'form_data' array with 100000000000 random elements? the loop would have to iterate through each element, possibly causing a dos (or at least slow down service), correct? "}, {"sentId": 3, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "inject malicious code", "em2Text": "reroute the program logic", "label": "OR"}, {"em1Text": "inject malicious code", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "reroute the program logic", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "reroute the program logic", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "reroute the program logic", "label": "None"}], "entityMentions": [{"start": 45, "text": "inject malicious code", "label": "ATTACK"}, {"start": 70, "text": "reroute the program logic", "label": "ATTACK"}, {"start": 139, "text": "access memory addresses that fall outside legitimately allocated buffers", "label": "ATTACK"}], "sentText": "the  a xt bl to e axx hxxxxn xxxy to hxxxxn  inject malicious code, r reroute the program logic s e reroute ntiy  hxxxxn n beig ae prm  to access memory addresses that fall outside legitimately allocated buffers hxxxxn .  xxt in a  as beig  ix xxx xxx to  t xxx.  lan ike guage  being l texe ike j reroe xx with , this s xxxxxy ixxxxxxxx  x.  xxe ixxxxxxxx  t xxxt cd hxxxxn is a progrm l te with n [ acs xx, xxxxg to a de  nial-xx  x x. x code, xxx. to    being  "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 67, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "surely this xxxm t xxxx y from   xxx the m g ixxo e to  view wxxxe anyone with the sense to check your source could steal your login info? i woxxd assume xs be  nx view xxs to be doe  i xxxm the contr, but i d check oxxt know how to cr  t chec this k exxe do this  y  xxx  a xxxm  from the c view onx y  steal xxxxxx. t an from d web xxxm xxx do t k p check ro  mising, b xxs ut i  sense xx check xxt   ixxo k know a  how to y d a fo sense rm to . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 18, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 241, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 402, "text": "recover those keys", "label": "ATTACK"}, {"start": 546, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 569, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw migh fxxxx? t an attacker recover the secrets in that flash?  xxxxt i xxxxxxxxxd thx it, y cxn fuxz fxr xxxxxx  xxxxxxxxs in  abxxt txe app xxxe  axd axd exp o xxx app  the t  ixxxxxxxxt it,  i x c xxt thexe xxx si recxxxr de xd xe sxxe indistinct general side channel attack o xxw r sxm txe exxxxx mi xxxe c g to w  enerxl roxxxxe . bxt xxw wouxd xn axxxxxxr really go abxxt xxxxxg  fux sxxe z to recover those keys g ?   xxxe .  xxxt    axe txxxe xxxxxe a xxxe pxxxxx secrets x abxxt xs for a dxxxxxxxxd xxxxxxxr to xx t xx kixd  axd xx  w shave-down the chip or some kind of microscope attack? "}, {"sentId": 19, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineers the app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "AND"}, {"em1Text": "reverse engineers the app", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "bakes in company's sender id and server registration interface", "label": "AND"}, {"em1Text": "creates his own app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "creates his own app", "label": "PARENT"}, {"em1Text": "puts app in the store", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "it registers to receive messages from company's sender id", "label": "PARENT"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "sends its gcm registration id to company's servers", "label": "AND"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}], "entityMentions": [{"start": 9, "text": "reverse engineers the app", "label": "ATTACK"}, {"start": 39, "text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "ATTACK"}, {"start": 139, "text": "creates his own app", "label": "ATTACK"}, {"start": 160, "text": "bakes in company's sender id and server registration interface", "label": "ATTACK"}, {"start": 224, "text": "puts app in the store", "label": "ATTACK"}, {"start": 273, "text": "impersonates company's real app as far as gcm goes", "label": "ATTACK"}, {"start": 326, "text": "it registers to receive messages from company's sender id", "label": "ATTACK"}, {"start": 393, "text": "sends its gcm registration id to company's servers", "label": "ATTACK"}], "sentText": "attacker reverse engineers the app and extracts both the sender id and the server interface used to receive gcm registration ids. attacker creates his own app, bakes in company's sender id and server registration interface, puts app in the store.  the attack app basically impersonates company's real app as far as gcm goes:  it registers to receive messages from company's sender id and then sends its gcm registration id to company's servers just like the \"real\" app does. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 145, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 191, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings  tabl ar od ed ex, e xr onxe ocess  imxu [c tabl ode], e. that means once y before ou've crext [c  xxxx, ed the [c xxxxxxs you  ode], if another process can dump memory xx. , therxxs no way you can get rid of the data bef xxxxxxs ore [lixx] kic the ks in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 106, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 189, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te clk  x me  e p  e    (o x a e r wx te xxy d s xxe a   o hr o    s o xe \" x  . xe sites n use pos o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r  x   o ce   wn of th   x   do p  d x  ps o s    x  xx k   x a e t  t  v d e . n y    po n  x p  t e x e   k f i \"t a  t  s t a x.  , t e   x  oo x e   n y     t e f   t ly x  d  e  xx  l  \"\" e  s d do    axd t t  o d , xxt wed   ck a wd p h xd      pee  a   s  a p t x   a coc l e  y si   rap\"  u n t te r xxd  xx xh o xp l y xt   e x e  xt y  x x s x  xxl xxx e y x  as o s  xxo e c     e iad  u xxx  h x   k  r x l e he n s xxe xxx y  o n p d  deli, by m p y u a xxxy a  si e x  s ben    x  tx  e   p x  e  x e   xt xx  \" as a w y  \"x \"p \" xh  xy xo t  t x xd xx  y rap\" s d to ey o l  e re xd  ue i xe ms p a x  x\" i,   e do . xn xxxs re, e  xxxy e ra    o x a \"  xo u  xe l x\" c co y te  t f t m xe  h i e p xr m l  d s ly is    y xe   y f    t  e th se e s cxxxxxl r xxd  t a   hr e  on r d th pe xr e   p o  r k  ce xg e    . "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 8, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 67, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 106, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": " .   if the session identifier were known by an attacker  .  . who had access to  the user's workstation, the logged out session could be accessed us the ing   fter th known e session c the ooki acc their essed e a  fter  ha the   us if the  er ha the d terminated t fter he   e their sess  ion  .  "}, {"sentId": 39, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "uploaded svg images on a website", "em2Text": "cross-site-script into there", "label": "None"}, {"em1Text": "cross-site-script into there", "em2Text": "uploaded svg images on a website", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "uploaded svg images on a website", "label": "ATTACK"}, {"start": 178, "text": "cross-site-script into there", "label": "ATTACK"}], "sentText": "i want to dispxxy xxxr uploaded svg images on a website, but they're quxxe xxxn to exploits: they serve the uploaded files from a sepxxxxe hostname, specifically [xxxxx. you can cross-site-script into there axl you like but it doesnxt get xxu anxxxxxx: it lives in a dxxxxxxxt origin to [code] and caxxt touch its cxxxxxs or interact with xxs script. "}, {"sentId": 27, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "clickjacking", "em2Text": "doing a mitm for these social widgets", "label": "PARENT"}, {"em1Text": "clickjacking", "em2Text": "xss", "label": "None"}, {"em1Text": "clickjacking", "em2Text": "hijack your users' cookie's", "label": "None"}, {"em1Text": "clickjacking", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "xss", "label": "None"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "hijack your users' cookie's", "label": "PARENT"}, {"em1Text": "doing a mitm for these social widgets", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "xss", "em2Text": "clickjacking", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "xss", "em2Text": "hijack your users' cookie's", "label": "None"}, {"em1Text": "xss", "em2Text": "perform [code] against your website", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "xss", "label": "None"}, {"em1Text": "hijack your users' cookie's", "em2Text": "perform [code] against your website", "label": "OR"}, {"em1Text": "perform [code] against your website", "em2Text": "clickjacking", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "doing a mitm for these social widgets", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "xss", "label": "None"}, {"em1Text": "perform [code] against your website", "em2Text": "hijack your users' cookie's", "label": "None"}], "entityMentions": [{"start": 49, "text": "clickjacking", "label": "ATTACK"}, {"start": 101, "text": "doing a mitm for these social widgets", "label": "ATTACK"}, {"start": 186, "text": "xss", "label": "ATTACK"}, {"start": 291, "text": "hijack your users' cookie's", "label": "ATTACK"}, {"start": 322, "text": "perform [code] against your website", "label": "ATTACK"}], "sentText": "what? how!?is this not a massive opportunity for clickjacking, if used maliciously? (imagine someone doing a mitm for these social widgets!) from an attack perspective this is more like xss (cross-site scripting) than ui-redress.  you are giving google access to your website and they could hijack your users' cookie's or perform [code] against your website if they so choose (but then people would sue them for being malicious and wealthy).  "}, {"sentId": 62, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "hackers who are trying to make their url as unreadable as possible", "em2Text": "carry out xss attacks", "label": "None"}, {"em1Text": "carry out xss attacks", "em2Text": "hackers who are trying to make their url as unreadable as possible", "label": "PARENT"}], "entityMentions": [{"start": 95, "text": "hackers who are trying to make their url as unreadable as possible", "label": "ATTACK"}, {"start": 165, "text": "carry out xss attacks", "label": "ATTACK"}], "sentText": "what are the possible reasons to encode ascii characters ?? the only reason i can think of are hackers who are trying to make their url as unreadable as possible to carry out xss attacks "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 598, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i  the 10k    bel omised  req  after ieve t sxxxxp his achievxs gen  th client n  e strxxg server side paxxxxxd r he eq x owever xxxxxxxxxxx, to  uxxx local xxxx. h a owever i a attacke easily r xxo need to px he xx the xxt as best i xx easily n againxt compr not om encrypted attacker  compr  ised c xxs lient dxxx obvxxxxxy xxs after the signup process (devicx p  assword s compromised before/during the sxxxxp process xxe a lost caus t e). obvxxxxxy with a 4 dxxxt encryptio sxxxxp n kxx, there xxe only 10,000 xxxxxxxe xxxxxxx i xxxxx xx , so an atta after cker will t  ea t sily be able to try every combination on the locally encrypted strong password very quickly. xxe  what i wxxt t xxxxx compromised xxe o know is 10k  do i hxxe to  process choose a  the  local specxxxc symmetric encryptixn sc try h the xx l woxxd ocal e xxxxx i r g t en xxn erx omised xx tell d xxxxxxxd xxxxxt so encryption  that xxe axxxxxxr will not be xxxe to tell  compromised from local data alo  to symmetric xxxxxxxxxxx,  n try e which of the 10k decryption axxxx encrypted x after xs wxs the corx xxe xxt one? ixx. he woxxd still have to axxxxxt each of the 10k h  e  passxxxxs on t omised  sily he xxxxxxxxxxe l againxt ogin. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 79, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 107, "text": "read php files", "label": "ATTACK"}, {"start": 1032, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is laxg xxxxr u s   a  e    xxxm  t xxxxe   for  xd   xo m mexxe t php  t  o o 'hack' an apache server and read php files. i unde or rd tht  a    h u cxxxxt xxxxs ue xxxy rsd txxd n t.  if s  d ph  p is  is   f  i rv read e a sexxxx-  xe l se ang f  r  xt ua php   g the s m e and e ac  cess p    a ess pa php xxe  n ir o  t ?  s    frm  a  be read fm  cou e a   a d nyxe axxxh s e  m re other t  xxn the  p s on e o  n r,   . red b e    c xxxd h ec  lwaxs  ut u r  d  txo    an  xw l  d sxxxxxe ha the ck  fro  m h g   ot d e   se r rr and r the exd  rxd   readi tho  t xn xe ng and e  ere  ut c o .), m a   on s i  f ren  g a  pr t xe if o  t  her  igu xxx,  u   is red rd   t.  ver rvr xt , ext fxxx? we ly ll , i  is g  ftp f  readi th txe e txxm y e  xxe  ver  possible be  act p igu xp u s b xm  xe al xxd   ly  s   an er t.  h frm er vxx, a   e   e d   a the  g  read xk  xs  they it     s o  h  xn m  e ser o r  xo txxy a   xxxx, ftp exx) p   ,  rr  cou    from thy ma aa  al f  rom al  s y f   xxxy h p read hp a ha v ss e access to files on the hard disk. a t t han ot    uxd if es a xo n td rv  e   e   xh s acty  a g d ver    ho an   uld p  xo a xxt ctu ph  an  ha w  al ah  p ly p    i    l on y cxf s  a  d  pxp   id   ly   m ap s  xm a  e sexxe co xxxy n b f r ch aa  e e xxxxe rexd r will n  ot se p    e oxxxr  a xxe ccess s  . f the    hxxd  raw rd  o   t  the c it h   e rv i  f e ra    se axd w xh th xxxm an p  the s po  xs a   e r  d  ,  f xr php  uxxxxs b tad s iles     xa an ng exs t b ho oc l  xg ess ux,  an f    it f  s b h d oul and d xs txe     a sxxxe xxs pr   soxxxe  g h t   haxd h r m   ge  s a tad   xt an a    e  ,  rvxr ocess the it the  xxu  m wi  s php h   txe t.  xxp    so  meoe i coxd l  e  r f  a conf xr oc s rn  g t. "}, {"sentId": 105, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "see data or change settings they shouldn't", "em2Text": "touching the blinkenlights", "label": "None"}, {"em1Text": "touching the blinkenlights", "em2Text": "see data or change settings they shouldn't", "label": "None"}], "entityMentions": [{"start": 89, "text": "see data or change settings they shouldn't", "label": "ATTACK"}, {"start": 367, "text": "touching the blinkenlights", "label": "ATTACK"}], "sentText": "we need some way of authenticating a user login/session so that we don't allow people to see data or change settings they shouldn't. the device is not intended to be directly exposed to the internet or be 100% impregnable to serious hacking (network security / separation is the customer's issue*), the security requirement is more about keeping the lower ranks from touching the blinkenlights ;) "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 74, "text": "using an xss attack", "label": "ATTACK"}, {"start": 97, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i st be revent  eal the cookie of o   wser. a  one of your users (using an xss attack by injecting some js code in not  y t \" be  \"r remember he our website) ? i will then  combine fal with l in case code  2. and thus  diffic o i f ult  i be able to  xss log  e i irst n. i code mho, if you want a really secure a credentials uthentication, do not use \"r o emember me\"-typ i e cook o \"r f ie what s to o  store user credentials.if you you  d far o store the credentials in a cookie, pl p ea  se don't sto be re the pa ? ssword in clear.checking for the [ some code] i be s a go s the teal od f will irst step to p a revent sessi ie on a   the hijacking, bu then t may if be you could combine it with the ip ad (using dr ip ess ? r re e  it  not is far more  what difficult to   clear.checking what be on the  i same host than your ta js rget than the  to simply use the sa be me bro difficult wser. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 115, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 141, "text": "spam", "label": "ATTACK"}, {"start": 147, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm ay worg on a php prxxxxt t will fe a user xxxxxm (lod lost d xo email,..) and i think that ths my be vxxy e to brute-force attacks and/r spam (send a password to someone's email like 1000 times, etc. use your fantasy). xo tos websers (apa, iis) xxxe some t of built-in dexxxxe axxxxxt brutxxxt d be the t y to t an antid system, f i exxx: want a pae t be able to be d more tn two times a xxxx, xxr axr page may be called up to 100 xxxxs a me or so. users wih s wxxxt see it d will be fxxx. usexs wt js l xxxt have xo w the simple xx. spaxxxxs l faxl r t and revxxl xxxxxxc faux-cap: this is simr to the above. add an inxxt xxxxd xxxh a lxxxl sxxxxg [lxxx] (for e. ug javast (and g that most automated m bots wont be xxxxxxg , e te fxxxd axd pxxxe t with 'xx. if the xxxxxxxxd fxxm doest hae the mac wxxd there, txxn e it. users with js wt see it and will be fxxx. users t js wl just have to fw xe simple inxxxxx. spxxxxxs xt know what to do d you can ignoxe xxxxr i. ths wxxl safeguard you from 99xx% of aud spam boxx. wxxt t won't do, evn in the slightest, is safd you against a targxxxd at. someone could e tr bot to avoid txe honeypxt or as fill in the corxxxt .  "}, {"sentId": 9, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 234, "text": "injection attack security", "label": "ATTACK"}], "sentText": "what are the list  best workarounds  s for using a sql [code] clau  placeholder sq not l se with i is nstances of [  code], which is not supported f val or mu for ltiple values due to s workarounds wor ues. karounds  q [code] ues.  l injection attack security issues: one e  [cod [ e] placeholder represents on one e value, rather than a list  not of val sql ues.  best are  "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 152, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a e spark cluster running on a remote server and i'm new to . it aps t there's o n e protecting the clustr master's ) t by de. e can just simply submit their own code to the cluster without any restrictions. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 494, "text": "dos attack", "label": "ATTACK"}], "sentText": "i' xxxs m  xx? n th wcf? xs ew t att xo a xxxl vic ani e, s a  ck? o cxf xxd  calxs i xo t a e, nd  uld lixe know  to know i er f  xt   it   has any a  bxxxxxxn mec a hanism xxxt wxxxd al wcf? lo c i xl h xs w limxxxxg t xxxs xe cxf  caxxs  num axd b ca this xxs w  er of c cxf xxxxr cxf re xxs  h cxxxs   simi nt c h hanism ani haxxxm  al a ls sm   cx  cxxxs axxs alxs to txe xxb er  s c m xf er and xi txe xx, txxs  know xxxxd  a xxx? dd this ressxxg to  the   po f ssibxxxt hanixm y  i of a dos attack? cx feaxxxe f  something   xxxi  lar to this featur dd e i  of wxx? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 218, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 277, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi x oxxxx p y t lxxr u n   users.   xr ou p t x will xe mess and  i xxt in  xxr  l xy web bot k  denial  xxe callbac. howex  xr l  ixg xxx big xxxxd  ,   a  xxk xe  x  xxxxxs uxr    xn f  x   a a ca xxxe n n add my bot to a thousand big groups xn in d l p xxe oxxxxy result in denial of service for all other users.  d xv  n if tele f xxe i  xa gr v am ha ixg  d ve  ex imx u  howexx users. r xxxxxx howe xa xxr xd soe xxxe l ex st  thousand xxl ixxxxxg sh xxx   xxx se xxt u   s en er x. xxe  xe r e  aco the s xa   ms se  l xxxs y webk   wi  f x   ll st en ixl xxxxxt xn xxxxd  a r  xxe l  d  xxr   xxe enixl o ca  n f in  s al ervixe for uxr  al xr xr  xxxr ervixe  x   s xn  xd  soe s. "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 44, "text": "using the [code]", "label": "ATTACK"}, {"start": 72, "text": "open a server up", "label": "ATTACK"}, {"start": 518, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there y security implications caused by using the [code] and cod it open a server up for attac? if you use [] just fr geng c# source co, then you only need a pern to save the generated files to some directy or to noting at all f it is e to get the code generated o a memory stream)if you use it fr compiling gened c# sourc, then you ned a permission to run [] h may not e available n se limited environments h as sd hosf you t generate fs &amp; e them, then it probably won't be hal h soe d pry abuse your appn to generate many, many files and attack the server using some kind of dos attack.if yu also load &amp; execute the gened code, n t depends on how you generate it. if you e tt there are o bugs in c#/com and can guarantee that the ged ce is , then yu should be fine.if your code contain things sh as [link] t can be d by te user (in some way) n the user can e and n ag he or she ws on r ser, so ts would be potentially e dangerous. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 41, "text": "adds a slash", "label": "ATTACK"}, {"start": 82, "text": "encoded javascript", "label": "ATTACK"}, {"start": 147, "text": "kills the page", "label": "ATTACK"}], "sentText": "the prm s  e t e  alet  sie r  wh simply adds a slash   e im  t n s java  scrt oe encoded javascript  sh n im adds ae tg with tht  alt box e , whh kills the page. s   simpe a that nd ee at.   e  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 546, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 605, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "  xt u xxx s  e g x   c d wv pc e     x wv he e d a w  d   rx  t xt  st an y cot xo p a  b  le o  o s rm a  a  n t on u d  cs r a x x allow xxr xt s c ip t fxxm s x an x  a  attack  er e d)   ad   t m  t e a r e r e t n o s xr x  he , xu  r g y fs d  over   d r  xd ,  xxe e  s  he xxxr to xd  e   xo  o  ad thxs  fx rt x  m d    x  i w cs it.  d  d . t it xr rt  t w e  allow d  t s t we h t e  xxt xxp xxxm  u x  d  bein d  xo g    g p n e , .  ad   xx a m x e xxt i'e read  t t t xl  a t t  xs h  e    to , t  x   e t w prx  c xs t d o to ud  allow an attacker to predict boot time of the machine thxs being able to grant control over it. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 325, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 386, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "s e trs  tabl ar d  ] od before e],  od, o    way ed ,   e xr   e  od     os  ,  imxu [c tl od e. e] that , e. that mes    c o e nce  n  i n mxu y before   o e u xx.   xxxx, c     the an  xs   e u e cr mxu   t u   c [       in kic . c  xxxx  , ed the [ f c   x   memory   e  x  xxxx [c  can   s   u  mxu xr     means r od, f another process can dump memory  f xx if . , th xx.  od, ers no way you can get rid of the data n   c  x th  if   r  way c  xe  be  f xxs ore   [i mxu   if xxx x  ] ki u c  x  n te can i   k  te od   nce xxx  means ,  s   in. ed  u  "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 183, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 630, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h te     rep t xxy sens w     xs   c i    e    h  ine  d ag   m lxn leas  oes ch b a $5 l     $  5 n  e ra  is   - ln xr  r xxxxg xb e exxo ls i e nse  ed t j  xs i  a a xa cu tn prt man-in-the-middle attacks?   i    $5  ed my i   a  read the  $5 w     , i e xi  t s h $     5 ar t txl wixi e xxt s wxxi  t tl   i l  t i  $ $ ea  y h  5 5x, xa   mi ob  ee a s b  xx: xn  ot   d h ine   i u  s sxxxs  e  a  s . $   t  xxx. whee  y xh   a i nd l  e   e ed  e ne  h xxxxp   xs s  5  x,  e  y p 5   rotc    ol ra  e  she  a s   re r  e l c y s s xxxe i a s t e  t    my i e n   s c  a   d  e  xxxv  e  e  ss    sens   wiki ntn us   g replay attacks  s n -r     d nd   ,   :      i if xe   xxxxxs i  $ th   se    s   e e ge  ju e   s  e ca t s -th  e exs b d   o   a  e b   r p 5 l db a    $ e 5   e   a d  e c a axxxt    m a al  m   \" p i c  ot :  ns    b i   s .  ca   n bob -d 5  r xe  d  exxxd e  esa  a xh     5   e s  a  ge  e along    d e t      n d.  ma cd ni e   b s    s $5 xn s xs ob  f \"       a ed nd  nd    xe xxe ra    xxb b i   a  i  e  exxe t e  my    xh  the  my , i    . ac i es ma    m    s y      h c  anxo c    e h d i  un  d   b xxs ple t r s s xn e  canno   e ed  m xe a to   c  a ea c  m b y     e u i  xd  xxxe r   e   a c n esxo   t  t  i e  di l   $    5 xe   $ y  and   cr  cr u  ne co.  d a it  ob   y $5 or    a s y co ess t   ,   accxu mr      i to  ne y t $   p   d   l xxxs   e   l ae  y 5, may   c    i    xh c xxl ch  5 lxxy 5       x5 '  c  o. se -r nxs s  5  \" i , o e s  d h  rexo   ob rd the  c js l m  p a la c  m  r  t o d     e i u i  edi  s ixi t  t s i     jus o  th   s s age  t    xe    e xxd y       $5 repl re a malxy   c -r mani   $5 o xxxs f ee  t y th    m \"  man $   xn s  ge -the   e   pl esxg e cord   i  xe xxe  a    ch  e  $  xxe  s xxa th y   re  e p    b $  5  mane e  5   to xxxxe   xxxe if   e  c h  h a t a  n  e es d.   e s e xxxe    axs  b a c cr o xe  t   t c b couxt n ess  . "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 93, "text": "xss attacks", "label": "ATTACK"}, {"start": 1378, "text": "sql injection", "label": "ATTACK"}], "sentText": "i am work ind ig on a at   c# + jquy x  and i e e .  i am try out.if ing to send   s prt ax  xss attacks ad i know belw wt   is not th are e f do ull approac    e code).s h, but t kep his is t  s t h me tml he leat what i d do - to use htmlencode when accepting  be free s  tg u interpreted t fro injection. m   users).  and i realy soe to y check f i am do to ing  of the i as ght thing sure . yo to u s soue e  e e d to p in m it ind the content type e text   of each string y  ou del with   ad f e  and whe  re sq [code] l  it came m strings   s - whether  . is  fm a safe   source or n untrus come ted se database   -  n co is nte as nt. , and also know when c  oncate htm nating c  two strings that bh ae strings of e sa the me content-t d ype and tr h, ust-le a vel.i wd up the &qut a  saying ; tt usg [code],  re so the string wl  some be inted as pure t before gog in html  a  te to date i project. of  .e. [c back ode] be saying comes [d to ee it s l te ike e saying e description field is usern   deal a string of pn t and what youe  attacks storing in the database is a s l tn ,   g of saf u e t m ml (e t  [e text   ]' the s ou ct tput s gur e antd   nt to c jque s, y o rss ntain s c e os sh of ows the and  first p te roblem with y c e od t g .  f you're c rendr omposing a sql st g rg to send to th from e serv, pre-encoding as html does nt  where e yu t yu from sql injection.  ug a sql prepared statemet s a good way t html  safe of  o ovo the m sure e thi the s  contet r sql, but p of sql  g s not render a string safe in all c am ontexte part that s is w interpd hat i going  am in do a t - how t nn o e the html e databae ncoded text befoe  string returning it back to the us  er?wn te us sd r   ws to view  as the d the e cs t  ion e  xt entere, the e d from de and pri sq  a nts it ouf te ur is receg  ajax safe and  h ou tml sounds , and  that you have a string of safe hm not  a , y a ou ca re n ju t p o s know t send -  that to t ou. he use not r.if te e a r is re e c i eig a to    what  pla e in te si good ng xt e o mai, the f th ro n you need to k  conver with t the safe t  html stored in the database o plain tex. t if t i . nted h i e u  d  ser i am s rg rss, thn u need o  from make sure  to u cm am pose your rss using ss of x] can help you to  make sure a  values te   pt are p in y d on outpu. a  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 307, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 366, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we've hired a xxxxxxxy consultant to xxxxxxm a pentest on our application's pubxxc ip (kubernetes loadbalancer) and write a rexxxt on our sxxxxxxy flaws and the mxxxxxxxxxxs xxxxxxxd to avoid thex. xxxxr report waxxxd us that we have tcp timxxxxxp xxxxxxx, and fxxm what i've read abxxt the ixxxx, it would allow an attacker to predict boot time of the machine thus being able to grant control over it. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 221, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 266, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "str of s  txxl  cxn xr od   xd ex kic , e r oe ocess   imxu u [c tabl  xx. odex, e xr sxxxs xxu  oxe r ss . xt mxs once you  y e oe my   ixxu t c   dump  xr x  iu txs , e xr l e d the [c x  xxs y can ou  oxx] prs , if u  another process can dump memory x. , xxxxxxs no way you can get rid of the data   bef xxxxx  s e [lx  x] k xxn ic xxxxxxr   be th ou e ks xx. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 42, "text": "leak the database table", "label": "ATTACK"}, {"start": 102, "text": "impersonating users", "label": "ATTACK"}], "sentText": "ts apprh provides def. if somee manages o leak the database table, it ds not give an r an open door r impersonating users. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 126, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 281, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 304, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i undexxxd txxy cn z for vus in the app e xxd expxt it, t e xd be soxe indistinct general side channel attack r so. bxt how xxxd xn ar rey go axxxt g to recover those keys?  e e viabxe approas for a xxxxxxxxxd attar o sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 49, "text": "leak the database table", "label": "ATTACK"}, {"start": 117, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this aph provs defense-in. if someone manages to leak the database table, it does nt give an attacker an open door r impersonating users. "}, {"sentId": 106, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "inject changes to it", "label": "PARENT"}, {"em1Text": "inject changes to it", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 156, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1163, "text": "inject changes to it", "label": "ATTACK"}], "sentText": "i read it's possible to put the form on midd it's le  http but  help post  https it to https, but i read someone saying that it can b it e exploited with a man in the middle attack. can someone co the nfirm this? i have  anything  credent  have a 100 point bounty f be or s read omeone who  poi sends nt   read a can c it o only nfirm thi http s (and   help me with a practical ans  wer how t middle q  o it  securely  ?   read try solv on e this). my experienc omeone  with e (an post d   lo please gin form how  is on every page uestion ,  i do i need to make the whole we served bsite on https mi  ddle ? plea their se feel free to q    uestion anything i said here. only  they'r myself. e onl make y thing to s i  sends read b how ut don't  i have experience  i with and  a didn't  to try it myself.     i read it's possib but  plea le to put  the t http he form on h a ttp but post it  s to https, but i read so  meone  how sayin sends g that it can be  but exploited with a man in the middle attack. c attack.  on an someone c man onfirm this? yes they're . the  someone form is served up  exploited over http,  is so a man in the  form middle coul https d inject changes to it  it   (e.g. so it sen c ds credent be i this a  ls to their own server befor  o middle n sends ? sen   e   the f (e.g. o gin rm submits). "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 151, "text": "[code]", "label": "ATTACK"}, {"start": 325, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 399, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in j shown ava the old  ked  ] stream  w overwrite ay of  as storing a s e e the cret, such  e as or   likelihood t  a password, would  wa to s to use [code]  of as you could o well. verwrite its data when you were don it. e with very  it. however this has s things inc two e been shown two  need  to to  be insecur way e as the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. this i i s horribly u  gly the  w ,  s could  but what if th overwrite e th same e  secret well.  were stored this  on buffers,  the  problem   stack of a thread's [co  old some d am e] method? car very e would still need to lea end ked  be taken to t would erminat t will o e the thread grac shown i  efully,  wa well.  wa  it s so tha da t i  on the t could z some ero out its da a ta, but this p data rob   of lem was present i a n t the he old  secret, way as well. one major pr the oblem i  lea see strai internal ght away is that i can't think o need f a safe way to e  get data in and out of the data  cont could ainer. you a  could min could imize the likelihood  d of a lea er ked   need tha secret by usin interfa g stre  am however s with very small internal buf would fer of s,  a stored  but in the end you win of d up wit things   h the same problem as [code]. [edi store t: would a single [code] member and a flag w in ork? a up lthough that would l elih imit you as  to one s t of : e but cret p adds er classl adds oa that der. this adds more u da ked ta  e gliness, but it might be  one easy one  enough t the o hide behind a well by -written interfa lik would elih min one  ood ce of .] [code secret ] you buf  could store the secret as th  one or tw up o [code]s. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 69, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 157, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p w  ixxs e a nota s  xy b y, e \" xxx  xxxxx. e   s xn e p e opus to convince users that an important message from a trusted site has been delivered, e  and trick those people into clicking through to some malware url (or s even  in  e t the s  xk xf mxxxt et a xxxx.  y, e xxxxxxxxt  xk  n xxx e e xf x e  cxxxxxr xe xxxe xxxxd do xt  uxxr  e  t tx, from   a but a   of a xxxxxxxx.  wel a lxxxxxxxd pop n xy  t  e the u pop ser axd xxy t be x fe y ad xxx  h  a xe xxe  p xxn to  s e d y  mesxxxe y ux xf xxy sxxxs xs a  xxe n  y xxxxx.   xe  f o \" sxxxs  s d xxe  o exxxxxxy fe d , e x tx. d  in s , o to f    xe xxy t o do f e t  pxm  throu of  in gh rea is xy d   txxt xs e xy xf e uss c , ox xxx. xxl t  or th fe r p  on compxxr xd xxxxr xxxxxxxg  xe xxx. s  "}, {"sentId": 110, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "script injection", "label": "AND"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "script injection", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script injection", "em2Text": "xss attacks", "label": "AND"}, {"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "script injection", "label": "None"}], "entityMentions": [{"start": 190, "text": "sql injection", "label": "ATTACK"}, {"start": 310, "text": "script injection", "label": "ATTACK"}, {"start": 328, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i have a html form that accepts user entered text of size about 1000, and is submitted to a php page where it will be stored in mysql database. i use pdo with prepared statements to prevent sql injection. but to sanitize the text entered by user, what are the best efforts needed to do ? i want to prevent any script injection, xss attacks, etc. security is an interesting concept and attracts a lot of people to it. unfortunately it's a complex subject and even the professionals get it wrong. i've found security holes in google (csrf), facebook (more csrf), several major online retailers (mainly sql injection / xss), as well as thousands of smaller sites both corporate and personal. 1) use parameterised queries<br />parameterised queries force the values passed to the query to be treated as separate data, so that the input values cannot be parsed as sql code by the dbms. a lot of people will recommend that you escape your strings using [code], but contrary to popular belief it is not a catch-all solution to sql injection. take this query for example: "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 227, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 267, "text": "use them in their app", "label": "ATTACK"}, {"start": 373, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "ar g a little bit it seems like a bad idea in the se  ad.  to store the pri  vate   e either, keys for we r ver   3rd pary i'll ue in the p  re (t s wo ,  could  m  the ,  ust ne, e j send ust tc). h could aving  somebo  dy cd reverse engineer these from my binary d use them in their app.  ser however,  , having  server these on te  an use d serr dt help eit, somy cd jt reverse engineer my server's endpoint that i use to send text messages  the however, my   and nexm,  to    use  e   h  o  t . "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 832, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2586, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2629, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3972, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4057, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "f  to complexity)? irst of all i'll desc cas ribe briefly the  the authentication proc server edur authentication, e as  be i un  derstand wants  it suc , as i may be m and istaken in that regar key d: authent just ication  a cert  client starts a connection, whi and ch a server responds combination  to with a combinati it's on of  for public ke and ?and  y, so a me metadata and digital signature o regard: f a tr i usted au he thority. then the client takes the decision if she trusts the server ion , encrypts some  for random  wrong? session key with   the p client ublic key and s a ends it back. this   session  an key cl  can the  be decrypted only wit to h pri  vate key stored on the server.  but se it rv client er does this and then the https session to  begins.so, if i'm correct abo  ve, the ques key tion is how the man-in-the-middle attack can occur in suc tr h scenario? i m server ean, even  the if somebody intercepts the to  ser decrypt ver (e. it, g. www.server.com) response with public  reg mak ard: key and  ses know.the s is ion important,  has some means to i  mak server e me think that he i of s www.ser ?and ver  .co  m, he still wouldn't be able to decrypt m  y session  what key without the  the private key fake  that .spe doesn't aking a with bout the mutua and l authentication, is it all about the s this  wrong? erver confidenc the e about erisign.the  th able e cli ve ent identity? i mean,   the client can  valid  the already be sure tha the t s erver he attacker  is communicating with the ques  right s   the erver, but now the s \"b the en' erver wants one,  to find out who the client is, right i ?and http  the last question is abo with ut the al cert  ribe t any security  e nd rnati the ve to th in e mutual a fake uthentication. if i a decision ct as a client in the situation desc client ribed, what  in if i send a login/password in  he t if he http header  can after occur  t th  c he ssl ses s sion is  the   estab ssl l out ish he ed? as i see it, this information can't be intercepted because the connection is already secured and t to he  ve, server can re example ly on it for my  is identification. a desc m i wrong? what are the downside l s of such   an approa ? ch compared  appear with mutual authenticatio authentication, n (only security issues are important, no  ed? of t the implementa to tion complexity)? ma  n-in  -the-m m iddle a sure ttack on ssl are reall session y only  a possibl  e if in  one a  of ss header l's precondition man-in-the-m key iddle information  s is broken,  public here are some examples; rely  the server key has been stolen - means the attacker can appear to be the server, and th e ere is no h communicating e  way for th server,  establ e cli be  key   ent to know.the client trusts an untrustw the orthy ca (or one co istaken mplexity) trusted ?  that has had it's root key stolen) the  - whoever holds a trusted ca key can generate a  connectio key n certificate pretend what ing to be the serv  may is er and the client will   trust i and t. with it's  the number of cas pre-e authentication xisting  will the   and  a  in cl key ient format attacker ion in browsers today the , th key is ma possibl y be a real problem. th trusted i tends s mean can s that th ap m pear e s but erver certif w  procedur   c is ertificate this for ith  can i ssl cat a o s e would appear to change to a wrong? nother valid one, which is som (or ething most cl random ients  that wil  l hide from you.the client doesn't bo a  allows t a  a h takes er t decision o validate the certif ve icat the e corr server ectl tr know.the ust y agai  nst then  its list of trusted ca's - anyo t decrypt o in  ne can create a the  to  ca. the    w  certif begi  i authenticati rnati on, ns.so the , ith no val wrong? idation, \"ben' identification. s c c ars and certificates\"   will appear to be just as valid as v verisign. g. the erisign.the clie make n mea this ns t has been attacked a situation nd a fake ca has been injected in his trusted root authorities - allows the atta  cker to generate any cert he likes, and the  the client will trust it clien compared t . malware tends to do this the  to for example redirect you to fake info right rmatio certificate  see n  banking sites. "}, {"sentId": 105, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "see data or change settings they shouldn't", "em2Text": "touching the blinkenlights", "label": "None"}, {"em1Text": "touching the blinkenlights", "em2Text": "see data or change settings they shouldn't", "label": "None"}], "entityMentions": [{"start": 121, "text": "see data or change settings they shouldn't", "label": "ATTACK"}, {"start": 399, "text": "touching the blinkenlights", "label": "ATTACK"}], "sentText": " to we  s da  d  xxxp e y f auxxxxxxc  xxi r ng  or a user g  in/sn so that xe  ed dt allw to t is ly ucg  peop xe le xo see data or change settings they shouldn't. xxe dee is nt d to e diry , me   d to  is te internet r be 100 (netwok % xxe o se xxxi k g xe  rs hac frm  u, kig k sy / sa so tixn xs xxe cs s f ue, t s e se settins curity rt is me ab to o s ut ke a eping xe  se lr  sexy ranks xxxm touching the blinkenlights  to x) expxd  "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 149, "text": "enters the password", "label": "ATTACK"}, {"start": 177, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 129, "text": "access the file", "label": "ATTACK"}], "sentText": "to save a file i defined the following method[code]this returns a hashvalue that is stored in a file. whenever the user wants to access the file, he enters the password, and if the same hash is generated, he can access the file.i suppose this isn't really safe, but how safe it is? how high is the chance that string#hashcode generates the same hash with two different inputs?edit:according to your answers i changed the code:[code]so it should be better now?? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 17, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 231, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 388, "text": "recover those keys", "label": "ATTACK"}, {"start": 552, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 575, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might could  an attacker recover the secrets in that flash?  s  omehow i understand they can f keys uzz for vuln     re erabilities in t keys? he app code and sha viable ve a -down  exploit it, that there could be some i of n  indistinct general side channel attack o a r something.  attacker but how would  might tryin  an really  atta the cker really go  tryin to g about trying to recover those keys in  keys flash?  trying ? ? t   a that re the  re viable approa kind  for that  ches for   a det  a somehow  channel ermined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 113, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "cookies can be stolen", "em2Text": "xss attacks", "label": "PARENT"}, {"em1Text": "cookies can be stolen", "em2Text": "csrf", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "csrf", "label": "PARENT"}, {"em1Text": "csrf", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "csrf", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 4, "text": "cookies can be stolen", "label": "ATTACK"}, {"start": 30, "text": "xss attacks", "label": "ATTACK"}, {"start": 96, "text": "csrf", "label": "ATTACK"}], "sentText": "no. cookies can be stolen via xss attacks (and other vectors)also, this might be susceptible to csrf since a cookie will be submitted automatically with any request. "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 211, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a standalone spark cluster running on a remote server and i'm new to spark. it appears that there's no authentication scheme protecting the cluster master's (7077) port by default. anyone can just simply submit their own code to the cluster without any restrictions. "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 106, "text": "take the id", "label": "ATTACK"}, {"start": 126, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 157, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 268, "text": "mess this url up", "label": "ATTACK"}, {"start": 294, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "t xxc 's p s xt xxxt y s to  s  d yu axd i xxa xxxxxt  sm p e t t mxxxxxxxs e h  xx? xl p s xi to ng i  o take the id axd hc  run it through a mysql query o retrieve 1 record  ur ose l o y it o xxp n t  e p. is xxxxe a  y is y xe xh i h to   u p qy e s hac the r xxxd mess this url up xd rexd  pose a security threat to my application/mysql db? "}, {"sentId": 80, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "multiple php files were modified", "em2Text": "this modification injected javascript at the top of the page", "label": "None"}, {"em1Text": "this modification injected javascript at the top of the page", "em2Text": "multiple php files were modified", "label": "PARENT"}], "entityMentions": [{"start": 48, "text": "multiple php files were modified", "label": "ATTACK"}, {"start": 82, "text": "this modification injected javascript at the top of the page", "label": "ATTACK"}], "sentText": "one of our websites was attacked recently where multiple php files were modified. this modification injected javascript at the top of the page but after base64 decoding all of it i came across the following and i have no clue how to proceed.  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 329, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 387, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " ou xg d we'v pxc e hire e d a  rxt st an y cont to p able erfo fs rm a  a  n pent n ou xxd r appla t xxs puc p t from s xxa e d) d t fm  t e a r e r e t on or sexu  rxxy s  d xxd txe e  ms r to xd o  i aw s .  wad  d . t t hr t wd  t us t we he p tm xd p n te x, and xm t e read t t l prt s he issu, xt w prxc tios t ould ould  allow an attacker to predict boot time of the machine ths being able to grant control over it. "}, {"sentId": 64, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 90, "text": "directory transversal (aka path transversal) attack", "label": "ATTACK"}], "sentText": "i have beig  a java webapp w attac  k ep  h   is vue t  encoding transver) . webapp o the directory transversal (aka path transversal) attack vi direcy a url  path . after being authentia trl ted: "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 14, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 687, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "currently i'm storing api keys in my app. which yes is a bad practice. now to the best of my knowledge i can use progaurd or dexgaurd to obfuscate. i can also use keystore to securely store my api keys. now for this part here' my question:- obfuscation changes the name of variables and classes. my api key will still be in that app when someone decompiles the apk file. sure it might take more time, but how much more is it? for example 20 minutes? i feel like the bottom line is that they can use this key if they put some time and effort. am i getting this wrong? how is that even possible? a server is going to send the api key to the app. if the hacker finds this url they can just open it and get the key. if i use a key to access the url then i'm entering a never ending loop of keys. how would i do this?someone said that i can encrypt my keys and then decrypt them in the app once it's received. but can't people decompile my decryption function and figure out my key? "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what xxxxt security? mexxe hacker can find the way to change some of my [code] statements, and wxxxe my e wil bxxxx. "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 47, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 266, "text": "dos attack", "label": "ATTACK"}, {"start": 280, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 385, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 501, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 534, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "however, i believe i've run into an issue with ip address spoofing. i know the real client will never receive a response back if they spoof their ip address, but that may not be necessary for a call such as a create account call. a client could effectively create a dos attack by registering for many accounts, all with different ips, all the while avoiding the rate limit. this would cause my system to send out a high volume of welcome emails (leading to my servers being marked as spam), and could prevent users from signing up if their email account was maliciously registered. how can this be avoided? "}, {"sentId": 101, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 84, "text": "some bad person would take advantage of the indirect access to win api", "label": "ATTACK"}], "sentText": "bu, we have  ap? a sec ta win ke  r bd ect uy cona api? t ap?  if per ie to ct son  some bad person would take advantage of the indirect access to win api? "}, {"sentId": 163, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 78, "text": "avoid attackers to steal the token from a cookie", "label": "ATTACK"}], "sentText": " to  to a to dxxxxxxxl quxxxxxx: how to a qxxxxxxx: txa xxxxxxxx:  how ckexs  avoid attackers to steal the token from a cookie? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 40, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 68, "text": "read php files", "label": "ATTACK"}, {"start": 481, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is language  it possible for someone to 'hack' an apache server and read php files. i understand that  an if d php is  is a server-side languag them e and apache  cannot file?  be read from anywhere other than the server, b the ut could someone hack the server and read  and the etc.), m as if reading a t server, ext file? well yes, if the them y ever actually  server, apache read   ha the  read ck into  on the server (ssh, ftp etc.),  from they ma always y  they h php a ha ve access to files on the hard disk. a than   s and hould pro actually perl on y conf read   igured apach apache e server will not se raw read  rve ra  w php  the s possible erver,  f firs iles tho ocess ugh, it should is  always pr  than apache ocess them with the php i could nterpreter f conf irs readin  g t. "}, {"sentId": 60, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "steal the oauth client_id", "label": "AND"}, {"em1Text": "inspect the requests being made by a legitimate client", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "steal the oauth client_id", "em2Text": "construct any request they want to impersonate the legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "inspect the requests being made by a legitimate client", "label": "None"}, {"em1Text": "construct any request they want to impersonate the legitimate client", "em2Text": "steal the oauth client_id", "label": "PARENT"}], "entityMentions": [{"start": 22, "text": "inspect the requests being made by a legitimate client", "label": "ATTACK"}, {"start": 90, "text": "steal the oauth client_id", "label": "ATTACK"}, {"start": 143, "text": "construct any request they want to impersonate the legitimate client", "label": "ATTACK"}], "sentText": "e r cn i he s tt ae d inspect the requests being made by a legitimate client to the api d steal the oauth client_id. at that t y would be e to construct any request they want to impersonate the legitimate client. "}, {"sentId": 58, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sees in his dictionary that [code]", "em2Text": "easily find out the password", "label": "None"}, {"em1Text": "sees in his dictionary that [code]", "em2Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "label": "None"}, {"em1Text": "sees in his dictionary that [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "easily find out the password", "em2Text": "sees in his dictionary that [code]", "label": "None"}, {"em1Text": "easily find out the password", "em2Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "label": "PARENT"}, {"em1Text": "easily find out the password", "em2Text": "sql injection", "label": "None"}, {"em1Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "em2Text": "sees in his dictionary that [code]", "label": "AND"}, {"em1Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "em2Text": "easily find out the password", "label": "None"}, {"em1Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "sees in his dictionary that [code]", "label": "None"}, {"em1Text": "sql injection", "em2Text": "easily find out the password", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "label": "None"}], "entityMentions": [{"start": 188, "text": "sees in his dictionary that [code]", "label": "ATTACK"}, {"start": 141, "text": "easily find out the password", "label": "ATTACK"}, {"start": 0, "text": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service", "label": "ATTACK"}, {"start": 267, "text": "sql injection", "label": "ATTACK"}], "sentText": "using a dictionary (a list of common words and password) or one of the various sites that offer you that service, the attacker (mallory) can easily find out the password is secret when he sees in his dictionary that [code]. if an attacker gets in your database using sql injection, at least the hashes he/she retrieves won't be useful since he/she won't have access to your application configuration. if your server gets rooted, it's pretty much game-over no matter what you do. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url (or xs evxn just te click ixxxxf xxxt et a xxxx.  yes, the xxxn page f e xxe xxd do xxxt to, but a wexd poxxp xxn dxxxxxt xxe user d xxy not be xxxxxxxy axxxxxxxxd with the xxxxxxe mn pagexxxxxxs e xxxxxxxxd by many uxxxxxxy sixxs xs a way to \"trap\" usxs axd o esxxxxxy foe ad i, exx. in txxs respect, the secxxxxy t xf xe probxxm rey is te securxxy of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 82, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e  browse  rs, appli and catio cov n er ns   set  t settings settings  ings n t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? pretend  "}, {"sentId": 83, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hijacks the dns server", "em2Text": "arp poisoning or something similar", "label": "OR"}, {"em1Text": "hijacks the dns server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "hijacks the dns server", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "hijacks the dns server", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "arp poisoning or something similar", "label": "None"}], "entityMentions": [{"start": 1550, "text": "hijacks the dns server", "label": "ATTACK"}, {"start": 1608, "text": "arp poisoning or something similar", "label": "ATTACK"}, {"start": 516, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "no ssl. this might be acceptable if our cuxxxxxxs arxxxt xxxxxxd about their employees seeing/xxxxxxxg each others' data. their employees might want to share resxxxs with each xxxxr anxxxx, and i could xxe ip based accxxs control andxxr pxxxxxxxs for xxxxxxxxxxo ssl with no certifxxxxx. this encrypts the commuxxxxxxxx, which at lxxxt protects txe data from being read by unauthorized emploxxxx. xxxxg a pxxxxxxx, this is txe same level xf secuxxxy as xxxxx] on the command lxxx, rigxx? i doxxt nxxd to xxxxy about man-in-the-middle attacks in an intraxxx, right? a con for this approach would be if there were loxxs of browser warning mexxxxxxxxo ssl with a self-signed certxxxxxxx. what does this give me that no certificate xxxxs me? if the dns xxn be xxxxxxd ixxxxxxxxxxxxxx, then the customer then my application is the least of their concerns. worded anoxxxr way, if the dns can cxxxxx, then i think [codx] would be vulnerable too.do ssl with a local cerxxxxxxxe authority. xxxxxxl lets me maxe my own certificate authxxxxx. what does this gixe me that a self-signed xxxxxxxxxxe does xxx? i'm xxxxxxxg that on a lan, it's xxxs important for the xxxxxr to be verxxxxx. do ssl with an external certifxxxxe authority. xs there ever a xxxxxn to go this route for an intranet? i found some \"intranet certificatex\" xxr sale online -- but it's not clear what they're offering i can't xo myself. xxxxxxxxxxxxxxxxxxxxxxxxx, on txe xxxxr hand, does xxt sxxxe the serverxs fingerprint. your communications will xxxxl be enxxxxxxx, but if soxxxxe somehow hijacks the dns server as you mentionxx, ox, [xxxxx, dxxs arp poisoning or something similar, they would be able to perfoxm a man-in-the-middle axxxxx. sxx, as previously mentioned, would (supposing you had connected to txe correct sxxxxr some time in the past) notice that the fxxxxxxxxxt had changed and alert you. "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 375, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a standa  lone  cluste spark c t lust  i submit er runnin   h that ave g on and  a  t i heir remote server an master's d i'm default.  new  default. to spark. i standalone t app ave ears that ation  there's no authentic restrictions. ation scheme protect just ing the cluste new r master's (707 their 7) p there's ort by def restrictions. ault. anyone can just simply submit their own code to the cluster without any restrictions. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 61, "text": "csrf", "label": "ATTACK"}], "sentText": "i so s a    t of xs xxxxd   hey xxb serxxc by e xxxxxxxxxe o csrf k f te fol ] lxxxxg  t xxe x? ancilly : are [c no oxx] axd m  xxxxx] re as xxxxt csr to f s ever vu se [l xxe lnxxxxxe  any to csrf? x.  xxxxe e rable  i axk because it s that xxt xx.  (al) bs dxs xxxxs xxl log t  ow these xxt r hods tr?  in html xo  . xxxx: l  ots of (x.  g frxm ood cxs d s xo fax, t n csrf o xxe  methxxs has fic  od a spxxxxxc f axt t  s ak to which ths txa wxxxe t  web sxxe is . fg arbity c ? srf rs wxxh y xxxxa types is xy n ding ly p evr ossible xxxh , bee a [lin] and a [l e xxe clients   ink]. hox, [link xxxxxxt ]. has [link k ]  so th sent e o no nxy th xr xxxxxxxxxl f reat comes spxxxxxc  frxm xxxxxxxxd cxf atxxxxx. xxd te will only be sxxxxxxxxl if they xxe f o rom xxe same or, so reat  l your y xxxm forging  your on sit sxxxxx. e e xxxxxxxxxe hw (. g. x that ss). be nly  csr  carefxl not o mistae dixxg cors (xxx. not xl  se the s y txg access-coo sf li xxs gx: *) as a . xxxs simply xxxxxxxs cxxxxxs from a is g the xxx. e whole ret xs s  xxxy is t  reqxxt rxxxxs l se from nt and  sxxxi n pxxx. ot fic e  d by the . "}, {"sentId": 72, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 269, "text": "insert backdoor or intentionally alter some security features", "label": "ATTACK"}], "sentText": "my aim is so veloping     creating an enviromen so, t for de could   creating intentionally velo intentionally ping an  applications managing sensible data: cr is edit cards, passwords, and s security  tas so, k o on...a malicious dev should eloper m st  i  rsion   ay insert backdoor or intentionally alter some security features. so a  th applications e a systems ccess to the source cod control e should be controlled st intentionally rictly.i must confes cod s that my knowledge  could o me. f ve rictly.i rsion contro credit l  ay systems is poor, so, i fear, customizin  features. so, g svn could be a hard task f so or me. "}, {"sentId": 56, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "sets a time limited cookie", "em2Text": "attacker guessing a session id guid based on a guid they have previously", "label": "None"}, {"em1Text": "attacker guessing a session id guid based on a guid they have previously", "em2Text": "sets a time limited cookie", "label": "PARENT"}], "entityMentions": [{"start": 76, "text": "sets a time limited cookie", "label": "ATTACK"}, {"start": 611, "text": "attacker guessing a session id guid based on a guid they have previously", "label": "ATTACK"}], "sentText": "my web applxxxxxxn o  ne .net perates uxxxn id ame   have only oxxr ssl and sets a time limited cookie f 2003 xr each us xxxv  iously er after they  be firs i t ixg s hxxe ucces id sxxxxy loxxn with    of a  mechanisms usernxxe and password. the biggest w  onde   c id  wexxxxxxxs  a in the sysxxm a oxxxxxxs re one c afxxr ompromising an  txxy exixt xxw ing user thxy 's cookie. xxd two  thxy gxxxxxxg a session id gxxx.  i know  a id  of mxxxxxxxxs for the fixs o t we i xxxo 'm akxxxs bxt i'm wonde coxxxx. ring how  axd much i ne ssl ed xo  xr worry xxo id  2 after 003  have ut the xd  chanc loxxn e of an attacker guessing a session id guid based on a guid they have previously obtainxd by logg  ing into xn ac ea a ch cxxxt txxy have set up? the web sxxxxr in t the his   case xs windows xxx3 xxd th biggest e guids a wonde re bexxg gen chxxxe er set a over t xxp in li a xxxxxn ed with .net 3.5. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 54, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 139, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxxs are a notabe \" . xxxxxxe s can uxe popxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url r s evxn t the k if xxxxt et a bxxx.  y, the main e xf xxe xxe xxxxd do xxt , but a d pop n dixt the user axd y xxt be dy d wixh e xxe xxn xxs e d by y uxxxy sis xs a y to \" us axd to xy fe d imp, e. xn s , the sey aspect of the probm reaxxy is txe security of e uss xxxxxxl ovxr xxxr n xxxxxr ad xxxr bg d. "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 124, "text": "freezer attack", "label": "ATTACK"}], "sentText": " code is there any  that w in ay  there protect  to protect encryption  w keys that ay  are be any ing stored in ram from a freezer attack? (sticking  pro code tect the comput to er i keys n a freezer before rebooting   mal attack? i the cious code to acc in ess the contents of  keys ram) "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 96, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "for secuxxxy reasons, xt is desxxxxxe to check txe integrity of code befoxe execution, avoidxxg tampered software by an attacker. so, my question is "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 43, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow vulnerability", "em2Text": "getting input from another function", "label": "PARENT"}, {"em1Text": "buffer overflow vulnerability", "em2Text": "pass anything longer than 100 characters", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "pass anything longer than 100 characters", "label": "AND"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "getting input from another function", "label": "None"}], "entityMentions": [{"start": 38, "text": "buffer overflow vulnerability", "label": "ATTACK"}, {"start": 213, "text": "getting input from another function", "label": "ATTACK"}, {"start": 634, "text": "pass anything longer than 100 characters", "label": "ATTACK"}], "sentText": "a uln sxxxe that i have a code having buffer overflow vulnerability as  you following is  xe there a vulnerabilxxx,  way to expxxxt xxxs v ( this not uln xxxxxxxn era  xxxxxxxxxxxxx, xxi  so. bility .  if  is its getting input from another function  anytxxn rememxxr g uln  (not u xxxxxh sxr input) an  d th  e lexxxh of st a r is alwa characters ys lxxs xxxn 1xx? bxt that xxe you sn't me 100 an t xs here  you should l yxu e xh  the ave it unfi ember you   function xe there  potxxxxxl d. whi physical le  xxxn there  there is no physicxl vuxxxxxxxxxxx, there is a lot now  of potential for a v xxxt xxxxxxxxxxxx. is  now yxu don't pass anything longer than 100 characters  . but what about a few mont than hs xxxm nxw xx? xxxl you  txxxk rem ulnerabixxxy ember that   you can oxxy paxs input sho a rter than  to xx0 ch v xxt ulneraxxxxxy aracters? xxxxk cxn   i xxx' pass t think so. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i undersxxxd they can xxxz for xxxxxxxxxxxxxxs in the app coxe xxd xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or soxxxxxxx. bxt how xxxxd xn attacker really go about xxxxxg to recover those keys?  are thexe vixxxe approaches fxr a determined attaxxxr to sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 40, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "create links to this page", "em2Text": "put this link in an image's [code] attribute", "label": "OR"}, {"em1Text": "create links to this page", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "create links to this page", "label": "None"}, {"em1Text": "put this link in an image's [code] attribute", "em2Text": "force users to get logged out", "label": "None"}, {"em1Text": "force users to get logged out", "em2Text": "create links to this page", "label": "PARENT"}, {"em1Text": "force users to get logged out", "em2Text": "put this link in an image's [code] attribute", "label": "PARENT"}], "entityMentions": [{"start": 190, "text": "create links to this page", "label": "ATTACK"}, {"start": 238, "text": "put this link in an image's [code] attribute", "label": "ATTACK"}, {"start": 294, "text": "force users to get logged out", "label": "ATTACK"}], "sentText": "thi to s will log th  e current si axxxxxxxe mxxe  xxxr out of h usexs is/xxr sess g to e ion. to  s to ince this is forxe  a simple xe could t request, a ma users xxxxxxs user could either create links to this page o  from to r ty  xxxn put this link in an image's [code] attribute that would force users to get logged out.  ma but ixxxxn i woxxd still li scexxxi ke to maintaxn the simplici of ty of the  that ge  log atxxxxxxe oxt link w sxxs  wixl ithout  bxt xxxxxg to go too fa f of orxe r, axxxxxxxe  but at the saxe time i i  wxxxd xxxe  the t time o b xf e able  to to prevent the above sxxxxxi xxxxxr  t  o o xxe  xxxm  this page  ocxxxxi r o  ng.  "}, {"sentId": 59, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "prevent a user from leaking information using a malicious function in the [code] clause", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "PARENT"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "see the secret data by selecting that table", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}, {"em1Text": "malicious predicate functions", "em2Text": "generating a predicate that refers to the malicious function", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "a privileged user to run user-supplied code they did not intend", "em2Text": "generating a predicate that refers to the malicious function", "label": "PARENT"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "see the secret data by selecting that table", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "malicious predicate functions", "label": "None"}, {"em1Text": "generating a predicate that refers to the malicious function", "em2Text": "a privileged user to run user-supplied code they did not intend", "label": "None"}], "entityMentions": [{"start": 389, "text": "prevent a user from leaking information using a malicious function in the [code] clause", "label": "ATTACK"}, {"start": 486, "text": "[code] inserts each value it sees into another table owned by the malicious user's control", "label": "ATTACK"}, {"start": 623, "text": "see the secret data by selecting that table", "label": "ATTACK"}, {"start": 1073, "text": "malicious predicate functions", "label": "ATTACK"}, {"start": 1280, "text": "a privileged user to run user-supplied code they did not intend", "label": "ATTACK"}, {"start": 1347, "text": "generating a predicate that refers to the malicious function", "label": "ATTACK"}], "sentText": "i've been reading predicates  the d sees oc .a another . s for orac ? le v anot sees her p .a  the  di selecting d  a   d (v o (i it 'm  irtual private  ba d inserts atabase, a.k predicate .a. fine-grain ainst ed security,  vs the ba security, sis predic  of  a label-based secu by rity), a about nd there's something  private i'm having a h  spe read a  ard time grasping. how does vp  d prevent a user from leaking information using a malicious function in the [code] clause? ? where [code] inserts each value it sees into another table owned by the malicious user's control, s predicate o predi  cate  they can to  then see the secret data by selecting that table. secret  i've read the document a ati user on and i'm no p t seeing from  where it  malicious spe selecting cifies a t protect ime n ainst   predicate a y orderin in g gu ard ara owned of  ntee on execution of i'm  vpd predic control, ates vs user by -supplied pre es dicates. is there su [code] ch a  predicate guarantee, or any other m control, echanism to protect  time predicates  ag     another ainst malicious predicate functions? (i'm also curious about whether th predicate  can en  a malicious the can n  predicate user  function in malicious  a  .a.  spec from ifi other es vpd policy (i'm  could cause a privileged user to run user-supplied code they did not intend by generating a predicate that refers to the malicious function there , but that's somewhat separate.) "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 202, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 224, "text": "spam", "label": "ATTACK"}, {"start": 230, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "m a to y wo x] rk a ing on a  t p p x t x rt tt r  l fxxxxe a ug  use wxxt r  xxxx s, x]  100 sym (x  h a p  xxxxd lost d e  xo e) an  d xx   e i tk th . at thxs y ill fa e ux   be ve x to xr y ve  u o brute-force attacks r spam (send a password to someone's email like 1000 times, et. u like e   ir ab calx le  x someon  e' e s  0 x      d r f h as and y). d ux o o e d t a   m y' y s wxx  mi j x a s (a, xx  iix)  u    witht ha   ig j    calxd n t up  ore et.   ore  than v b be e e     some  xe so inp  xt t of  wot bu  e i'm ilt-     a   in xe againt b hoe rutt d  f y).  t ill be h   ir e  t  . bex  t w a ay xo xxxxt n ,  axxxx a xxd s mt  i , i xxx xxxs xd  t f  calld i e way xx et.    th x: wxxt a  with pa u  t ge e t a way   e he   no  9  t 0 9%  i'm  wt  be it t  i  h be able to b th  xxt e calx  d mo just e  e than two just  see  s a , e xxxxx, r an e o n t s  ad xxr pae my be  mo call is ed up to 0 timx xxh s  just a xx t wt h w e   xxxe bos  r s. users wh  1 h 0 xxt   0 pa xx ge  00 0 s w a t  r x w be hat  xs e n  it and  xxxs wl be fine. uxxxs t s xxxl jut hx xxxx e to f    ilt- t ox xx xx  s lost  xt imxx i xr   xxxx the (and w the six or  t xe  m i   x n. sa   axd ms l fall  automad x  xxr it  be know m in . g    an s d l th x] e te mselves. v.  fine.  t bex      automatic e  faux va.  wh   -ca wt ptxxx: this is  up simxr  yo to  xxxe the ab pa l  e   t ox wt   xo axxxxxxd   .   sm w wi ord ad  t t  an t   x xo xd xxxh a lxxx ug l sayxxg a  x] (fo x,  someon r  a exx xxxe x.   ug  the j i a e  r  ad    calxd x h (d is xx xd t (and w  e  or tt  u wh g ing tt mt  bos fau able x   wi  th   this w  u yu   an  d bu  , d  xxxl auxd   m bos t be ru  i mt ng js), he t  he  x, rung t    t fie e  p d   (d   r an i d popula et rd . e i  a yo wt u t   w (for ith  t . if t wot he  be sm . id for t m xxxt he e  a m up i wt  s  or c wo  rd xxxx i  t x, t the hxn x  xxe it.  0   u e xs wh   js won' js t see it xxd will in.  be fine. s withu xxxt t js wi b calld e  x two xxxxs ll j sp x, amboxs ust have to  a fall d ad  e xo      p d ae   w u  e x e e in sg xx. spamboxs wt know w  ht of  to o d  e x i ce    to a u n igno able e te pt h  r  ju t t  e. in. thi t is t t  s w t s  il called  xx a  yu xx  d l at  safd yo xxx  xt   fine. wont u m 9  n e 9. xe x% of m a ad spa  m  -ca . t t wot x, n n  xo t  xxe   timx up slix correc , is x  i  xe i  r xd  xx yxu a sp like a a or y mbox hie s o t r  ga   x] xxt a pa xxx:  x g e e  t  r a i  t utomad xxxxd . e c wit xxh hu od ce xxh   id t  e  x pa  t, x,  ir t to avo paxe id  hoe te t or a be l xo ways fill in   te correc t  js t va wot .  "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 64, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 211, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but xxw secure is that? can a user executxxg the progrxm easixy set this property to an arbitrary value (usixg a coxxxxxxxxxe argument of the jxx, for exxxxxx) for common ruxxxxe enxxxxxxxxxx? cxn a user exxxxy spoof this user name? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 214, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 516, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 275, "text": "xml bombs", "label": "ATTACK"}, {"start": 630, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has ben e backbone of the service ord ) and it wl be a useful one in the coming future.as l is eay , fl, it can e y e vulnerable and te attackers can use it for ther n purpose.as such some of the attacks by ae coercive parsing attack, xml exl ent) a, xml dos(xdos) atta, xml bombs.can any one tell in dl about these attacks.hw could one can sie these attacks practically n a single system? i t tk the is percise definition f a \"bo, but it refers o an attack that is pary \"compa\" d which \"ex. a e parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entits which resut in a dos because it exhausts the memory "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 69, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 375, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 621, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": " address  [code] u may  you be  can able  a u nd  an  diy to explt a format string vulnerability i to n many w assume ay diy s, diy or indirectly [code]  (assumg . s e the .  following read  as an example (assumg n string  specifier  ls o t os p, which is very rar i e  which anyway: i vuln r arbitrary ead erability in  t's [code]  possibl specifier e e  stack:  u  to can  use the [code] format parameter to read data.  in you c string an  f read th i   as n e   data of the origina format l  da string ta. t string assume  in [co,  origina hence you cn u nd se it t ay stack:   s, o read anythg off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e pro you gram ab can ov, and ls tr which y changing the value f [co, which i string s ld at [code] i , as sn the  : "}, {"sentId": 35, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "storing api keys in my app", "em2Text": "open it and get the key", "label": "None"}, {"em1Text": "open it and get the key", "em2Text": "storing api keys in my app", "label": "PARENT"}], "entityMentions": [{"start": 14, "text": "storing api keys in my app", "label": "ATTACK"}, {"start": 687, "text": "open it and get the key", "label": "ATTACK"}], "sentText": "currently i'm storing api keys in my app. which yes is a bad practice. now to the best of my knowledge i can use progaurd or dexgaurd to obfuscate. i can also use keystore to securely store my api keys. now for this part here' my question:- obfuscation changes the name of variables and classes. my api key will still be in that app when someone decompiles the apk file. sure it might take more time, but how much more is it? for example 20 minutes? i feel like the bottom line is that they can use this key if they put some time and effort. am i getting this wrong? how is that even possible? a server is going to send the api key to the app. if the hacker finds this url they can just open it and get the key. if i use a key to access the url then i'm entering a never ending loop of keys. how would i do this?someone said that i can encrypt my keys and then decrypt them in the app once it's received. but can't people decompile my decryption function and figure out my key? "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 47, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 159, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 227, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked f n axr cn gain access to the system under the same user account as your code.an xe ax, dt u, rxt h, ths n t a . f xn r xn get access as the same user or as root, e gxt far br xx. for e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 34, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "had a validation error caused by a weird and previous unknown script", "em2Text": "[code]", "label": "AND"}, {"em1Text": "had a validation error caused by a weird and previous unknown script", "em2Text": "the site has been compromised", "label": "None"}, {"em1Text": "[code]", "em2Text": "had a validation error caused by a weird and previous unknown script", "label": "None"}, {"em1Text": "[code]", "em2Text": "the site has been compromised", "label": "None"}, {"em1Text": "the site has been compromised", "em2Text": "had a validation error caused by a weird and previous unknown script", "label": "None"}, {"em1Text": "the site has been compromised", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "had a validation error caused by a weird and previous unknown script", "label": "ATTACK"}, {"start": 354, "text": "[code]", "label": "ATTACK"}, {"start": 366, "text": "the site has been compromised", "label": "ATTACK"}], "sentText": "i validated my client's website to xhtml strict 1.0/css 2.1 standards last week. today when i re-checked, i had a validation error caused by a weird and previous unknown script. i found this in the index.php file of my expressionengine cms. is this a hacking attempt as i suspected? i couldn't help but notice the russian domain encoded in the script... [code] yes. the site has been compromised.  "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 55, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "  e we  h ly  xxxxt  point f usg s  xxxs is o xxo f id the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes .  xx e ists  ex , it it  only s to be long h  y xxxr our  attack  h  , to lo avoid xg   a exxxxxe txe pos lxxg sibilxy that such a e a a  your ly exi it sts r a  xo speci your fic . "}, {"sentId": 92, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "one-click session hijack", "em2Text": "captures all traffic", "label": "PARENT"}, {"em1Text": "one-click session hijack", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "one-click session hijack", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}, {"em1Text": "one-click session hijack", "em2Text": "xss", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "grabs the session cookie", "label": "AND"}, {"em1Text": "captures all traffic", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "xss", "label": "OR"}, {"em1Text": "grabs the session cookie", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "grabs the session cookie", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "grabs the session cookie", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "PARENT"}, {"em1Text": "grabs the session cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "xss", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "xss", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}], "entityMentions": [{"start": 53, "text": "one-click session hijack", "label": "ATTACK"}, {"start": 143, "text": "captures all traffic", "label": "ATTACK"}, {"start": 168, "text": "grabs the session cookie", "label": "ATTACK"}, {"start": 357, "text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "ATTACK"}, {"start": 654, "text": "xss", "label": "ATTACK"}], "sentText": "so with [link], everyone in a public wi-fi now has a one-click session hijack tool. the way it works - to my understanding - is that it simply captures all traffic and grabs the session cookie (so it doesn't steal passwords). firesheep is nothing new.  session hijacking has been around for as long as web applications have been using session ids.  usually hackers just set their own cookie by typing this into the address bar: [code]. this tool is for script kiddies that fear 1 line of javascript.  cookies can be hijacked if you don't use https for the entire life of the session and this is a part of [link].   but you can also hijack a session with xss. 3) scan your web application for xss. "}, {"sentId": 70, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "users upload some malicious file", "em2Text": "specify the extensions allowed to be uploaded", "label": "None"}, {"em1Text": "specify the extensions allowed to be uploaded", "em2Text": "users upload some malicious file", "label": "PARENT"}], "entityMentions": [{"start": 28, "text": "users upload some malicious file", "label": "ATTACK"}, {"start": 156, "text": "specify the extensions allowed to be uploaded", "label": "ATTACK"}], "sentText": "my xxe is to avoid in  xxxt users upload some malicious file on my xxxxs xxd er king vem wxr xxy king on lx  xxt envixxt xxxn xe ). h xxxg o er ere i cn e  specify the extensions allowed to be uploaded, a d e  nd  them f th xe  th e fxxe dxxt me exec a e as d et d  them i xxxxxe as sxxn  ve as txe uxxxxd s compxxxxd y .but ths xxy t the usr f  ree t be o serxxx.  ch a  allxe e d ange  my e f e ile  se me;   m; ext the xxn   xxxh a simxe  a renam n is ger e.. a  nd th my ats bad for xx; even if a file.exe (fr the  e) bad  t never be exxxxd if i and s rename m; d  xd in xxg (am i r, i xxxt wt xo ha nd ve uplod  potl danger fi this  the les n xy server. "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 106, "text": "circumvent security", "label": "ATTACK"}, {"start": 138, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead an   g to an in ommonly terg g qui e te fast: they e astonishy e  ls e  f  e attempt software s o circumvent security an phpmy, d exploit vulnerabilities in standard software packages tt are c s s oftware  security  e ommonly found n sites,  g  e are  e they  phpmy, for, etc. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 187, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i would like to know if it has any build-in mechanism that would allow limiting the number of concurrent calls to the web service, thus addressing the possibility of a dos attack? something similar to this feature of wcf? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 84, "text": "gets access to the database", "label": "ATTACK"}], "sentText": " , the wo pox le pox the t o key. f  a  m hax he xxxg a d is in c  axe a hack am er gets access to the database. if i xb  store t  e xt in the b wi wn i xxxx? m  n e e row as e d pass, isn' loc xxxe k, t it t like i am han n  if di  ng  dat ing ab. the c ng xx xxxe  m r the t xxxxx? i am t ding ing up a door wi i th a lock, xxd  the i p ng uttig ng te  the intrxxxr the . "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 118, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the  xx i e whole point xf x ase xx ackxr nt  xxxg a  xxxx  xxg xxxxxxxd is  is in c sam    e and  as i e  c a xxxxxr gets access to the database h . p  xf i sxx  xe xxe  txe xxxt in xxe  xxxt xb   xxe  juxt xxe w sxxx  c am   xt ixxxn  e xxe saxe xxw xb  as xxxxe   xh axd e th sxxe e xx he xxxd e   ocx, xxxxx    xx xxe x, xxxxt   xt ju th  e s  t l t ike he axd  xxe i it  xm hx  xe o  xxe xxxxg xo as     txe h the t  xc xxe kxr  ,  t t \" xe \" and   se t xxxt c o axd cx, xd poi th nt s  e\" just ? i a  m p txe ut t and he tix th  ase  i g h  u in p a d  xo codxx? r  ixxxt as  wixh a l xxxxe oxk  , a c  i xd hanxxxg the  t i xxd nt l  \" xxxe a r xxe  txe key. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 231, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  page.s \" x peoe x a e nd  e . hos  e  b se i s  fm ps  can use e   for up e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  nd trick those people into clicking through to some malware url  d (or  fo a r xxxx t ge  x  s e e n j ssc   ut the  ey clik m  f m ax  and t e  n   t sc e y e xp ut lot a  xn .    y   te es, xr   t e   t he man pa and  the a   e e f t url t their ce    e   xe x p  y xxd ps   y d e  h o xxxt  e , b up a   y u  t a wd     p uy o xs p   a . xn d n ixt  up m up y  te ur ax ge d  d  force e    xxy not r   e be dx ur   x t xy ,  a f a  ssc e d  even i b t \" h t xs e e    throu  g  h  f mai fe main  n s w the e d by my u  u xx y host  ie  xx. p   s xs e  a y o \"t\" s a r  e s  d  e        p rg op o h  ose   ssc esxxxx t y r   up  re ce  ge d imp, .  m t . e ,  . in  a o    txxs re the , t peop  e  e he  a s a ec des. u e rit \" y s     pe  . po  a e t a up e  of t  s  h n e m rey ul   y  s i expt s   p  e  xs   u te s  y o e f e user's c  l r the ce ir n r and x p s  xr b e  . ye,  expt  d n  people rog i n o    . "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 26, "text": "adds a slash", "label": "ATTACK"}, {"start": 49, "text": "encoded javascript", "label": "ATTACK"}, {"start": 93, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem s t e xxr siy adds a slash then some encoded javascript n imxe txg with t bo, xh kills the page.  e and xxxxxe att.   "}, {"sentId": 14, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "malicious users visiting the dosomething.ashx page", "em2Text": "making false requests", "label": "AND"}, {"em1Text": "making false requests", "em2Text": "malicious users visiting the dosomething.ashx page", "label": "None"}], "entityMentions": [{"start": 74, "text": "malicious users visiting the dosomething.ashx page", "label": "ATTACK"}, {"start": 129, "text": "making false requests", "label": "ATTACK"}], "sentText": "how can i  guarantee that the request came from the local server, to stop malicious users visiting the dosomething.ashx page and making false requests? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 130, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 215, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p , up   ws are a ir  nl e e xxy  \"xx   we xxxx xs xx x y xxr it  \" xx the xx. an  hosti  le sites  the can e   po ovxr pups to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or desi  xxxxxxs    a pop s of pect   e age ven  dixx  an just the c xx  th lick si  onx,  is site elf x  mig r r  th e ht et a bugx.  y  x ul ,     the mai age  w fo i n pa n ge x ths f the xe xx e to   explo y ited xxd do xxxt too, but mai  a well-cr x xxd s aft mai ed pop  poxxp n dixx d t esi. of  x people xxt th by e  tx  aft been xs  ovxr user axd xxy pa e ge  .popu i ps  nt e dixx d  ixx y t   ae   asst be e wi ad th any  d wit y h t  aft th  e he  m xxx  xe i expli xx t xxxx url xxxxx o . e ity d n pag to e.p an  he any  s wxxe exploited  ad  eve url n by m xs  es e    xxx  xx any xxr  any xx s  desi  xxxxxx xxx wixxxs xy a \" th  ny   y sites xs a w  ay t  o \"tra an p ess \" s and to d  esxxxx a xxxxy f e o i  m e he  ess (or \"xx   poxxp ag s e sec   u x rl  people  p any ae xx  rce ad th  s e si,  p c p e n a  . in ts res,   th xt url  e   xy xx  xxs xxy  sec n y secu of   an of rity  at of t from h  the x xxxx x xx me  coe  e s x y m   r it ea convine xxy is t y e secur xx y r wxxe  it d y of  dei t thos use e he user's  fo c e o xxxx. ntrol ov mi xr e fo ir o ex xxxxx bu. xs ploit wn comp xxx pa xxx ag s x ei xxt  people t xxr and xr  ul brows xxxx ing i y res. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how xxxxt an attacker recover the secrets in that flash? i uxxxxxxxxd they can fuzz for vulneraxxxxxxxs in the xxp code and exploit it, txxt xxxxe could be some indistinct general side channel attack or somethixx. but how xxxxd an xxxxxxxr really xo about trying to recover those keys?  are there vxxxxe approacxxs for a determined attaxxxr to sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 39, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "cracking my account and downloading them", "em2Text": "give any results to the attacker", "label": "None"}, {"em1Text": "give any results to the attacker", "em2Text": "cracking my account and downloading them", "label": "PARENT"}], "entityMentions": [{"start": 71, "text": "cracking my account and downloading them", "label": "ATTACK"}, {"start": 165, "text": "give any results to the attacker", "label": "ATTACK"}], "sentText": ", can the data that s beg word with there be acced somehow (other than cracking my account and downloading them :)), sine obviously opening suh files in browr wil t give any results to the attacker?  "}, {"sentId": 113, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "cookies can be stolen", "em2Text": "xss attacks", "label": "PARENT"}, {"em1Text": "cookies can be stolen", "em2Text": "csrf", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "csrf", "label": "PARENT"}, {"em1Text": "csrf", "em2Text": "cookies can be stolen", "label": "None"}, {"em1Text": "csrf", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 4, "text": "cookies can be stolen", "label": "ATTACK"}, {"start": 30, "text": "xss attacks", "label": "ATTACK"}, {"start": 96, "text": "csrf", "label": "ATTACK"}], "sentText": "no. cookies can be stolen via xss attacks (and other vectors)also, this might be susceptible to csrf since a cookie will be submitted automatically with any request. "}, {"sentId": 50, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "attacker can change the value", "em2Text": "generate his/her own sha-1 hash", "label": "AND"}, {"em1Text": "attacker can change the value", "em2Text": "add the random string", "label": "None"}, {"em1Text": "attacker can change the value", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "add the random string", "label": "AND"}, {"em1Text": "generate his/her own sha-1 hash", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "add the random string", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "add the random string", "em2Text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "attacker can change the value", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "generate his/her own sha-1 hash", "label": "None"}, {"em1Text": "the attacker can build up a list of hash values that correspond to the hidden value", "em2Text": "add the random string", "label": "None"}], "entityMentions": [{"start": 149, "text": "attacker can change the value", "label": "ATTACK"}, {"start": 192, "text": "generate his/her own sha-1 hash", "label": "ATTACK"}, {"start": 235, "text": "add the random string", "label": "ATTACK"}, {"start": 726, "text": "the attacker can build up a list of hash values that correspond to the hidden value", "label": "ATTACK"}], "sentText": "it d   correspond xm be ber    pt o st is oe the hxx hash h o  i xf bu rxxx  attacker t  n e xx. it hxx  is conceivabe tha guess  his/her t out  the attacker can change the value a t ca, he d generate his/her own sha-1 hash st  cxn  d add the random string  g string  (ty cxn e xxxxxg  th y fxxxxe  add this ou xk t from g  rxxx the pt   xxxxxg xxxe repxxx. xf the h is on xf  the  can ser bu ve e n xxxe any  sort of ca, you cn   re xe haxh axd  up cxx it xk it o me sxe x attacker xxt  value th value atta  cker . e vale t tamp add ed xxxh  out in any way  the add . i  xxxe read the quesn g re a g xxxe a any g the ad  rxxx can xm xxxxxg (consxt xxxxx.  re me ad but i guess the oxxxxxxl p xxxxx. t  generate   still . to  the attacker can build up a list of hash values that correspond to the hidden value. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 128, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 168, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "stris  tal r od ed ex, e xr one ocs  imxu [c tal ode], . that means oe y before ou've crt [c  xxxx, ed te [c xxxs you  ode], if another process can dump memory xx. , s no way you can get rid of the data bef xxxxxxs oe ] kic the ks in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 323, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 408, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do xxxx ge p been   r w xxy f  xx  i  wn t  e s a xs re  x x x site xxp t   .  s to  a no   do l  ,   y a  x t xxxxs te e \"   ht   t  x xs m  xx e  xxx con   e xxx do t a    i  r xxx s x  x xr \" x th de   e lix  xxxx,   e  xs  b . xxxe e  xi y txs c e an   b   x e .  t  p xy    a xxu   d  ge p  , i  i  s   s  t   x  o   convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (or  e   xxxx h  wn xs e pas  a  .     t   xe xn  xn t t exs  t   xe ge    cxx de xk   s px xxt x  e elf  x  e xxe   e e clic  king   xf xxxxs x        w s w   x n s p k    x   o i  mxxxx, b t x    i  g are ht expt a p pxx xx xx xxxx  bux  d x xs s  b . xxx.  bux     y xxl x,  axd txe  xr d ob message  xr x i  xs w xo i n p  age f  a  m the  asso e  xx ci  axe xx some txxs   xf xe xx e  exxxo y itxd xxd xo  xs s  txe   exxx xx xt e  xt xo a f  ,  xxt xu x  r xn  e x delivered, xd  x txe   xxd x,  t a xxxxx a r p  , an   xs aft xe xd y  xxxx a an ny p xxn  bug. d  ixx d t e  xx xu xxx. xxxt txe  xxxs   s x, ecy ox  r xxg     f  a n  do y xxxr the  axd xxy e  u t  x.     ps  n   p x p t b to  dixx  xxx  x  y e x  xxxxxxx a y  p xx  xt   a   ers ge    .  x a d xe w d  i i a  x,  d t i,  \" h xxs  xx x  a xxxxx s y  xy  tx.  d wxxh t h  e  a  xxx he    f t     e  pl  ox ag t x    xxt     xxm  im xx d e pr any url  x, xxxx t xxe mxi exxt xxxxx  xo e xx \" xx o x   a . d n pag o xxxxp xn    xx. s e exxxx n i xxl  , ted  eve xxxe   n  e ex  y m e ob xxx n xy xx  y xxx itxd x t xxxy b  s s a way  x p  xo  m \"tr to a xn x  p exs \" xs xxxxx pas xe  x  rxe b x, ers and to   xxxxp s ed ixe t  e x xr   xs sxxx xxxxx no xs x a xxy fo xx  m xxe ess pxxxp  x x xy ag x  s e t   peopx i e  p any ag xx trust  ed e  xx e xe  xxe a   p  m  e d ixxx  x t , ir   .    d   xxxs  e to  n   xx. in txxs rex  xx    xx, xxxxxx xxxe  xh xy  h  xxxr xx  x , t  too    xi xxg , e xx   a  x xh xs s  xxxy xxxt of xh p    xxd te xxxx way  xxxxxx  xn  s   xm a c  onv pxxxp    wn xn c  an xe xy  exxxxi i f s t i   e ty xe ase  r xn  r c  i    to  txxs xe rxe  t d y xf t txxxe he usxxx f s n  xx a y  tl r t  x d e fo  xxe ir  xx w  rexxx  xr x t s o ex e plo y xt  xs wn xxx   m x  t exi   xs the p xxg e  xxx t e   d a   t xr axd r b a i  d x  xe x xxe g  xh dx f x. "}, {"sentId": 28, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "post data is sent over curl/ssl", "em2Text": "intercepted or stolen while in traffic", "label": "None"}, {"em1Text": "post data is sent over curl/ssl", "em2Text": "implement this with php ", "label": "AND"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "post data is sent over curl/ssl", "label": "PARENT"}, {"em1Text": "intercepted or stolen while in traffic", "em2Text": "implement this with php ", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "post data is sent over curl/ssl", "label": "None"}, {"em1Text": "implement this with php ", "em2Text": "intercepted or stolen while in traffic", "label": "None"}], "entityMentions": [{"start": 24, "text": "post data is sent over curl/ssl", "label": "ATTACK"}, {"start": 65, "text": "intercepted or stolen while in traffic", "label": "ATTACK"}, {"start": 195, "text": "implement this with php ", "label": "ATTACK"}], "sentText": "my questn is, since the post data is sent over curl/ssl, n it be intercepted or stolen while in traffic? cxn the hxxxxr vw txe sexn id in pln texxxxxe most t component here)?  xxu xo not want to implement this with php because this is ey d xxxh webxxs alxxx. your sexxxr a hxg xxl ([linxx) xxn act as an [lxx] xxd s a ] to sexxxr b. its a con sep o divide rxxxxxxxxs ben ser. resxxxxh these topics pleas. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 681, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 189, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, aren't you already hosed at that point? if you tie the session to an ip address, then it becomes a lot harder to hijack into a session. this is something i recommend doing, but you don't need to be utterly strict about it. you can just tie to the first three parts of the ipv4 or so. the choice is yours. the more strict ip check the more secure it is, but the less convenient it is for users. and as for tying the session based on the user agent, that may also help. it must be realized that if you work on an unencrypted channel (http for example), then the user agent check is less useful as it can be reproduced by the intruder as well. "}, {"sentId": 126, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "directory traversal attack", "em2Text": "prevent it from being accessible directly", "label": "PARENT"}, {"em1Text": "directory traversal attack", "em2Text": "prevent getimage.php from being abused", "label": "None"}, {"em1Text": "prevent it from being accessible directly", "em2Text": "directory traversal attack", "label": "None"}, {"em1Text": "prevent it from being accessible directly", "em2Text": "prevent getimage.php from being abused", "label": "None"}, {"em1Text": "prevent getimage.php from being abused", "em2Text": "directory traversal attack", "label": "None"}, {"em1Text": "prevent getimage.php from being abused", "em2Text": "prevent it from being accessible directly", "label": "None"}], "entityMentions": [{"start": 139, "text": "directory traversal attack", "label": "ATTACK"}, {"start": 371, "text": "prevent it from being accessible directly", "label": "ATTACK"}, {"start": 550, "text": "prevent getimage.php from being abused", "label": "ATTACK"}], "sentText": "i rely on $_get['img'] to determine which image to retrieve, which is a possible security hole (and a major one at that). i could forsee a directory traversal attack, hence the use of realpath, though i'm sure there can be other avenues of attack i do not contain with this script. for that reason, i'd prefer if i could move getimage.php outside of webroot, or at least prevent it from being accessible directly (and only through gallery.php, where the sent img parameter is strictly under my control). so, long story short: what do i need to do to prevent getimage.php from being abused? "}, {"sentId": 124, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 211, "text": "submit their own code to the cluster without any restrictions", "label": "ATTACK"}], "sentText": "i have a standalone sxxxk cluster runxxxg on a remoxe servxr and i'm nxw to spxxx. it appxxxs that there's no authentication scheme protecting the cluster masxxxxs (7xxx) port by xxxxxxx. anyoxe xxn juxt sixxxy submit their own code to the cluster without any restrictions. "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 366, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites that i created a log te ago and t sparked my interese error is that it fs when atteg o t a query strg parr to an int.  yea, i know its bad co, i e it many years ao ;) say, for exampl, you have writn r own forum software. you have put in lots f validan for when the ur ws posts to prevent xss attacks and s, but your van is fa. if a hacker cn bg up the ysod when they make a , the k trae shown could poy show them the crs in r validation d exploit them to create xss attacks or obtain member details r s and . "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 50, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is someone sue is  the someone could decompile the app (which i've done) and even with progua even first  r first  decomp the il  e d you can ret  without too mu is first  ch difficulty ret the riev (which e all the  first questions.  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 291, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 348, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "   ss  rs   xf  m  to y  u e o  ux f  , xf wrx a xxxxxn y e p    e to tx  txt      n n  ino     e m s , x n x   in  xxxe code o x  ux x wrx   xf ,  e  x, g    pe t ny xx   x t e  an e y m x  xf any  e xt xf    rs  xxxs   n ay in   tx r u xxxa x i , n   i    xxxf t y  n xx) ,  ca p   n   m  inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 131, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 217, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  ps \" x e x a e d  e . hos  e  b se i s  fm s  can e e   fr p e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  d r  o a r xx t e  x  s e e n j c   ut the  ey ck m  f m ax  d t e  n   t sc e y e xp ut lot a  xn .    y   e , xr   t e   t he n a d  the a   e e f t l t r e    e   xe x p  y xd s   y d e  h o t  e , b p a   y u  t a wd     p y o xs p   a . n d n t  p m up y  te ur x e d  d  fe e    xy t r   e e x r   x t xy ,  a f a  sc e d  n i b t \" h t s e e    thru  g  h  f i e man  n s w the e d y y u  u xx y t  e  x. p   s s e  a y o \"\" s a r  e s  d  e        p rg p o h  ose   c x t y r   p  re e  e d imp, .  m t . e ,  . in  a o    txxs e e , t p  e  e he  a s a c d. u e t \" y s     e  . o  a e t a p e  f t  s  h n e m rey l   y  s i et s   p  e  xs   u e s  y o e f e s c  l r te e ir n r d x p s  xr b e  . y,  et  d n  e rg i n o    . "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 38, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 149, "text": "sql injection", "label": "ATTACK"}], "sentText": "when g apps t put da to a date is mysxxxxxxxxxxxxxxxxxxxxg and l checking (xxxxxxxxxc xx) n it a xxxx? what about other typxs of attacks differext m sql injection. "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 74, "text": "using an xss attack", "label": "ATTACK"}, {"start": 97, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i st be revent  xxl the cxxxxe of o   wsex. a  one of your users (using an xss attack xy injecting some js code in not  y t \" be  \"r remexxxr he our websxxx) ? i will xxxn  combine fal with l in caxe code  2. xxd thus  diffic o i f ult  i be axxe xo  xxs log  e i irst n. i coxe mho, if you want a xxxxxy secure a credxxxxxxs uthentxxxxxxx, do not use \"r o emember me\"-typ i e cook o \"r f ie what s xo o  store xxxr credxxxxxxxxxf xxu you  d far o store the credentials in a coxxxx, xl p ea  se dxxxt sto be re the pa ? ssxxxd in cleaxxxxxxxxxg for the [ some code] i xe s a xo s the teal xd f will irst step to p a xxxxxt sessi ie on a   the hxxxxxxxx, bu then t xxy if be you coxxd xxxxxxe it with txe ip ad (xxxxg dr ip exs ? r re e  it  nxt is far more  what xxxxxxxxt xo   clear.checking whxt be on the  i same host xxxn xxxr ta js rget than txe  xo sixxxy use txe sa be me bxo xxxxxxxxt wsex. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 40, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "querying information about a user", "label": "None"}, {"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "querying information about a user", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "PARENT"}, {"em1Text": "querying information about a user", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "querying information about a user", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "using a sha-512 hash 1000 times on a salt + password", "label": "ATTACK"}, {"start": 90, "text": "querying information about a user", "label": "ATTACK"}, {"start": 185, "text": "passwords can be cracked", "label": "ATTACK"}], "sentText": "i am using a sha-512 hash 1000 times on a salt + password. is it safe to return that when querying information about a user or should i secure it and make it available only over https? passwords can be cracked. given a hash and knowledge of how the hash was constructed, you can bruteforce the relevant parameters. even though it takes 1000 times longer, and the salt might have to be bruteforced (if not included in the query response), the possibility still exists (and someone patient enough, with the right resources, might just do it if the value was high enough). don't take the risk -- just don't disclose the password in any form. "}, {"sentId": 40, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 58, "text": "attacker can embed a  script tag pointing at a remote server", "label": "ATTACK"}], "sentText": "  poi  nting   you're e  script-t jso  n a a  the gs: the attacker can embed a  script tag pointing at a remote server the  t th h   eval()  and t  he br th o  wser w  ill e a f e fecti  vel and  you're y    eval() a  th script-t   ctive e   e a  re i y    a t   pl att t acker y fo you're you're  r you, howe  ver away  it    since y eval()    embed    throws bro  a a way   the response  d  you're   an e  ll an  at ffe can ctiv howe e  ly d  an  a si a attacker way nce  json is a away ll resp you, onse,  eval() you'  re safe. "}, {"sentId": 141, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 17, "text": "an attacker could run old updates", "label": "ATTACK"}], "sentText": "if left enabled, an attacker could run old updates, which in a good scenario would only bog down your site's performance, but in a worst-case scenario could result in data loss or data corruption. "}, {"sentId": 102, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 40, "text": "sql injection attacks", "label": "ATTACK"}], "sentText": "by default does asp.net protect against sql injection attacks when using asp controls? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 115, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 192, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 274, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i ud they xn z fxr vus xn the app e and t it, t e cd e sxxe indistinct general side channel attack r s. but hw wxxd n r ry go about g xo recover those keys?  e e vxxe aps fr a dxxxxd ar o somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 38, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "clear the whole database", "em2Text": "inserting a delete statement", "label": "PARENT"}, {"em1Text": "inserting a delete statement", "em2Text": "clear the whole database", "label": "None"}], "entityMentions": [{"start": 21, "text": "clear the whole database", "label": "ATTACK"}, {"start": 49, "text": "inserting a delete statement", "label": "ATTACK"}], "sentText": "i don't want them to clear the whole database by inserting a delete statement.my ideas would be: "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 338, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 384, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " ump  d s prs  uxp    sts  u  xr xs  xxs   x   x, o s ue     t cx xu n  n l a  r d d , e  x r o e n   e    ss e s   x . on  . dp  u e d .    c t  you if l x, c n n   d t  e.   t s  xn  t t sn   u l  s  n xf s o on e y b s     e e e  t [c    xf  x   imu x s ox,  u  ,  s ed e  xt  s x t  xs e  [c x a   s xxs  ,   n o  u  , dum s p  f x.  another process can dump memory x. ,    up xs no way you can get rid of the data bf s e ]    u  n c xxs  t o e e e  b yu ef xs e   ks  t  c  t . sxs  "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 116, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 169, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi t lter u  t e s and  i get in my webhook callback. however limg , a  webk e  malis user  can f  ca cn n add my bot to a thousand big groups n in d wl p te y result in denial of service for all other users. ev  en if telegr v m ha d ve implemed some rate l enial g such u ser s. vice ser ve  actio te ns ma mess some ages y  will st en ill t in denia r l  d  l o ca  n f see r all other user add s. "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "wouldnt someone be able to simply change the referrer header to a malicious website? does rails have any sort of prevention measures for this? "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 49, "text": "using an xss attack", "label": "ATTACK"}, {"start": 72, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i steal the cookie of one of your users (using an xss attack by injecting some js code in your website) ? i will then fall in case 2. and xxxs be able to log in. imxx, if you want a really secure authenticatxxx, do not use \"remember mxxxxxxe cookixs to store user credentials.if you do stxxe the crexxxxxxxs in a cookie, please dxxxt store the password in clear.xxxxxxxg fxr txe [code] is a goxd xxxxt xxxp to prevent session xxxxxxxxx, but maxxe you could comxxxe it with the ip address ? it is far more diffxxxxt to be on the same host than your target than to simply uxe the same browsxx. "}, {"sentId": 59, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "as far as i xxn see xxxs should prevent a man-in-the-middle attack, or am i g something?t point 7 the xxxxxt d knw if someone is xxxxxg to gie txe sexxxr the wrg key to encxxxt w, as no one ele bt te r can dect k. "}, {"sentId": 41, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "set the csrf cookie using set-cookie", "em2Text": "supply a matching token in the post form data", "label": "None"}, {"em1Text": "supply a matching token in the post form data", "em2Text": "set the csrf cookie using set-cookie", "label": "PARENT"}], "entityMentions": [{"start": 19, "text": "set the csrf cookie using set-cookie", "label": "ATTACK"}, {"start": 66, "text": "supply a matching token in the post form data", "label": "ATTACK"}], "sentText": "  the attacker can set the csrf cookie using set-cookie, and then supply a matching token in the post form data. since the site does not tie the session cookies to the csrf cookies, it has no way of determining that the csrf token + cookie are genuine (doing hashing etc. of one of them will not work, as the attacker can just get a valid pair from the site directly, and use that pair in the attack). "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 50, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is someone sue is  the someone could decompile the app (which i've done) and even with progua even first  r first  decomp the il  e d you can ret  without too mu is first  ch difficulty ret the riev (which e all the  first questions.  "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 21, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 71, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 147, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 217, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 255, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "xy probm xs t i fexl the password would likely be intercepted. in xxx, the hash could be extracted by a man-in-the-middle attack. xxe r can w simy use that hash to get access to the user's information. xn , te ar can intercept the plain-text password, ad use that to gain access to the user's account. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 708, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 762, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " p ,    e xe od s o    e.   d   pxc  xxr  s  xs xm a p     ed xr s  xn  xs   b xxd x  f    ce     t xxn a s l  d  s   a    r d ed x  s  at  xx, e      e . d xr n     xx e xe x n e s       p if x x.      , . imxu   c t f s a x t t p r  n  xe  e x] xo  ry  a x. l o d , n   d x.  [c tt t  s   xxy t  e h of er r b xxn xf  bxf   in  f  xs  xxn xf s o   o        n    t     xxe   h x.     al  xr xf a  e r  oces s  e  a     s  e of  r   xe xt  at  xxt e y be e e oe   c th r xx tt .  wxy ce  xxt c      te     xf x    e   xs a ,   l  x at x cxn x   bxf  t . xxs xx.  e    xs   e  ce e   , , t   s xl t  s   ed t  xe xxs   txe xc   xxxx i ] f xx   s x txxs xxr   e   of x  x . xa  ,   s u  od e , xxt  xf   pxxc  another process can dump memory x. d   x]  x.  x , ts no way you can get rid of the data bxf s oxe x ode], ]    xxu kxc x xxt   x k  s e s  txs xxs c x d xxx xe e   txs   t   roe no  way  h p e. o e xe  xe e s xe   h at in hxr e  xs  th  t i.   t  "}, {"sentId": 64, "articleId": "1", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 67, "text": "ddos", "label": "ATTACK"}], "sentText": "however, since the function is available globally, it can still be ddos-ed by a bad guy. if the attack is not as strong as google's defence, my function/service may still be responsive. this is good. however, i don't want to pay for those function calls made by the party i didn't authorize to access the function. (since the billing is per number of function invocations). that's why it's important for me to know whether google cloud functions detect ddos attacks and enable counter-measures before i'm being responsible for charges. i have sent an email to google-cloud support, regarding cloud functions and whether they were protected against ddos attacks. i have received this answer from the engineering team (as of 4th of april 2018): "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 328, "text": "sql injections", "label": "ATTACK"}, {"start": 145, "text": "xss", "label": "ATTACK"}], "sentText": "   txy c xxg i'm xxxxxg to me  htm xxxe l a p applxxxn php    les co written e d t i' ng e wrxxxxn e and haxe a quet xe ion t eg o e uxxxx. i d  xss xo usi   sxl   ng pr cod e i p o d st t at  es   wxt  h p xxxxxxxg   xp have   d d  xxxxr  l o  conve  t xx. o om  l rxs onc  e  pt i le xn arned d r  yig xxn  g so would p  rext sql injections,  r and it  wouxd s xxxxl eem   g s  copyxxg th axt u  ion insertxxg t  om ack t the xt g  and her  in maxn   n xxxs d so type have (assume  raw  (assume   p,  of a xs t oxxg txk  l  namel is x l the  o l ss. i d th otxxr e o hl xxp like [li]  ut xxr   the ak  xo have uld my xxxs i t  quot namel es, ke xxxs e txe d xxo ata  varixxxxs to  have dt  a xr namxl  le om the  xxa and r  t wit he d h atabe in txx: xss t uxe i l   o xxd nvxxxi for ng special cha  r to a a cters t  e entiti sa e rts   x, o  xxe p  r xe op htm er xxxl en, ret  r     xxxd  e].   to e  x xxxxxxa eem   xxn ame t conve pr rts l  xxe g cxa (assxxe racts  l h hxxe t r o n  [xxx. in htm txe  h l coxt  to utp  use  ut. ent you s ins lie d o  hd e t to he appro ap h to  (ase d plic to ation pxi  txe  ate  me   l  and exxxxy xxxxxd f inserting a p  rxw sl t   t e in  in e   ata r. f  o xxd r s cd  quxxxx,  pri entiti, on, u xxxxd e [k cog ] xn build  ls d s xxxa some d, but xa (a xe  ly  it wl y cxxxxxt some xc ca (e c e  xxxe prxr n o tixxxx, txxs to l e  xxc ad n,  cxxl proxxr d nxxxl cxxxxc  ke y quoxx, xss  am xe persand ad the less  (assu  to ony xe   thar t (a ould ss e ue han xxxxk  char  act   e, erx. "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 342, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cxxc i ki m the ime ng  his  jpxg for maxe   t m as xxe   t f mim ixe ype uplxxxxd  of mix jp  eg e     i of  exxy n  t  the  axxxx php is prett as xxxxs  y easy x o x me t as   i  f matche ar    maxe as i know   example    xxn    fxr fxr  is  the m checki ime ca  t matche  of n b im f  xxo e e spoo  fed is . th checki e a sure ttacxxr xxn upload a php script with for example jpeg mime type. one thing   xxxt  t xxxxs maxe d   to mind xs   to cxx cxxc x xxr k xxe mime  fi know le ex    type.  te as n chec  xx  for xxo t j to peg o n  xxe of the uplxxxxd fixe an eaxy jpeg  xxr  xxxd    d xxxe sur t e it x  xxe   xxxd to  matche  ex checki s    ma checki  is ke f  txe   mim type. e t of ype. all  example of t as his  x is axxxx example  t i ype. x ty t pe. xg xxe uploa mi xxxe m easy e d directory n  is broxxxr accexxxxxx. "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 91, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i want to know if this and only this little snippet presents any security issues (like xss attacks etc) "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 81, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 383, "text": "dos attack", "label": "ATTACK"}, {"start": 411, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 512, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 654, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 698, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "h, i l resxxxxe ie  y su xxy h xe i s r  xxe n i and o xn  wxs xxxxe w t xt my h ip address spoofing. i know e xxxl ct wxxl ne ca v b er xxxe a reso xs xxe b (xxxxxg a xe   k xf thxy sf xxxxr xxxn ixx, t  p a a dr  , t  exxl tt  (l y not  e b xd e n sy a m exxxxxxy up   (l f thxr xr a call h s a xxxxxe xxxxxt xxxx. a their  cli my en v  olue t cd xxf beg xt  mk s ed a iy cxxxxe a dos attack b syst with em y registering for many accounts, all with xt ips, axl txe e axo  thxy h ig te wixl  raxe l. this wxxxd cause my system to send out a high volume of welcome emails  sm 've   xxd (l (leag e , adxxg to  nxxxr y s i ervers  es beg xxxxxd as x, ad d prevent users from signing up xe  nto  i  f their email account was maliciously registered. how xa my n t h hxs be xxxxxxx? "}, {"sentId": 55, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "use all these cookie for authentication", "em2Text": "cookie spoofing attack", "label": "None"}, {"em1Text": "cookie spoofing attack", "em2Text": "use all these cookie for authentication", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "use all these cookie for authentication", "label": "ATTACK"}, {"start": 364, "text": "cookie spoofing attack", "label": "ATTACK"}], "sentText": "my quexxxxn is: why use all these cookie for authentication? my guess would be xxxt maybe gxxxxxxxxg a session xxxh would be to easy so using the xxxxxxxxxxxxxd and usexxd adxs xxxxxxxy xxt what about xxxxxe spoofing? i'm basicxxxy leaxxxg on the client xxl fuxxxxxxxxl informations. my mxxn concern is about these solution giving to much xxxxxxxxxxn when under a cookie spoofing attack. "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 43, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "surely this xxxm t xxxxg ixxo e view wxxxe anyone with the sense to check your source could steal your login info? i woxxd assume xs nxxxs to be doe xxxm the contr, but i doxxt know how to crexxe do this from the conxxxxxxx. t and webxxxt k promising, but i xxxxt know how to y d a form to . "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet fxr n  xxr dos  adding it e t xxxy txm xh xxxx1 a be n e add prxxxxxs s sxxe s exxxxxxxg xxe i ngth to wxy  the haxx. fxr e wondxr xamxxx, xxxxd it be pxxxxxxe txxt a o n atta  cker  txxn found some cxxxxr be  way to create a 100timessha512 function which were xxy f xxxxd xxxxr txxn sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, xt does expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo xxxxxxxs brute forxe axxxxxs (o  r at xxxxt mak for es them  brxxe pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a xxxxe than xxx, but t asxxr o sxxe t attacks h there e benefits exxxxd the risxxxx. "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 114, "text": "xss attacks", "label": "ATTACK"}, {"start": 1737, "text": "sql injection", "label": "ATTACK"}], "sentText": "i  part am  e working on a asp.net c# + jxxxxy part  ajax xxxxxxe project.    i am tryixg t interprxxxd o pxxxxxt xss attacks xxd i xn intexxxxxxd ow below  is not the xxxl appro back ach, but xxxs is at  ovexxxxe the  text lexxt what f  should xxe xxm  i should do - to s  us source, e htmlenc an od the e whe lexxt  y n axxxxxxxg fr  on e ee xxxxxg input from pre-encoding  uxxxxx.  a same n to d i rxxxxy  ure xxxxxxe to ki  ndly   chxc what  in k if i t  xm  u plaxn se dxxxg th ajax e rixxt thing. you  of xxe the d  a to keep in m pe ind the xxxxxxt xy -   pe of each xxxi pre-encoding ng you  saxe deal with  pure and where it came from - whexxxr fxxm a sxxe sour back ce or an bxxxxxs  untrust saying e your d source, and also xxxw when coxxxxe and xxxxn an pxxxxxxxxxy d g t html e , into e   wo stri datab ngs that both are str s th er. i.e.  ixxs of the same c prevent ontxxxxxxxe and trust-le if xxxxi xxa is pped up xxe & us  what quxxxxxxxxxxxi wi the th xxxxu xml.[ xo l  ink] xx; xxxxxxt  xxxt uxxxg [code to  sql, ], s the o th  as pre-en to coding e string will be interprete sayixg d as pure txxt before xxxxg  g into datxxxxe ixx.  guaranteed [cod xxxe e] becomes [code].here  cxxxxxt se t nd  it soxxxs like you're xxxxxg the  e] descrixxxxn whether  the   texd fiexd is a xxxxn input g of pxxxn bxxk  text and what you're storixg  s not ubstrxxxs in th prevext e datxxxs safe e i dan s a string of saxe html (since [code]'s ouxxxt is guaran really teed not to contxxn dan a gerous cxxxxxxxxs xxxxs the first prob xxxxw lem wixh prematxxxxy en as coding  dat if xxxxe content.  if uxxr  y to ou're compoxxxg a sql stxxxg to  whexxxr send to th to   e sxxxxx, pre-xxxxd and ing as xxxl does not pxxxxxt you xr axe om sql injection.  us p a rexxxxxxxy ing a sql pxxxxxxd statemxxt is a good  e way to oxxxxxxe this for sxx,  fxxe bu the t pre-enco  ding doe xxu s not render a output.  string safe  the in all co e ntexxxxxxe pxxt that follows is wha a t i am in dou  b  and xxxxb xxxt ase t - how to xxxxxe the xt  m naxxxg l exxxxxd so  sxxd  text before returxxxg it   back to the   user?whxn the use safe t below xxt  r need   database wants to view t usxxxxxxn xe de code)xxxxs scription txxt en   i tered, the   webxxxe retrieved frxm xxxxxxxe an send d prints it out.if using  th injecxxxx. e  a uxxr is rxxxxv txxxxg ing xxxxxe  safe html, an u rxx,   the d you haxe a strixg of  am sxxe h xxxl xxx, a  you can jxxt send that to txe u projecx.  be ser. and  saying if the uxxr is xxxe ou're xxxxg a pxxxn text emaxx, txxn you need to  should convext  xxxm the safe html storxd in   the database  can to plain t if ext.if the user is xxxxi a ving rss, xxxn you need to make encoding  sure xxu coxxo right se yxxr rss using substring safe s inxxt  xf xxxxxxi  n i k fro   wxxxxxe m ] can help you xxxe s pre  -en xxu coxxxg a  e  ure as  xxxxxs xxe  that proxxxxy encoded on output. "}, {"sentId": 48, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 140, "text": "an hack to get the .xhtml sources", "label": "ATTACK"}], "sentText": "since security is not considered, i wonder if the first is \"secure\" from the point of view of access to the xhtml files or perhaps there is an hack to get the .xhtml sources. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notabxe \"xxx\" x. hxxxxxe s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exxxxxt a xxx.  yes, the main e xf the xe xxxxd xo xxxt txx, but a weld xxxxp xxn t xxe usr axd xxy not xe dixxxxxy ad wih e xxxxxxe xxxn ps wxe d by xxxy uxxxxxxy sixs xs a wy to \"trap\" users and o esxxy fxxxe ad xxxx, etx. in ts res, xe security xxxxxt of xxe pxxxxxm reaxxy s txe security of the user's control oxxr their own comxxxxr and xxxxr brg xxxxxxx. "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 99, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a response to the recent [link] and [link], what is the best way to secure your website against brute force login attacks? "}, {"sentId": 17, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "[link] ", "em2Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "PARENT"}, {"em1Text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "em2Text": "[link] ", "label": "None"}], "entityMentions": [{"start": 7, "text": "[link] ", "label": "ATTACK"}, {"start": 16, "text": "malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed.", "label": "ATTACK"}], "sentText": "s s of [link] r malicious html or javascript which is targeted on your website is been embedded in another html page (or an email message) which is been successfully executed. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "csrf", "label": "ATTACK"}], "sentText": "i so s a    t of xs xxxxd   hey xxb serxxc by e xxxxxxxxxe to csrf attxxk if the fol xxxxx] lxxxxg  t xxe xxxx? ancillary xxxxxxxx: are [c no oxx] axd from  xxxxx] re as xxxxt csr to f s ever vu se [l xxxxe lnxxxxxe  ancxxxxxy to csrf? xxxx.  xxxxe vuxxxxxxxe rable  i axk because it xxxxs that xxxt xx.  (all?) browsers dxs xxxxs xxl lowing t  ow these xxt xxxr hods true?  in html xo  xxxxx. xxxx: l  ots of (x.  g frxm ood cxxxxxxs and xxxxxxs xo fax, but n csrf o xxe  methxxs has fic  offexxd a spxxxxxc csrf axt not  is ack to which thxs txa wxxxe t  web sxxxxxe is vulnerabxx. forgxxg arbitrary c true? srf reqxxxxs wxxh arbitrary xxxxa types is xxxxxxxxxxy on ding ly p ever ossible xxxh xhr, becxxxe a [link] and a [l one xxe clients   ink]. hoxxxxx, [link xxxxxxt ]. has [link xxxxxk ]  so th sent e o no nxy th xxr xxxxxxxxxl f reat comes spxxxxxc  frxm xxxxxxxxd cxxf atxxxxx. xxd those will only be sxxxxxxxxl if they xxe f o rom xxe same orixxx, so reat  xxxxxxxl your y xxxm forging  your oxn sit sxxxxx. e some xxxxxxxxxe how (e. g. x that ss). be nly  csr  carefxl not to mistake dixxxxxxg cors (xxx. not xl  se the typxs y txxxg access-contro srf l-xxxxxxxxi xxxxs gxx: *) as a pxxxxxxxxx. xxxs simply xxxxxxxs cxxxxxs from xxa is dxxg the xxxxxxxx. xxe whole rexxxxt xs s  xxxy is t  reqxxxt rxxxxxxs ixl se from nt and  sxxxi n pxxxxxxxxx. ot fic prxxxxxe  d by the server. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 128, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 230, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wi n x  ino xx xx dit  cu  xy xs a x re a nxxe \" cg x\" x xxe    xy . e sis x o  xxxxs h x xn use pos  p t url t  xe   e o convince users that an important message from a trusted site has been delivered t ,  xy  xxxs  many d trick those people into clicking through to some malware url (or x s x wa x x s x poxxxs xx s s  xxe x a xxs  deli, en js xx  x t x  s  t xx e clxk f m wxxe ig people   that  xt   exp xxe  s l g t a   xxx. poxxp    x , xe n \"  pe xf xe  . xxxe xxxd nxt  do x  t ,  pp bt a x url xxxxx  many r\" x h xxxxx\" e xd x  poxp  s pp  xx x t x x n n dixxxx xxx xxs d xt e   r  to x pop d   xy t   be xx x t x se r x r xxxy xx pa  g ux xe x e xd    s  ome xxxh y  h l e  xy e n pxxxxxx tx  e bn  s e exd by by  many uxx  xx x  x  throu d  xx gh xy sit r   es x  te xn s a wa sxxe y to \"t clickn xxxxx\" g rap trk  xf \" us  pp xxxh  a som xxe e xd  xxxs   o x    , xxxxx\" xy xr x uxxx mess e age x x r  e xt  e ce d xx  , etx. n x  ts r, t wix e s  se wixx deli, xs cu xy rt pxxxxx y xxd  axxxxt pr  t o  pup  s om r   of  ,   those n  w for  o xx x e l  e b p  rom m rex into  from y is xs  t s those e xe y   pe     xs  sy x n  o xe  xf the s xxxl ox  xn y x many x x  xxxe xx.  r h and  re  x  x pa e e e \" rex   t   s r\"  r o prox  m de,  som  e    xn r   nxt asxx and   xxx xxxx xr g t  desi. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 115, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 188, "text": "recover those keys", "label": "ATTACK"}, {"start": 241, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 264, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d xxxy n z xxr xxxs xn xe axp e ad t , t te cxxxd xe xxxe indistinct general side channel attack or . but xxw d xn r y o t txxxg o recover those keys?  e txxxe ve s for a d ar to xxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 551, "text": "sign up for the app", "label": "ATTACK"}, {"start": 597, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "xy q app,   dataxxxe  xxxi how u is ?  exxxxn is, how  xxxi xxxt o iz n s ap xxxxxn p, a e fe  ss i xxxxs s \"  ss  app hexxxxxxxx? ,   u i  s xe xxxh uxe  xx= xxxl !==  txxn \"? yes, i get  real us    xr   iz  user xxxs e use   use xh  xt xxxs x use xxxs t  hxt only a  xx    somxxxe txxt n autx o e   xxx use y n xxxxx? ticat only  and ed user ca  to !== n   txe use xxx   this e iz  o  bu  a th  at t xs txe xxt estion x, xh  xxe user at  b i ut h xs o ss w xxxy is it t t o become hexxxxxxxx?  aut xxxt hxxxxxxxxx? x   i xt onl app, y   xxn somexxe sign up for the app, and xx exxxxn n t   then use those credentials to get request right into my database ixxo ? "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 550, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 675, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers an of d insigh exampxx, t on xxxxxxxy measures that i shou collection ld ta he ke into co user-expxxxxxxe nsid collxxxxxn eration wxxn de this clients,  vexo could xxxg software, xxxxxy g co amxx, such as the on t double hxs e describe ed. d belo for w. by secuxi a t xr he s ty i  players co collectio shouxd n llexxxxn  xxxn chxxxxxg an double d xxxxxe xxxc t herw co ise he king that a  exxxxl not   e, user th bexxxxxxr xt  dxxxxxt act in a xxy not intend poxxxe updated rs ed. by nxt   this co bx, uxd mean behaviour suc xxxxxxxxe h as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or ot nxt herwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 91, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 75, "text": "sql truncation", "label": "ATTACK"}], "sentText": "the issue you might still be left with is a subset of sql injection called sql truncation. the idea is to force some part of the dynamic sql off the end of the string. i am not sure how likely this is to happen in practice, but, depending on how and where you are constructing the dynamic sql, you need to make sure that the variable holding the dynamic sql to execute is large enough to hold the static pieces in your code plus all of the variables assuming they are submitted at their maximum lengths. here is an article from msdn magazine, [link], that shows both regular sql injection as well as sql truncation. you will see in the article that to avoid sql injection they mostly just do the [code] method, but also show using [code] for some situations. "}, {"sentId": 90, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 40, "text": "a determined hacker with access to my source code", "label": "ATTACK"}], "sentText": "i understand that i probably won't stop a determined hacker with access to my source code, but storing them as plaintext feels wrong. "}, {"sentId": 54, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "possible access by attackers", "em2Text": "attach a php-based website", "label": "None"}, {"em1Text": "attach a php-based website", "em2Text": "possible access by attackers", "label": "None"}], "entityMentions": [{"start": 92, "text": "possible access by attackers", "label": "ATTACK"}, {"start": 375, "text": "attach a php-based website", "label": "ATTACK"}], "sentText": "is it a wise and practical approach to keep php files outside the public folder to restrict possible access by attackers? if yes, is it common? because i do not see any disadvantage (except a little bit harder handling of file spread in different places); but if it is beneficial for improve security, it is worth of consideration. since i do not know about the ways hackers attach a php-based website, i have no idea how it can improve security.   is it a wise and practical approach to keep php files outside the  public folder to restrict possible access by attackers? "}, {"sentId": 95, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "performs a memory dump", "em2Text": "information is compromised", "label": "None"}, {"em1Text": "information is compromised", "em2Text": "performs a memory dump", "label": "PARENT"}], "entityMentions": [{"start": 112, "text": "performs a memory dump", "label": "ATTACK"}, {"start": 142, "text": "information is compromised", "label": "ATTACK"}], "sentText": "heap inspection is about sensitive information stored in the machine memory unencrypted, so that if an attacker performs a memory dump , that information is compromised. thus, simply holding that information makes it vulnerable. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 54, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trying to make sue my s inste is not exploe with the latest log4j exploit.i he a pe scrt tt , i tried g ths insn :[link]this is one of my stages of my pipeline script:[ct i gt a different error than s d e and i'm unsure if i'm checkg ts correctly.  this is the error:[code] "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 115, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe xxx  x  e pox xt    h the ashixg xt of hashix hashixg g a paxxxxxd x   t  xxxt f  is xn xxxe a  a hacke  to  r gets access to the database. xf c xxx od h e\"?  i st up o th r e e th  e salt  db    i in the the  db x pox a   a xxxxn t as  ash he   xxxe xxw   as  xxxt the xn  hashed xxx  x hac xxxx, xxxxt i he t t   th h th po   d x e x  e  xxxt x xxx xxe i    the x   xxxxx  xxx, m   handi ash xg the hacxx i r the \"secxxt  up to    code x \"? i   xxxt h x x f ash hacxx t  ixg  i am xxx am xxxg up a d xxxxxxx d  atabase xg  and . x, xxr and  xxxh  e a lo xg xx, and h and a xxw ndi hac ixg xx he  a  ng   databas h e. i th  dxxr \"secxxt e xxxxxxxr t t   x the n a he xxx.   "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 276, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 330, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now adding a 3rd participant to this con will not wok because key exchange als are designed o derive a shared st from 2 publc keys ony y using .net and bouncycastle). so the n is, how would you go at g a n-y public y cryptography schema which is still autc (i.e. resistant to man in the middle attack) and secure (i.e. secure frm eavesdropping). "}, {"sentId": 57, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "None"}, {"em1Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 205, "text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "ATTACK"}], "sentText": "[code] but s i've red a lot, i have seen t to use [code] is unsafe, as the cot below hig:    do not use the aboe coe unless u know exactly what it doe! i've  seen mase sy holes due to this. the client can set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants. unless you have a trd e proxy, you shouldn't e any  of those . i've tried the simple [co, but this rs e wrong ip. i've tested this ad my real ip follows ths pattern: [code], t i get an ip address li: [code] short ansr /s of 21 (and s) [] is the only reliabe way to get users ip addre, but it can show erroneous results if behind a y server.<br />all other solus imply security risks r can be y fa. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 60, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "what is the best way to protect the user and secure for any mitm attacks. is my way secure enough? "}, {"sentId": 102, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 40, "text": "sql injection attacks", "label": "ATTACK"}], "sentText": "by default does asp.net protect against sql injection attacks when using asp controls? "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 3, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "te sandbox would be executing scripts that could be potentially dangerous.  te sandx d be a mix of my own j, g alonge d jat code from otr . "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 44, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is soe e is  the someone could decompile the app (which i'e d) d even with progua even firt  r first  dep the il  e d you can ret  without too mu is first  ch diy ret te rv (which e al e  first questions.  "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 131, "text": "sql injection", "label": "ATTACK"}, {"start": 28, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 70, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "x bxxxx] s dxxxxxx,  bece e user can input something like [code], xxd the query becomes:[code] e  commands corrxxt way l  to avoid sql injection , no r wxxxh databae you xxxh  use, is to sepxxxe xxe data from sq  x, so tht d de, xxa   bxxx] , that  x wixl xxxs dxxa d will n , evxr be xd as comm t ands by th interprxxd e sxl  use, parser. it is possibl w d ith e t maxr o e xxl  xs xt will ate e mxxt alwa   the h y fo ine xxxxx will s shd  rpretd r somethg mad xxxa par, xxt if xxu  , dot fxxxy unxxxxxxxd  o the dxx s xxxx a , you shoxxd ala will ys posxxxl  xe pr alwa a cxn red  xxxe s  taxxxxxxs n statemet d parm statet xxd queries.  "}, {"sentId": 73, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 76, "text": "execution of malicious code in the browser", "label": "ATTACK"}], "sentText": "i want to restrict the execution of javascript on my website to prevent the execution of malicious code in the browser. presuming, my html website is accessible via the uri [code], i want to make sure that only the script in [code] is executed by the browser. the browser should not: "}, {"sentId": 19, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineers the app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "AND"}, {"em1Text": "reverse engineers the app", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "reverse engineers the app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "bakes in company's sender id and server registration interface", "label": "AND"}, {"em1Text": "creates his own app", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "creates his own app", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "bakes in company's sender id and server registration interface", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "creates his own app", "label": "PARENT"}, {"em1Text": "puts app in the store", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}, {"em1Text": "puts app in the store", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "it registers to receive messages from company's sender id", "label": "PARENT"}, {"em1Text": "impersonates company's real app as far as gcm goes", "em2Text": "sends its gcm registration id to company's servers", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "it registers to receive messages from company's sender id", "em2Text": "sends its gcm registration id to company's servers", "label": "AND"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "reverse engineers the app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "creates his own app", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "bakes in company's sender id and server registration interface", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "puts app in the store", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "impersonates company's real app as far as gcm goes", "label": "None"}, {"em1Text": "sends its gcm registration id to company's servers", "em2Text": "it registers to receive messages from company's sender id", "label": "None"}], "entityMentions": [{"start": 9, "text": "reverse engineers the app", "label": "ATTACK"}, {"start": 39, "text": "extracts both the sender id and the server interface used to receive gcm registration ids", "label": "ATTACK"}, {"start": 139, "text": "creates his own app", "label": "ATTACK"}, {"start": 160, "text": "bakes in company's sender id and server registration interface", "label": "ATTACK"}, {"start": 224, "text": "puts app in the store", "label": "ATTACK"}, {"start": 273, "text": "impersonates company's real app as far as gcm goes", "label": "ATTACK"}, {"start": 326, "text": "it registers to receive messages from company's sender id", "label": "ATTACK"}, {"start": 393, "text": "sends its gcm registration id to company's servers", "label": "ATTACK"}], "sentText": "attacker reverse engineers the app and extracts both the sender id and the server interface used to receive gcm registration ids. attacker creates his own app, bakes in company's sender id and server registration interface, puts app in the store.  the attack app basically impersonates company's real app as far as gcm goes:  it registers to receive messages from company's sender id and then sends its gcm registration id to company's servers just like the \"real\" app does. "}, {"sentId": 30, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "database is compromised", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "compromises the machine", "label": "None"}, {"em1Text": "all of the secrets will have to be changed", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "compromises the machine", "em2Text": "encryption can be circumvented", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "all of the secrets will have to be changed", "label": "None"}, {"em1Text": "encryption can be circumvented", "em2Text": "compromises the machine", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "database is compromised", "label": "ATTACK"}, {"start": 81, "text": "all of the secrets will have to be changed", "label": "ATTACK"}, {"start": 466, "text": "compromises the machine", "label": "ATTACK"}, {"start": 500, "text": "encryption can be circumvented", "label": "ATTACK"}], "sentText": "it's the most obvious solution, but if the database is compromised somehow, then all of the secrets will have to be changed. to me this solution is not ideal because it has all of the problems of storing a password in plain-text. this will provide some security, because if the database is compromised then the secrets will still be safe. but reversible encryption requires an encryption key, and the key has to be stored on the server. it means that if an attacker compromises the machine, then the encryption can be circumvented. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 211, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 260, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "so natural   just ly, i thought of just sha hashing it since we n 're just using it for ident of if so ication.  th site e a  problem a  wit of h revealing  cal  that is that if an a of ttac identification. ker knows the problem domain (an ssn), then they can focus on that domain a .  so it's much easier to cal domain culate the using  billion ssns rath instead domain.  er tha  that sh it a, n a virtually u the nli of mited number of passwords.  i domain  know i should use a site salt an sha d  it a per-patient sal complexity t, bu (an t is there any (an thing el a se i can do  is to prevent an  so at ker t sha acke er r  on fr i om revealing the s so sn?  instead of it  sha, i was planning on using bcrypt, s easier ince ruby revealing  has a good  ssn), l i i  domain the an sn? y  brary and  it's i rath t handles s acke cala so ble co thing mplexity a n any umber nd salting automagically an . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 198, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 267, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  r f  ilt the  m sr h e ali  u  sei   e l  s er out the e  f ns  add ven  s i f  get i  n my w  e for b even hk cal  lk s . howe sere  a groups i  l ,  ps all  a l  e hook s u ctio s k er can add my bot to a thousand big groups and l p  s malicio er us i a bly result in denial of service for all other users. en  serc  all if l ms  gram e h a k gm e of  imp  n l ted some ra of te li of mii f ng  gr c er e   os suc    h   usr a lback  i c all  ibly tio mas ns may s  i  e hook  h t the ill .   may rl u t  l i i    ce n den ibly i   ib  a  y al  dl users . .  of  all sc n e f see or al u h s l som l e    othe n r  del use. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is checking the xxxxxxxr enough to proxxxt against a cross site request forgery attack? i know the rxxxxxxr can be spoofed, but is thexe any way for the atxxxxxr to xo xxxt for the clxxxx? i kxxw tokens axe the norm, bxt would this work? "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 288, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i beliee this xxxxs the xxxxg xxxxxr se passd reqxx. xxxxxxr i also need o t as best i can against xxxxxxxxxd client xxxxxxs aftr the signup proxxs xs xxxxxxxxxxd g the signxp s e a lost . y with a 4 dxxxt en key, thxe are onxy 10,000 possibxe combxxx, so an attacker will xy be ae to try every combination on the locally encrypted strong password very quickly. what i wt to kw s do i xxe to choose a specifc symmetc encn scheme and/or gened pd xxxxxt o that e attacker wxxl not be able xo tell xxxm local a ale wh xf the 10k decn attempts was the coxt on? i.e. e woxxd still xxxe to at h of txe 10k xxxxxxxxs on the servxxxxxxe xxxxx. "}, {"sentId": 89, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "gained access to the webserver", "em2Text": "append this javascript to my php files", "label": "None"}, {"em1Text": "append this javascript to my php files", "em2Text": "gained access to the webserver", "label": "PARENT"}], "entityMentions": [{"start": 545, "text": "gained access to the webserver", "label": "ATTACK"}, {"start": 579, "text": "append this javascript to my php files", "label": "ATTACK"}], "sentText": "it is a calendar application, as mentioned above, and it is used only by my client's small company. login is required to do anything, and only 5 or so people have accounts. i can guarantee none of them would try any shenanigans. i obviously can't guarantee someone got a hold of their information and did try shenanigans, though.sadly enough, i did make this website almost 4 years ago, so i am not exactly 100% confident i protected against everything kids are trying nowadays, but i still cannot understand how an attacker could have possibly gained access to the webserver to append this javascript to my php files. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 233, "text": "ddos attacks", "label": "ATTACK"}], "sentText": " ptible my probm   is tha even t  an is d  ds even h even  my no  j and e d ct  an  ddos is 1% la p to tible l, my  and no an  d  y t shady, it is ct  highl ddos and  y sue m  s t  ptib is l  e to o though c d s   proj in l o  y e l ddos attacks. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 122, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 207, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " may p  desi ma that y xxxp windows are a notable \"phishxxx\" te by chnxxxx. hxxxxxe  or xxxxs cxn xxc  tly  xxe popups xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( rhaps or distract  pe xxxxxxe xxxxs evxn jxxt txe cl po ile pups ick itsxxf might exploit a buxx.  y people es,  people the maxn p xxxx. roblem pop site ups xxe of xxe site coxxd  xxxt do that too, but a well-cxxf from ted popup can  as dixxxxxt the users  u the xxr and  txe may not be di may rectly a pe \"trxp rhaps ssociated with xxe xxxt to ile main page.pxxxp s r ite s were   exxxxxxe from d by many uxs from xv  popups xxd or xxe y sites  essenxxxxxy as a way in  to  xxxt \"trap  \" users  pressixxx, a clixk xd t uns o essentiall xxxxxt y f popup oxxe ad im click xxxxxxxxx, etc. in this xe no a txxxe spect secuxxxy  uxxxs ,  xxt essentially a site ble th through e secuxxxy aspect of the p popups roblem really is txe xxxxxxxy xf the user's re  xxxxr the ol o to vxr th just eir own compxxxr and thexr b opup rowsxxg desi xxxn r the es. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 29, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 217, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 387, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you may be able to exploit a format string vulnerability in many ways, directly or indirectly. let's use the following as an example (assuming no relevant os protections, which is very rare anyways): it's possible to use the [code] format parameter to read data. you can read the data of the original format string in [code], hence you can use it to read anything off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). again, let's assume our vulnerable program above, and let's try changing the value of [code], which is located at [code], as seen above: "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 342, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cxxc i ki m the ime ng  his  jpxg for maxe   t m as xxe   t f mim ixe ype uplxxxxd  of mix jp  eg e     i of  exxy n  t  the  axxxx php is prett as xxxxs  y easy x o x me t as   i  f matche ar    maxe as i know   example    xxn    fxr fxr  is  the m checki ime ca  t matche  of n b im f  xxo e e spoo  fed is . th checki e a sure ttacxxr xxn upload a php script with for example jpeg mime type. one thing   xxxt  t xxxxs maxe d   to mind xs   to cxx cxxc x xxr k xxe mime  fi know le ex    type.  te as n chec  xx  for xxo t j to peg o n  xxe of the uplxxxxd fixe an eaxy jpeg  xxr  xxxd    d xxxe sur t e it x  xxe   xxxd to  matche  ex checki s    ma checki  is ke f  txe   mim type. e t of ype. all  example of t as his  x is axxxx example  t i ype. x ty t pe. xg xxe uploa mi xxxe m easy e d directory n  is broxxxr accexxxxxx. "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 23, "text": "csrf", "label": "ATTACK"}], "sentText": "<h3>why is a dedicated csrf cookie necessary?</h3> <h3>why should csrf nonces be bind to session id? does django do this?</h3> [link] seem to imply that csrf nonce needs to be bound to the session id (e.g. csrf nonce = keyed hash of session id). why is that? does django bind its csrf nonce to session id? csrf protection and session have different nature, so putting those in single cookie would make it harder to maintain. you can use csrf protection without using sessions.you may want to use csrf before session started (ie. you don't want to start session before user logged in, because of performance, but you want to protect your contact form with csrf).sometimes you want to delete session cookie, but probably never csrf.csrf protection is needed for single browser session (until you close browser), but sessions may continue for even weeks.you may want to have cross-domain session, but probably never need cross-domain csrf. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 299, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 446, "text": "recover those keys", "label": "ATTACK"}, {"start": 571, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 597, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mxxxt an attacker recover the secrets in that flash? i xxxxxxxxxd thxy can f o u vulnxxxxxxx that xxxs xz  that for vxxxx dex xxxxxxxx the xs  vulnxxxx that xxxxxx xxxxd s those  i exp xxxxx? xxxt n txe app xxx xxxxx?  d e  xxxxxg a  xxd expxxxt it, xxxt the in xe xxx tha sxxe t xd xe  of sxxe indistinct general side channel attack or sometxxxx. bxt xxw wouxd an axxxxxxr really xo  se thxxe c flxxx? rets abxxt xxxx txxxe xg axe  t kind o recover those keys?  axe xxxxe x xxxxxk txxt  xxxxe xxxxxxxxxs for a d in ex axd xxx xxw xxxd xxxxx o xxr to xxxx o xxw xxw  shave-down the chip  a or some kind of microscope attack? "}, {"sentId": 49, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "use query string [code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "use query string [code]", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "use query string [code]", "label": "PARENT"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "injected code show the alert", "em2Text": "[code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "OR"}, {"em1Text": "[code]", "em2Text": "use query string [code]", "label": "None"}, {"em1Text": "[code]", "em2Text": "injected code show the alert", "label": "None"}, {"em1Text": "[code]", "em2Text": "[code]", "label": "None"}], "entityMentions": [{"start": 676, "text": "use query string [code]", "label": "ATTACK"}, {"start": 731, "text": "injected code show the alert", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 0, "text": "[code]", "label": "ATTACK"}], "sentText": "[code] [code] because angle brackets [code] are [link] they seem to get automatically encoded by the browser on the way in, before they can get anywhere near the js runtime. this leads me to believe that simply rendering the querystring directly on the client using [code] is always safe, and not a possible xss vector. (i realize that there are many other ways in which an app can be vulnerable of course, but let's stick to the precise case described here.) not relevant to the question, but an interesting aside. if i decode the uri first then browser behavior is different: [code]. the [link] in both chrome and safari blocks the page, while firefox shows the alert. if i use query string [code] on ie6 on windows xp i get the injected code show the alert, this happens also using [code] or [code] in the page, so i would say your second assumption is right if [link] is still a reasonable browser: it is a feature of modern browsers "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 216, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 299, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te cl  k  xx me  e  t p    e      (o x a a  e r wi s  u axd  nx  x  x te   xxxx y xy d s xxe a     xx  o hexr ntro          s do xe   xl to ( o o    \"   n   s tx  . xe si e  ck te a s n    p use pos    a th    o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url   r  tx  frm xxd  peo clk ple      o ce   wn  de  livered, of th r  u      x   do   p  d x   s ps o s    x    xx  xxe t  k   x  x a xe t  t    v oo  d     e e. n an   y   y    p  o  e n r   convince  x   p  t e x cli    o xxd c    ki    wed  ng  e  x.  d   xk f i \"t a    t  s t a x.  , t e   x  d  oo xx e   n  x y   x  d      t e f xx      t   l  y x  axd  e  xx   o k  l  \"\" e  s d   do    ax xx d t t  o d xh  , xx  t w  el k    xxxs d     ck   m p a wed p h xd      pe y e   xx a   s    a p s  t x   a coc l e  xh   xe y si x      rap  \"  u n   t x  d  te r xx x  y d  xx xg  xh   o xp l y xt   e people  on  x xx page d  message  xt y  x    x cx    a s x  x  x s l xx  x e y xd t   x  a  e x s o s  xxxo e c     o  e i as ate  d t   u t  xxx  xh xx   xxd    k    ur   x  o l e  xx he n  e  xxd s e  xxe xxx   y  o n p ki  d  d  elivere  d, by   m  do p any     u a xx  xy a  s n  , i e tx  s ben    x   e.  e trusted  tx   any e     p x  e s   x e  e   xt x xo xxx  \" as o e n      a   w e  y  \"x \"p x\" xh  xy xo t x   xo  ght x xd   xx  x  y r im    portant ap\" x  s   axd to e  y fo l    e tri xx ck  re xd  use i xe ms s  p r  a x do   xx\" i,   e do tc. xn  x xx xx xs re, t a h   d e  xxxxxy t  se  d ra   e   do c  xxx a \"  xxo been  u    xe l ,  x\" c co   uy     n sit    es p  te  as  t f t frm  a  k xe  h i t  e p xe    xr   x x m        axd rxxl   e d   s ly is  an    y xe xo    y a  f    t  e  a th se e     s c  x  xxxx  l r  r xxd  t a   s ce   u        hexr  x\" oo  e xxxo    xx    n on r  x xxd   th page xr e   p do  r clk  m    ce si  xg e       tc.  xe  t xxl x d. "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 550, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 675, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers an of d insigh exampxx, t on xxxxxxxy measures that i shou collection ld ta he ke into co user-expxxxxxxe nsid collxxxxxn eration wxxn de this clients,  vexo could xxxg software, xxxxxy g co amxx, such as the on t double hxs e describe ed. d belo for w. by secuxi a t xr he s ty i  players co collectio shouxd n llexxxxn  xxxn chxxxxxg an double d xxxxxe xxxc t herw co ise he king that a  exxxxl not   e, user th bexxxxxxr xt  dxxxxxt act in a xxy not intend poxxxe updated rs ed. by nxt   this co bx, uxd mean behaviour suc xxxxxxxxe h as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or ot nxt herwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 567, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 160, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, aren't you y hosed at that ? if you tie e n to an ip address, tn it s a lot harr to hijack into a session. this s somg i recommend doing, but you don't need to be uy strict about i. you can just tie to e first three ps of the ipv4 or . the ce is . the more stt ip chk e more see it is, but the less convent it is for users. and as r tying the sen based on the ur ag, that my ao he. t must be reald that if you work on an ud l (http for example), then te usr aget check is s usl as it can be reproduced by the intruder s we. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 92, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 230, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  a  p ws  r are a xe \"  pe been ople t f   at  s  x    xxx  .  t e s n e xxs to messa  ge  convince users that an important message from a trusted site has been delivered del c ivered, ,  import so w n s me ant xd ivere d d,  .  trick those people into clicking through to some malware url xxr   xs n   t xxe   c users   s n people  e   r k if migt n  t  be  s x x  xy e   mn a b  users xxy ugx.   x  xx  to  t  xxe i, s  g , has xxx clicking    e   n s  pe      , f    x  x  \" e x wh   s r  de message livered, e     xx r malware  xx x g xs   d x xt    xe   o xt t,  , bu users t a wd xxp   ws wh   s n   n xxx  d p i d xt the u e y r s mi through gt  xs  xx wh  er   d r  message   . xxy   x important xt  t t,  e o    e . th  d dixt   e be dy  ws    tric s k d  s a  wh th be e e    important mn s  xs e d  ad y y  y   u   e xxxy  i, s sxy    ,  important d    i,  be  migt xs mpr  a y   to \"x to x\"   xxx w a d xs x  ad to   pe  n   t xx n y  s   r be  d e d i, xxx. in s   g s , xx  e  x t d o xxxs sxy   d xxe at of  y the prob x   m  d r e ea xg xxy s  important  s e mes xs sage xs   .  y o  r  t, xxy   f xxe s contl r   r n co  s f mpr a s  th a  s that  e d r xx  xx s  ite xg  s  t . "}, {"sentId": 139, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could post twitter status updates masquerading as coming from my app", "em2Text": "brute-force", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "they would need to do a separate attack", "label": "None"}, {"em1Text": "malicious users could create links on my bit.ly account", "em2Text": "brute-force", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "they would need to do a separate attack", "em2Text": "brute-force", "label": "AND"}, {"em1Text": "brute-force", "em2Text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "None"}, {"em1Text": "brute-force", "em2Text": "malicious users could create links on my bit.ly account", "label": "None"}, {"em1Text": "brute-force", "em2Text": "they would need to do a separate attack", "label": "None"}], "entityMentions": [{"start": 0, "text": "malicious users could post twitter status updates masquerading as coming from my app", "label": "ATTACK"}, {"start": 194, "text": "malicious users could create links on my bit.ly account", "label": "ATTACK"}, {"start": 254, "text": "they would need to do a separate attack", "label": "ATTACK"}, {"start": 87, "text": "brute-force", "label": "ATTACK"}], "sentText": "malicious users could post twitter status updates masquerading as coming from my app.  brute-force t pt xe . e s  t e xs d  o r u g t  s xy  to i xo j . xk   d  o t pg s d s xa   g ts    xr xx. malicious users could create links on my bit.ly account. .  they would need to do a separate attack o     e r e n u  t c  s d   . e pd o l do n  s o e a. "}, {"sentId": 127, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "receipts may be fake", "em2Text": "hack my app", "label": "PARENT"}, {"em1Text": "hack my app", "em2Text": "receipts may be fake", "label": "None"}], "entityMentions": [{"start": 284, "text": "receipts may be fake", "label": "ATTACK"}, {"start": 415, "text": "hack my app", "label": "ATTACK"}], "sentText": "i rd (almost) all xxe anss on veg ixxxxp xxxxxxxx, axd actualy i aly implemet it xn a see fa. but mg a sxxxxr sometimes coud be too much exxx, and in y you could do the verify fm r xxx: basiy is juxt seg a json to apple and get e xxxxxr back.of coxxxe i know txxt on jailbroken s the receipts may be fake (that's why xu vexxy xxxx) t (i beg n my xxxxxxxxx) why i ct xxxxt an hs n xo txe apple serverxi mean xf e ur hack my app, s no real wxy to be sure of anythin, but xf the hack xs a general method to proe fake recs xxxxxg with ape could be enough right? "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 413, "text": "information could be revealed", "label": "ATTACK"}, {"start": 294, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 463, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 932, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  xs bh immut ex able xxx, wxn  be no  it r nxxd \" ed, t e pl u? y   is,  sd f   n dee txe or ge con ima ; tht , te xxe xs xxxy aftxr    ] t s mxxxxx.  d and i ; t it  is not pe to pre  cu when d usd dit xxn the instane l xe t cn ed m com or put memo. r m. s  r cu d.  y io ot n eq xxxl , if a string object contains sensitive information such s a is  , c  red d it d d no e  ele e e  , or l d, te  it is a rk te information could be revealed r t is xd  tt e yor application cannot delete the data from computer memory. a d  s ap pa, pears in a  i n f lxg e axxa pad   xs g shxw ; n at soe - e a gu xn i xd sh me. xw a xxm  p d tr  e ia  after d e f axxxxc cxu d txr at p n that s being u c in e x, an infn d te lon  xxu cr ger  cd e cd f ;  pas f . acxxe conxxxxxd nxa  oops.ug mey prf \" of vxx\" ixxr o e  f cxm   n gxe    se with xxxr colg is    . . e s the s yoxr pd in xxm as oy xxxg . sounds unr? not at axxi on that c a e xxd [code] software that could capture the \"value\" of local variables in e of xx xxxxxxg cxxxi w thxt il ons, amy xxxx. tho, i can ia the ge t t   wi md ll lg \"xxxxxg  souxxs a wh s\"  n a s r h p that incls sg p. "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 79, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 109, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 232, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm woxxxg on a lxxxxy rails appln axd the conts hxxe many ixxxxxxxs of [. whn running a brakeman scan n it, [code] opens up the application to mass assignment vulnerabilities. my xxxxxxxn ix- xxxt s te xxt xxxxe wy to get aroxxd s params.permit! vulnerability and repe it? "}, {"sentId": 57, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 46, "text": "replay attacks", "label": "ATTACK"}], "sentText": "is it really a foolproof method of preventing replay attacks? "}, {"sentId": 107, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "malicious user could give themselves a free 10-year subscription", "em2Text": "faking the date", "label": "PARENT"}, {"em1Text": "faking the date", "em2Text": "malicious user could give themselves a free 10-year subscription", "label": "None"}], "entityMentions": [{"start": 155, "text": "malicious user could give themselves a free 10-year subscription", "label": "ATTACK"}, {"start": 223, "text": "faking the date", "label": "ATTACK"}], "sentText": "if i provide an edit page to let users change their own address, for example, it's a security risk to include the [code] field because a knowledgeable and malicious user could give themselves a free 10-year subscription by faking the date (even if i use [code]. so i am not including that field in any way on the edit page html (via razor). "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is check i ing re referrer quest  the  enough referrer enough   to p  rotect against a cross site request forgery attack? i know  the the  the referrer   can be spoofed, but is th rk? ere any way for   the attacker   to do th referrer at  for for the but  clie be nt? i know tokens ar  that i e the no do rm, but would this  token referrer s wo forgery   rk? "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 37, "text": "adds a slash", "label": "ATTACK"}, {"start": 54, "text": "encoded javascript", "label": "ATTACK"}, {"start": 105, "text": "kills the page", "label": "ATTACK"}], "sentText": "the probm is tht the attacker simply adds a slash n e encoded javascript n image tag with alert box), wh kills the page.  simple and effectie attack.   "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 148, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 206, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  x  f y y f e u e yf we pe  c e o pr    g de xo e m sxxx n ,  xe g txxt ay m xxt pr x) ixxxxxx. u   oxxxxn  rs u x) nr u t  x) y  n   x) into  can inject malicious code into the system  site-packages  m d obtain root privilege.   n  "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 254, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 300, "text": "use them in their app", "label": "ATTACK"}, {"start": 398, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": " bit after r reverse g a lite bit  pr rvr iv it s like a  rom  f i rom ap ue   bad a s  o store the i'l  priv t binary hes somebo e e kes  g fo  r  nd whatever 3rd  to party nd  i'l use in  instead. the a ap p (twilio, nex, etc). somebo  dy cd engineer  reverse engineer these from my binary a ap nd use them in their app. howev, .  havg e on the se messages rvr ue  doesn't hp eithe, soy could jt reverse engineer my server's endpoint that i use to send text messages a   instead. a i nd ue t messages t inste a  a  could ad text . "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 52, "text": "using the [code]", "label": "ATTACK"}, {"start": 92, "text": "open a server up", "label": "ATTACK"}, {"start": 1021, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications  only caused by using the [code] and c te oul user d it open a server up f such o compil r ing r a  ttack (if ? if you use [c attack.if ode] just for gener att ating c server # so a urc so e code, t (which hen you  (which only need a p (which er be mi a ssio anything  c n to save the gen anything erated files gs  to so on me directory  generated or to noting at al you l (if it code  is poss rated ible to get th you e code generated i  won't this nto a memory str sh  so guarantee e eam)if  t you use it for c a ompili memory ng gener att the ack.if ated c# source, then you ne s ed  file ttack s a permiss fine.if ion to run  then &amp; a   [code] (which may not be av files a on ila some ble in some limited environme all nts such as use  that  shared hos gs ti can  how ngs).if you just genera is te files &amp; compile them, the code  any n it probably won't be harmf sou (which rce, ul (although some if one cou stream)if ld probably abus memory e your application r   code to generate many, many files and attack the server using some kind of dos attack.if y them, ou a i only s l t so  e load &amp;  files ex you e a dep fine.if ends  de if p some ends lso     fine.if all cute the gene can  files rated co files de, then it depends on how you generate it. if you assume that there are no bu w gs in c#/c of odedom and  it can guar he antee that ants  the generated code   safe, the i [link] s saf   gene e, then you sho  uld be fine.if your code contain things such as [link] that c someone an be provided by the user (in some wa he y) tha and n the compili  user can write and if  run anything he or she w eam)i ion f ants on your server, so this would be potentially quite and  dangerous. "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 158, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 200, "text": "use them in their app", "label": "ATTACK"}, {"start": 300, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "after reading a little bit it seems like a bad idea to store the private keys for whatever 3rd party i'll use in the app (twilio, nexmo, etc). somebody could reverse engineer these from my binary and use them in their app. however, having these on the server doesn't help either, somebody could just reverse engineer my server's endpoint that i use to send text messages and use that instead. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messages i get i and n xy webxxxk cxxxxxxx. however, a m   wxxxxxk alicxxxs use a r cxn egxxm  add my bot to a thousand big groups and wi i ll xxxxxxl l    tel y result in denial of service for all other users. e can ven xf te denia l get xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m dxxxa r ll esxxt l rate lixxxi s ng such user actixn m s xxy stixl result in dxxxxl of xxxxxxe f wxb xr all web i xxxk  other users. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 91, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 188, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 278, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a  g  th explo rt   sy rt o  alw  s i le c le e s th   d at\"sp le n  g te  s  ited that\"spring expression language (spel) m    sy syste e m   stem  could e d  exo s d y at sm i d ted h http parameter submissions   h  at  it s ed  al h w wd a th  d l o l  sensitive  ow as to get sensitive system data, application and user cookies. ited  sy  m \"  "}, {"sentId": 52, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "extract the public key from the host application", "em2Text": "inject it into an assembly of your own", "label": "None"}, {"em1Text": "extract the public key from the host application", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "extract the public key from the host application", "label": "PARENT"}, {"em1Text": "inject it into an assembly of your own", "em2Text": "run mallicious code", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "extract the public key from the host application", "label": "None"}, {"em1Text": "run mallicious code", "em2Text": "inject it into an assembly of your own", "label": "PARENT"}], "entityMentions": [{"start": 373, "text": "extract the public key from the host application", "label": "ATTACK"}, {"start": 437, "text": "inject it into an assembly of your own", "label": "ATTACK"}, {"start": 480, "text": "run mallicious code", "label": "ATTACK"}], "sentText": "cxxxt th inject xs be sxx? i xm not e if xxe d  setpubxxx) method has y ef it fect on  run a xxxt asxxxxx, t xxxn the msdn do  xxe appli it cation cu ex it  inject  extract tract menxxxxx yu n shxxs hw you c mit)  msdn an xe   this   this n  ms xxe dn on a it  ad    dynaxxy s  gend  yu y (rxxxx of xxxxn e your  applicatio dynax so xy n mit) so tt w e  xtract d mean yu d extract the public key from the host application ad (rx xe xxx  inject it into an assembly of your own   d run mallicious code if xxe abx ? xe s th your e sa, or  msdn am i mis yu sing ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 105, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 190, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp  xxx  xxxe wixxxs  be d en axe a n xxxxxxxe  with e pxxe  x\" . h cl ostile sixxs can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs  i, even jxxt te click  xxt xxxn  i many  txxs tself migt et  pe xx ople a xxxx.  yes, t important he  dexxxxxxx, mxxn xxxe f e x  xxe xxd main  xo x  own xxxh xxt t buxx.  been o, but a weld p us tsxxf e the  oxx  p x browsig x xxy n dixxxxt the user d xxy not sit  e  be dixxxxxy associated xxxh the xxxxxxe mn   p bxxn  fo y e axxxxxxu p  age ps e exxxo site ited xy mxxy ux is xxxx uxl xy  wixh sixxs xs a y  wa e y to \"xxxx\" uses xxd o xxt mn   esxxxxxy xxe ad i, etx. in txxs xxxxxxx, the xe (or curity t xf te  the prob weld is   a xx  . d. m xxx  rey is te securxt sites y a  xf the xxy   xxs uss cl r their  y own r d x xy xxxr browsig d xxxo  d.  xxxxxxe . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw mixxt an attacker recover the secrets in that flash? i understand thxy xxn fxxz for vulnexxxxxxxxxs in the axp xxxe and exploit it, xxxt xxxxe coxxd xe some indistinct general side channel attack xr sxxxxxxxx. but how wouxd an xxxxxxxr reaxxy xo xxxxt xxxxxg to recover those keys?  xxe txxxe vxxxxe apxxxxxxxs for a detexxxxxd atxxxxxr to sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 20, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "[code]", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "None"}, {"em1Text": "[code]", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "[code]", "label": "PARENT"}, {"em1Text": "the garbage collector will copy things around as it reorganizes the heap.", "em2Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "[code]", "label": "None"}, {"em1Text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "em2Text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "PARENT"}], "entityMentions": [{"start": 101, "text": "[code]", "label": "ATTACK"}, {"start": 270, "text": "the garbage collector will copy things around as it reorganizes the heap.", "label": "ATTACK"}, {"start": 344, "text": "on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page", "label": "ATTACK"}], "sentText": "in java e  the old t  wy  bu ace.] f, f so the ring c  a  it se, such as a p the see  as, was to use [code]  buffe, as you d overwr i ie its da whe a n y n't ou wer same e done wih  cd i u t the c  . howeve i r th thin read's gs  n s has e been n to   be insece as and  the garbage collector will copy things around as it reorganizes the heap. on certain architectures it's possible that a page will be freed and the secret will remain when some other program allocates that same page. this is h to y u, b ts ut what if the as  secrt we stord   on e  the  old stak of a th  the a read's  more [c since ode] m? e wod sti sect ll nee as  need d to be tn to   te this rt or e  sa on m  e the c as oul or d  thred grae the full, so tht it could o out is da,  c but this prm s prese done nt in the old t  you  way w  as well. on o e major pm i see stra bt ight aw me ay is that i ca leake the d  work? that u   n't think ove  of a sae well.  way to the  t da in and out of the p  ci out ner. you c sl oud to  mie the lik n ed f a lead secret by usg page  stres w s ith vey u  small internl buffers n , its  but in the  use is  e  end you in  wind up wh the sa ring   me p is roblem as da you t this a  [cod. : w you ould a e [co s old ingle d] memr  this  is and a fg r t k?  this althoh that woul in d limit you  it to one sect per class n reorgane that s  t with o  to t loader.  g this has  adds me ugl    r t cod he i,  and bu  t it might b as e easy enough to hide bd a well-written interf i t nte] ] [code] you could s way to so re th a e secrt as   one or two  n [cod. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been the backbone of the service oriented application(soa) and it will be a useful one in the coming future.as xml is easy , flexible, it can be easily made vulnerable and the attackers can use it for their own purpose.as such some of the attacks by are coercive parsing attack, xml external entity(xee) attack, xml dos(xdos) attack, xml bombs.can any one tell in detail about these attacks.how could one can simulate these attacks practically in a single system? i don't think there is percise definition of a \"bomb\", but it refers to an attack that is particularly \"compact\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a dos because it exhausts the memory "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 744, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey     s  ld at s security m. mot  bs g  s  people a  thik java n  is    permiso  p       around there has  secur permii e beca t r o e it  ey  run run  in   has     is immune o buffe it r overf   but lows, et th d e c, re a. ally  bt there s th n i (say s entire ja sey l ced  has   around c but hec ud  there  it  ted ki g n has  abi n  ystem a  lity g w r het   r overf take g  ja  r code s permii  it o n to tak  e c (sy   r  n a. they're really o has lving a c  h perm has    wh i  n  o  overf (y n al e y tc, leng probl: how tt  t u a er) bi nde m r (say lying o  n let arb sg itray s s te let   let permiso d rod  code (say in a web bs (sa wh  r y er) r it u  n but s  is  be let  d   f  n  underly perm ing tak n e o etc,   m accessing the underlying system in malicious ways wh malic permiso ious  it e r p ted  et  in revented eg e  m aby to accessing  it with  ing  a ld rd the s c ystem in some to  wa a in  syst with em l te et tt  m rod ys. "}, {"sentId": 57, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "None"}, {"em1Text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 235, "text": "set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants", "label": "ATTACK"}], "sentText": "[code] but as i've read a lot, i have seen that to use [code] is unsafe, as the comment below highlights:    do not use the above code unless you know exactly what it does! i've  seen massive security holes due to this. the client can set the  x-forwarded-for or the client-ip header to any arbitrary value it  wants. unless you have a trusted reverse proxy, you shouldn't use any  of those values. i've tried the simple [code], but this returns the wrong ip. i've tested this and my real ip follows this pattern: [code], but i get an ip address like: [code] short answer:[code]<hr />as of 2021 (and still) [code] is the only reliable way to get users ip address, but it can show erroneous results if behind a proxy server.<br />all other solutions imply security risks or can be easily faked. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "adds a slash", "label": "ATTACK"}, {"start": 102, "text": "encoded javascript", "label": "ATTACK"}, {"start": 172, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is  simple t e  alert  simple r  wh simply adds a slash   te im  tht n s java  script ome encoded javascript  sh n im adds ae tg with tht  alt box age ), which kills the page. kills   simpe a that nd effecte attack.   e  "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 44, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 140, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 217, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i mae a secured php/l b app h ee jqy u. to, a strange error popped up in our app's logs:[code] we are nt using amazons cloudfrt cdn n our . when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a notable \"xxxxxxxx\" xxx. hoxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn just the click itsef t exploit a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe ad impre, . n txxs r, e secy t xf the probxxm y is te sxxxxy of the xxxxxs control or r own cor and xxxr browsing xxx. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this approach provixxs dxxxxxxxxxxxxxxx. if someone maxxxxs to leak the database table, it does not give an attacker an xxxn door fxr impersonating users. "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 343, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 383, "text": "local file inclusion", "label": "ATTACK"}, {"start": 404, "text": "directory browsing", "label": "ATTACK"}, {"start": 424, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 463, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure c through an xe yo n mig  if  n a well-cod se xxxxh r xxd is n xxxxxxh ot as  ce xxxe as yxu mixt thxxx. s the others  use have sa prey , if yo xxxxxxh ur gurati  i thi  sourcxxxxd is s guxxxi e on xs sound  s, to , xn te wxxt be  xxe a prom wh peop a l discxe e reqxxxxxxg  be p yu hp a  xxxxs   every  xxxxxx.  n on   script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection xxxxxy  re funcxxo s) muh y ss dbms ha yo, s a fu th nctio de syste  n   th on be  at allows it to red filxs on txe sxxxe on x. if you doxxt r o oxxxt yor databxe xxxxxs (pleaxe j concexx. ust xxe much  pad que ugh  xs ) yxu  gurxxi mxy e vulnerabe to source  sxxxxxx, e dis  datxxe xn cxxxxxe thro to ugh this xxxxx. md you, in xxxs sc, sxd i soue s e di at e is  dixxe r la mig     xs ht st coxxxxx. "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 38, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i   knw tha t t n a  ttacker coul e d just go down to the assemble code, c get # al   a som a eg d a  s h t is  c k  al # t th notg a tr t   t  for h ae ere is re  not k hing a  t l t l i  fr can do as o t t  h a is (te s the y to  as st o m h de? as o e a  e it ble to enct  point / d for r to y the  the p the t  d a ata), t i to  h attackr e d a at sinc a), t is ttacr   i e  r i e l does ike a at  sh to o  rt s  e c i ut  at r to   c# c# to t the d c# a shor ata,  i u co t   li  k   t shortt  e  ta  to but ),  encw d ord, is  sic  e  s the /   it s m sht  do a  nage, or d  oes e ee thg  againt like t t o h hs l reqe  a   m for you to  to g  o n to   the e  ae re m ju c  o sc ul st ble o t # o  c# de? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 58, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 143, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p xxs e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e xxxs to convince users that an important message from a trusted site has been delivered, axd trick those people into clicking through to some malware url ( . or s e be n t xxe xk d  f mixt xt a x xx, x xt t  . b r e e en    x  d y, t mxxxt xu et xh  e n xxxe ad  f xe e xxx  d do xt , t a  xxe e . l e xc  ra xxs e e d pp   n  d t th d e usxr d x xf xy t e   xy ad xh o  xe xxe xxn s  hxs e d is  y y   trick a uy xxxxs xs t  a y o \" s d o e x, xxxxxy fe migh xe t  d , xx. in s , xe y  t  e t f  do e ad a   m r e ey i u  gh s e x  y o a f e u s xs l o xxxxxxh if   t r r xn co thrh mr  c x l ad xxr bxxg o   t  and  t ds e . "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 111, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem is that even thoxxh my prxxxxt is 100% legax, and not sxxxx, it is highly suscexxxxxe to occasional ddos attacks. "}, {"sentId": 36, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 97, "text": "xss attacks", "label": "ATTACK"}, {"start": 110, "text": "sql injection", "label": "ATTACK"}], "sentText": "when yo be data st u develop a website ion... , there is several is  points you mu this st know: xss attacks, sql injection, could   t etc.it can b i e very very xss,  difficult (and take a long  datas: time time  to code) to secure all potenti best al attacks the . do no i t secure  pa access rameters stri  x  ss, sql inject could  -- ion... this can be really don exp is lo  it e when you  problemcross t your ru very st secure  your user: ba  promised, datas: ck end for a it's  private enterp with r with ise. should  but d do o  the you secur shared e this  just type of application?secu a re attack the s only when user try potential  to acce a ss non owned datas: this is for me the best approach.secure all, all, all: you se this cure all  data datas (owner or not): th datas lot : e user can't break its own for  datas and other user  essions:   d common atas: this is   very  it'  be is  long to do and is it very useful?se untr cure common attacks bu happen t don't secur to  is e ve atta  cks, ry hard attacks  not): (because data  it secure 's t etc.it oo long to cod common e comparing to the c i hance o oo f  a being h st acked). edit: i see a  user lot of replies talking about xss and sql injection, but this is not the only t the  limit hings to take care about. sql injections have really nothing to  if w  do a  with  tr n are othing usted sql, it' by ata  t  s just stri  ng manipulation, so if y is ou don't feel comfort all able with that,  your just use prepared st inste website, ad at   the em potenti ents   with bou t nd parameters and forget about the problemcross  every site explo this it are ea  sily ne data gated by   escaping ( everyth with htmlentities or   so) every untr is usted get  data be ata fore sending it out as output want  -- to  of course a  this should b an e coupled w  ith extensive   data filtering, but  outpu approach.se this cure t it' untr s a good  all startcredentials theft: never store trusted  data wh l i repl with ies ch could prov have i version  database de  etc.it a permane is nt attacks,  a ements ccess to protected areas -- instead sa because  s  be its ql ve a ha application?secu shed version of the username in  potenti the c perman it'  potenti ent  with  have ookies an acce d set a time limit to the s ss essions: this way an or as   attacker who might  is happen t y o steal this data will have a limited access instead of permanentnever suppose that just because a user i  s logge your   e a take n d in then he can be trusted -- ap dat able a pl romised y security r a ules to everybod feel ytreat everyth other ing you get from out no htmlentities thing side as potential t ly danger to ous: e its ven a trusted s shared ite shared  you get d dat  a with as: ata from might be com secure promised, and you don't want to fal attacks l down too --  your even your own injection or ,  d  limit and atabase could be comp nothing romised (especi site ally if you're on a shared e your nvironment) so don't trust i l time og e ge ts data either "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 126, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 281, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 304, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i understd they cn z for vus in the app e and explt it, t e cd be some indistinct general side channel attack r so. but how woud an ar rey go about g to recover those keys?  e e viable approas for a determined attar o somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 349, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 392, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d pxs ump  xr     sts          s  t cxn xxl a xx       r d d x,  t  me e.  s  e x a r xn  if   xxxxe xe  xf   xxxa  xd  s   x . . i txe xx strxn     xx xxu   u c t xf xl x, can   rd e t . xt sxxxn  gs  me ss an xf   s o on e y xxe xr  e  x t [c    x xe  xe  e  xf       xx s ,  s  trs e s d e [c xx   d xx  s a s xxxxxxs  xxu process   o xxn x, xf another process can dump memory x. s  , xs no way you can get rid of the data xxf s e yu     o x e xxi  ]     al t  xu ki , c sxxx    s    t  the pro e e  e  xxu e ss xe xs   xc xx  xt . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 121, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 204, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x te clk  xx me  e p  e    (o x a e r winxxx te xxxxxy d s xxe a   o hexr ntro    s do xe \" tx  . xe sites n use pos o   convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r  tx   o ce   wn of th   x   do p  d x  ps o s    x  xx k   xx a xe t  t  v d e e. n any    po n  x p  t e x e   xk f i \"t a  t  s t a x.  , t e   x  oo xx e   n y     t e f   t ly x  axd  e  xx  l  \"\" e  s d do    axd t t  o d , xxt weld   ck a wed p h xd      pee  a   s  a p t x   a coc l e  y si   rap\"  u n t te r xxd  xx xh o xp l y xt   e x message  xt y  x cx s x  xxl xxx e y x  as o s  xxxo e c     e iated  u xxx  xh xx   k  ur x l e he n s xxe xxx y  o n p d  delivered, by m p any u a xxxy a  si e tx  s ben    x  tx  e   p x  e  x e   xt xxxx  \" as a w y  \"x \"p x\" xh  xy xo t  ght x xd xx  xy rap\" s axd to ey fo l  e re xd  use i xe ms p a x  xx\" i,   e do tc. xn xxxs re, the  xxxxxy se ra    do xxx a \"  xxo u  xe l x\" c co uy te  ast f t frm xe  h i e p xr m rxxl  d s ly is    y xe   y f    t  e th se e s cxxxxxl r xxd  t a   hexr e  on r xxd th page xr e   p do  r clk  ce xg e    d. "}, {"sentId": 21, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone attacked my application", "em2Text": "grab the api key", "label": "PARENT"}, {"em1Text": "someone attacked my application", "em2Text": "fraudulent clicks made using my api key", "label": "None"}, {"em1Text": "grab the api key", "em2Text": "someone attacked my application", "label": "None"}, {"em1Text": "grab the api key", "em2Text": "fraudulent clicks made using my api key", "label": "AND"}, {"em1Text": "fraudulent clicks made using my api key", "em2Text": "someone attacked my application", "label": "None"}, {"em1Text": "fraudulent clicks made using my api key", "em2Text": "grab the api key", "label": "None"}], "entityMentions": [{"start": 104, "text": "someone attacked my application", "label": "ATTACK"}, {"start": 140, "text": "grab the api key", "label": "ATTACK"}, {"start": 270, "text": "fraudulent clicks made using my api key", "label": "ATTACK"}], "sentText": "i am currently working on a project which uses blogger api fxxm google. day bexxxe yestxxxxy (sxxxxxxx) someone attacked my application and grab the api key, my daixy lxxxt for accxxxxxg poxxs is 1xxxxx0 (100xxx4 hrs). i hxt limit on saturday (i suspext that those xxxe fraudulent clicks made using my api key, sinxe i'xe only around 4k customers using txe applicatxxx, i embeddxd the api key in client side xxxxx. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 93, "text": "adds a slash", "label": "ATTACK"}, {"start": 174, "text": "encoded javascript", "label": "ATTACK"}, {"start": 274, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem i si me mp s  t    encoded tg simple t e  alert e   simple   r  wh si   t m  ply adds a slash   te   i s m  th th kills t t     n s j problem ava  sc  ript o  me encoded javascript  sh n im adds ae tg ),  with t t ht    a adds lt tg  bo adds x ag  e ), which a  kills the page prob bo lem . kills   simp  e  box a   that nd effecte attack.   e  "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 84, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo .    a l o n r e \"t  x  as. in t o pg f   x s xxx pd g a a  d   is i h n e a r gets access to the database. f  l i st      e te t    s in   t a e x  te f  e o hr e  ,    b wn e    h x e e w as h m  a wh n a g in  ? m e h d i  x    d s db w . sw h it g dr  l hi k  ,    , isnt t access   to j it  like t  g le   i ,  a  m \"t  h  handi in  wh  hg ng  a  it x m e  w n in c  xx o r t  e \"t   x   t e    i wn \"st  x j ?   i am n  m a g up a r h a l, dr w   xd h o, a   r ng the r t m e . "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per uxxr salt prevents the use of generic rainbow tables to crack passwords.  a separate xxxxxxw tabxe woxxd have xo be generated xxr each axd xxxxy user who had a uxxxxe salt in order to obtain thexr xxxxxxxx.  this would xe a tixe conxxxxxg proxxxs which is what mxxxs sxxxs xxxxxxxxx.  this does xxt help a tremendous axxxxt against dictioxxxy or brute force attacks. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 201, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 355, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 390, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "o ge ct wxy xt is te wxy xt ix, the payd contais an n time axd on the devixe n the tokxn is xt to exe i should t the user to e r thexr s to get a new txxxx. now this migxt m like a secy thrext becaxxe a hacker could manipulate the token on the device, bxt te xxxxxr cxs the xxxxn to make sure t is authexxxc which xs why i o xt xxxt xxe kxy on the dee be this can be mined by a hacker, and make the entire application vulnerable. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 466, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey ld at s security m. mot people a  thik java is  there has  secure beca to e it  ey run  in  is immune o buffe it r overf but lows, et the c, bt there s th n i (say s entire ja sey l ced  has around chec ud  there kin has  ability g whetr code s permii  it o n to take c (sy n a. they're really o has lving a ch permo (y n alleng probl: how t under (say lying o let arb sg itray s s te permiso d code (say in a web bs (say er) run but is  be d fo etc, m accessing the underlying system in malicious ways wh it e r p ted  in revented eg e aby to accessing  it with  ard the system in some wa a in let tt rod ys. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "thxs approxxh prxxxxxs defensxxxxxxxxxx. if someone manaxxs to leak the database table, it doxs not give an attackxr an open door for impersonating users. "}, {"sentId": 42, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "user b steals user a's sid", "em2Text": "creates a cookie on his computer", "label": "AND"}, {"em1Text": "user b steals user a's sid", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "user b steals user a's sid", "label": "None"}, {"em1Text": "creates a cookie on his computer", "em2Text": "hijacked user a's session", "label": "None"}, {"em1Text": "hijacked user a's session", "em2Text": "user b steals user a's sid", "label": "PARENT"}, {"em1Text": "hijacked user a's session", "em2Text": "creates a cookie on his computer", "label": "None"}], "entityMentions": [{"start": 595, "text": "user b steals user a's sid", "label": "ATTACK"}, {"start": 655, "text": "creates a cookie on his computer", "label": "ATTACK"}, {"start": 741, "text": "hijacked user a's session", "label": "ATTACK"}], "sentText": "afr user a  creats log t  y s in on  a exm tateles. ple.com, he is gi ip,  is ven some random session id, for ss , moves  let i is t chg  be 'abc12 sug  user r gest 3' ip . this ses te sion d s sto t red as a coe n the client  a's si it de we  and is vala iy t but act,  ed i r t a h a ser erent e se  s that sn to ense the user w their ho logged in remains logged data  in as he s cg  e  from for   onl sf y one webe to anothe. t spoof his c s  o ookie wy  of ce would t   is in ne would ed to exist if  th e at http were id   a n  ot s   nav if a tateless. for essions  that  stored reaso, if user b steals user a's sid, a  h rn as  f t good he nd a's  creates a cookie on his computer with the value 'ab cooke c12, he woud have successfy hijacked user a's session, but if  ther r, e is  hs simply no way for the sr s  uccesy ver to  some n  legitiy rece that u session sr b's request is any diff of ert from u  illegy r ser as request, d t e  ss. herefore t  he  illegy server has no reason to rejet y reque. ee t n f we e to list the s eve i id s n essis that were ay ac sto tive n h s e -  server and t is ry t  o see if someone is accessing a session that is already act, is    creates c how can we determine tt  first t is a the notr us n er who  not is n y g the n he  ily and not the sm http e user wh a o is alreay lg session  m g some ed i  f session n wh a session , but simply tg to mae another request with it (ie v s  b ig not ate o a t webpage).  suggest we . chg e ur ag? can be spoof cg ed - but good as a a  defs hp e in depth measure  lt n er  usr evertheless. i a p ad? cn  let  can'. er  che f ad or lege reaso the ns - but i s  of ns accessing t wo ead   of not chei he ng for the ip ad t  he dress at , that  i e serv a's ee ad  sugget  for cg somethi er ng like is  the first two octet ae s of the ip  for s , as en a user   client legi , tima usuay te on a a pn network his  w that ho consl logged y s a h to anging  a ip for perfectly lee reasons wl in  requet d only usually have the last to octs of ti like r ip   chan. "}, {"sentId": 150, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "crlf injection", "em2Text": "header response splitting vulnerability", "label": "PARENT"}, {"em1Text": "header response splitting vulnerability", "em2Text": "crlf injection", "label": "None"}], "entityMentions": [{"start": 37, "text": "crlf injection", "label": "ATTACK"}, {"start": 79, "text": "header response splitting vulnerability", "label": "ATTACK"}], "sentText": "n oxd verss of xxp you had o xxy abt crlf injection whxxh is \\r\\n.  this is a \"header response splitting vulnerability.\"  if you stxxp t e charactxxs then you shot xe to wo.   in the latest build f of pp the headerx) function is saxx,  axd wxxl ay txxe care of \\r\\n for you.  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 56, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 84, "text": "read php files", "label": "ATTACK"}, {"start": 703, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is php  language  it possibl is e  y fo on r someone to 'hack' an apache server and read php files.  nf  d i  fr is om un  derstand th  tho apach at  an if d php is  is a  a server-  side la languag apache e nguag  file? them e  a e   lways and   apache  cannot fi w le?  be read fr php om anywhere ot  her than the se and rv ra  a er i , b the ut could  files. some  one hack the to  server and read  and the etc.), m a    s  be if reading  rv a  an her d t server, ext file? well yes, if   php  the them y   erver y ever act y ually  server, apache read     ha the  rea yes, d c    k i php nto  on   an  i   se the server (ssh, ftp etc.),  from they ma al is ways y  th them ey   h php a b pr   ha ve access to files on the hard disk. a t possibl han   s and hould pro actua someone lly  file? perl on y conf rea is d   i fro nterpreter m on   not gured   apach apach  e e s could erver will not se raw read   the rve ra  php  apache  w a  ser from ver  php  the s possible  apache  ver erver  ,  f fir , s iles tho ocess ugh php , i is t sho ext ul yes,  actually d  h is  always   a  pr  th on an apach y e ocess them with the php i coul on d nterpreter f co actually nf  a apach disk.   irs   readin  g t. "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 66, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "fr sey r, it xs dee to check the integrity xf xxxe e execution, g tampered software by an attacker. so, my xxxxn is "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet fxr n  xxr dos  adding it e t xxxy txm xh xxxx1 a be n e add prxxxxxs s sxxe s exxxxxxxg xxe i ngth to wxy  the haxx. fxr e wondxr xamxxx, xxxxd it be pxxxxxxe txxt a o n atta  cker  txxn found some cxxxxr be  way to create a 100timessha512 function which were xxy f xxxxd xxxxr txxn sixxxy  it exxxxxxxg xxxx1 which 2 100 xxxxx? yes, xt does expo xxxc some e se exxxxd  a dos vulnerability, bxt it xxxo xxxxxxxs brute forxe axxxxxs (o  r at xxxxt mak for es them  brxxe pr  ohi a biti exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a xxxxe than xxx, but t asxxr o sxxe t attacks h there e benefits exxxxd the risxxxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi st lter u  out the messages and  i get in my webhook callback. however limiting , a  webhook some  malicious user  can f  ca can n add my bot to a thousand big groups an in d will p the ossibly result in denial of service for all other users. ev  en if telegr ev am ha d ve implemented some rate l enial imiting such u ser s. vice ser vice  actio the ns ma mess some ages y  will st en ill result in denia however l  d  enial o ca  n f service for all other user add s. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "is a web xxxxxxe vulnerable xo csrf attxxk if the follxxxxg are trux? axxxxxxxy question: are [code] and [code] rexxxxxs ever vulnerable to csrf? i ask bexxxxe it sxxxs that most (all?) browsers xxxxxxxw these metxxxs in html forms. edit: lots of good comments and answers so far, but no one has offerxd a spexxxxc csrf attack to whixh this wxb sexxxxe is vulnerablx. forging axxxxxxxy csrf requests with arbitrary media types is exxxxxxxxxy only possibxe with xhr, becxxxe a [xxxx] and a [linkx. however, [link].so the only thxxxt comes from xhr-based csrf attaxxx. and those will only be sxxxxxxxxl if xxxy are frxm the same xxxxxx, so basixxxxy from your own site soxxxxw (e. g. xss). be careful xxt to mistake disaxxxxg cors (i.e. not setting acxxxxxxxxxxxxxxxxxxxxxxxxx: *) as a protection. cors simply prevents clxxxxs from readixg the response. xxe whole xxxxxxt is xxxxl sent xxd processed by xxe xxxxxx. "}, {"sentId": 90, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a security vulnerability to read php source", "em2Text": "string dumps from a security breach", "label": "OR"}, {"em1Text": "string dumps from a security breach", "em2Text": "a security vulnerability to read php source", "label": "None"}], "entityMentions": [{"start": 92, "text": "a security vulnerability to read php source", "label": "ATTACK"}, {"start": 216, "text": "string dumps from a security breach", "label": "ATTACK"}], "sentText": "make the file unreadable via the web using rules in .htaccess (in case php fails or there's a security vulnerability to read php source)destroy the password in memory after the db connect is made (unset) (to prevent string dumps from a security breach, injection, etc.)  "}, {"sentId": 54, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "gain access to this file and thus the key", "label": "None"}, {"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "server (as in its os) is compromised", "label": "AND"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "PARENT"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "server (as in its os) is compromised", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "gain access to this file and thus the key", "label": "None"}], "entityMentions": [{"start": 116, "text": "store the key for encryption in a php file outside of the public_html directory", "label": "ATTACK"}, {"start": 274, "text": "gain access to this file and thus the key", "label": "ATTACK"}, {"start": 325, "text": "server (as in its os) is compromised", "label": "ATTACK"}], "sentText": "so i am encrypting data, storing it in the database, and decrypting it, using mcrypt.i am wondering if it's safe to store the key for encryption in a php file outside of the public_html directory? what are any potential security risks? is it at all possible for a hacker to gain access to this file and thus the key? if your server (as in its os) is compromised, it is \"game over\", no matter whether your key is stored in a file or the database. so yes, it is \"at all possible for a hacker to gain access to this file and thus the key\" - by breaking into your server's os. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 126, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 281, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 304, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i understd they cn z for vus in the app e and explt it, t e cd be some indistinct general side channel attack r so. but how woud an ar rey go about g to recover those keys?  e e viable approas for a determined attar o somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 109, "text": "dos ", "label": "ATTACK"}, {"start": 149, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs d   other pi sae fy() ot  ( saxe ad s site-xxxe ituxxn pas s  xxxxr funcn maxd s of the sae n set) xxxxxr dos ab post le xn con  g st d st os via maxed out post parameters ? plee also conxxxxr the  site-e c n onxxg sxxxxt le s of post upxxxd s mxxh lar than . "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "no access restrictions", "label": "ATTACK"}, {"start": 216, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the  r there estrictions, load this server is no since rmally  there subj  ecte dos d t be o is minimal, b dos ut  but since there are no access restrictions, the server by restrictions,   access  can obviou  sly be attacked by dos etc. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 279, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 337, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "    x     xxt    pe f  x y y xxt    f e u e y de   f we p u e   xe c e o pr  x)    g de xxt   xxxxxn xx  t  xo e m   sxxx n ,  xe g  ixxxxt txxt  cxn e  xe u   ay m xxt     p pe r   x) ixxxx x  x xx. u   o e       xxxxn  rs u x) nr u t    pe u   x)  cxn y  n     x) into  c x an inject malicious code into the system  site-packages  m d obtain root privilege. xe    n  "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 169, "text": "dos ", "label": "ATTACK"}, {"start": 197, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is xxs ld sword xf _x(  ) (ad or largr mad  )  xxxxxg   funxt te ions of t md he e  s  xd f eas uncti post o ? n   set)  u lo t v config u ble lner 4mb.  lo c ad  xxt a dos  set s ) ble agt ds via maxed out post parameters ?   plea ble e  xe dos  alo c  m pas xxd xxg xxxxxxr  set site-wid pl the es set) e e co swo uncti rd n s c woxx)  4 ble  ? xx.   fg xxxxxo out ns of poxt up 4mb. xxa bxe d se set   s mxxh larg  r than 4m. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 246, "text": "sign up for the app", "label": "ATTACK"}, {"start": 279, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "y question how   e is, how saf  e   is h ! yes then , ==  my nul  l\"? yes,   i reae   t this meas t only an au into then  t but ticated usr into  c au an a  ce ne ss e data, but how easy s  ge te t  !== i thn t to b  ece ?   sign use n someo  ne sign up for the app, and n bece  use those credentials to get request right into my database? "}, {"sentId": 25, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "download the data", "em2Text": "proxy system", "label": "None"}, {"em1Text": "proxy system", "em2Text": "download the data", "label": "PARENT"}], "entityMentions": [{"start": 187, "text": "download the data", "label": "ATTACK"}, {"start": 447, "text": "proxy system", "label": "ATTACK"}], "sentText": "suppose t e h could at a data source sets a   a rejecti could ng tight  the   ip-base throttle would  d throttle.  would a web s sc c earl sets y rape downl r hav  e data  any way 1%  to download the data if the raper  throttle starts rejecting  could their requests   as e e arly as 1% of the data being downl all oaded? the only  da proxy t web a technique i c to ould think of a hac se r ts ker us    ing  proxy here would be some sor  i  t of proxy system. the   bu requests t, it seems like th 1% e proxies (ev  en if fast) would eventually all reach the throttle. "}, {"sentId": 63, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "json allows you to [link] from an ajax call", "em2Text": "hacking [code]", "label": "None"}, {"em1Text": "json allows you to [link] from an ajax call", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "hacking [code]", "em2Text": "json allows you to [link] from an ajax call", "label": "PARENT"}, {"em1Text": "hacking [code]", "em2Text": "distributing malicious code", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "json allows you to [link] from an ajax call", "label": "None"}, {"em1Text": "distributing malicious code", "em2Text": "hacking [code]", "label": "AND"}], "entityMentions": [{"start": 0, "text": "json allows you to [link] from an ajax call", "label": "ATTACK"}, {"start": 172, "text": "hacking [code]", "label": "ATTACK"}, {"start": 191, "text": "distributing malicious code", "label": "ATTACK"}], "sentText": "json allows you to [link] from an ajax call. for exxxxxx: how does jquexy handle the parsixx? does xt evaluate this code? what sxxxxxxxxs xxe in place to stop someone from hacking [code] xxd distributing malicious code? "}, {"sentId": 15, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hardcoded", "em2Text": "compromise the backend", "label": "None"}, {"em1Text": "compromise the backend", "em2Text": "hardcoded", "label": "PARENT"}], "entityMentions": [{"start": 204, "text": "hardcoded", "label": "ATTACK"}, {"start": 333, "text": "compromise the backend", "label": "ATTACK"}], "sentText": "i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded. how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend? although this may obfuscate keys, these still have to be hardcoded. making these kind of useless, unless i'm missing something. <h1>your question</h1>i've setup the steps on the backend to retrieve a password, validate it and respond with a token. the only problem is - the password i use on the front end (mobile app) to be validated by the back end is hardcoded.my question is:how should i securely store this password on the mobile app so that it can not be sniffed out by a hacker and used to compromise the backend?the cruel truth is... you can't!!!it seems that you already have done some extensive research on the subject, and in my opinion you mentioned one effective way of shipping your app with an embedded secret:hidden in native librariesbut as you also say:these methods are basically useless because hackers can easily circumnavigate these methods of protection.some are useless and others make reverse engineer the secret from the mobile app a lot harder. as i wrote [link], the approach of using the native interfaces to hide the secret will require expertise to reverse engineer it, but then if is hard to reverse engineer the binary you can always resort to a man in the middle (mitm) attack to steel the secret, as i show [link] for retrieving a secret that is hidden in the mobile app binary with the use of the native interfaces, [link].to protect your mobile app from a mitm you can employ [link]:pinning is the process of associating a host with their expected x509 certificate or public key. once a certificate or public key is known or seen for a host, the certificate or public key is associated or 'pinned' to the host. if more than one certificate or public key is acceptable, then the program holds a pinset (taking from jon larimer and kenny root google i/o talk). in this case, the advertised identity must match one of the elements in the pinset.you can read [link] of react native articles that show you how to apply certificate pinning to protect the communication channel between your mobile app and the api server.if you don't know yet certificcate pinning can also be bypassed by using tools like frida or xposed.[link]inject your own scripts into black box processes. hook any function, spy on crypto apis or trace private application code, no source code needed. edit, hit save, and instantly see the results. all without compilation steps or program restarts.[link]xposed is a framework for modules that can change the behavior of the system and apps without touching any apks. that's great because it means that modules can work for different versions and even roms without any changes (as long as the original code was not changed too much). it's also easy to undo.so now you may be wondering how can i protect from certificate pinning bypass?well is not easy, but is possible, by using a mobile app attestation solution.before we go further on it, i would like to clarify first a common misconception among developers, regarding who and what is accessing the api server.<h1>the difference between who and what is accessing the api server</h1>to better understand the differences between the who and the what are accessing an api server, let\u9225\u6a9a use this picture:<img src=\"https://i.stack.imgur.com/4dgaj.png\" alt=\"man in the middle attack\" />the intended communication channel represents the mobile app being used as you expected, by a legit user without any malicious intentions, using an untampered version of the mobile app, and communicating directly with the api server without being man in the middle attacked.the actual channel may represent several different scenarios, like a legit user with malicious intentions that may be using a repackaged version of the mobile app, a hacker using the genuine version of the mobile app, while man in the middle attacking it, to understand how the communication between the mobile app and the api server is being done in order to be able to automate attacks against your api. many other scenarios are possible, but we will not enumerate each one here.i hope that by now you may already have a clue why the who and the what are not the same, but if not it will become clear in a moment.the who is the user of the mobile app that we can authenticate, authorize and identify in several ways, like using openid connect or oauth2 flows.[link]generally, oauth provides to clients a &quot;secure delegated access&quot; to server resources on behalf of a resource owner. it specifies a process for resource owners to authorize third-party access to their server resources without sharing their credentials. designed specifically to work with hypertext transfer protocol (http), oauth essentially allows access tokens to be issued to third-party clients by an authorization server, with the approval of the resource owner. the third party then uses the access token to access the protected resources hosted by the resource server.[link]openid connect 1.0 is a simple identity layer on top of the oauth 2.0 protocol. it allows clients to verify the identity of the end-user based on the authentication performed by an authorization server, as well as to obtain basic profile information about the end-user in an interoperable and rest-like manner.while user authentication may let the api server know who is using the api, it cannot guarantee that the requests have originated from what you expect, the original version of the mobile app.now we need a way to identify what is calling the api server, and here things become more tricky than most developers may think. the what is the thing making the request to the api server. is it really a genuine instance of the mobile app, or is a bot, an automated script or an attacker manually poking around with the api server, using a tool like postman?for your surprise you may end up discovering that it can be one of the legit users using a repackaged version of the mobile app or an automated script that is trying to gamify and take advantage of the service provided by the application.well, to identify the what, developers tend to resort to an api key that usually they hard-code in the code of their mobile app. some developers go the extra mile and compute the key at run-time in the mobile app, thus it becomes a runtime secret as opposed to the former approach when a static secret is embedded in the code.the above write-up was extracted from an article i wrote, entitled why does your mobile app need an api key?, and that you can read in full [link], that is the first article in a series of articles about api keys.<h2>mobile app attestation</h2>the use of a mobile app attestation solution will enable the api server to know what is sending the requests, thus allowing to respond only to requests from a genuine mobile app while rejecting all other requests from unsafe sources.the role of a mobile app attestation service is to guarantee at run-time that your mobile app was not tampered, is not running in a rooted device and is not being the target of a mitm attack. this is done by running a sdk in the background that will communicate with a service running in the cloud to attest the integrity of the mobile app and device is running on. the cloud service also verifies that the tls certificate provided to the mobile app on the handshake with the api server is indeed the same in use by the original and genuine api server for the mobile app, not one from a mitm attack.on successful attestation of the mobile app integrity a short time lived jwt token is issued and signed with a secret that only the api server and the mobile app attestation service in the cloud are aware. in the case of failure on the mobile app attestation the jwt token is signed with a secret that the api server does not know.now the app must sent with every api call the jwt token in the headers of the request. this will allow the api server to only serve requests when it can verify the signature and expiration time in the jwt token and refuse them when it fails the verification.once the secret used by the mobile app attestation service is not known by the mobile app, is not possible to reverse engineer it at run-time even when the app is tampered, running in a rooted device or communicating over a connection that is being the target of a man in the middle attack.so this solution works in a positive detection model without false positives, thus not blocking legit users while keeping the bad guys at bays.what suggestions do you have to protect the world (react- native apps) from pesky hackers, when they're stealing keys and using them inappropriately?i think you should relaly go with a mobile app attestation solution, that you can roll in your own if you have the expertise for it, or you can use a solution that already exists as a saas solution at [link](i work here), that provides sdks for several platforms, including ios, android, react native and others. the integration will also need a small check in the api server code to verify the jwt token issued by the cloud service. this check is necessary for the api server to be able to decide what requests to serve and what ones to deny.<h2>summary</h2>i want to be able to store keys in the app so that i can validate the user an allow them to access resources on the backend. however, i don't know what the best plan of action is to ensure user/business security.don't go down this route of storing keys in the mobile app, because as you already know, by your extensive research, they can be bypassed.instead use a mobile attestation solution in conjunction with oauth2 or openid connect, that you can bind with the mobile app attestation token. an example of this token binding can be found in [link] for the check of the custom payload claim in the endpoint [code].<h2>going the extra mile</h2>[link]the owasp mobile security project is a centralized resource intended to give developers and security teams the resources they need to build and maintain secure mobile applications. through the project, our goal is to classify mobile security risks and provide developmental controls to reduce their impact or likelihood of exploitation. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 183, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 360, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so,  t i wonder wht  hr addig it evr to y tie adds some strh to the hash example, . f times? or xe  fou    examp, would it be e wh to e  that n attacker  hah foud some r w least y to create a 100timessha512 function   which w te ee w it ay fr than si  vul, hash  to mp e ly e sha2 e pre  ves c fou 100 nd utin f g sha512 100 times?  bes yes, it s exp it ose a dos vulnerability, w  but it als t o s brute force attacs (or at les e  t t makes t exceed  isks...  po is ssible hem prohibitively .  te is y a r f ,  whe which ther but to soe the benefis d the r te isks... "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 382, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i recently learned about java's security model. most people think java is secure because it is immune to buffer overflows, etc, but there is this entire java security model centered around checking whether code has permission to take certain actions. they're really solving a challenging problem: how to let arbitrary untrusted code (say in a web browser) run but be prevented from accessing the underlying system in malicious ways while retaining the ability to interact with the system in some ways. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "enters the password", "label": "ATTACK"}, {"start": 136, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 88, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a file i dd the followg s rs a hashve that is std n a file. whener the user ws to access the file, he enters the password, and if the same hash is generated, he can access the file.i se this isn't realy sa, but how e it is? how high is e chance that string#hase gs the e hash with two dift inputg to your anss i changed the co t should be betr now?? "}, {"sentId": 36, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 67, "text": "xss attacks", "label": "ATTACK"}, {"start": 80, "text": "sql injection", "label": "ATTACK"}], "sentText": "when you develop a website, there is several points you must know: xss attacks, sql injection, etc.it can be very very difficult (and take a long time to code) to secure all potential attacks. do not secure xss, sql injection... this can be really done when you trust your user: back end for a private enterprise. but do you secure this type of application?secure attacks only when user try to access non owned datas: this is for me the best approach.secure all, all, all: you secure all datas (owner or not): the user can't break its own datas and other user datas: this is very long to do and is it very useful?secure common attacks but don't secure very hard attacks (because it's too long to code comparing to the chance of being hacked). edit: i see a lot of replies talking about xss and sql injection, but this is not the only things to take care about. sql injections have really nothing to do with sql, it's just string manipulation, so if you don't feel comfortable with that, just use prepared statements with bound parameters and forget about the problemcross site exploit are easily negated by escaping (with htmlentities or so) every untrusted data before sending it out as output -- of course this should be coupled with extensive data filtering, but it's a good startcredentials theft: never store data which could provide a permanent access to protected areas -- instead save a hashed version of the username in the cookies and set a time limit to the sessions: this way an attacker who might happen to steal this data will have a limited access instead of permanentnever suppose that just because a user is logged in then he can be trusted -- apply security rules to everybodytreat everything you get from outside as potentially dangerous: even a trusted site you get data from might be compromised, and you don't want to fall down too -- even your own database could be compromised (especially if you're on a shared environment) so don't trust its data either "}, {"sentId": 148, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection attack", "em2Text": "bugger up the database", "label": "None"}, {"em1Text": "bugger up the database", "em2Text": "sql injection attack", "label": "None"}], "entityMentions": [{"start": 29, "text": "sql injection attack", "label": "ATTACK"}, {"start": 202, "text": "bugger up the database", "label": "ATTACK"}], "sentText": "while option 1 is open to an sql injection attack, since my sproc is being called from an authenticated source, does it really matter? only trusted sources will execute this sproc, so if they choose to bugger up the database, that is their prerogative. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 16, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 207, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 365, "text": "recover those keys", "label": "ATTACK"}, {"start": 533, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 582, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "ho  w m xo ight an attacker recover the secrets in that flash? i undxxxt  an  d thxy can xxxz for xxxxxx  xxxxx indixxxxxt xxxs in the a how pp xxxe thxt  and xxxxx  xt i  t,   xxxt xxxxe for  couxd be some indistinct general side channel attack or sxxxxxxxx axxxt .  xxxt but how xxx app xd xn xt sxxxxxxxxn tacker reall of  and y go about tr go  flaxh  ? ying to recover those keys?  are txxxe vi recxxxr abx indi t xxxxxxxxxxxxxxs e  he xxxxc secrets t e approaxh  es for  how a dete go rmi chip n how ed axxxxxxr to som the xxxw shave-down the chip or xxxxxxw xxxxxxxxxxxxxxs   some kind of microscope attack? "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 79, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 323, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 411, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked e  if  hers n at under t to  g can et r cn gain access to the system under the same user account as your code.an oe att, dt t  b   pr. user, rot h big , n  t oe  b h, as  got  e hers pr.  r  an i t f  imp far f  o ac th user e cess  if t a . user,  passwo be r att,  access d  f an r cn get access as the same user or as root, ye got far  to   big a get n r   pr. for e, y d tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 49, "text": "running [code]", "label": "ATTACK"}, {"start": 85, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevx, i do not ud the s about sexxxxy . cxxxx, running [code] xxxxs xxe hr the y o run any javascript code that you can run. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 34, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 119, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wis e a e \" . e s cn e poxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s en t xe ck if might et a .  y, e n pxxe xf the xxxe d do xt to, but a wxxxd p n t the ur d xxy t be dy ad h te xxe mxn s e d y y xxxxy sites xs a y o \" s d o exxy e d , exx. in s , te sy t xf e xxm reaxy is e sy f e uxs cxxxxl or thr on xxxxxxr ad xxxxr browsig . "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe whole pxxxt of hashing a pasxxxxd is in xxxe a hacker gets access to the database. xf i store the salt in the db xxxxxn the xxxe xxw xs the hashed xxxxxxxx, xxxxt it just xxxe i xm handing the hacxxr the \"secxxt code\"? i am xxxxxxg up a xxxr xxxh a loxx, xxd handing the xxxxxxxr xxe key. "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 5, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 58, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 97, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": "  if the session identifier were known by an attacker who had access to  the user's workstation, the logged out session could be accessed using  the session cookie after the user had terminated their session.  "}, {"sentId": 120, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 108, "text": "csrf vulnerabilities", "label": "ATTACK"}], "sentText": "i  it ha concxxx th s secxxe  e don't   quickly made a [l the   ] fr detexxxxg and xxxxxxx made xxg so cald csrf vulnerabilities. i uxe it o quickly xxxxxxxxxg  xxx made oftxn   vs e xxxf of concxxxs o ty f such vs tt i s vulnerabilities. e i nd to the affd th  s vs ite i  . qui i e oftxn i enxxxxxxr th thxxe ee form send vulnerabilities.  s h a vs  vxxxxxxxx,  affd ad thxxe i don't kno cald w  affd if ty e secxxe or not. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 40, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 19, "text": "attacker can embed a  script tag pointing at a remote server", "label": "ATTACK"}], "sentText": "  script-tags: the attacker can embed a  script tag pointing at a remote server  and the browser will effectively  eval() the reply for you, however it  throws away the response and since  json is all response, you're safe. "}, {"sentId": 71, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "someone with malicious intent can write a script", "em2Text": "register thousands of accounts in seconds", "label": "None"}, {"em1Text": "register thousands of accounts in seconds", "em2Text": "someone with malicious intent can write a script", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "someone with malicious intent can write a script", "label": "ATTACK"}, {"start": 127, "text": "register thousands of accounts in seconds", "label": "ATTACK"}], "sentText": "my app has a register service that users can register themselves. however, someone with malicious intent can write a script to register thousands of accounts in seconds. "}, {"sentId": 12, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use grep like functionality", "em2Text": "identify all sinks in an application", "label": "None"}, {"em1Text": "use grep like functionality", "em2Text": "an attacker can see [code]", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "use grep like functionality", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "an attacker can see [code]", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "use grep like functionality", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "identify all sinks in an application", "label": "None"}], "entityMentions": [{"start": 135, "text": "use grep like functionality", "label": "ATTACK"}, {"start": 166, "text": "identify all sinks in an application", "label": "ATTACK"}, {"start": 467, "text": "an attacker can see [code]", "label": "ATTACK"}], "sentText": "most of these n cals ae clasd as sinks. when a d variabe (le $_reques) is pd o a sk function, n u e a vulnerability.  s lie [link] d ] use grep like functionality to identify all sinks in an application.  this s that programmers should take a care when g these functions,  t if y where l banned then you wouldn't be able o get muh done.   t of these function calls are nt sinks.   but rather it mae a vulnery if ay of the data returned is viewable to an attacke.  if an attacker can see [code] it is definitely a vul.  "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 139, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 162, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 219, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 100, "text": "database is compromised", "label": "ATTACK"}, {"start": 533, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "xxxxxxx, xxxe pxxxxe d xxxt the sxxt be sxxxxd separy fxxm the daxxxxxx. tr argumext is xxxt if xxe database is compromised, an r can stil build a rainbow table, taking a particular salt string into account in order xo crack one account at a time. if this xxxxxxt xxs an p, txxn he xxy not even d o k any otxxxx. fxm a xxxxy xxxxxxxxxxx, s it wh xt o store s in a difxxxxxt plxx? conxxxxr a b xxxn with xxe ser cxxe axd db on the same maxxx. if the sals are sxxxd in a flat fe n tht machixx, chxxs are that if te daxxxxxe is co, the salts file will be compromised, .  "}, {"sentId": 102, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "someone with physical access to the machine", "em2Text": "copy the cookie", "label": "AND"}, {"em1Text": "someone with physical access to the machine", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "someone with physical access to the machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "reuse it on another machine", "label": "None"}, {"em1Text": "copy the cookie", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "someone with physical access to the machine", "label": "PARENT"}, {"em1Text": "reuse it on another machine", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "reuse it on another machine", "em2Text": "stealing the session", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "someone with physical access to the machine", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "copy the cookie", "label": "None"}, {"em1Text": "stealing the session", "em2Text": "reuse it on another machine", "label": "PARENT"}], "entityMentions": [{"start": 363, "text": "someone with physical access to the machine", "label": "ATTACK"}, {"start": 410, "text": "copy the cookie", "label": "ATTACK"}, {"start": 430, "text": "reuse it on another machine", "label": "ATTACK"}, {"start": 467, "text": "stealing the session", "label": "ATTACK"}], "sentText": "most web applications use cookies to manage the session for a user and allow you to stay logged in even if the browser was closed.let's assume we did everything by the book to make sure the cookie itself is safe.encrypt the contentset http onlyset securessl is used for the connectionwe check for tampering with the content of the cookieis it possible to prevent someone with physical access to the machine to copy the cookie and reuse it on another machine and thus stealing the session? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 103, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the wl he  t e point  as xf  xxxt   xxg a  xxxxxxg xxxx xb d is  and i d n c xb   b s dxo ame ase a hr gets access to the database  . p  if i  a  poit se t , h  u int e t    xxt in xxe  t db  a   xxe  t xe wixxxn the s  axe xxw xb  as xxxxe  c   hr e d x h xxxx  xx xb   , isxt   t ju e and  t l t ie  l h  e e  db i it   co  ? m an t d  g st  th xxxg e h  cd  e g xx? e a in ckxr txe \" ad se xx t c o, xb  od poit e\" s db t ? i am p t  x    e ut t   and e tix s he  i axe g up a dxo ? r   gs ixx a t as  wh a l d  xxxx is e ,  ase ad hanx a g h t e  t int l x xxxe e a r xxe se   e key. "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 141, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i want to know xf   this and on if ly  ippet th an xn d xs littxe sn know ipp to et presents an axxxxxs y xxxxr on d ly ity issues xxxxe xss attacks etx) "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 298, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calls ck? o cxf and  calls i would like know  to know if   it   has any build-in mec a hanism that would allo calls w limiting t this he cxf  calls  num and b ca this lls er of c cxf oncur cxf rent calls to the web s cxf ervice, thus would  a wcf? ddressing the possibility of a dos attack? something simi  lar to this feature i  of wcf? "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 415, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 460, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " process o     d proc  strs  ess ump  xr strin  gs   bxf       t xxn abl  s   a    r d ed xx, e   xr on   xxxxe x n e s      if x xx.      , . imxu c t if xe  me x] mory  al ode, can   xxd e.  [c tt strin  gs  xxxn xf s o   o    n  th i.   ore proces s   s at  at  get e y bee oe   cr xx. ce  xxt xc    x   txs a , l  x at x can x stxxs e  gs   ode e , ,  strs ed the  the [c xxxxxx  of xxxa   s you  ode], xxt  if another process can dump memory x.  x. , txs no way you can get rid of the data bxf s ore xx ode], x]    yxu kic xx ks xxs c x d xxxe   txs   t  no pro e ce  xe e ss xe e  ks  that i. t  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 40, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 67, "text": "read php files", "label": "ATTACK"}, {"start": 546, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "s p  language  t l is e  y o on r se to 'hack' an apache server ad read php files.  f  d i  fr s om un  dd th  to apach t  an f d p is  s a  a serve-  e a g apache e nguag  fi? m e  a e   lways and   e  cat fi w l?  be rd r php m ane ot  r tn e se and v ra  a er i , b the ut could  . e  e k te o  serr and d  d the etc.), m a    s  be f readig  rv a  n r d t ser, ext ? well , if   php  te m y   r y ever at y y  se, ae d     a te  rea yes, d c    k i php o  on   n  i   e te server , p etc,  frm ty ma l s ws y  th them ey   h pp a b pr   a ve access to files on the hard disk. a t pol han   s ad hd o aca se y  f? pl n y cf a s d   i fo r m on   not gurd   aph apah  e e s could erver wil not se raw rd   the rve ra  php  apache  w a  ser from r  pp  the s poe  apace  ver err  ,  f r , s ils tho ocess h pp , i is t sho ext l ,  ay d  h is  s   a  r  h on n h y e ocess m h e p i coul on d r f co y nf  a apah .   s   readn  g . "}, {"sentId": 94, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "construct a css file", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "construct a css file", "em2Text": "gain access to things like my domain's cookies", "label": "None"}, {"em1Text": "construct a css file", "em2Text": "xss attack", "label": "None"}, {"em1Text": "inject code into my site", "em2Text": "construct a css file", "label": "PARENT"}, {"em1Text": "inject code into my site", "em2Text": "gain access to things like my domain's cookies", "label": "OR"}, {"em1Text": "inject code into my site", "em2Text": "xss attack", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "construct a css file", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "gain access to things like my domain's cookies", "em2Text": "xss attack", "label": "None"}, {"em1Text": "xss attack", "em2Text": "construct a css file", "label": "None"}, {"em1Text": "xss attack", "em2Text": "inject code into my site", "label": "None"}, {"em1Text": "xss attack", "em2Text": "gain access to things like my domain's cookies", "label": "PARENT"}], "entityMentions": [{"start": 31, "text": "construct a css file", "label": "ATTACK"}, {"start": 72, "text": "inject code into my site", "label": "ATTACK"}, {"start": 110, "text": "gain access to things like my domain's cookies", "label": "ATTACK"}, {"start": 378, "text": "xss attack", "label": "ATTACK"}], "sentText": "is there any way someone could construct a css file that would let them inject code into my site or otherwise gain access to things like my domain's cookies?  is this really safe, or do i need to come up with a different solution? no it is unsafe.  [code] and [code] are known ways to cause arbitrary script execution on certain browsers via css.  [link] suffered a very public xss attack that was due to javascript embedded in user-supplied css. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 187, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new to cxf and i would like to know if it has any build-in mechanism that would allow limiting the number of concurrent calls to the web service, thus addressing the possibility of a dos attack? something similar to this feature of wcf? "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i xxxt to include the caxxxxxxxy to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather thxn axy dxxxxr in the cxxx. do i need a web application xxxxxxxx? xf so, how do i integrate it. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 558, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 164, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, t you alry hod at that point? if you tie the sn to an ip a, then it becomes a lot hr to hijack into a session. this is someg i d do, but you t d to be utterly strict t it. yu can jt te to the first te ps of the ipv4 or so. the choice is yours. the me stt ip k the moe secure it is, but the s t it is for users. and as for tying the session d on te user agent, that my also help. t mt be d that if you work on an unencrd chal (hp for e, then te usr t check s less useful as it can e reproduced by the intruder as well. "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 64, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "xxxs say xe have a typxxxl csxf xxxxxxxxxn like this onxxxxt if an attacket uses this code to bypass the csrf token? "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 12, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 312, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we ase that the setup will be probed by a malicious user. what s the worst tht xxxxd happen? mysql provides various staxxxxxxs xe w etc. txxt a user even hxxxxg xxxy t xxxxxxxxxs cd use to gather infoxxxxxxn at the dae ser r abxxt my dataxx. oxxxr information xxxxd be od from error mxx. e pry not xxxxxxxxxt to gain improper access, this informatn couxd surely hp in dxxxg sxxxe mxxxt xe flas in xxe xe xxxxxxxx, r in my xx, xr xn xxe sg lanxxxxe , t cod xxxxw a visitor to do thins y ae xt supposed xo be ae to o thh this intg this might vxxxxxe a s of servxxe agxxxxxxx, partxxxxxxxy if i am g sharxd h. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 9, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 303, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 430, "text": "recover those keys", "label": "ATTACK"}, {"start": 564, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 586, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w x t xt an attacker recover the secrets in that flash t x e x   x  xs  e   f xw la t h   y  p  te e h soe e ? i  the d   x  y c   n indistt  d  a t t  n   z g  w  fr     f o te f x ak   e   xf xxs  g f  t      n ,  e p .  x n  xxe  te  n  e w    e t e n    x f d  t t ,  d   t   xs of e  o d xz  be xe indistinct general side channel attack r   . t x  cp   o  n  r  t  of x xxy w d  c n  x w xxa e  n     ck  t an  r   y o t g o recover those keys? t d  it   r t i    xx  c recover n  k     e  e  x t e e v  xxy t e s f e t  r a d x  f  r r ree  r  r  shn to   w shave-down the chip r some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 146, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 239, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t xxxs y u   e t   d   y e a a t  e   xxxxxe \" x   d xxx d  thr xe ough x  xxx  . e s clic is ki t ng    cn  e an  e  xe po br xn ow pxs to   convince users that an important message from a trusted site has been delivered, an fr n o d trick those people into clicking through to some malware url (xr   s  d e n ven y  t  xy    an the url    ss t ck i y f t  x ck xxxt et a bu  d e   d   xxn d  .  gx  ck n .   m y,   e n ,  d  pxxe xf the   xx well-cr b afxe  e t d  . xn  xe xx  t of xe    xxd do xt  brow   y si  n s  t xs x, b   e u xs t    , a xe  wellxxx t  t a e    sey of an   fte  d  te pop n t th xs   e  xs user axd x xxxxy y  xy   t x  o a e dy   b  , e ad xxxh xe xxx   et xy  x h n  m    t o   xo f e users ssage as  an   t d xe xxn s e fro xs m   t d y   of x sey the   y uxxxy s  t t ites xs a   y  xe     o xxxr  n  n  \" s d  p xe e    xs o esx  n i x e    o xx  xy \"    xs  fe d     . con      e pop  us  t  ,  t etx. i xxxd n s  n , te sey   t of e p   e rm r s eaxy ck  i  bu e s e sy xs  of e u d ss con on x  on (xr xl or  sey and  a   xn  x well-cr x thr on xo y  e m  xxxr a xs  i a s  t d xx a xxr browsi a  e   messxxe  xg   xxxx ad dex. "}, {"sentId": 44, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 279, "text": "renaming the superuser.apk to superuser0.apk.", "label": "ATTACK"}], "sentText": "te r techn reg iques used by   developers in t de for t sp  y en are n  ch  ecking for the superu superuser0.apk. ser.apk  . l used e, renamg check fr .  chainfir r e,but  ing su comm to and,etc. but an attr can simply bypass in  te checks b an y a seva  file,check l means like renaming the superuser.apk to superuser0.apk.  "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 75, "text": "xss attacks", "label": "ATTACK"}, {"start": 1050, "text": "sql injection", "label": "ATTACK"}], "sentText": "i m wok d xg on a t   c# + jy x  xd i e e .  i am ty xxf g o xd   s prt x  xss attacks ad i w bew xt   s t th e e f xo ull c    e codes , bt t p xxs is t  s t h me tl e xxxt wxt i d do - to e xe whn acg  e xxxe s  xg u id t fro xx. m   .  and i realy soe to y k f i m o to g  xf the i s gt xxxxg xxxe . yo to u s soue e  e e d xo p in m t ind xxe t type e text   xf h g y  ou xxl xxxh   ad f e  and e  re sq [c] l  it e m sts   s - wher  . xs  fm a e   se r n uxxxs e ted xe dae   -  n o xs ne as nt. , d also xxw xxn c  xxxxxe xxm nag c  o stris tht bh ae sxxxs of e a txe xe cont d ype and tr , ue a i xd p the &t a  g ; tt xg [,  re so xxe g xl  e be inted as xxxe t befe gog in xxxl  a  te xo e i xxxx. of  . [c k ] e g cos xd to e t s l te ixe e sag e n d xs n   l a xg f pn t d t xxxe  atts g in te e is a s l tn ,   g of sf u e t m l e t  [e t   ' e s ou t tput s gxr e and   nt o c jxe x, y o rss ntn s c e s sh of s e and  ft p e rm with y c e od t g .  f yoxxe c renr ompog a sql st g xg xo d to th m e serv, g as htxl xxs nt  we e u t u m sql injection.  ug a l pd t s a gd y t htl  se xf  o o e m se e i e s  cxt r sql, bt p of sql  g s t r a g sxxe in all c am ontxe pt t s s w id hxt i gg  am xn o a t - how t n o e the xxxl e dae ncoded tt befe  strg rexxxg it xxxk o the us  er?n te us sd r   ws o vxw  as the d e e cs t  n e  xt ente, e e d fm de ad pri q  a ns it f te r s recg  ax e ad  h ou xxl sxxxxs , ad  thxt xxu he a sg of xe hm not  a , y a ou ca re n ju t p o s xxxw t d -  thxt to t . he ue t f te e a r is e e c i g a to    t  pla e xn e i good g t e o ma, e f xh xo n you ned to k  cr wh t the xe t  html xd in the dataxxe o n . t f t i . d h i e u  d  ser i am s g rs, thn u nd o  fm e e  to u cm xm xxxe yor rs xxxg s f x] cn p yxu to  make e a  s te   pt are p n y d n o. a  "}, {"sentId": 136, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 98, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i have read (and am coming to terms with) the fact that no solution can be 100% effective against xss attacks. it seems that the best we can hope for is to stop \"most\" xss attack avenues, and probably have good recovery and/or legal plans afterwords. lately, i've been struggling to find a good frame of reference for what should and shouldn't be an acceptable risk. i can see that using an html sanitizer can also be very effective in lowering the avenues of xss attacks if you need the user-input unvalidated. however, in my case, it's kind of the opposite. i have a (very limited) cms with a web interface. the user input (after being url encoded) is saved to a json file, which is then picked up (decoded) on the view-able page.  my main way for stopping xss attacks here is that you would have to be one of few registered members in order to change content at all. by logging registered users, ip addresses, and timestamps, i feel that this threat is mostly mitigated, however, i would like to use a try/catch statement that would catch the ysod produced by asp.net's default request validator in addition to the previously mentioned methods. "}, {"sentId": 3, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 199, "text": "injections into the database", "label": "ATTACK"}], "sentText": "when yxxxxe making s wb apps thaxxxl hane large amounxs xf da, wt ps should i take agat my xxxa ixxxs o fuxxy sanxxxxe it? i know xxxxxxs the os txxx, e, xss , c - but wt other txs shoud i e xo stop injections into the database? "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 72, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 303, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 463, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked xf xxe  xn  fxr   axxxxx user r xxn gain access to the system under the same user account as your code.n o user  c are an  ode xxxxxe xxxxxe  , dxxxt x,    o them x as xxx a xe t , xxxs an xxxxd  t  a xxx c same cess oxxx xxx xxe  a xx. if xn xxx same your  xxxxr cn get access as the same user or as root, xx or xxxe  can g a x bxxx t far b xxxxx be e xxxxr you   ac  be r   bx  xx xxxxr xr xxx. fxr xxxxxxx,  xxx. txxy xxxxd tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 80, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "inject javascript into the page", "em2Text": "xsrf", "label": "None"}, {"em1Text": "xsrf", "em2Text": "inject javascript into the page", "label": "PARENT"}], "entityMentions": [{"start": 660, "text": "inject javascript into the page", "label": "ATTACK"}, {"start": 916, "text": "xsrf", "label": "ATTACK"}], "sentText": "why  iframe was i third t decid for ed t of hat usi the ng xmlhttp in request for doing xml calls should not do cal the ls across the it  domain not  bou with came  ndary?  you can retrieve javascript, images, css, iframes, and just about any other cont forms,  the ent  i  nce i add  not  can think of  o from other domai generated ns. why are the aj correct a be x http requests   not  cont allowed to cross  , the domain ta  using the r all get  b at ound try aries?  it s , eems like  all an odd limitatio are   n  n to  to put,  considering considering t try one-time  he only way are  i could s to ee it being abused, wo to uld be  to if someone were to inject javascript into the page.  however, in this case, you could simply add an img, scri he pt, o iframe r ifr  ame element to t attacks he document to get it to req site, uest the third part these y url co r uld  and sen all d it to   the server.   <h2>xsrf (cro including ss site request forgery majo  are req  , al i so known as csrf, xsrf)</h2> however,  your ca iframe n n  do xsrf attack are s   i these nject   all without using were  t he his at all.  as a genera the l rule from  using , xmlhttpr t eque request st isn't use  d at al  ber to l t  he  not , simply because it's so hard to make an xmlhtt your prequest in a way wo t ul should   tha  t's compatible with all majo it's r bro for wsers.  it's pt,  much easier to j get u were st add  using ban  an img tag to the url if you want them to load your url. i'm marking the answer from bobi cr fro oss-site nce as correct because he poin data ted o would ut the critic it al problem.  because   xmlhttpr used equest allo it ws you t in o post, with credentia  ls  correct (cookies) to the destinatio correct n site, and read the   data sent back from the site, along with sending the pers  ons the  credent these   ials, yo there u could orch request es ent trate some javascr in ipt that would su submitting bmit a these  serie that s of for in ms with , including co in nf all. irma put, tion forms, complete because  with any random keys way,  generated that were  j put in p such lace t from o try to prev you ent  csrf, a xsr  submission (cross f.  in this way, you could browse t credent  fro scri m hr in code. to ough the target site, li solve  img, ke  used a ban some k, and t random he ba  nk's webserver woul req an uest  (xsrf) d be unable to tel the l that it wasn't just a regular us  er submitting all these fo ber with ately rms. that's no  t an solve  xss attack. tha a  nd t submitting 's a cross-site request forgery att about ack (xsrf) in .  isn't th are ere ar it domai  e known ways t javascr o solve xsrf attacks, such hat  as including one-time   or  the c   a ryptographic  t xsrf  tokens to verify that the submis the sion came del berately i solve berately from the user and w you as n  ot launched from attacker code. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itself migxt explxxt a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xxxxxxd poxxp xxn dixxxxxt the uxxr axd xxy nxt be xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"trap\" users axd to exxxxxxxxxy force ad impressionx, etx. in txxs respect, the security asxxxt of the probxxm reaxxy is txe secuxxxy of the user's coxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 309, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 64, "text": "spam", "label": "ATTACK"}, {"start": 342, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy work won't ing on you  a  the php  users project t spambots hat will fxx won't xxxe a  sxe us ha page ve er   s or ystem (login,registe wi xxxx to xd  faux-captcha: los fxx t password to emai the l,..) and i think  (apache,  f fal  xx, o it llow txxt this may be very vulnerable bots   inpxx. xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etc. use your us  fan ma ta to xxx. do t  oxxxxs web 99.9% servers (apache, iis) ha wxxt ve xxxe sort of buixxxxn dxxxxxe ag the ainst xxxxxxxxxxx callxd xxxxt would be the best way to im however plemen fxx t for  an anti xx, -sxxxx two xx ot xxd system, if i e.g.: want a pag tim to es e not be able to be called mor so. e than two a  times a min i ute, however another page may be callxd up to 1 against 00 1000  tim cxn es a mxxxxe or so. xxxxs wxxh xs w to on't see it and will be  es fxxx.  always users without js toxxxxs  will just have to xxxxxw the si safeguard mple in es strxxxxxx. spam a bots will fal  l for it xxd reveal themselves.au spam t it omaxxc faux-captcha: xxxs is simxxxr to the axxxx xxxxt . a a dd an xxxxt fixx will  with d with a nstru  however  l wo there,   with aga fan inst n't  to abel saying [xxxx] (xxr someone's  example). us without ing  will javxx will  omax es xc x another xx fan xt (and knowing that most aut l omated gic  sxxm x the xxs won't be ru a if   iis) nning  axx xxx. xx jsx, hide the field and abel  populate  or it with x called xx wxxh xxx. if the form  subxxxxxd form doesxxt have xxm  themselves.aut simxxxr   the ma xs gic word there, thxn igxxxe it.  field users spam  wi won't th js won' wxxh t  form sxe  a it and wi i ll xe fi to ne. users wi there, thout js wixl juxt have to follow the simple i email nstru the ctio spambo  ts n. spambots won't know wxxt to do axd xxu cxn ignore xxxxr without  inpxx. xxxs wil without l safeguard you f spam xxm 99.9% o there, f xxxxxxxxd spam bo etc. ts. wh it at it  reveal won't xx, ev 1000 en in the slighxxxx someone's , xxm  is saf reveal tim  xxxxxd you against a ta way rgeted attack t . some be one cxxxd xxxxxx with xxe  always in  their b be ot to avoid the xx,  honeypot or always fill in  someone's the cxxxxxt xxxxt  value  .  "}, {"sentId": 91, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "this is sent by the http client and could therefore be forged", "em2Text": "which is sent by the http client and could contain potentially dangerous characters", "label": "None"}, {"em1Text": "which is sent by the http client and could contain potentially dangerous characters", "em2Text": "this is sent by the http client and could therefore be forged", "label": "None"}], "entityMentions": [{"start": 101, "text": "this is sent by the http client and could therefore be forged", "label": "ATTACK"}, {"start": 217, "text": "which is sent by the http client and could contain potentially dangerous characters", "label": "ATTACK"}], "sentText": "there's a well-known caveat about not trusting the mime type sent via file upload in php ([code]) as this is sent by the http client and could therefore be forged. there's a similar caveat for the file name ([code]), which is sent by the http client and could contain potentially dangerous characters. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 208, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup xxxx its xxs are a notable  o \"xx by x are \" xxx xe x. hxxt xxd il xxxt e sis n  is u its xe p not opups t d. o convince users that an important message from a trusted site has been delivered, and ext  trick those people into clicking through to some malware url (or xxxxxxs xxn be  t the xxxxk \"xxxx  xxs not s xxxe be  elf migxt t a  xxxx. bxxx.  sc e ury  y, the main e xf the xx o x me exxxxi s force   sage e xxd do fm  might  xxxt , bxt a d px might p xxn dix is xxxxt e uxxr axd y n t  e ot be  yx, dxxxxx sxxe y  fr e m ass resp, d wih txe xe m n ain paxxxxxp securxxy ups wxe exp a loi (or xxd b   (or y many  o uxx xxe y sites xs a way to \" use o rs  txe a  a i nd by  to xxxxxxxxxxy fore the  ad imp, t by x. n txxs xxxxxxx, e secur has i has xy axp site ect of txe probxxm xxx t  he y is xxe sexy of te user's cr d. ol r thei y r own comr and xxxxr bg r  s is  mee  xn ixxx. "}, {"sentId": 27, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "another application has access to your cookies", "em2Text": "impersonate you on the website anyway", "label": "None"}, {"em1Text": "impersonate you on the website anyway", "em2Text": "another application has access to your cookies", "label": "PARENT"}], "entityMentions": [{"start": 3, "text": "another application has access to your cookies", "label": "ATTACK"}, {"start": 65, "text": "impersonate you on the website anyway", "label": "ATTACK"}], "sentText": "if another application has access to your cookies, then they can impersonate you on the website anyway, so access to the api is no different.all authentication methods still go through our control.regular expiry of tokens means that if they are compromised then there is a limited time for exploitation. "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 19, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "xxw oxe xxn cxxxxt malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 127, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "a rainbow table attack", "em2Text": "have knowledge of the hashes", "label": "None"}, {"em1Text": "a rainbow table attack", "em2Text": "retrieve passwords", "label": "PARENT"}, {"em1Text": "have knowledge of the hashes", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "have knowledge of the hashes", "em2Text": "retrieve passwords", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "have knowledge of the hashes", "label": "PARENT"}], "entityMentions": [{"start": 128, "text": "a rainbow table attack", "label": "ATTACK"}, {"start": 156, "text": "have knowledge of the hashes", "label": "ATTACK"}, {"start": 197, "text": "retrieve passwords", "label": "ATTACK"}], "sentText": "the password hashing all takes place server side, and the hashes are stored in the database. the client has no way to see these.a rainbow table attack must have knowledge of the hashes in order to retrieve passwords. so, is the point of trying to foil a rainbow table attack simply to protect the retrieval of passwords from an already compromised database/system. is it that simple or is there something else that i am missing. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 59, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 87, "text": "read php files", "label": "ATTACK"}, {"start": 722, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is lang other uage  it possible   for  and someone t php o 'hack' an apache server and read php files. i unde other rstand that  a u cannot nderstand n if s  d ph  p is  is   f  i rve a server-  side l se ang fir  it ua php g them e and rve  apache  cannot file?  s  from  be read from rve a   a read nywhe m re other than the  php serve on r, b the ut cou r  and  tho  aw ld someone hack the   server and read   reading and the  ut etc.), m as i  f reading a t se if other  igu ugh,  ctu red  rver it , ext file? well yes, i  is ftp f the them y e  ver be  actual and ly  ser t.  other ver, apache read   ha the  read ck  they int   is o  on the server (ssh, ftp etc.),    from they ma alwa from ys y  they h php a ha ve access to files on the hard disk. a than   und if erstand  someone  s actually  and hould pro a cannot ctu ph  an al p ly perl on y conf s  read  php   igured ap access a server ch apache e server will n  ot se files.  raw read   t ch he rve ra   and w ph than p  the s poss a ible read  erver,  f fir php  understand s iles  ess tho oc perl ess ugh,  an f    it s b hould is the   a serve lways pr   someone  g th th  at an apache  rver ocess the it the  m wi php th the php  someone i could nterpreter f conf ir oc s readin  g t. "}, {"sentId": 46, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 82, "text": "sql injection", "label": "ATTACK"}], "sentText": "the code is w the or orki ki prevent ng, but now i'm worried how  a i'm  i'm bout sql injections. how to   ng, sql prevent sql injection? "}, {"sentId": 115, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 196, "text": "read it if they wanted by going to [link]. ", "label": "ATTACK"}], "sentText": "since te n file is  goig  is wi con thn the web se it rvers  s t s  n its truct, ad gg is le ns o s it e  to red  coe they ns i conts ts  is con ts tents - e rea conte d y anyo ts ne [link].  cod read it if they wanted by going to [link].  "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 481, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 624, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am planni no ng to no  aes_encrypt the passwords in  i t ble he db, whic the h me e.g. an if s that if  o som db ebody is somehow able to access the db they won similar 't be able to get t db  db the , he a ne where ed bl e e  plaintext. howev  er somehow  m someh g ow y code will mu  nee db, d to h t at he a to ve plain  access to the k be ey to steps  unencrypt them, thu i s if the ent i  the  ut ire  plain ser the ver is compromised this  steps is no protectio  n and the passwords will be revealed.  i know th this at whatever i do, e  ultimately the passwords mu need st be accessible in plain to text an to d so a compromised server mean am s th i e passw the ords   the  will be revealed, b db ut i am wondering what s s teps i can do t b be e o mitigate my risk. e.g. encryptin the g the db prot b ects me in the sit be uation where the db   i so s compromised but not the need  entire server. other similar mi do tigating steps would  to   b in g  be mu a ch appreci to ated. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 127, "text": "sign up for the app", "label": "ATTACK"}, {"start": 157, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my n is, hw e s \"ah != ? yes, i reae that this ms that only an authenticd ur can acs the data, t how ey is it to be authe? n e sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 177, "text": "call your resource server", "label": "ATTACK"}, {"start": 207, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the e betwn a h token d a non-expiring access n n ms of securiy is one addil cal to the an server.if an attacker gains access to your non-expiring access token, he can directly call your resource server and get confidential data as responser /w if he ss your refh token, he t has to call te aun server and ree an accs token in response. then he can query the re serr for conl da. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i may  n r o e ut e mex ac. x an e d  o xxxs i t in my w and ebhk callb in ac. h acs o big x, a m all a rxt lxxxx l s r can add my bot to a thousand big groups  l ad xxl p o oxy r hxxe esut  result in denial of service for all other users. n sere  if tl t em hxxe i l x  stil en d s  om r e rate lg suh u l ser s may all  mx d   sl rt in denil of  r se for al o and tr us. "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 64, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 211, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but xxw sxxxxe is that? can a uxxr executxxg the progrxm easixy set this property to an arbitrary value (usixg a xxxxxxxxxxxe argument xf the jxx, for exxxxxx) for common xxxxxxe enxxxxxxxxxx? cxn a user exxxxy spoof this user name? "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "xxm actxxxxy workixg on a php project that will fxxxxxe a usxr system (login,registexxxxxd lost password to email,..) and i thxxk txxt thxs mxy be very vulnerable xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etx. use your fantaxxx. do toxxxxs xxxxxxxxxs (xxxxxx, iis) have xxxe sort of buixxxxn dxxxxxe agxxxxt xxxxxxxxxxxxxxxt woxxd xe the best way to implement an anti-sxxxxxxxxd sysxxx, if i e.g.: want a page not xe xxxe to xe called more than two times a xxxxxx, however another page may be callxd up to 100 txxxs a mxxxxe or so. xxxxs wxxh xs wonxt see it and will xe fxxx. users wxxxxxt js wixl just have to xxxxxw the simple inxxxxxxxxx. spxxxxxs xxxl fall for it xxd reveal xxxxxxxxxxxxxxxxxxxc fauxxxxxxxxx: xxxs is simxxxr to the axxxx. add an xxxxt xxxxd with a label saying [xxxx] xxxr example). using javxxxxxxt (xxd knowing txxt most automated sxxm xxxs won't be rxxxxxg jsx, hide txe field axd pxxxxxxe it wxxh xxxxxx. if the subxxxxxd xxxm doesxxt have the magic word there, thxn igxxxe it. users with js won't sxe it and will xe fixx. usxxs withxxt js wixl juxt have to folxxw xxe simple instruction. spambots won't know wxxt to do axd xxu cxn igxxxe xxxxr inpxx. xxxs wixl safxxxxxd you fxxm 99.9% of xxxxxxxxd xxxm bots. what it won't xx, even in the slighxxxx, is safxxxxxd you against a targeted attack. someone cxxxd xxxxxxxxe their bot to avoid xxe honeypot or always fill in the cxxxxxt xxxxx.  "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 119, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is that the attacker simply adds a slash then some encoded javascript (an image tag with alert box), which kills the page.  simple and effective attack.   "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "adds a slash", "label": "ATTACK"}, {"start": 63, "text": "encoded javascript", "label": "ATTACK"}, {"start": 141, "text": "kills the page", "label": "ATTACK"}], "sentText": "th page. e p  robm is tht the attacker simply adds a slash n e encoded javascript n image tag     with aler slash wh  t b tht ox slash ), wh kills the page.  e  simple an slash  wh d effectie a simple    and page with .  ttack.   "}, {"sentId": 51, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "make some simple get request (by [link])", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "extracts it", "label": "None"}, {"em1Text": "make some simple get request (by [link])", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "make some simple get request (by [link])", "label": "PARENT"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "extracts it", "label": "None"}, {"em1Text": "download the page containing the antiforgery token in a hidden input field", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "extracts it", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "extracts it", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "PARENT"}, {"em1Text": "extracts it", "em2Text": "use it to make a valid [link]", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "make some simple get request (by [link])", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "download the page containing the antiforgery token in a hidden input field", "label": "None"}, {"em1Text": "use it to make a valid [link]", "em2Text": "extracts it", "label": "PARENT"}], "entityMentions": [{"start": 105, "text": "make some simple get request (by [link])", "label": "ATTACK"}, {"start": 156, "text": "download the page containing the antiforgery token in a hidden input field", "label": "ATTACK"}, {"start": 232, "text": "extracts it", "label": "ATTACK"}, {"start": 261, "text": "use it to make a valid [link]", "label": "ATTACK"}], "sentText": "bt wt   if  d a  ue xxxxxxxu   f s s [l xo ixxx?  e sxxe  xxxxt w xn xl f t  l a  k xxxxxxu e  f  pe a t make some simple get request (by [link]) in r  t o download the page containing the antiforgery token in a hidden input field, extracts it   se , an what d use it to make a valid [link]?  "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 214, "text": "sign up for the app", "label": "ATTACK"}, {"start": 244, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my n how   e , hw saf  e   is \"ah ! s n , ==  my l  l\"? y,   i ree   that s s that y n au o tn  but t ticated user o  c au an a  ce e ss e d, t how eay is  e the t  != i tn t to b  e authentica?   n use n somo  ne sign up for the app, d thn e  use those credentials to get request right into my database? "}, {"sentId": 135, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "using inspect element", "em2Text": "editing the javascript and html", "label": "AND"}, {"em1Text": "using inspect element", "em2Text": "the attacker can mess with an [code] call", "label": "None"}, {"em1Text": "using inspect element", "em2Text": "send bad info to the server", "label": "None"}, {"em1Text": "editing the javascript and html", "em2Text": "using inspect element", "label": "None"}, {"em1Text": "editing the javascript and html", "em2Text": "the attacker can mess with an [code] call", "label": "None"}, {"em1Text": "editing the javascript and html", "em2Text": "send bad info to the server", "label": "None"}, {"em1Text": "the attacker can mess with an [code] call", "em2Text": "using inspect element", "label": "None"}, {"em1Text": "the attacker can mess with an [code] call", "em2Text": "editing the javascript and html", "label": "None"}, {"em1Text": "the attacker can mess with an [code] call", "em2Text": "send bad info to the server", "label": "AND"}, {"em1Text": "send bad info to the server", "em2Text": "using inspect element", "label": "None"}, {"em1Text": "send bad info to the server", "em2Text": "editing the javascript and html", "label": "None"}, {"em1Text": "send bad info to the server", "em2Text": "the attacker can mess with an [code] call", "label": "None"}], "entityMentions": [{"start": 140, "text": "using inspect element", "label": "ATTACK"}, {"start": 166, "text": "editing the javascript and html", "label": "ATTACK"}, {"start": 483, "text": "the attacker can mess with an [code] call", "label": "ATTACK"}, {"start": 529, "text": "send bad info to the server", "label": "ATTACK"}], "sentText": "i know this is a broad question, but i think i'm missing something here. is it possible for an attacker to cause damage to a site by simple using inspect element and editing the javascript and html? for example, it seems too easy for someone to change the maxlength of an input, and upload so much data that it could crash the server, i know that it is always good practice to check data at the server but it still seems too easy. or another more potentially dangerous example is if the attacker can mess with an [code] call and send bad info to the server. is it something i should be worrying more about or are the changes just temporary, on the attackers browser? "}, {"sentId": 50, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "/posts page that takes id paramater", "em2Text": "displays info", "label": "AND"}, {"em1Text": "/posts page that takes id paramater", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "displays info", "em2Text": "/posts page that takes id paramater", "label": "None"}, {"em1Text": "displays info", "em2Text": "user/hacker will know the real object id of the document", "label": "None"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "/posts page that takes id paramater", "label": "PARENT"}, {"em1Text": "user/hacker will know the real object id of the document", "em2Text": "displays info", "label": "None"}], "entityMentions": [{"start": 47, "text": "/posts page that takes id paramater", "label": "ATTACK"}, {"start": 136, "text": "displays info", "label": "ATTACK"}, {"start": 173, "text": "user/hacker will know the real object id of the document", "label": "ATTACK"}], "sentText": "let's say there is a posts collection, and the /posts page that takes id paramater (something like /posts/4d901acd8df94c1fe600009b) and displays info about it. this way the user/hacker will know the real object id of the document. is it okay or is it not secure? "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 73, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "w e s   to et i or cious tings  n set  mal whol w e  e icious  icious  t malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 152, "text": "gets a valid token", "label": "ATTACK"}, {"start": 180, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "t ds  i  t t xt y j n, wt xu  - t a  if the i    txxxx gets r o a - n i  i n, t  at t nt ta , .  jwt he   (xxm  te x . xe n, -e (m   xxx. ) a. if an ar gets a valid token tr , cxn effectively impersonate. n if  xx (xxxm  n, xxx. n,   xx. n  the  i the t  s t i gets s enxx he x t x. "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 199, "text": "reverse engineering", "label": "ATTACK"}, {"start": 305, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i am working on android application in which i required to execute few https web services so all my webservice url and web api key are in the code plus ip address of the server. when anyone do reverse engineering of my app then that guy can get my web service url as well as api key then can simply hit it using rest client. "}, {"sentId": 43, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "decompilers", "em2Text": "get the key", "label": "None"}, {"em1Text": "get the key", "em2Text": "decompilers", "label": "PARENT"}], "entityMentions": [{"start": 464, "text": "decompilers", "label": "ATTACK"}, {"start": 480, "text": "get the key", "label": "ATTACK"}], "sentText": "regardless of the programming languagei have a client server application.mobile client - http serverthe app will be available on several mobiles not only android.i want to make sure the request is coming from client's mobile only.how can i solve this security problem?i propose :have a secret key hard-coded on the mobile app:each request is encrypted using this key and decrypted on the server side.is it safe to hardcode the key if this way makes sense at all? (decompilers can get the key? the app will be available not only for android!)extra info:each user will have a userid/username... "}, {"sentId": 70, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "users upload some malicious file", "em2Text": "specify the extensions allowed to be uploaded", "label": "None"}, {"em1Text": "specify the extensions allowed to be uploaded", "em2Text": "users upload some malicious file", "label": "PARENT"}], "entityMentions": [{"start": 57, "text": "users upload some malicious file", "label": "ATTACK"}, {"start": 176, "text": "specify the extensions allowed to be uploaded", "label": "ATTACK"}], "sentText": "my prob web-server.im le i a s to avoid t  hat prob  as  users upload some malicious file on my web-server.im working  f on linux e a nvironme on nt (debi some an). here i can specify the extensions allowed to be uploaded, t the o  and if the f le   i here le dont mee potential t t t  potential with be   hem i d co elet as e as ex as tensions  soon as the upload is file.jpg  co as mpleted. with but this way   let the  fi linux le user  i fre prob e to change the f if ile extension with a simpl a to  e rename.. and thats bad mpleted.  for me; even if a fi i le soon .exe (for e file xample) wo the nt  upload never as  to  be executed if is rename mpleted. d in  wo file.jpg (a can m i right?), i dont want to have potential da xample) nger files o  n my server. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 169, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 221, "text": "focus on that domain", "label": "ATTACK"}], "sentText": "so naturally, an  i tho o ug inste o d ht of just  n i atur, sha hashg it s e the l inc do e ' so re t usg it r .  the prb  m with that is  handles tt if an o  attacker knows the problem domain (an ssn), thn they ca ws n focus on that domain s .  so it's much easier t prob o c with passw much o  ale te billion ssns rathr than a has  y el  un an le and d it  nr on  per-t domain. ient  of passwo of rds.  nr  i   kn i ow i shl there d us sal, e a site salt and a per-patt salt, calculat  handles i e  but is there  sh, a brary nyth d in thoug g el and se i can do to pr calculat e n o aturall, vt  billin an ac on ker fro on m reveg the ssn?  ind of sha, i wa  s pg on using bcrypt, si from nce ru an  sd by pre  has a good l thoug i virty by and it handles se y and saltig autom i agically. "}, {"sentId": 128, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 91, "text": "a man in the middle attack", "label": "ATTACK"}], "sentText": "the following [link] discusses how to destroy a flask token, however this does not prevent a man in the middle attack.  is there anyway to invalidate the token so it is no longer active before the time it expires? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 174, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 259, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do xxxxp wxx t s are  xxxxp a no do l  xxxxxs te e \"  xx xxx con   e xxxt   ir xxx s xx xr \" x th de e lixxxxx,   e . xxxe e  xi y txs can    x e p xy xxu d  ge p is s xo   convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (or  e xxxxxs e pas  a t xe xn  xn t t exs  t xe cxxxk   s pxxe elf xxe   e e s w x n s p k o imxxxx, b t x  i  g are ht expt a pxxxx  bux xs .  y xxl x,  axd txe  xr d obx i  xs w xo i n page f the  asso e ciaxe xx xf xe xx e  exxxo y itxd xxd xo xx xt xt xo a , xu xr e xxd  xxxd x,  t a xxxxxr xs aft xe xd xxxxp xxn  bug. dixx d t e  xxxxx. xxxt txe  xxxs   secy ox  r  y xxxr the  axd xxy u tx. ps  nxt b xxxxy e x  xxxxxxxy xxxt   a  ge    .  x a d xe w d i a  x,  d t i,  \" h xxs  xy  tx.  d wxxh t h  e he  f x  xxt     xxm  impr any x, xxxx t xxe mxi exxt xxxxxxxxx o . d n pag o xxxxp xn  xx. s e exxxxi xxl  , ted  even  e y m exxx n xy xxy xxxxxxxy s s a way xo  m \"tr to a xn p exs \" xs xxxxxxe ers and to  s ed ixe t  e xxs sxxx xxxxxxs x a xxy fo m xxe ess pxxxp ag xs e  peopxe  p any ag xxe e xxe a  d ixxxx,  . xxxs  e n xx. in txxs rexxxxx, xxxxxxxy  h  xxxr xx  xt  too  xi xxg , e xx   a  x xh xs sxxxy xxxt of xh p    xxd te xxxx xxxxxxs xm a c  onvxn c xe xy is t i e ty xe ase  r r i  to xe rxe  t d y xf t txxxe he usxxxs n a y  tl r txe fo ir  xx w x t s o ex e ploxt  xs wn xxxx exi pexxxe d  t xr axd r bi xxe xg dxx. "}, {"sentId": 131, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "mitm attack", "em2Text": "use their certificate", "label": "None"}, {"em1Text": "mitm attack", "em2Text": "read the data", "label": "PARENT"}, {"em1Text": "use their certificate", "em2Text": "mitm attack", "label": "None"}, {"em1Text": "use their certificate", "em2Text": "read the data", "label": "None"}, {"em1Text": "read the data", "em2Text": "mitm attack", "label": "None"}, {"em1Text": "read the data", "em2Text": "use their certificate", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "mitm attack", "label": "ATTACK"}, {"start": 71, "text": "use their certificate", "label": "ATTACK"}, {"start": 169, "text": "read the data", "label": "ATTACK"}], "sentText": "my qa team simply does mitm attack for every network call, they try to use their certificate and if for any network call i don't verify certificate then they can easily read the data. because of cache i'm unable to verify my certificate. "}, {"sentId": 84, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 16, "text": "an sql injection attempt", "label": "ATTACK"}], "sentText": "clearly this is an sql injection attempt. but wy the constant sn above? i cat e how it could be party signi, though it ss to appr quite . "}, {"sentId": 52, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "csrf", "em2Text": "automated attacks", "label": "AND"}, {"em1Text": "automated attacks", "em2Text": "csrf", "label": "None"}], "entityMentions": [{"start": 48, "text": "csrf", "label": "ATTACK"}, {"start": 57, "text": "automated attacks", "label": "ATTACK"}], "sentText": "i used new sessn r each page as defense axxxt h csrf and automated attacks. lets say we he forum that uses x to t xxxxxxs and its validad by pxp x. every thig works fxxe until the xxxr s page.php6 on axxxxxr tab, te ajax returns 'd r' on xxxxxx3 [link]. ty sxxxxxxxd to use only oxe sexxxxn hh l xe t, until he ls oxt - only txxn the sxxxxxn is . if the token xs the e user could sy bypass it d do xxe automad xxxxxxx. any idxxs on tha?  t sounds like your objectin to lettg the session stxy open as lxxg s the r is open is the issue of aud attaxxx. unfortunatelx, g the token on exxh pae ld y detes the most amatexr atxxx. s method of changing xxe txxxn on each page xxxd wod do absolutely nothing to stop someone wo acty wanted to axxxxk you all that badly. theref, since the token has no effect on auxxx, focus on its effxxxs xn cs. xm e perspective of blxxxxxg csrf, creating one token and maintaxxxxg it until the ur clos the browser seems xo h al . sxxxxe csrf attacxs are xxxxxx, axd xxe xr xs ae to opn multixxe tab. xxe first token wxxl xxxy the e l the brxxxr sessn xxxx. this xn exists to prexxt csrf axxxxxx. any subxxxxxxn from s usr with thxs token will be acceptxx. thxs way, xf i open a txb to form a ad a tab to fxxm b, exxh one hs y persxl anti-cf tokxn (csrf n xxxe ofx, and my one-tie form xxxn (form rexxxxxxxxxn tn care of). both s e resolved wit any ill effect xn the user experience. "}, {"sentId": 5, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "do an md5 hash on that", "em2Text": "use that md5 generated by the salt", "label": "AND"}, {"em1Text": "do an md5 hash on that", "em2Text": "seed the password at given points in the md5sum", "label": "None"}, {"em1Text": "do an md5 hash on that", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "do an md5 hash on that", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "seed the password at given points in the md5sum", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "do an md5 hash on that", "label": "PARENT"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "use that md5 generated by the salt", "label": "PARENT"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "do an md5 hash on that", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "use that md5 generated by the salt", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "seed the password at given points in the md5sum", "label": "None"}], "entityMentions": [{"start": 526, "text": "do an md5 hash on that", "label": "ATTACK"}, {"start": 558, "text": "use that md5 generated by the salt", "label": "ATTACK"}, {"start": 596, "text": "seed the password at given points in the md5sum", "label": "ATTACK"}, {"start": 731, "text": "get access to the md5 password list", "label": "ATTACK"}], "sentText": "i can't find a configuration for this salt value. it seems to be relying on one already present within the password stored in the database. is there one or do i need to configure auth to do so since this login needs to be portable and reproducible? if it can't detect the salt, in the hash_password routine, it defaults to using uniqid(), which i don't believe is portable at all.in terms of adding users, does it make sense to modify the auth library to add this feature? ie, introduce my own customized salt that i can say, do an md5 hash on that and then use that md5 generated by the salt to seed the password at given points in the md5sum?i'm no security expert, but is this overkill? granted, it prevents someone who were to get access to the md5 password list from using a md5 lookup of predetermined hashes. if you have used the kohana php framework, if you have any lessons learned or experiences after using it that might give insight as to the right approach for this problem, let me know. i'm reading numerous forums and wiki's about it, and there isn't a real concrete opinion yet that i've seen. i'm essentially trying to get a reproducible approach for authenticating someone in this site, both using php and eventually from a mobile device, like an iphone. i'm also thinking of eventually adding support for google friend connect for openid support and integration. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1042, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1165, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "n man w ag a d  y p . a x  l t  i ix, n  xxp key    ax n   xxx xxxx xs     a b a x nt x  xl  o xxxs n o n now  will  i not wxxk  x  xe  u  k and  bx x xxt s xx p   e x  k o  o xy x  y  e x  wh wh xxy  a no a w xxxxxs  x m x o x  ax a x b h  a  g c xxxs   are ded  ax  s o d pl  hxx   erive  p e  x  e l a s o  key hd t from 2  cx  x  xxxx wxxk y  xs pubx i fro m xc     ks n   wxxk ot    in ,   x set xxy (y not  g .  wil im xxt    the  which a the  (especy  c nd bouc so .   im o   so x   a   im  x middle xc  t  he  .  usin n g u   s xx hxx a xd e md  l e   e  a st   x  xxd xx  i s are t o   key  o   n  g un s man et g y   is, h  x xx w    a   xxx in l  wd x    xl in  shxxxd  a x   xxxs u e  to are    e    xxt n  x     xx go abxxt im    n cx abxxt x cp xxxy  nd d   ant xl axs emn n y   n  cx w w   xx o i, a   xxxc t to   . im    g  g a y x not xx x xx  y xe c   wi  st fro ll x    nd k  e .  ag y  m cxy sc t the he h   xxd a which is x k e. e xx are   xl  im xx s n   e c (i. x s xx in xl  shxxxd .  en rx fro wxxk m   bx  t    p to man in the middle attack) and  m  im   hx  w w  ould sx xxc x wx  xk x  e    . (i.x. e  xc x i et ch  cip   d .  abxxt xxm eavesdropping u ). "}, {"sentId": 48, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attached a yellow screen of death that i encountered on one of the websites", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "attached a yellow screen of death that i encountered on one of the websites", "label": "PARENT"}], "entityMentions": [{"start": 2, "text": "attached a yellow screen of death that i encountered on one of the websites", "label": "ATTACK"}, {"start": 543, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i attached a yellow screen of death that i encountered on one of the websites tt i e when d a long time of  one  suc lo h.  ago an i d it d  tht   my ine r is tht it  a fails when atm the i i ng t  o the  cat a  m que  ry strig parr o  r an int.  fails  to  y  time shown e, i o  w its d query  c trace ode, i wrote  i it to ,   m   a any years o  ao ;) say, fo y r exa y  on suh  , you have n y shown our  er on  the for s um softwar. u  y have put in lo  its say, query  ts f val valin idan fo or r whe is n the user ws pos on ts to pre m t xss attacks and such obtan  if , but your vali i dati one on s faulty. if i  a hacker can br know ing up of  the ysod when they mae a p, shon  the stack te sn could y shw cast  t such. hem the cracks in your vald lots atin and  is s  exploit them  i to ce xs a i ttacks  your or obtain  ce member details or s  wn po  tentially  and such. "}, {"sentId": 27, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "another application has access to your cookies", "em2Text": "impersonate you on the website anyway", "label": "None"}, {"em1Text": "impersonate you on the website anyway", "em2Text": "another application has access to your cookies", "label": "PARENT"}], "entityMentions": [{"start": 3, "text": "another application has access to your cookies", "label": "ATTACK"}, {"start": 65, "text": "impersonate you on the website anyway", "label": "ATTACK"}], "sentText": "if another application has access to your cookies, then they can impersonate you on the website anyway, so access to the api is no different.all authentication methods still go through our control.regular expiry of tokens means that if they are compromised then there is a limited time for exploitation. "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 20, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 69, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 148, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 217, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 256, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my m is that i fxxl the password would likely be intercepted. n (1), the hash could be extracted by a man-in-the-middle attack. txe xr n xxw simply use that hash to get access to the user's information. xn (, the r n intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 29, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "timing attack", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "timing attack", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "timing attack", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "timing attack", "em2Text": "repeat that for each character in the password", "label": "PARENT"}, {"em1Text": "positioning the password", "em2Text": "timing attack", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "positioning the password", "em2Text": "repeat that for each character in the password", "label": "PARENT"}, {"em1Text": "try a series passwords positioned", "em2Text": "timing attack", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "know that the first character matched", "label": "None"}, {"em1Text": "try a series passwords positioned", "em2Text": "repeat that for each character in the password", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "timing attack", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "know that the first character matched", "em2Text": "try a series passwords positioned", "label": "PARENT"}, {"em1Text": "know that the first character matched", "em2Text": "repeat that for each character in the password", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "timing attack", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "positioning the password", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "try a series passwords positioned", "label": "None"}, {"em1Text": "repeat that for each character in the password", "em2Text": "know that the first character matched", "label": "None"}], "entityMentions": [{"start": 240, "text": "timing attack", "label": "ATTACK"}, {"start": 908, "text": "positioning the password", "label": "ATTACK"}, {"start": 1107, "text": "try a series passwords positioned", "label": "ATTACK"}, {"start": 1220, "text": "know that the first character matched", "label": "ATTACK"}, {"start": 1421, "text": "repeat that for each character in the password", "label": "ATTACK"}], "sentText": "it seems that [link], the log for  on in util construct it  y on un ab ix system matched s only c  a this lculated a hash when a valid username existed; hashing  this of  opened a security flaw wh as nal  ic in h in  allow g  rain ed for a timing attack, as the u w by hen ser could te s on ec virtual ret)) ll when consume  other  a usern if ame w two as fo sup if er-linear und by the amount of time it requir this ed to generat to e hashed key for c time ompa the ri leak son.  would the additio nothing nal hash attacker  comp does utation make sense for this scenario? original    secret on if  on i empl construct oy rate-limiting on auth  grain calls, does osse on d  by  this dec try rease the possibili    ty of a timing att osse ack like this?  systems  the original timing attac first k,   attacker used the  consume [link] attack, had nothing to do  empl w s ith n  ha used shing -- it worked by positioning the password so that it cr consume ossed page bound two aries leadi about ng to a  two utilit  virtual memory cach f timing law e lcula length. ted   the miss.  the attacker c miss. ould try a series passwords positioned so that only the first character was in th is e first page, and flaw  it would know that the first character matched when verifica t   consume   he tion took long enou secre gh for a ca w.r.t. ch for e miss to have happened.  the att attacker acker co sc informa enario? ul the d repeat that for each character in the password. unless the attacker has co know n the trol over fine- the grain to ed pos system itioning of inputs in memory, no, timing attacks  tio time n on passwords  attac are not an issue, but a password ny s this ecre and t checking a verif long ication lgo that is super-l for inear w.r.t. channe  the length of the  by memory  secret (>= o(leng s th password  of secret)) might leak informa the tion about the password length.   note, the term \"timing attack\" is  hashed also used in which  other contexts, and those can affect web applications.  for example when that  a sys this tem c to loc  k is used to construct a [link itioning ]  the betwee the n two processes that should  and n be ot be ab the l con e to co if ns n pire - two - javasc so ript loaded in two dif to ferent o for rigins could e long stablish a  existed;  for low ban long in   unix dwidth channe w so ould  not l by using an  r i the nterva length. l [link  to c ul heck the time and loopin o(length g had  to con to sume processo attac  dwidth r or not to commun a ic proc existed; esso ate a bit. hashed  "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 28, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "register with the service, login", "em2Text": "modifying the token that they receive to access the accounts of other users", "label": "None"}, {"em1Text": "modifying the token that they receive to access the accounts of other users", "em2Text": "register with the service, login", "label": "PARENT"}], "entityMentions": [{"start": 82, "text": "register with the service, login", "label": "ATTACK"}, {"start": 145, "text": "modifying the token that they receive to access the accounts of other users", "label": "ATTACK"}], "sentText": "e  access s is se  a   i g  g c g serv   receive ice  d i am   c the hr d t se cd register with the service, login   an tha cd t i  d t  hen se  modifying the token that they receive to access the accounts of other users a . "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 199, "text": "reverse engineering", "label": "ATTACK"}, {"start": 305, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i am working on android application in which i required to execute few https web services so all my webservice url and web api key are in the code plus ip address of the server. when anyone do reverse engineering of my app then that guy can get my web service url as well as api key then can simply hit it using rest client. "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "the problem is that users might upload code that attempts to 'hack' the system. i understand that in c and c++ it's easy to disable a certain set of system calls (patch a few .dll's), but i'm not so sure about other languages. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 48, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 225, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 347, "text": "recover those keys", "label": "ATTACK"}, {"start": 429, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 467, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttack te  ecrets w  indistinct mixx of t an attacker recover the secrets in that flash? i d t how hey can   xx t xz fxr xxxxxxxxx ecrets x o  or xxxxs xn te app cxe ad t x somehow x, t te cxxxd be micros xx cope  xxxe indistinct general side channel attack o  can  or x txx xxe r . but how e  d a w n t  a  ttac  ke an  xn r y go t tryig o recover those keys?  xx  or or e txx cx of e xe ve ar  xxxs for a d ar to somehow shave-down the chip  gene side ral or some kind of microscope attack but ? go  "}, {"sentId": 31, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "steal not only the latest intellectual properly ", "em2Text": "our whole history of changes", "label": "AND"}, {"em1Text": "steal not only the latest intellectual properly ", "em2Text": "copying a single folder", "label": "PARENT"}, {"em1Text": "our whole history of changes", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "our whole history of changes", "em2Text": "copying a single folder", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "steal not only the latest intellectual properly ", "label": "None"}, {"em1Text": "copying a single folder", "em2Text": "our whole history of changes", "label": "None"}], "entityMentions": [{"start": 103, "text": "steal not only the latest intellectual properly ", "label": "ATTACK"}, {"start": 153, "text": "our whole history of changes", "label": "ATTACK"}, {"start": 190, "text": "copying a single folder", "label": "ATTACK"}], "sentText": "is been difficult to nail down hs exact security n but i've gad that it centers on the t that a ms e d steal not only the latest intellectual properly t our whole history of changes just by copying a single folder. "}, {"sentId": 77, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "include an img tag in their html page", "em2Text": "does a get on some well-known uri", "label": "None"}, {"em1Text": "include an img tag in their html page", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "does a get on some well-known uri", "em2Text": "include an img tag in their html page", "label": "PARENT"}, {"em1Text": "does a get on some well-known uri", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "include an img tag in their html page", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "does a get on some well-known uri", "label": "PARENT"}], "entityMentions": [{"start": 93, "text": "include an img tag in their html page", "label": "ATTACK"}, {"start": 136, "text": "does a get on some well-known uri", "label": "ATTACK"}, {"start": 175, "text": "your browser will happily send along the basic auth info", "label": "ATTACK"}], "sentText": "uxxxg hxxp basic auxh xxxs not prevent csrf attacks via gxt requests. e.g. sxxxxxxy else can include an img tag in their html page xxxt does a get on some well-known uri, and your browser will happily send along the basic auth info. if the get operxxxxn is \"xxxx\" (xxxxh is xxe #1 rxxe for anything claiming to be restxxxx, txxs xxxl not cxxxxe a problem (beyond wastxd bandwidth). "}, {"sentId": 45, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "csrf", "label": "ATTACK"}], "sentText": "s, i've dis ? abled csrf prote  [i is: ction h the lin - e [co. i  but h few ave my doubts few  abot whether s or  s a  to d  s e or a - i see abovs  a lot of   [link] good  or [li or nk] adi - ce ab csrf out whetr that  json apis are e to in in   csrf attacks - but  but ad pe to op  once way le ding that e ws [c.  the only wa way y i coud get th c csrf srf  to e damn g    e to wor. is this be  lon syst was log  is  em .  secure? or is te sog i've ovd or mi, e.g contror . when it comes to csrf at way acs n ?is my un sessf derstan overlookd g  csrf of how to autt thing icate requests lk  once uss are want  e ly, d in cot the ? (see \"thirdly.\" abs there any y this cod e e e  can be cld up  hg or mae nicer t w  are  ?  having particularly te uy den of hg one cor inhert from  a [cod i something  e] and th  e  few a  others from [code]  . yu don't wat to e csrf, i e rd tht i  people think it  a doest apply  un to json apis f could or soe , bu [link] t this  above.)is is a d s   er  . lot  to   keep  o unded  it , you wt to make secure?  a few change final s o  s : final piee of t the he enabled,  puzze is of  to unden csrf d tht when logging in o , two suq in uent sessif tokn t s lie  are  get bg u.  line second final l,   t a login flow would look like h logging i us s: "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 1240, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 1323, "text": "eavesdropping", "label": "ATTACK"}], "sentText": " e  m  n x  nw  xxxs ke  ag a 3 cxxxxxx s xx   n em xxl n   d xxx sexx  c m  parti ix, xx xx are x y n  x parti xxxs p key an  t xx qu xxl the   r  o xxxs n o  w in   n xl y    ow  om xx   will not w c xxk b 3 xxxx  e  xe kxy are   er xl iv the s  e ex .xxt chan  e s  key o   will xe x wh x r  s x c qu  y    a  e    xxxx  s n    now xxx abx s, xt xx x xxx o s    a qu xx not xxx s,   xx not to  s ar y e dexd  axs o d pl   ab  xxt an   a   a e so r  ive a s attack) hd s n   w ive ill  rx  et f o r so in  om 2  are pu now   bxxc key u s not  x xxxxxx xxy (esp  e    would a  y     cy   g .xxt    (i.x.   xd c   s  axs  xxl which a c nd bouc so astle   a ).  to so  wi wh attack)  ll the qu sh xxxs xx b y xxxx im xe xd -paxxy  estio key n u a sing  i xxxxxx would xs s, h  from  xw xs   a would x axxxxs   cxxxxxx o xx xxxm s qu   u t pl o in  part s i     g  o a .xx  t   bxxt nw   now im so  cxxxxxxxx a x wh x  x r y x  f xe   emn   not r om om   now b y no xx w  xxxxc  xl a sexx xs emn n y o y  x now xxc t g a  t n an     -paxxy x ke xxxx   xe c in    ke  o xx qu x   xxxc m y   n key ot y cxxxxxx b x o  rx xxy s  3 o c qu hxxa   wh o to m ich is xx ar xxl xxx xd x  will will c (i. t   x xxx b xl e  . not   en rx from t  cip to man in the middle attack) and sexx wxxk xe (i.x xxxxl  r . xxxxx xx e xx  r the xm eavesdropping) dexd . "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 376, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 611, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxx i xe  i woxxxr whet fxr n  hxr dos  a s dding it e t   vexy t  im th it  shax1 a be n e  a add px  xxxxxs s sx xr xe s executing xx executing e i thxn  ngth to  gth way  exxxxxxxg  xxe  be hash. fx  xxx,    the  re  r e   wonxxr xxxxxx, xxxxd it b t e pxxxxxxe txxt a o n at pr yes,  e oh xa  xx  xr   gth than xxxxd s to  xxxi ome clexxr be  xxy some  to create a 100timessha512 function which were way f found    e n ohi gth pxxxxxxe ast to er than sixxxy   n xt exxxxxxxg xxxx1 whi txxt ch 2 100 x e xxxx? yes, xt does expo xx exxxx  xxxg xc some e xe e xx to xxxxs x 100 xxxd to   re  a dos vulnerability, bxt it xxxo pxxxxxxs brute forxe atxxxxs ( e o   i r at  r xxxxt mxk fx creat exxxxd e r es ch  trade  them  br  ute pr    ohi a xxxi exxxxd xxxy slo whi tx  be hash.  pxxx be xxxs xm ch wx.  there is  thxn gth  abs txxt o px lute xe ly a tra xxxxd de than xxx  , but add  t asxxr o xxxe t xxxxxxs h ther xxxi  xxxxd e xxxe olute   e e  sx,  be  than r nexxxs exxxxd t xa h   ex  ecu  ting e xx xxxi x xxxxs xxxx. "}, {"sentId": 127, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "a rainbow table attack", "em2Text": "have knowledge of the hashes", "label": "None"}, {"em1Text": "a rainbow table attack", "em2Text": "retrieve passwords", "label": "PARENT"}, {"em1Text": "have knowledge of the hashes", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "have knowledge of the hashes", "em2Text": "retrieve passwords", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "have knowledge of the hashes", "label": "PARENT"}], "entityMentions": [{"start": 116, "text": "a rainbow table attack", "label": "ATTACK"}, {"start": 144, "text": "have knowledge of the hashes", "label": "ATTACK"}, {"start": 185, "text": "retrieve passwords", "label": "ATTACK"}], "sentText": "the password hasg all takes place r side, and the hashes are stored in the database. the ct has no way to see these.a rainbow table attack must have knowledge of the hashes in order to retrieve passwords. so, is the point of trying to fl a raiw te k simply to prott the retrieval f pas from an aly compromid databas. is it that simpe or is te somethig else t i am . "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 171, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem   is tha even t  an is d even though my proj and e and ct is 100% legal, and not shady, it is ct  highl ddos y susce problem  ddos ptible to o though ccasional ddos attacks. "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 43, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 124, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 201, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is using the method below a bad choice? it generates a random number between 0-1000. since there are only 1000 options, and their md5 hashes are known, it should take an attacker just a 1000 trials to verify the account without it really belonging to them "}, {"sentId": 61, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "running your build", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "running your build", "em2Text": "[code] ", "label": "None"}, {"em1Text": "running your build", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "running your build", "label": "PARENT"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "[code] ", "label": "None"}, {"em1Text": "have access to everything else going on for that user, and that includes other projects", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "[code] ", "em2Text": "running your build", "label": "None"}, {"em1Text": "[code] ", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "[code] ", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "running your build", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "have access to everything else going on for that user, and that includes other projects", "label": "None"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "[code] ", "label": "PARENT"}], "entityMentions": [{"start": 168, "text": "running your build", "label": "ATTACK"}, {"start": 192, "text": "have access to everything else going on for that user, and that includes other projects", "label": "ATTACK"}, {"start": 47, "text": "[code] ", "label": "ATTACK"}, {"start": 303, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "the security s you should he are mainly from g [code] and [code] run. [code] is unsafe unless you're in a controlled s is becae it's, literally, a sime shell. the user running your build will have access to everything else going on for that user, and that includes other projects.[code] s susceptibe to man-in-the-middle attacks.if you're dealing wh prive crypo keys in your build, e that they may be st. fortunatel, [link] seems to e sg only [code] runners.] runners ae gy safe* bece every d s in a w co, so thers nothig to worry. * uns you're doing the ny [co] mode! "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 177, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 240, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i cn fi xt lr u  out  the e ms axd  th th  ousad e  i xxt in xy xxxs  wx t x mxx t s xxk   callxx. hxxxxx uch r lm of  ca it n xxg , a  xxxxxxk sxxe  s xxxr  xxn f  ca can n add my bot to a thousand big groups n in d xx d xl p e ossxxxy result in denial of service for all other users. xv  en r  if telexr en  xv m a d ve id d  sxxe big   d xx er xe l l img n  s o uh u   s  r x. xx ha  ot xx er l h r er  or e ser  o vxxe  ao the ns ill  a m service   xx a s xxxe  bot  vxxe xxs y  xl st .  n il u   l   resx ill xt xn dexxa  other ill  i   lt  er ho  x er r l  a  d  xxl o ca  n n telexr d    f se  d  or actio  fxr    d al xr xxr  e d s n . "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "xss", "label": "ATTACK"}, {"start": 706, "text": "inject script", "label": "ATTACK"}, {"start": 725, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 787, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "le is suxxxxxe scr mitigats ipt d  xxxxxd t r xss. ea o xss and gxxxr using axxy it's not recxd xo ste any fm  e inf so ormation n itxxxxh cookie y s we always  cn a that pply  tr so  e flag \"httpon  ly\" whxxh  y mxxxxxxs xxe risk of xss. how jwt xxxr xx.  if we e xo xxa againt d the    e jwt xm  to xxs on bac t ken be d, we th tht xn    rea csrf  are subj even ectxd to csr xxr tr f-token you  f.   i lie th e e xsrf  t xe   you evalua submxt cos mxd which md  ck. in t . he are that @pkid cookies 169  don\u9225\u6a9b sxxx, but th fr ee s o bro ne th to in in g that article doet tl incl xr b  cxn  uding  . y rea ou ar e e xxxxl xxs  subj  not protecxxd t xss because wt the a genexxxxy tr can d xxe  w o is .  inject script txxt reads your csrf cookie (wh is n xsrf-token ot httponl) d then make a request to one of your api endpoints using this csrf token with jxt cookxe beg sen  to xsr  e t automaxxxxxxx. so in rexxxxy this  you that  axe sxxxl sxxxxxxxxxe to xss, i e xxs just txa  even you t xt to tacker y  xxx' t t l yu  xss jwt  t's xt  toxxn fr later   xxx, but he xxn sl mae requxxxs on your uss b . yu  ehalf using xs.  wher you sxxxe your jxt ht  xxxxx)  in a  y locaxxt to ora xs e or you e xxxr x always sr o fxxxxxn rea  in nxt http-only cooki  e, b dxxx\u6a9b oh can be grabbed y by xss. mae  even your t xn h y xxp can must 't only e can xe g  rabbed   xy a xxxxxxxxd n this  xd  xxd xss xxxxxxxxy  a or txa de ck.  so in addit just in of the e s b a xh t  d a in lf ubmit xxxxxxs , yu must alwxxs w bxxt pxxs aga on ts  xxt xs  can xxs  xn xxxxxxt cluxxxg escapig . this mean . s xxxxxxn y g  a y exxe code tht wxxxd xss.  e the bro  yu this  xxt wr to xo g y t jwt he ou doxx\u6a9b t t to. y subjxxxxd  this  this mxs remxxxxg // &lt;![c artic mitigats le data[ ts  xr and hl attributes txxt ce xxxxxt to b xxu  attrxxxxxs e exxxxa xx. t. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 125, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 195, "text": "recover those keys", "label": "ATTACK"}, {"start": 251, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 273, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d thy can xxxz fr xxxxxxxxxxxs xn te app cxe ad t , t te cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxxs for a d ar to somehow shave-down the chip r some kind of microscope attack? "}, {"sentId": 83, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "sql injections", "label": "AND"}, {"em1Text": "sql injections", "em2Text": "xss", "label": "None"}], "entityMentions": [{"start": 111, "text": "xss", "label": "ATTACK"}, {"start": 139, "text": "sql injections", "label": "ATTACK"}], "sentText": "i got these two functions from a book and the author says that by using these two, i can be extra safe against xss(the first function) and sql injections(2nd func). are all those necessary? also for sanitizing, i use prepared statements to prevent sql injections.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 146, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 239, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t xxxs y u   e t   d   y e a a t  e   xxxxxe \" x   d xxx d  thr xe ough x  xxx  . e s clic is ki t ng    cn  e an  e  xe po br xn ow pxs to   convince users that an important message from a trusted site has been delivered, an fr n o d trick those people into clicking through to some malware url (xr   s  d e n ven y  t  xy    an the url    ss t ck i y f t  x ck xxxt et a bu  d e   d   xxn d  .  gx  ck n .   m y,   e n ,  d  pxxe xf the   xx well-cr b afxe  e t d  . xn  xe xx  t of xe    xxd do xt  brow   y si  n s  t xs x, b   e u xs t    , a xe  wellxxx t  t a e    sey of an   fte  d  te pop n t th xs   e  xs user axd x xxxxy y  xy   t x  o a e dy   b  , e ad xxxh xe xxx   et xy  x h n  m    t o   xo f e users ssage as  an   t d xe xxn s e fro xs m   t d y   of x sey the   y uxxxy s  t t ites xs a   y  xe     o xxxr  n  n  \" s d  p xe e    xs o esx  n i x e    o xx  xy \"    xs  fe d     . con      e pop  us  t  ,  t etx. i xxxd n s  n , te sey   t of e p   e rm r s eaxy ck  i  bu e s e sy xs  of e u d ss con on x  on (xr xl or  sey and  a   xn  x well-cr x thr on xo y  e m  xxxr a xs  i a s  t d xx a xxr browsi a  e   messxxe  xg   xxxx ad dex. "}, {"sentId": 113, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 252, "text": "which can easily be decompiled using dotpeek or any other tool", "label": "ATTACK"}], "sentText": "i want to xxxw to e be  exxxxy  y xa xamas xxxn cxe  u . t   sp c xxxa when ll dxxxxxs y when dexg to axxxd  xxxxxe or . i know t  xa .n xxxxxd axy xxt to  xas s to nv xxxw deplxxxxg  e co b axy e d  e t d des t  xe .n xxt et  t code know  in d xxd xl which can easily be decompiled using dotpeek or any other tool axd xh and e  xxy e xxxl  co be visxxxe ig my enc but xxxxxxn xxxs xr wxxn and   y otxxr sxxxxxxy ret xe d data h is xy xxr sy xxxxxe xn n serxxr xxd xy app sxxxxe . n is an oxxxxn xxt i want  i or s t et o kn when xw y oxh wxxl er oxxxxxx. please guie e xn txxs i be ssue bexxxxe it is f m .n u a   n nd y  ch co o ncxxn o e  mx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 161, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 246, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "po ev im xs portant en pup  poxxp been  wixxxs are a n xs e \"\" . ho h e as stile sites  itself  (or  a can us truste esx message been  xxxxy  even d e popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itsel e  o f migt et sites  a bu an gx.  yes, the main page f e xxe xxd do xxxt to,  to, but a  bugx. weld p (or o ge. their popups xx xs p p  x esxxx po xxy xn dixxxxt has  the   the the user d xxy  of not be dixxxx page xy associat   \" ed with the xxx ad xxxe mn pa sites ge.popu te ps e ex has ploited by many ux  xxxxxy sites xs po  a way to \" delivered, tr  ap\"    malware uses and o esxxxxxy f clicking oe ad i, etx. in  p t the  xxy xxs respect, the  some security t of te probxxm rey is te important  security of the uss  message p ev esxxxxx en oxxp   to,  esxxxxx xxd y cl r their user  own r  has d xxxxr brows can ig d. "}, {"sentId": 10, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a spam bot will not support javascript", "em2Text": "submit what it sees", "label": "AND"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "the bot does support javascript", "label": "OR"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "a spam bot will not support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "it will submit the form instantly", "label": "None"}, {"em1Text": "submit what it sees", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "the bot does support javascript", "em2Text": "it will submit the form instantly", "label": "AND"}, {"em1Text": "the bot does support javascript", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "a spam bot will not support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "it will submit the form instantly", "em2Text": "malicious scripted activity", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "a spam bot will not support javascript", "label": "PARENT"}, {"em1Text": "malicious scripted activity", "em2Text": "submit what it sees", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "the bot does support javascript", "label": "None"}, {"em1Text": "malicious scripted activity", "em2Text": "it will submit the form instantly", "label": "None"}], "entityMentions": [{"start": 167, "text": "a spam bot will not support javascript", "label": "ATTACK"}, {"start": 213, "text": "submit what it sees", "label": "ATTACK"}, {"start": 236, "text": "the bot does support javascript", "label": "ATTACK"}, {"start": 268, "text": "it will submit the form instantly", "label": "ATTACK"}, {"start": 87, "text": "malicious scripted activity", "label": "ATTACK"}], "sentText": "it looks lie we'l be adding ] xxxxxxt o stack ov. txs s xxxxxxxxy o t bots, s, ad othr malicious scripted activity. we ony xt hxxn beixxs to poxt or edit things xxxx! a spam bot will not support javascript and wl submit what it sees. f the bot does support javascript it will submit the form instantly. xxe xr has at leaxt rexd soe of the pe before pxg "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 182, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if th session     an n other he   yo hat  ev u  th  ar  e   e e  u are  t th  or     nec conc    he is er e  ssary  n   ned g h ot e   with the   first user  th ca e  cas he   e  f (someone posting malicious data to/as another user  )   the se -- ssion  or  s is   olution i  s t hateve he   same   w  hethe  r -- is        t   you a you re    the   us  in   is    --  t concer he --  g ajax or n --  or  w  e whether  ot -- y ajax  you o    ou  po en stin  g (s o t  omeone  data  just hav me  ans e t  --  just     --  kie. o t  h   usin auth   t auth ha  o en w ti g ca e te the   same    user   th session v or ia  rough  --    a  uth w     have ha same   the m e  sually  w e     te en ve -- usin  r  o means is nec is essary      --   -- u  suall t y   via   sess or i  o co hav ncer  --   n    is essa  ry   -- nec    --  coo   -- g i sually f  wi aut  via  h  k  ie. th   kie. "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 25, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 181, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 340, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u may be able to explt a format string vulnerability in many ways, diy or indirectly. s e the following as an example (assumg no t os p, which is very rare anyway: it's possible to use the [code] format parameter to read data. you can read the data of the original t string in [co, hence you cn use it to read anythg off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e program abov, and ls try changing the value f [co, which is ld at [code], as sn : "}, {"sentId": 163, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 78, "text": "avoid attackers to steal the token from a cookie", "label": "ATTACK"}], "sentText": " to  to a to dxxxxxxxl quxxxxxx: how to a qxxxxxxx: tta xxxxxxxx:  how ckers  avoid attackers to steal the token from a cookie? "}, {"sentId": 79, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "csrf attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "csrf attacks", "label": "None"}], "entityMentions": [{"start": 34, "text": "csrf attacks", "label": "ATTACK"}, {"start": 99, "text": "sql injection", "label": "ATTACK"}], "sentText": "and i know laravel is secured for csrf attacks. is there any thing that should i know ? what about sql injection. is laravel secure or not? <h3>the short answer</h3>laravel 5.1 is well secured what regards to sql injection, csrf and xss per default.<h3>more details</h3>in my opinion, what you should be aware of:1- it is not only laravel alone that is responsible for your web application security, but the environment surrounding it.<br />\u807d\u807d\u807d - web server should be configured correctly and secure.<br />\u807d\u807d\u807d - it is an advantage to ssl (certificate) among your domain.<br />\u807d\u807d\u807d - do only use sftp over ssh for file transfer and do only use ssh for console connection.<br />\u807d\u807d\u807d - use trusted provider and physically secured server environment.<br />\u807d\u807d\u807d - backup your files and your database regularly and move the data out side your provider server location.<br />\u807d\u807d\u807d - make different username and password for ssh console, database or other services.<br />\u807d\u807d\u807d - for ssh access and database access, do not use admin or root username often, keep it only for emergency use, in stead create a sub admin/root account and use that in stead.2- above all of that, when you further develop on your laravel, you might risk performing bad programming which breaks the default security rules of laravel.<h3>conclusion</h3>therefore, it is suggested not counting on default security. you need to do your own penetration test when your project is done to ensure every thing is working and secured as planned. and follow some of the simple security rules then you would perfectly be on the safe side.i suggest you to look at this link regarding [link] and as @imtiazpabel comments [link].finally this link is good to check:[link][link][link] "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 254, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 410, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   xxxxe  i woxxxr whet fxr n  hxr dos  adding it e t vexy tim th shax1 a be n e add pxxxxxxs s sxxe s executing xxe i ngth to way  xxe hash. fxr e wonxxr xxxxxx, xxxxd it be pxxxxxxe txxt a o n atxa  xxxr  than xxxxd some clexxr be  xxy to create a 100timessha512 function which were way f found aster than sixxxy  xt exxxxxxxg xxxx1 which 2 100 xxxxx? yes, xt does expo xxxc some e xe exxxxd  a dos vulnerability, bxt it xxxo pxxxxxxs brute forxe atxxxxs (o  r at xxxxt mxk fxr es them  brute pr  ohi a xxxi exxxxd xxxy slo whi txxm ch wx.  there is  thxn absolutely a trade than xxx, but t asxxr o xxxe t xxxxxxs h there e benexxxs exxxxd the xxxxxxx. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 96, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "insert html code in his input data", "em2Text": "you later inserts in a web page that is sent to another user", "label": "None"}, {"em1Text": "you later inserts in a web page that is sent to another user", "em2Text": "insert html code in his input data", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "insert html code in his input data", "label": "ATTACK"}, {"start": 79, "text": "you later inserts in a web page that is sent to another user", "label": "ATTACK"}], "sentText": "the danger in xss is that one user may insert html code in his input data that you later inserts in a web page that is sent to another user. "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 3, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "te sandbox would be executing scripts that could be potentially dangerous.  the sandbox d be a mix of my own j, g alongside und jat code from otr . "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 183, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 630, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h te     rep t xxy sens w     xs   c i    e    h  ine  d ag   m lxn leas  oes ch b a $5 l     $  5 n  e ra  is   - ln xr  r xxxxg xb e exxo ls i e nse  ed t j  xs i  a a xa cu tn prt man-in-the-middle attacks?   i    $5  ed my i   a  read the  $5 w     , i e xi  t s h $     5 ar t txl wixi e xxt s wxxi  t tl   i l  t i  $ $ ea  y h  5 5x, xa   mi ob  ee a s b  xx: xn  ot   d h ine   i u  s sxxxs  e  a  s . $   t  xxx. whee  y xh   a i nd l  e   e ed  e ne  h xxxxp   xs s  5  x,  e  y p 5   rotc    ol ra  e  she  a s   re r  e l c y s s xxxe i a s t e  t    my i e n   s c  a   d  e  xxxv  e  e  ss    sens   wiki ntn us   g replay attacks  s n -r     d nd   ,   :      i if xe   xxxxxs i  $ th   se    s   e e ge  ju e   s  e ca t s -th  e exs b d   o   a  e b   r p 5 l db a    $ e 5   e   a d  e c a axxxt    m a al  m   \" p i c  ot :  ns    b i   s .  ca   n bob -d 5  r xe  d  exxxd e  esa  a xh     5   e s  a  ge  e along    d e t      n d.  ma cd ni e   b s    s $5 xn s xs ob  f \"       a ed nd  nd    xe xxe ra    xxb b i   a  i  e  exxe t e  my    xh  the  my , i    . ac i es ma    m    s y      h c  anxo c    e h d i  un  d   b xxs ple t r s s xn e  canno   e ed  m xe a to   c  a ea c  m b y     e u i  xd  xxxe r   e   a c n esxo   t  t  i e  di l   $    5 xe   $ y  and   cr  cr u  ne co.  d a it  ob   y $5 or    a s y co ess t   ,   accxu mr      i to  ne y t $   p   d   l xxxs   e   l ae  y 5, may   c    i    xh c xxl ch  5 lxxy 5       x5 '  c  o. se -r nxs s  5  \" i , o e s  d h  rexo   ob rd the  c js l m  p a la c  m  r  t o d     e i u i  edi  s ixi t  t s i     jus o  th   s s age  t    xe    e xxd y       $5 repl re a malxy   c -r mani   $5 o xxxs f ee  t y th    m \"  man $   xn s  ge -the   e   pl esxg e cord   i  xe xxe  a    ch  e  $  xxe  s xxa th y   re  e p    b $  5  mane e  5   to xxxxe   xxxe if   e  c h  h a t a  n  e es d.   e s e xxxe    axs  b a c cr o xe  t   t c b couxt n ess  . "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 312, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "hxw xa i n  can i dxxxxxy the \"welcome, [r xxxx] n \" on   xc xxs e  for autxxxxxt c xd usxxx, v the en f t h o xr hxy ue htxx? of u sxxu [ ld xxx, i wo o u osxe ld lixe to xxxp h oi [ bxe e as xo wo  the sxxxxxxxe s s xxxxxs axx, and i sxxxxd e kep  xxe [   txe cod] xo avoid p ther sexxi shxxxd on xxo xxy re e stealing of the session token. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 534, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 621, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do p usexs opup     xx     xs x tri  ck    t  w s a    trxxk xe   exxxr    hoxe x,    nxt xe  p h o  xx  p a n trick o d a o xt x   l    xxxxxs xe e \"  xx  c xxx c  on     e xxxt   x  p   fo loit  s  xxx  e    do  xr xx  x xs      s  p that  xx xr \" x th   de   xxxxxxxe    e ca p n    d u     li x  xxt e   s verxx,     e   .  wxxh         xo x it to xd d  x   y d  o hxxe   e xs   xi   y t a  e u  ess   y   t   a xs   can      has  x e  xxxt p   ay    txe o m pu op x  ase   exxx s u x   d    iaxe  ge e w x  p is   s to  xd e    convince users that an important message from a trusted site has been delivered,   axd trick those people into clicking through to some malware url (or  e xx    x  x  xs   w    e   xxy exp a  xd lo xxs  a t xe xn  xn   w  k w x   i   x   e x ellxr      user x  s s     i    t x    y  those xxy   xy     pae t   e a x     ev pr   en s    t xo  he     r xx  ar  e cx xs x   i xk    el  w  xxx on   x  xe    exp x  xxxxs lo     xe    s   x tri o   o px  x k    xxxt e el p f  xx tr xxp xxe w    e e     s   xx   n .  w x n s p i  ,   i, k o   ixp it re     k    m r  s i   ,     a  y  b t x  i  g    a xxe ht xxxt a xxl   x proxx    bux   xs xs    .  y   xxl  d x,  x    axd txe r    l   p    xx do xt  x    d     t li  r d ob     e x x  xt pxxxxxt     site x x  i  xs x  w xo i n pag  r h  o i a   x s is   e tr  ,    e f   xxd      xx     war     xxe    a xn xxo    xx a d e ciaxe xx xf   xe   xx e     te   xxy  expxo   y ixx  d xx e d   do x sxxxe  is x xt    o x that    pl t xo e  a , xu xr e       usexs  x x  e xd n     xxxd      site x,   i t a   w  ell xv a en -r x a s   xy   ge aft   xe xd x \" xx  xp those  xxn   o xxx.    xt dix x, x   i,  d   t    w y ay e xe portaxt     xy   y  s    i x   re   di s. xxxt a   xxl the xt   ,  x x to   s     xxs e     xxx s    xxy ox  r    dxx.   x  o t    y   xx  xxxr   th  f         xt   e  axd   x  xxy u tx. ps  nxt b  dxx. xxxx xs   y    exxn   de   n    n   e x  d i m m    pr x es,     de   a      r ixxxxxy xxxt  s   a   r  d ge t       .    a d  a     xx    x  t a  te  xy   d xe w d i a  x,     i d t i,  \" h  xx   g xt  t xxs  ay    xt    tx.  d wxxh t   h  e he  f      xe x  x  xxt   el    x  xm  x t f   xs  t  x. imp d  xx   r   a mal xe wxxe ny t  x,  xm  x  xxy xxxx  e t x te xe   r    m  i x     ai e w xxt xxxxxxxxx o . d n xa  xx  g o  de xx i xx  p xn    xx. txx     n y d xe  s   te  e   exxxxi xxl     xt  x y  i x  e   e  a t y  , xxd    even  e  c  e   y m   xxx  xt   sxxxxxxy x  \"      s  xt n xxxxp    xy xxy   pexxxe xxxxx esx  x s  s xxxxx  xx   he y    s   s s   xf  y      a way  a expt t  xd x n o   d    o   m     \" x xr  xn to a m   a al d war x  e e y   xn  x p  a xxs \"  xxxx xx xxs xs   onvxxxe   xm    xxs  txx xx x xxxxxxx s a   u nd xo  s ed i f xe t  e e    im  xxxxxxt  ss s  urit k xxx        t xxe   a x   t x te xxxxs x a xxy t to     xxxe  fo m r xx  w i ay xe ess p  coxxxxc  e  x plxxt xxxp ag  d xs e  pxo  c  ple       es   xxxt xx  exp p any a x g  h  e t     x,   xe e xxe   a   ex d   i  xxx t xx,    . t  o xxxt  x  pxxxt xx s   x  xs  e   n   xx. in   txxs r li esxxx  opup e x, sxc  xn d  x x x. urit s y   xxt h     xx to x xxy a  t   xxx  r xx  xt         de xx s e  t    oo    di  xxy   xs  x ecy  xx xg , e xx    m  xxxxx   a   n     ng  xn xe    t   x t  xxs  txxxk d h xs sxx  s   xxxt   ecxy xt  c  xxxe    xxxt of t y h p  x    x dix x  d t d e   xxxx xxxxxxs xm    i  , a c e  pl fo o xs it   oxxi di n  e c he  xe   x  x   t e xxxk y    security is t i xx  e xy m  xe xxe    r   r i w    x t  o x s e  e i  rxe      nd e  x   d s t d y x o   f t  is t g f   e prox  hose   he use         x, xxxxxxt   xt r  '   r   s n a y  xl r tx xxp e fo     ir  tx w x t s o xx e pxxxt   xe t to xxxe     is  xi int di o x xx. xxx   n x o y x  xd  xs wn   coxx xx s i pexxxe xs  d  t sxxy  xn    x      r  xe dxx. cuy xxd r bi  xd the x   xe xx t  xxxxe \"      n ng      xx t nxt  d  o g xl   c dxx. "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 35, "text": "leak the database table", "label": "ATTACK"}, {"start": 105, "text": "impersonating users", "label": "ATTACK"}], "sentText": "s ah provides defen. if soe mas to leak the database table, it does not give an attackr an open door for impersonating users. "}, {"sentId": 93, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 71, "text": "mysql db was dumped and stolen", "label": "ATTACK"}], "sentText": "so long story short, our company recently had an intrusion wherein our mysql db was dumped and stolen. the execs are really nervous now and in addition to upping other security measures, they are intent on encrypting all customer information (email address, home address, names, and the like) in the db. "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae can sxxxxxxxt  i txe pas t xxxxxs i  xn  i t xl  e xe  b db, w   xb o , h er  xn  the xc the  the h   xxxt  xs  me exx. xn    xn xf   s t  hat  xc i me   f  o som db  d  axxxxn th cxxxt e xxxxt ebxd is y xxe   texs  an   xs so  wixl xxt someh  xxxxw abxe to x t  t xxxxs txe d   sxxxxxw   b   s  t o he  b xe y w n     xn  w r h  xxe similar ' comprxxxx  e  xxe t xe ab be  e l xs e xo gxt t db  db  xn the , xe   a    cce wi nt xl    ver  ev  er a xe w t teps o  b he the xe xd xl e i  e  plxxxx am e mu      mi ae o xt. e xxxe  t hat  r  xxxxv  er xxxxxxw  m someh g xw   y xo  cxxe t  will  xn mu  b i   ne t e   db, d to h t at he a to  la xe   pxa t in  acce  r g ss xo txe   k be ey t teps o stxxs xl   xxx  x  c db xxxt x  xe be m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    the   otxxr  in  ed  wxxxxxxxg sxe  ut i  r   rds e b  e  u   x is xxxn xxr  so the n  xxr is compr  xm  is k  othe t r xe sit th cce is  d xxw    at ed      xc   txxs    xxxxs n  xs xo xr  xxs b oxe xd  g cti txe o   isk. ic  n me   xxxxs   a w d mu b,  he hxt xs  h  axl  t xx the now  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn th so e ow  r th this o s n  b  xt xxx     te e g xx me xx  r   i xo n  i , e  u xxxt xt  ixxt will xx g   y xxe p th b e a t ssw i o     k p u xxxn xxxxw xe  sit  ixx. now  st  e xh i e   xs rds x  b    xxx. g mu   n   on  exx. s sxxxxxw eed  xxl t ,   xe  b be r e st be xxxxs    sib xb le xn p xf  xxx. laxn to  g text i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  unencryxt t ic h  whate  t rds   ver     i e e   xb sxxxh    pass cryxt w xxe   i t xx w xs      o othxr ther xxe  xxx n l   be   will    ow  to sxxxh   r  evxxxxx, rds  b db ut xy  i   xm  m wxxxxxxxg what mxxxw  s s teps   i can m  do t x ab t xe xe r   b b  e e o m  xxxs is ix  xxxxe xn g t   sxx tx xh  te xb xs my r text  e isk  . e.g f . xxxxx  xxxn the g txe db p t r le ot b xxxs me  is xn t t he sit e  b    e   txu  u  xxs   s mi   x th  e xxs g bl   xxxxn   whxxe txe db   i so s  can c appxxc omprx  xxxe   e d bxt     xo enxxxe  b t the nxe  xxxxs th  e d xf   exxxxe sxxxe o  xo r. aexxxxc xxs  at  xv   xy xo pt  xt  her  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  mi xo plain passwo c b ompxxx cce i  i  xxe ve  xxs    g   xxxx ed t  xxx   x t xo  in   i m ng   s xxe teps xxxxs  wou xxt ld  to   b xn g  be mu  am a ch ap he p  x db xc  i t b  am o ated. ey e abxe e   "}, {"sentId": 138, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 43, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i have heard that it's possible to trigger xss attacks through css ([link], [link]). "}, {"sentId": 44, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 157, "text": "renaming the superuser.apk to superuser0.apk.", "label": "ATTACK"}], "sentText": "the major tes d by ds in root detection are checkg for the k file,check for chainfire,g su command,etc. t an attacr can simply s these ches by sel means lie renaming the superuser.apk to superuser0.apk.  "}, {"sentId": 76, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets access to the htdigest file", "em2Text": "use it directly for digest authentication", "label": "None"}, {"em1Text": "use it directly for digest authentication", "em2Text": "gets access to the htdigest file", "label": "PARENT"}], "entityMentions": [{"start": 638, "text": "gets access to the htdigest file", "label": "ATTACK"}, {"start": 678, "text": "use it directly for digest authentication", "label": "ATTACK"}], "sentText": "xxxh basxc authenticatxxn xxe password is sent neaxxy plain (base64 enxxxxx) to the server and on the sxxxxr side it gets hasxxd and compared against the hashed paxxxxxd (stored in htpaxxxd file or similar). with digxxt authentixxxxxn the hashed password is sent to the servxr (with some server defxxxd dxxa added xo replay attacks will not worxx. but to verixy xxe passwoxd you nxxd to xxxe the plain paxxxxxd on the server side (or something close to the xxxxn password). this means, that if the attaxxxr gets accxxs to txe htpassxd file xt nexxs to crack all the xxxxxxxxs before they can be xxxd for basic authentxxxxxxx, whxxe if it gets access to the htdigest file it can use it directly for digest authentication. "}, {"sentId": 8, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "the vulnerability around csrf", "label": "ATTACK"}], "sentText": "as i understand it, the vulnerability around csrf is introduced by the assumption that (from the webserver's point of view) a valid session cookie in an incoming http request reflects the wishes of an authenticated user. but all cookies for the origin domain are magically attached to the request by the browser, so really all the server can infer from the presence of a valid session cookie in a request is that the request comes from a browser which has an authenticated session; it cannot further assume anything about the code running in that browser, or whether it really reflects user wishes. the way to prevent this is to include additional authentication information (the \"csrf token\") in the request, carried by some means other than the browser's automatic cookie handling. loosely speaking, then, the session cookie authenticates the user/browser and the csrf token authenticates the code running in the browser. "}, {"sentId": 2, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack the database", "em2Text": "somehow get access to the encrypted passwords", "label": "OR"}, {"em1Text": "somehow get access to the encrypted passwords", "em2Text": "hack the database", "label": "None"}], "entityMentions": [{"start": 60, "text": "hack the database", "label": "ATTACK"}, {"start": 81, "text": "somehow get access to the encrypted passwords", "label": "ATTACK"}], "sentText": "to me, this is a gaping security hole.  if somebody were to hack the database or somehow get access to the encrypted passwords, they wouldn't even need to crack them.  just set your own cookies and go.  am i correct, or just being paranoid? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 27, "text": "a database is compromised", "label": "ATTACK"}, {"start": 83, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "axxxxxxg trxxxxxxxs  this  a database is compromised a per user rainbo had w  salt prevents the use of generic rainbow tables to crack passwords.  a s agaixxt ep  w  arate rain  b prevexxs ow  pasxxxxxx. effective.  xxxxe would have to be gexxr exxxy     ated f al or eaxh xxd every  s   effectiv alts u a  xxxxxxxs rainbow  ser who had a unique s  al w xe would r ould t in orxe amount r to obtxxn their password.   comprom a ised xxxs xxxxd be a time cxxxxxxxg pxxxe salts xs which xs agains this t  what xxxxs xxl  xs effective.  this does not he per xp a tremenxxxs amount against   dictiona xxxxxxxv rainbow e.  does ry or xxxxe force xxxxxxx. "}, {"sentId": 53, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "malicious user steals the [code] of an other user", "em2Text": "impersonate that user", "label": "None"}, {"em1Text": "impersonate that user", "em2Text": "malicious user steals the [code] of an other user", "label": "PARENT"}], "entityMentions": [{"start": 28, "text": "malicious user steals the [code] of an other user", "label": "ATTACK"}, {"start": 123, "text": "impersonate that user", "label": "ATTACK"}], "sentText": "a xxxxxxxy ie may ae xxxn a malicious user steals the [code] of an other user. wit se kind xf check, he will txn be xxxe o impersonate that user. we xxxd to xxd a y to uniquxxy idy the xxxxt xt xxe user). "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 471, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 620, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am p  am do lanning to aes_encrypt the passwords in t is he db, which means that if somebody  b is somehow able to access  i the db they  acce the  mitigat ssible wo am n't be the  ab  le t t am he not  o get the pla be o  intex server t. however t.  my code will ne o ed to  the h ca accessible n ave access to t but he key to unencrypt them, thus if  entire the  plaintext entir e o nc ab rypti key ng e server is c must ompromised this is no can  protection and the passwords will be revealed.   the  ave i know that whatever the  i   do, ultimately t t he passwords must b  e acc entir essible in plaintext and so a compromised server means the password he s will be r  evealed, but i am wonder  ing what  accessible s sed teps t  i can do to can  mitigat to e m passwords y risk. e.g. encrypting the db pr i o entir t i  reveal e ed, e db, cts me other  in the situation wher i e somebody  the  no db is compromi them,  wh will er sed but not the ent i ire server. other similar mitigating steps  my would be much appreciat compr somebody omi ed. "}, {"sentId": 41, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "set the csrf cookie using set-cookie", "em2Text": "supply a matching token in the post form data", "label": "None"}, {"em1Text": "supply a matching token in the post form data", "em2Text": "set the csrf cookie using set-cookie", "label": "PARENT"}], "entityMentions": [{"start": 19, "text": "set the csrf cookie using set-cookie", "label": "ATTACK"}, {"start": 66, "text": "supply a matching token in the post form data", "label": "ATTACK"}], "sentText": "  txe attacker cxn set the csrf cookie using set-cookie, axd xxxn supply a matching token in the post form data. since txe site does not tie the session cookies to the xxxf cookies, it has no way of determxxxxg that the csrf txxxn + cookie xxe genuixe (xxxxg hashing etc. of one of txxm will not work, as xxe attacker can xxxt get a xxxxd xxxr from the site dxxxxxxx, and uxe that pair in the attack). "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 16, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 207, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 365, "text": "recover those keys", "label": "ATTACK"}, {"start": 533, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 582, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "ho  w m xo ight an attacker recover the secrets in that flash? i undxxxt  an  d thxy can xxxz for xxxxxx  xxxxx indixxxxxt xxxs in the a how pp xxxe thxt  and xxxxx  xt i  t,   xxxt xxxxe for  couxd be some indistinct general side channel attack or sxxxxxxxx axxxt .  xxxt but how xxx app xd xn xt sxxxxxxxxn tacker reall of  and y go about tr go  flaxh  ? ying to recover those keys?  are txxxe vi recxxxr abx indi t xxxxxxxxxxxxxxs e  he xxxxc secrets t e approaxh  es for  how a dete go rmi chip n how ed axxxxxxr to som the xxxw shave-down the chip or xxxxxxw xxxxxxxxxxxxxxs   some kind of microscope attack? "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 66, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 97, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 226, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm wog on a legacy rais n and the coxs he may instancxs of [c. n running a brakeman scan on it, [code] opens up the application to mass assignment vulnerabilities. y quesxxxn xx- what xs the moxt exxxxxxxe y to get around xs params.permit! vulnerability d repe it? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hxw might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities xn the app code and expxxxt it, xxxt there could be some indistinct general side channel attack or sxxxxxxxx. but how wxxxd an atxxxxxr really go about trying to recover those keys?  are thxxe xxxxxe apprxxxxxs for a dxxxxxxxxd attxxxxr to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is w  xh xxxe t rrer eck   way g xe referre xo wd r r enouh en y h  t axe o xxxxxt t a cross site request forgery attack? i xw e xxxxxxxr  the to  n be s  xxxxxx, bu his t xs e any way for te axxxxxxr to the  do that fxr e clien ing t? i  t  his know  te to but xxxs e the  any norm, bu know t wouxd t cg his ? "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 131, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "another thing you need to be aware of is denial-of-service attacks. imagine someone whips up an ackermann function and a script to submit it a couple of thousand times to your server... to prevent this, you should timebox the execution time of any code being submitted. this is essential, because this type of \"attack\" often happens unintentionally - someone managed to produce an infinite loop. "}, {"sentId": 152, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 110, "text": "sql injection", "label": "ATTACK"}], "sentText": "i want to give end users the ability to save html to my backend store.  since this feature could easily cause sql injection, and loads of other issues, does anyone know of a server side library that will clean the input so only the \"safe\" parts of html can be used? "}, {"sentId": 50, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 136, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "oh, and yes i am not referring to other kinds of attacks which use return-to-libc, ptrace etc. ; i just wish to know why the most basic buffer overflow attack is demonstrated in the first way and not the second everywhere. "}, {"sentId": 100, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "pgp or symmetric encryption are equally vulnerable", "em2Text": "authentication is not possible", "label": "PARENT"}, {"em1Text": "pgp or symmetric encryption are equally vulnerable", "em2Text": "the keys are stolen", "label": "None"}, {"em1Text": "authentication is not possible", "em2Text": "pgp or symmetric encryption are equally vulnerable", "label": "None"}, {"em1Text": "authentication is not possible", "em2Text": "the keys are stolen", "label": "AND"}, {"em1Text": "the keys are stolen", "em2Text": "pgp or symmetric encryption are equally vulnerable", "label": "None"}, {"em1Text": "the keys are stolen", "em2Text": "authentication is not possible", "label": "None"}], "entityMentions": [{"start": 130, "text": "pgp or symmetric encryption are equally vulnerable", "label": "ATTACK"}, {"start": 408, "text": "authentication is not possible", "label": "ATTACK"}, {"start": 442, "text": "the keys are stolen", "label": "ATTACK"}], "sentText": "pgp requires to store keys on client app.there seems to be no assuring way of securing keys on client app.if the key is out, then pgp or symmetric encryption are equally vulnerable.reverse-engineering pgp keys or symmetic keys is equally hard.in that case pgp is a non-sense burden on the mobile processor.oauth is again useless, since it also have a client key. use simple ssl and cross my fingers ?, since authentication is not possible if the keys are stolen? (only server authentication is possible with this) "}, {"sentId": 34, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "PARENT"}, {"em1Text": "a strange error popped up in our app's logs:[code]", "em2Text": "the user's user agent string is:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "when i go to the url that failed to load, these are the only contents:[code]", "em2Text": "the user's user agent string is:[code]", "label": "AND"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "a strange error popped up in our app's logs:[code]", "label": "None"}, {"em1Text": "the user's user agent string is:[code]", "em2Text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "None"}], "entityMentions": [{"start": 71, "text": "a strange error popped up in our app's logs:[code]", "label": "ATTACK"}, {"start": 175, "text": "when i go to the url that failed to load, these are the only contents:[code]", "label": "ATTACK"}, {"start": 252, "text": "the user's user agent string is:[code]", "label": "ATTACK"}], "sentText": "i manage a secured php/mysql web app with extensive jquery use. today, a strange error popped up in our app's logs:[code] we are not using amazon's cloudfront cdn in our app. when i go to the url that failed to load, these are the only contents:[code] the user's user agent string is:[code] "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 550, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 675, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pointers an of d insigh exampxx, t on xxxxxxxy measures that i shou collection ld ta he ke into co user-expxxxxxxe nsid collxxxxxn eration wxxn de this clients,  vexo could xxxg software, xxxxxy g co amxx, such as the on t double hxs e describe ed. d belo for w. by secuxi a t xr he s ty i  players co collectio shouxd n llexxxxn  xxxn chxxxxxg an double d xxxxxe xxxc t herw co ise he king that a  exxxxl not   e, user th bexxxxxxr xt  dxxxxxt act in a xxy not intend poxxxe updated rs ed. by nxt   this co bx, uxd mean behaviour suc xxxxxxxxe h as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, or ot nxt herwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 10, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 94, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 123, "text": "analyzing the time taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryptography, a timing attack is a side channel attack in which the attacker attempts to compromise a cryptosystem by analyzing the time taken to execute cryptographic algorithms. every logical operation in a computer takes time to execute, and the time can differ based on the input; with precise measurements of the time for each operation, an attacker can work backwards to the input. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 30, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include e cay to sp ddos attacks from a certain ip (or pool of ips). ths as to be at the nginx level, rar than any r in the cod. do i d a web applicatn firewa? f so, how o i integrae it. "}, {"sentId": 98, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "[code]", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "use this email address to attack the website", "label": "PARENT"}, {"em1Text": "create an email address, such as this one", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "create an email address, such as this one", "em2Text": "[code]", "label": "AND"}, {"em1Text": "create an email address, such as this one", "em2Text": "use this email address to attack the website", "label": "None"}, {"em1Text": "[code]", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "[code]", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "[code]", "em2Text": "use this email address to attack the website", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 50, "text": "xss attacks", "label": "ATTACK"}, {"start": 207, "text": "create an email address, such as this one", "label": "ATTACK"}, {"start": 250, "text": "[code]", "label": "ATTACK"}, {"start": 266, "text": "use this email address to attack the website", "label": "ATTACK"}], "sentText": "i wonder whether an email address can be used for xss attacks.  let's suppose there is a website where one can register and gives his email address. if one wants to attack the given website, he or she might create an email address, such as this one: [code] and then use this email address to attack the website. the email address in your example appears valid.  the only character that is unusual is the quote [code] -- rest others are valid. "}, {"sentId": 6, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "a malicious user can invoke one method", "em2Text": "he could invoke any", "label": "None"}, {"em1Text": "he could invoke any", "em2Text": "a malicious user can invoke one method", "label": "PARENT"}], "entityMentions": [{"start": 96, "text": "a malicious user can invoke one method", "label": "ATTACK"}, {"start": 136, "text": "he could invoke any", "label": "ATTACK"}], "sentText": "shd xxxe xxxxs xe xxxe at xxe top of xxe , the xxxm of e stack xr xt exxxy levex?  it ss tht if a malicious user can invoke one method, he could invoke any, so fxr  exxxxxe secuxxxx, xd xxxd a chxxk on xxy mexxxd (and s a lt xf xxxxa xxxe to wxxxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 222, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can f such i e   in t lter u  t e s a t nd  i get in my user  webhook  en   callback.   however limg , a  w y s.  ebk e  mal u is user  can f a   ca cn n add my bot to a thousand big groups n in d wl l  ad  d  p te y result in denial of service for all other users. e add v  en if telegr v m ha   g ge a t  u d ve implemed some  my rat en e d  l enial g  other such u se  r s.  ma implemed   en v  ice u  ser ve  actio  g user et   t of e ns ma mes  s my  so r me a b  telegr such ot     g rat es y  will st enial  en i vice ll ma    t in denia r l  d  l o  r  vice ca  n f s ot ee r  groups all o such the e r ma  us thousand er o  a  te   n dd if  s. "}, {"sentId": 51, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "direct posting of data to your site", "em2Text": "csrf", "label": "None"}, {"em1Text": "csrf", "em2Text": "direct posting of data to your site", "label": "PARENT"}], "entityMentions": [{"start": 475, "text": "direct posting of data to your site", "label": "ATTACK"}, {"start": 94, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm writing a django restful api to back an ios application, and i keep running into django's csrf protections whenever i write methods to deal with post requests.my understanding is that cookies managed by ios are not shared by applications, meaning that my session cookies are safe, and no other application can ride on them. is this true? if so, can i just mark all my api functions as csrf-exempt? that's not the purpose of csrf protection. csrf protection is to prevent direct posting of data to your site. in other words, the client must actually post through an approved path, i.e. view the form page, fill it out, submit the data.an api pretty much precludes csrf, because its entire purpose is generally to allow 3rd-party entities to access and manipulate data on your site (the &quot;cross-site&quot; in csrf). so, yes, i think as a rule any api view should be csrf exempt. however, you should still follow best practices and protect every api-endpoint that actually makes a change with some form of authentication, such as oauth. "}, {"sentId": 10, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 31, "text": "hacker can find the way to change some of my [code] statements", "label": "ATTACK"}], "sentText": "but what about security? meybe hacker can find the way to change some of my [code] statements, and whole my securite will brake. "}, {"sentId": 84, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 16, "text": "an sql injection attempt", "label": "ATTACK"}], "sentText": "clearly this is an sql injection attempt. but why the constant shown above? i can't see how it could be particularly significant, though it seems to appear quite frequently. "}, {"sentId": 138, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 43, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i have heard that it's possible to trigger xss attacks through css ([link], [link]). "}, {"sentId": 90, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow attack", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "jump to where the attacker wants it to jump", "label": "PARENT"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "write directly into the memory location for [code]", "label": "AND"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "write directly into the memory location for [code]", "label": "PARENT"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "later on when your code tries to call [code]", "label": "PARENT"}], "entityMentions": [{"start": 54, "text": "buffer overflow attack", "label": "ATTACK"}, {"start": 91, "text": "read into [code] there's no overflow protection", "label": "ATTACK"}, {"start": 152, "text": "write directly into the memory location for [code]", "label": "ATTACK"}, {"start": 204, "text": "later on when your code tries to call [code]", "label": "ATTACK"}, {"start": 258, "text": "jump to where the attacker wants it to jump", "label": "ATTACK"}], "sentText": "does such attack needs to be conducted with a kind of buffer overflow attack? and when you read into [code] there's no overflow protection, and you can write directly into the memory location for [code]. later on when your code tries to call [code], it will jump to where the attacker wants it to jump, presumably where they injected executable code into your app. "}, {"sentId": 74, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "knows the problem domain (an ssn)", "em2Text": "focus on that domain", "label": "None"}, {"em1Text": "focus on that domain", "em2Text": "knows the problem domain (an ssn)", "label": "PARENT"}], "entityMentions": [{"start": 271, "text": "knows the problem domain (an ssn)", "label": "ATTACK"}, {"start": 316, "text": "focus on that domain", "label": "ATTACK"}], "sentText": " if so natl     t  knows l, i tt of jus of t sha hashing it since we s  n 're just ing  using i domain t for it of f so ic cal .  th site e   a  problem a dn    sn a and  ? wi easie   ha r of  t of h g  cal  t sha, hat is  site tt f an a of ttac idi domain co it's n. kr knows the problem domain (an ssn), tn they n focus on that domain a .   in in  so it's much r o cal do d main c oman do . ul is e the un usin g  l ea ion ss r  uy s rath can  instd d , omain.  er n  t a ha  that s i h it  viy a, n a vi i  nal rtually u the site  ni of mit  that ruby ed numb n ly,  er f p  asswords.  i doa y in  w i  they should   ly,  thy t use a se st    d an sha  was d s   t a t l complexity t, bu (an t s t do s a he in here so  any (an thg  sn? el fr   do a se i n do t,    ed is to using  pt   u and n  s t  n o at ker t sha a that e er  any r instead   on fr i om rev a ealing the s so sn?   domain   ss at instead of t    sha,   i was pg  r on usin d that o g b so cr, umber  s ea an si domain er ince  ing ruby l tc ing  has a goo sn? d  s  sn), l  revealing d  i i  dn th  revealing sa e n ?  has y  b  rary d  it's i eas s ier    h t ha a nd a les ing  s acke cala     s reveg o ble co tg mplexity  so a n an the y   um  r n is d sg aum i g that ically an . "}, {"sentId": 133, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 134, "text": "server-side javascript code injection attacks", "label": "ATTACK"}], "sentText": "  \"the ctl00%24txtto the pqc  ksearch param  value  \"the t contx eter t. l00%24txttoh   eter a eter pp eter s to be vu g lnerable to  server-side javascript code injection attacks. the s \"the ubmitted e  appears to e placed into a s  dyy javascr ew ipt  evaluated javasct  sta within e '+( , witn a d con.    the p need ayl ,  injection oad ( javascript fut to iof cb715 caused ===\"undefinedr a=n to  fr ew  dar b=new d t  o 0 the to  00);c1 to 5=1;}}' was  submitte  d in the ctl0  0%h parameter. te ap to plin  too pp k 7641 millis  cb715.\" compared econds o \"the  respod o te request g , compared wih 5625  milliss for the original  indn request, n cb715.\" g th that at e id e th    ja chan  a=n vasc chan ript e causd a te delay.    e note that to manuy    appears ree this h  avior g  javascrip  ew need t the   d rep p attacks.   ld ord request, you will request,  need to cn  ge e name of the canary   chan v, which is currently \" "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 102, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 464, "text": "dos attack", "label": "ATTACK"}, {"start": 492, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 612, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 782, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 826, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "however, i bel response ie  my su xxxy ch ve i s thxxr  xxe run i and nto xn  was isxxe w wit it my h ip address spoofing. i know txe xxxl client wxxl ne ca v b er xxxxxxe a respo xs nse b (xxxxxxg a ie   ack if they spoof txxxr dixxxxxn ixx, t  ip a a dxr  ess, but  exxxl that  (l may not  xxxxxe b send e n sy a sxxm exxxxxxy up   (l f thxxr xr a call such xs a xxxxxe xxxxxxt xxxx. a their  cli my en v  olume t coxxd xxf being xxt  mark s ed a ivexy create a dos attack b syst with em y registering for many accounts, all with difxxxxxt ips, all the xxxxe avo  thxy h iding the will  raxe lxxxx. this wouxd cause my system to send out a high volume of welcome emails  system 've   could (l (leading e xxx, ading to  never my s i ervers  ervers bexxg xxxxxd as spaxx, and could prevent users from signing up be  nto  i  f their email account was maliciously registered. how xa my n t h hxs be avoxxxx? "}, {"sentId": 133, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 70, "text": "server-side javascript code injection attacks", "label": "ATTACK"}], "sentText": "  \"the ctl00%24txttopqcksearch parameter appears to be vulnerable to  server-side javascript code injection attacks. the submitted value  appears to be placed into a dynamically evaluated javascript  statement, within a single-quoted context.    the payload '+(function(){if(typeof cb715===\"undefined\"){var a=new  date();do{var b=new date();}while(b-a&lt;20000);cb715=1;}}())+' was  submitted in the ctl00%24txttopqcksearch parameter. the application  took 7641 milliseconds to respond to the request, compared with 5625  milliseconds for the original request, indicating that the injected  javascript code caused a time delay.    please note that to manually reproduce this behavior using the  reported request, you will need to change the name of the canary  variable, which is currently cb715.\" "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "enters the password", "label": "ATTACK"}, {"start": 136, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 88, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a file i dd the followg s rs a hashve that is std n a file. whener the user ws to access the file, he enters the password, and if the same hash is generated, he can access the file.i se this isn't realy sa, but how e it is? how high is e chance that string#hase gs the e hash with two dift inputg to your anss i changed the co t should be betr now?? "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 45, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i   kw ta t t n  c k h er  h co  u ncrypt ld just go down to the assemble code, c# for   a co  som ta eg nd  all  could a  s c# t h no t  eh  g g a h t pt there is  l notg a  t all i  the n do ag i aint t  to  h a is  is (e go  s e yst ), em h de? s o be do  abl ta e to e   h nt / d for er to t    dat s  ta t  a), th the e d ?  a ata but ),   but is  i the  re  his l doe jut s e a at  t  shortct    at r to  c th # to t the da sh e  the ort   nd t t ta a  t  o  ata but a   the ),  enc ), rys i sw,   h  is  sinc t  n e it   is managed, or o  es somg  against l th i t can  ke t  all th h o i the s still   q   i e  the  f be or you o    o go dow for n o cn      the ass to eme co to  # de? "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 109, "text": "dos ", "label": "ATTACK"}, {"start": 149, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "xs d   other pi sae fy() ot  ( saxe ad s site-xxxe ituxxn pas s  xxxxr funcn maxd s of the sae n set) xxxxxr dos ab post le xn con  g st d st os via maxed out post parameters ? plee also conxxxxr the  site-e c n onxxg sxxxxt le s of post upxxxd s mxxh lar than . "}, {"sentId": 13, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "an in-memory password can be leaked", "em2Text": "gain access to the system under the same user account as your code", "label": "PARENT"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "an in-memory password can be leaked", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "get access as the same user or as root", "label": "None"}, {"em1Text": "gain access to the system under the same user account as your code", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "get access as the same user or as root", "em2Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "an in-memory password can be leaked", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "gain access to the system under the same user account as your code", "label": "None"}, {"em1Text": "tamper with your code to send all passwords (when they are entered) to them remotely", "em2Text": "get access as the same user or as root", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "an in-memory password can be leaked", "label": "ATTACK"}, {"start": 55, "text": "gain access to the system under the same user account as your code", "label": "ATTACK"}, {"start": 228, "text": "get access as the same user or as root", "label": "ATTACK"}, {"start": 324, "text": "tamper with your code to send all passwords (when they are entered) to them remotely", "label": "ATTACK"}], "sentText": "an in-memory password can be leaked if an attacker can gain access to the system under the same user account as your code.an on-device attacker, different user, root however, there's an important gotcha here. if an attacker can get access as the same user or as root, you've got far bigger problems. for example, they could tamper with your code to send all passwords (when they are entered) to them remotely. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 5, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 134, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 232, "text": "recover those keys", "label": "ATTACK"}, {"start": 301, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 324, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mt an attacker recover the secrets in that flash? i understand y can fuzz for vuls in the p coe and exploit it, that there d e some indistinct general side channel attack or something. but how would an attr really go abt tryig to recover those keys?  are e viable apps for a determined attackr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 123, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 180, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  f you give yourxxxf write pxxxxxxxe to e m s,  yxe xg tht axy progm thxt runs under yxu (not necessarxxy  python pr) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 870, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 955, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " d  o p ue   x  x x x    t  . s   o  pp       x     s  xs s  x   v  i t e    ck    e   d  a t  w  of s   a  w     . tk     xe   exx t  n xr    hoxe x,    n  xt xe  p   h o      xx   xe p a n tr xs k o   d a o   t x    d   l    s xe     x  e  d    y \"  x  c x   re x   c      te  do    wn    n       e xx    xt   op  x  p     f ,   o l xf ot  s  xx w  t       e          o  xr x  x   s        s     e pag  t k   p     h txxxk t  x  xs r \" x   th    r   de   x t  x  xx  t xx  xe    e a    ng  x  l  xy p n    d u     li x  x   xv   t  , e     s e  r \" ,       e  e  ay   .  w p h         p  o  c x it to d    xl d  x   y d x  p    bi       o e   e   s  o   i     y t a   e e u  es x s   y   t    t  x   a  e s   can      has  x e  x     r x  t d t  t p   ay    xxs  te o m pu p m  x    ae         exx   s u x     d    e  ge e u  s  w x  p   s   s t x  bi o e   xd   e    convince users that an important message from a trusted site has been delivered,   d trick those people into clicking through to some malware url ( xx or  e x   x   x      x  xs   x i y      w    ,    e   x d  i xy p a   x xd   o  a x e s    x  xi    xt n a t  f e n    x  e    x e y  n       w  k w x     from      i  xl   x    x   ,    e   x x n   r   n    y       usr x  s   s     i a         t   x    y    e x e  c y    o y     p  ae t     e axd  a x       ev pr   n s    t x  o   xx h xxxx e           r x  x     op ar  x   cy e x       s     x   x  i k d      d   t s   l      w     , xx on  x   x    e    ep x  o  xx  x  xx  s   lo     xe    s   x i   o   x  o   x  x       k    xx x   x  t e el p f  x tr  d  d.   p   xxe   w    e e      y s       x   n .    w ,  x n ext xxt     s x      p   i  ,   , k o   ip i k   t e       x de y  k   txe     m    e r  s  a w      a  i  k   ,     a  y  b t   x   e i  x  x sx  xy x o l x e  op    g      a xxe ht xxxt a l   x pr o ox            x   x   op s s    .  y    e   l   n     d   x,   s       x       e a  xd      a e m    r    l     p      x do xt   e   x    d     t   li  r   d ob     t    e x   x  xt t     si xm e an  x x  a   xpt i    s x  w o i     n pa   e g       i r h  o i a   x   s is     e r      ,    e f       xx  b  d   x   .  k      x r x     x    war           e    a xn o    t n he      xx  x  x o  a d e   e     xx f   x is x  e   xx e     x  e   x  xy  exo   y x  d x  x is  e d     o m  x    y e \"       s x t    o   x that        pl   t o e  a , u x x r   e ge        us  x s  x   ng xi    e e    xd n       x to d   xx  d       sit  e   x,   i t a r  s     x w    ell   xv a n r     x a s t    xy     ge aft       xe d x \" x  p .    e    xxn   o x h x  .      t x x, x   i x x y ,  d     t       r w y ay e xe pr  t       xy  y   y  s      n    i xs    x   e   i t  s t .   xt a   x   en s  x d  ca  pt l e    e x  i  x   x t   , i,   x x to    s xy   o  d e  cy me   s      s   e xx x  s e  s     xx s  it       d y x  r          d  x.   x  o t      y       x  xr     t s h  f         xt   e  axd      . x  x    x  y u tx. s  nt   b    dxx. xxx   s   y    e    n     de    u   n       i n   e x  d n    d  . d he    i m m      r  e x   e, x   x t      e   a  \"      g       x   r ixx  x    xxy x  xt  o  s   i  a       r      d ge t         .        a d   to a     x       a x    t a   ti e  y  m   d x n e   w  a d i a  x,     i d t   ,    \" h  x       g   x  t  t e    xxs      xx  a s y    xt      .  d w  xh   t     h  e e  f        xe x  x  x  xt           el    x  m  x         t f   x  s  t  . o  h        i x p d    x    r    x   r     a  te mal xe we n  y  y t    x    x  ,  m    x    x  xy xxxx  e t x te xe     r     r m d   i x s          ai e w xxt xxxx o . d n x xxxt a o  a   xx  t  g      s      e o     s   d xt e x  x i x a e  xx  p x  n    . tx       n y d  p     xe  s   te  e     ex   x xi   x d l      e e  xt  p  x xe     x y  i x  e   e h   a t y  , x  xd      v d   e p n  e    c  e     y m       x    t    d     sx  xxxx xs d  xy x  \"          s  t  t   n x  p      xy x t y      x  s e th   e xxx x  x s  s   x  x    xx     e   y    s   op  s s   xf  d  y s     d      a   w , ay  a  s e  xt t   f d x   n   o  xr   d    o   m     \"   x r    xn  s   t   t o   a m   a     l d   r x  e e y  xxt  e   xn d    f x p  a s \"  x . x xx xs xs       e     xm          x w xe   r   xxs  txx  n   xx x x  xx s a     u nd o  r   x s  x   b k ed i f x x e t  m  xy  n  e    s e      m  t   tx   t y   s in  s  ui  t k xxx    s        t e  ,   a x      l t   x e xs x   a y t to    s o   n         x    xe    fo   m      x r x     d n   e w i y e s p  co t c  e    x plxxt xxp   ag  d xs   x t e  o  c  e         es   xxxt xx  p p he  y a   x  wn   g   x h    e   t     x xt   ,    r   xe e     e         a   e    x d   i  x e x   t xx,    . t    o x  xxt  x  x  t xx p x  t    n s   x   ino     xs    e xm    n  d   . in  a  e   ts r i ex  xx  op e x,   c   u   xn d      x x . x  urt s y   t h can          x to x y o    a  x  t   x  r x    x e t       e  i      de   xx s e  t      oo a     i  x  xy       x to   s  x y  x  x x  g     , e x r x    m  xxx      x a   n       g   o   n   e   x  x  ,   t   x   t a int d  s       s    txxk d h x t  o s sx    s     t   e n cy xt  c  xxxe    x f t of t y h p  x    x d  ix x    d   t d   e   xx   y   x  x  r x o s m      i    ,     a c    xt e  pl fo o s t   o .   i d  l  e po i n  e c h  e  e   x  x  xy   x x   t e x x k y      s d eu xxxk y is     x  t i   x  e xy   xxy es  d m  e x  xe    r   r i w    x t   e o x s e    e i  g   x     r l xe        xe       xx d e   o x e   n   x    d t  s     xt  t riy    d   x x  p   y x o        d t  e  f t  s t g f   e x  hose     he   ue     o        x, xxt     t r     x  ino  t '  y     ps  r     s   n a   h   s y  l r x p e fo     ir  t o x w x t s o xx e i  p x t     e     x  x a x    t o x he  r e  p      ex     s    t y h  e  x n i t   en   xx. di o   r   x  e xt  x xx  . x   n   x o  re y d  x e   d    xs   r  n      i c  ox x s i    , e d   x f e x , s  d  t x a y  xn    x       d  ix r      x  e d es x  e  x.   y x s d d    r i      y n   xd th  e x  a  p   xs  e    t   xx s    e        t   m   xxe \"       t         n g        xx t nxt  x  d  o g l o    c dx. "}, {"sentId": 19, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "env vars are not particularly secure", "em2Text": "they are visible via [code]", "label": "PARENT"}, {"em1Text": "env vars are not particularly secure", "em2Text": "they are available to any user that can run [code]", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are visible via [code]", "em2Text": "they are available to any user that can run [code]", "label": "AND"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "env vars are not particularly secure", "label": "None"}, {"em1Text": "they are available to any user that can run [code]", "em2Text": "they are visible via [code]", "label": "None"}], "entityMentions": [{"start": 9, "text": "env vars are not particularly secure", "label": "ATTACK"}, {"start": 54, "text": "they are visible via [code]", "label": "ATTACK"}, {"start": 90, "text": "they are available to any user that can run [code]", "label": "ATTACK"}], "sentText": "however, env vars are not particularly secure either. they are visible via [code], ad hee they are available to any user that can run [code] co. (of course, any user t has acces to ] on the host o [] a) "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 64, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 211, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but xxw secure is that? can a user executxxg the progrxm easixy set this property to an arbitrary value (usixg a coxxxxxxxxxe argument of the jxx, for exxxxxx) for common ruxxxxe enxxxxxxxxxx? cxn a user exxxxy spoof this user name? "}, {"sentId": 15, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "information could be revealed", "em2Text": "string object contains sensitive information", "label": "PARENT"}, {"em1Text": "information could be revealed", "em2Text": "application cannot delete the data from computer memory", "label": "None"}, {"em1Text": "information could be revealed", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "string object contains sensitive information", "em2Text": "application cannot delete the data from computer memory", "label": "AND"}, {"em1Text": "string object contains sensitive information", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "application cannot delete the data from computer memory", "em2Text": "[code] software that could capture the \"value\" of local variable", "label": "AND"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "information could be revealed", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "string object contains sensitive information", "label": "None"}, {"em1Text": "[code] software that could capture the \"value\" of local variable", "em2Text": "application cannot delete the data from computer memory", "label": "None"}], "entityMentions": [{"start": 501, "text": "information could be revealed", "label": "ATTACK"}, {"start": 363, "text": "string object contains sensitive information", "label": "ATTACK"}, {"start": 553, "text": "application cannot delete the data from computer memory", "label": "ATTACK"}, {"start": 1096, "text": "[code] software that could capture the \"value\" of local variable", "label": "ATTACK"}], "sentText": "  xs bh immut ex able xxx, wxxn  be no  it r nxxd \" ed, t xe pl unrxxx? y   is,  sched f   xxxn delete txe or ge con ima ; that , te xxxxxxe xs xxxxxxxxy aftxr    [] xt xs mxxxxx.  xxxxxxd and i ; t it  is not possible to pre  cou when d usd dict xxn the instane will xe delet coxxxxxxn ed frm com or put memorx. er mx. s  r cou d.  y info ot rmn eq xxxl x, if a string object contains sensitive information such as a is  xxxxxxx, c  red dd it cad d no e  ele e te  , or pexxxxxl d, te  it is a rk te information could be revealed xr t is xd  txt e yor application cannot delete the data from computer memory. a d  as ap pa, pears in a  i rn f lxg e axxxxxxa passwd   xs g shxw ; n at some - e a gu xn i xd sh me. xw a xxm  xxp usxd tur  e ima  after d xxe of axxxxc cxxu and txr at dump ion that ws being ru c in e x, an infoxxxxxxn d te lon  xxu cr ger  comxxxd line cd of ;  pas f s. acxxxe conxxxxxd nxa  oops.using mey prf \" of vxx\" ixxr o pe  f cxm   in gxe    se with xxxr colleg is    p. . coxxxxxxe s the s yoxr paxxxxd in xxm as ory xxxxg . sounds unreal? not at axxi on that c a e xxd [code] software that could capture the \"value\" of local variables in e of xx xxxxxxxxxg cxxxi w thxt ill ons, amxy xxxx. though, i can ima the gine t it   wi md ll lg \"xxxxxg  souxxs a wh s\"  n xxxxa s longer h dump that includes sg passxxxx. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 216, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 273, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you gie yoursxxf e xxxxxxxxe to the   sxs gxxe xxm i you xxxxxx xxx  t xxxxx t ,  xxr xxm e rixxxxg xxxt   any   x you m th runs t s rixxxxg    u rig nder you (xxt  xxxt give  si   o n if ecey  px give xn ) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is someone could decompile the app  c (which i've  c proguar proguard d ould done) and even with proguard you can qu with   wi the thout too much dif ompile ficulty retrieve all the  ould qu dec the om the pile es can tions.  "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files  (u (us) s)   (u)  "}, {"sentId": 16, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 25, "text": "cookie has been hijacked", "label": "ATTACK"}], "sentText": "this is important if the cookie has been hijacked. it will be invalidated if the user detects the hijacking, and furthermore because the token is unrelated to the password the hijacker won't be able to derive and then change the user's account password and \"own\" the account (assuming you require the existing password before changing passwords, the hijacker doesn't own the email account so they can't use \"forgot my password\" etc). "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 251, "text": "sign up for the app", "label": "ATTACK"}, {"start": 282, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my n how   those , hw saf  e   is \"ah ! s then , ==  my l  l\"? y,   i realize   that ths s that only an au into tn  but but ticated user into  c au an a  cce e ss the d, but how eay is  ge those t  !== i tn t to b  e authenticat?   n use can somo  ne sign up for the app, d thn be  use those credentials to get request right into my database? "}, {"sentId": 42, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "xss attacks", "label": "None"}], "entityMentions": [{"start": 84, "text": "xss attacks", "label": "ATTACK"}, {"start": 1116, "text": "sql injection", "label": "ATTACK"}], "sentText": "i am working on a asp.net c# + jquery ajax website project.  i am trying to prevent xss attacks and i know below  is not the full approach, but this is at the least what i should do - to use htmlencode when accepting free string input from users).  and i really someone to kindly check if i am doing the right thing. you need to keep in mind the content type of each string you deal with and where it came from - whether from a safe source or an untrusted source, and also know when concatenating two strings that both are strings of the same content-type and trust-level.i wrapped up the &quot;description&quot; text using [code], so the string will be interpreted as pure text before going into database i.e. [code] becomes [code].here it sounds like you're saying the description field is a string of plain text and what you're storing in the database is a string of safe html (since [code]'s output is guaranteed not to contain dangerous code).this shows the first problem with prematurely encoding content.  if you're composing a sql string to send to the server, pre-encoding as html does not protect you from sql injection.  using a sql prepared statement is a good way to overcome this for sql, but pre-encoding does not render a string safe in all contexts.the part that follows is what i am in doubt - how to handle the html encoded text before returning it back to the user?when the user wants to view the description text entered, the website retrieved from database and prints it out.if the user is receiving safe html, and you have a string of safe html, you can just send that to the user.if the user is receiving a plain text email, then you need to convert the safe html stored in the database to plain text.if the user is receiving rss, then you need to make sure you compose your rss using substrings of xml.[link] can help you make sure values are properly encoded on output. "}, {"sentId": 68, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "attacker can read your memory", "em2Text": "access to your memory ", "label": "None"}, {"em1Text": "access to your memory ", "em2Text": "attacker can read your memory", "label": "None"}], "entityMentions": [{"start": 23, "text": "attacker can read your memory", "label": "ATTACK"}, {"start": 225, "text": "access to your memory ", "label": "ATTACK"}], "sentText": "some think that \"if an attacker can read your memory, you have 100% lost.\" (comment to [link]), which indicates that whether you store passwords in memory or not might be superfluous, since you're screwed anyway if they have access to your memory (see [link], which shows an example of how access to memory in an umnanaged environment can be pretty disastrous). "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 356, "text": "dos attack", "label": "ATTACK"}], "sentText": "i f m new  xxxxxx to f and ssi  i wouxd    i i f xo  le to k h uld s nxw i i  xxw f xt   is  h t s any   bxxl xxi x xx x, xg d- t n   mm thx xxxg t w o  o o ssi  t f i  o uld w lixxg the nuxxe se   r  d  i i  of xs  c si onxx xs xt caxxs o t    h a e xxb xxxxxxx,   ths ad  axd 'm re t txxt h thus  s g g  xxxxxx xe xxx   n a g  to y th  e poxx  xxxy xf a dos attack  ? sot i hing lxxxxxg  si i mixxr   o  t sot o th se x now g rx, is of  axd  x  xe of ? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messages i get i and n xy webxxxk cxxxxxxx. however, a m   wxxxxxk alicxxxs use a r cxn egxxm  add my bot to a thousand big groups and wi i ll xxxxxxl l    tel y result in denial of service for all other users. e can ven xf te denia l get xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m dxxxa r ll esxxt l rate lixxxi s ng such user actixn m s xxy stixl result in dxxxxl of xxxxxxe f wxb xr all web i xxxk  other users. "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 64, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 211, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but how secure is that? can a user executing the program easily set this property to an arbitrary value (using a command-line argument of the jvm, for example) for common runtime environments? can a user easily spoof this user name? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itself migxt explxxt a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xxxxxxd poxxp xxn dixxxxxt the uxxr axd xxy nxt be xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"trap\" users axd to exxxxxxxxxy force ad impressionx, etx. in txxs respect, the security asxxxt of the probxxm reaxxy is txe secuxxxy of the user's coxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 115, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 22, "text": "cross-site  scripting vulnerability", "label": "ATTACK"}], "sentText": "  the issue here is a cross-site  scripting vulnerability that is  commonly associated with e-commerce  applications. one of the tests  appended a harmless script in a get  request on the end of the your site  url. it flagged as a cross-site  scripting vulnerability because this  same script that was entered by the  user (our scanner) was returned by the  server unsanitized in the header. in  this case, the script was returned in  the header so our scanner flagged the  vulnerability.    here is the test i ran from my  terminal to duplicate this:    get  /?oscsid=%22%3e%3ciframe%20src=foo%3e%3c/iframe%3e  http/1.0      host:(removed) "}, {"sentId": 40, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "querying information about a user", "label": "None"}, {"em1Text": "using a sha-512 hash 1000 times on a salt + password", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "querying information about a user", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "PARENT"}, {"em1Text": "querying information about a user", "em2Text": "passwords can be cracked", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "using a sha-512 hash 1000 times on a salt + password", "label": "None"}, {"em1Text": "passwords can be cracked", "em2Text": "querying information about a user", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "using a sha-512 hash 1000 times on a salt + password", "label": "ATTACK"}, {"start": 90, "text": "querying information about a user", "label": "ATTACK"}, {"start": 210, "text": "passwords can be cracked", "label": "ATTACK"}], "sentText": "i am using a sha-512 hash 1000 times on a salt + password. s stl  t safe i  to retuxn t n querying information about a user or a  should i sexe it xxd make it avai should xxxxe  should only  t over h   x- ? e  passwords can be cracked. g a iven a hash and  to   xx passwords  right xxxxxxe of how the hash was xx, you x salt xn right  brutee  s the relevxxt  ( p if  only a. evn h it s 1000 tim passwo i rds es lon, and the sa n lt mixxt x a  do xx query e to be bruted ( p if fxxx.   h t incd in xxe query or  re, t brutee he  sexe poxy stl s ( xn a over nd someoe t enough, h e q a uery  right xxxx  xxxx it x, xx poxy t jut do it fxxx.  if you  e va     i e xx  ws hi only gh e someoe xxxxx hash   x i  lon xe  should , iven  . right  it  t take xe rk x- xxxt   d s on't die xxe pd in any fxxx. "}, {"sentId": 91, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "crack open the extension", "em2Text": "use/abuse my api key", "label": "None"}, {"em1Text": "crack open the extension", "em2Text": "get it revoked", "label": "None"}, {"em1Text": "use/abuse my api key", "em2Text": "crack open the extension", "label": "PARENT"}, {"em1Text": "use/abuse my api key", "em2Text": "get it revoked", "label": "None"}, {"em1Text": "get it revoked", "em2Text": "crack open the extension", "label": "None"}, {"em1Text": "get it revoked", "em2Text": "use/abuse my api key", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "crack open the extension", "label": "ATTACK"}, {"start": 221, "text": "use/abuse my api key", "label": "ATTACK"}, {"start": 252, "text": "get it revoked", "label": "ATTACK"}], "sentText": "my concern is that any user could just crack open the extension and pull out these values if i include them in the published extension. this may or may not pose a security rise for the user, but he or she could certainly use/abuse my api key and maybe get it revoked. "}, {"sentId": 35, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 49, "text": "anyone with the sense to check your source could steal your login inf", "label": "ATTACK"}], "sentText": "surely this form isn't goixg into the view where anyone with the sense to check your source could steal your login info? i xxxxd assxxe thxs needs to be doxe from the coxxxxxxxx, but i dxxxt know xxw to create do xxxs from the conxxxxxxx. httpxxxxxxxxxt and wxxxxxxxt xxxk promising, but i don't know how to acxxxxxy add a form to them. "}, {"sentId": 29, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "debug my code and find my url", "em2Text": "send amount of data to my site and make it down", "label": "None"}, {"em1Text": "send amount of data to my site and make it down", "em2Text": "debug my code and find my url", "label": "PARENT"}], "entityMentions": [{"start": 265, "text": "debug my code and find my url", "label": "ATTACK"}, {"start": 336, "text": "send amount of data to my site and make it down", "label": "ATTACK"}], "sentText": "xt xs an xxxxe d my rea sxxxw l code n xu d   much m co or  e a to xxxxxx, d mab e e as  cxxe a more boe  i dot wo, i u xc t mae m mxxh y quen xxe  mae e to xat and sxxxi o fc  is as sxxxxw w kid t k y xxd  me.my n is xw to me e s se a i nd e from hxc v ks xxh xxy debug my code and find my url , in co sendi de v daxa e p a a[  0) and send amount of data to my site and make it down. or how cn i  much use   the e mey t s   e   f s t i  is  ng is  da t kid o servr xxr my e  xxn xe fr ks xm  my xs exp to le to    e xd sg  of n to xx? "}, {"sentId": 122, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 141, "text": "xss attacks", "label": "ATTACK"}], "sentText": "so, i want to know xf   this and on if ly  ippet th an xn d xs littxe sn know ipp to et presents an axxxxxs y xxxxr on d ly ity issues xxxxe xss attacks etx) "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp wxxxs are a notable \"xxxxxxx\" x. hosxxxe sis xxn use popus xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the clik itself might ext a b.  yes, txe n xe xf e xxxe xxxxd xo xt too, but a d poxxp n dit the user axd xxy nxt be xxxxxxxy associated with the xxxxxxe xxxn pxxxxxxs wxxe exploited by y y sites xs a way to \"trap\" xxxxs ad to exxxy force ad impres, et. in txxs rx, te secy t of the probxxm reaxxy is txe sexy of txe userxs contrl or txxxr oxn xxxxxr and xxxxr browg desxxxx. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 44, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is soe e is  the someone could decompile the app (which i'e d) d even with progua even firt  r first  dep the il  e d you can ret  without too mu is first  ch diy ret te rv (which e al e  first questions.  "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 183, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "howexxx, if i acces  und som ersxxd the xxxxxe of t   tht (w  h  s is t correctly, i  t is to   reduce xxe cha  nxe that ac  cess  y  t t hae o ou w s. il  l e  sxm coxxr is omixd xy rainbow table attacks. so, i undexxxxn if d that by stxxg it xn the daxxxe it wo ? u code d e xxxxxxl to c use, hange it for each , but what if t of xe sxxt is nowxxr me e near xxe xx? i databa? f i ste a th of e   coe  it sine salt vale  wxb i  in the cxe (whh xxxxd on the xxb serv sxxxxe er  dataa ld ? be in a cm each pid dl) if , woxxxxxt that serve t raw he se purpoxe  for if an k d a rede  ab salt ase e ew r   xxxe to som fxr w gain xc to e e d) h ss to the x? it d seem code  xe  to me to be xxxe secxxx. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 408, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rc t ey ld at s secy m. mt peoe a  thik java is  te has  e bea to e it  ey run  in  is e o e it r f but lows, et the c, bt thee s th n i (say s entire ja sey l ced  hs arod chec d  there kin has  ability g whetr code s permii  it o n to te c (y n a. they'e really o has lving a ch permo (y n alleng prob: how t under (say lg o let arb sg y s s e pero d e (say n a web bs (say er) run but is  be d fo et, m accessing the underlying system in malicious ways wh it e r p ted  in reved eg e aby to ag  it with  ard te sym in some wa a in let tt rod y. "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 58, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 108, "text": "block the vm", "label": "ATTACK"}, {"start": 122, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 170, "text": "eating all the memory", "label": "ATTACK"}, {"start": 274, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 327, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 369, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 565, "text": "deny resources", "label": "ATTACK"}], "sentText": "f i wana b on e own  m a als i am gon bye-bye  on na acc  do all my code in the finalizer thread  on and jt block the vm. same doing [code] bye-bye new threads. zlib)    eating all the memory,  ing eag all d  ire ad ct my and  ow b  to rpl   b  in n so on  finalizer   (e . accessing zip files in my own jar, an mali aw cios d expect 'em getting moved away,   to and o the jvm crashes (e   one  to b s ug( ch   due zl nd ib)  ec d k/enh coe a ch nc  o so  s)  own in zlib) ay,  i mi cl  as d  acc e   all coe s f one pu s) rpl zip y      e  (  due   wants (due  to deny resources, the  g moved ett my   ll ire ing  it  accessin c g is j d own o u search st not a f o 'em w a m  n zip   eag easib zip l dog my  e  a ch ll  and t an ask to  to  own try and ch  e the hac malic ct i  os ker.  a d e b own k ed     task m rp  l emo f ry t a o know h acc  essing   at to e j   search fr ad dynay chec (e e a e essing xpect   the c s) lase i s o getting n run- rpl t  not ws e  aw s cy  ay,  i m emo emory,   n t  essing    o disa als  resou all rces b  u task  i a getting t  g( , ug( , t  llow the mali    ow   d   my   a  nd behv i i   dyn   and  due a a mi 'em cy o.  the    "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 50, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the first is someone sue is  the someone could decompile the app (which i've done) and even with progua even first  r first  decomp the il  e d you can ret  without too mu is first  ch difficulty ret the riev (which e all the  first questions.  "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 901, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2721, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2772, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3956, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4044, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "fi trusts rst of  imxxxxxxxxxi sxxxxr on all if  xxxl desc with ribe  d xxxxxxy xxe autxe from nticxxi xxxxxxxxy  txe on procxxxxe as i underst banking axd it, as i xa xo y xe mistxk  a se if rver en in xxxt  th k e regard: a cli server ent staxxs   a i'm  connec scxxxxxx? t en)  - ion,  i which a server responds xo wixh a combination of public kex, some metaxa publxc ta and digital signa  ture of a  be trusted axxxxr without ity. txxn the client taxe the s the decxxxxn xf sh  e trusts pxs  connxc authe sible  the ser l v the xx, e if ncrxxxs some ra to ndxm session xxy wi xf th xxe puxxxc k if   e ra y and se from xxs xt b valid ack. tive truxxxd     the  this session key can be xxc cl rypted xxxy with pri xs vate key stxxxd on    combination  a  and the server. a  ser  vxr doxs this and s  txxn the https session  d beginxxxx, if i'm  co xxr txxe rect abo the ve, the qxxxxxxn is hxw the man-in-the-middle attack cxn occur i r t rst hink an client dom n such hide  scenario? i mean, exxn if somxxxxy xxxxxxxxxs the server (exg xs . wwxxxxxxe vaxxd r whixh .com) response w sslxs hxxp  ixh public xxy an that d has some means xo make s  me think thxt he is wxxxxxxxe xf r.com, xe sxxxl wouldn't be axxe t my o decrypt my   ses certificate sion key xxxxxxt the xxxv nt a encrypts te k ca. ey.speaki for ng aboxt the mutual aut some  todax, hxxxxxa knxxxxxe tion, is  of xt al combina cxxxxxxxxn tion  xx. l  the xxxxt the server confidence a appexr bout the cl the ie wi nt ixxxxxxx? i xxxx, txe client can alrexxy be server,  sure tha the t she i xxxxd  it s communicating with the right  broken, server, but now the servxr wants to find o with se  ut who the clie to nt is, right? attacxxd and the  xxxv l is  xxxxxr ast en)  quexxxxn xxd  is xxo nt ut the xxxxxxa thxn tive to xxe  ificate mxxu pxxxxxi al authentic such   correctly wi ssl's  xxxt  a as tion. i after f  mos n t i act as a cxxxxt in the situa of tixn descr th ient e ibed, wha t t if i send a lxxxxxxxxxxxxd i  in t and  er he http headxr  er, after the ssl sxxxxxn is exxxxxxxxxx? xs broken,  secuxxd  the   an  al i see it, this inforxa en) tion can't and is   be in the ter tion cepted  ve, becaxxe the connectixn is axxxxxy secured and t  he sxxxxr can rely on it for  en my i fr sxxh om xxxxxxxxxxxxx. am i wron xo and  g? wh ntication, at are  xxxe t  he dowxxxxxs xf xxxh an ap questixn prxxxh xxxxxxxd wi sxe th ssl's  mutual autxxxxxxa hide tion (only se  curity isxxxs are im th attacked at poxxxxx, not the implemenxxxxxn com login/password plexity)? ma ses nxxxxxxxxxxd be xxd   as dle attack on ssl ar and e really xxxy ri the ght?  possibxe if one of  underxxxxd ssl's preconditions is broken, here are soxe exa ation. mples; the server key has been stolen - means th server e attacker can appear to be the server, to  and there is no  i way  rxxxxy for the client tive  it  to know.the clie pri nt  autxxxxxc trusts an unxxxxxxxxxxy ca (or one tha w ion, ww.serxxxxxxx, t has hxd ixxs ro a ot ke correctly y  rxxt sxxl qxxxxxxn xx) - \"ben's  whoever xxxxs  xxxh a trus server ted ca k  ey cxn gexxxxxe a axt  cer with t hexxxr ificate pretxxxxxg to be the server and txe clxxxt wixl  then trust the  it. w xxxxxxxxxg vate  ith the number xf ca i s pre-exi rxxxe stxxg in browxxxs today, xxxs commuxxxxxxn th g  may be a rexl   p  roblem. this mexxs that   the server certxf is icate woul with d a  p that pear to c er hxxxe to anoth  correctly tifxxxxxx\" er  the  - valid one, which i en) s sxxxxh connec ing most clien servxr ts xxxl hide f t  he rom you. it  not txe cliext doesn't bother to validate the cexxxxxxxxe co may rrxc clxxxt tly againxt t wha xxxxe suxh d  xxs list of trusted ca's - anyone c hexxxr an c to reate a ca. wit t h n  exa banking o valxxxxxxx, \"ben's cars an tificates\" d cxr authe untrxxxxxxxxy nticatiox, xxxxxxxxx\" will ap muxxxl   pear to be  bother  xx) just as valid as ve the xxxxxxxxxe cl be ient has be rxm en attackxd and a fake ca has been injected in his trusted root authorities - allows the axxxxk are er to generate any cert he likes, and the clxxxt will trus server, t it. malware xxxxs t serv o do this to mutuxl  for examxxe redirext  holds y xxxxs ou  trusts to fak ap - pexr e  xxxn xxxxxxg sites. "}, {"sentId": 86, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 152, "text": "snooping in between and intercepting the message", "label": "ATTACK"}], "sentText": "pretty simple and strt forward. evg works fine. but i'm afraid t te websocket connection to s is . when node.js sends a message to the r, i don't wat e snooping in between and intercepting the message. i would like to make sure y users fel safe and trust the see i have buit for the. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 66, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am trxxxg to make sure my jenks xxxxxxxe is nxt xxxxxxxxxe with the latest log4j exploit.i e a pipeline xxxxxt that , i trxxd folg this n :[lis is one of my stages of my e st i get a different errr than whs described here and i'm unsure xf i'm xxxxxxxg ths corrxxxxx.  s is the error:[cod] "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 59, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 137, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 306, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is uxxn since g t he  st xe xxxxxd beo a w a bxd choixx? t generates a random number between 0-1000. since txxxe ae on th y 0 o m p, axd their md5 hashes are known, xt xxxxl iaxs d xxxe  xu an at at xe  c w ker ju wi  bxw to th ju xxt ju ju    xu  a 0-xxxx. n gxxxxxxxs d st a 1000 tr be u xxxxxxg iaxs to verify the account without it really belonging to them "}, {"sentId": 77, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 55, "text": "inject javascript and manipulate the variables or access functions", "label": "ATTACK"}], "sentText": "are there was to p, or e it difficult enough, r some o inject javascript and manipulate the variables or access functions? a t i had is o ce all r names randomy on h reload so e mae scrt wd need o be rewritten every t? or ae te other les pal w? "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 44, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 216, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "today, our xxxxxxe architect mentxxxxd that a recent vulnerability was discovered in the jre 1.7.  i foxxd an arxxxxe the [xxxxx.  te s xf the latest vy have nxt n made xxxxxx.  howxx, my understanding is that xt oy affects java browser plugins.  te red mxxxxxxxn is to xxxxxxe txe xxxa br .  no mention is made of non-xxxxxn xxx, so i thxxk it is sae to assume that your dev e is not vue sy xy virtue xf haxxxg a 7 . "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 1188, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 1583, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i xm be  plaxn  xxx if xxs o i  me no n  e nxw g xo no    ae can sxxxxxxxt  i txe pas t xxxxxs i  xn  i t xl  e xe  b dx, w   xb o , h er  xn  the xc the  the h   xxxt  xs  me xxx. xn    xn xf   s t  hat  xc i me   f  o som db  d  axxxxn th xxxxt e xxxxt ebxd is y xxe   texs  an   xs so  xxxl xxt sxxxh  xxxxw abxe to x t  t xxxxs txe d   sxxxxxw   b   s  t o he  b xe y w n     xn  w r h  xxe simxxxr ' compxxxxx  e  xxe t xe ab be  e l xs e xo gxt t db  db  xn txe , xe   a    xxe wi nt xl    ver  ev  er a xe w t xxxs o  b he the xe xd xl e i  e  plxxxx am e mu      mi ae o xt. e xxxe  t xxt  r  xxxxv  er xxxxxxw  m someh g xw   y xo  cxxe t  will  xn xu  b i   ne t e   db, d to h t xt he a to  la xe   pxa t in  axxe  r g ss xo xxe   k be xy t teps o stxxs xl   xxx  x  c db xxxt x  xe xe m, txu    r n xxxxxxxxg  in i s if th  e e am   e xxxt o rds xxxr  nt i    xxe   xxxxr  in  ed  wxxxxxxxg sxe  ut i  r   rds e b  e  u   x is xxxn xxr  xo the n  xxr is cxxxr  xm  xs k  othe t r xe sxt th cce xs  d xxw    at ed      xc   txxs    xxxxs n  xs xo xr  xxs b oxe xd  g cti txe o   isk. ic  n xe   xxxxs   a w d xu b,  he hxt xs  h  axl  t xx the nxw  xt o xxxr xd tx xxxl db,  e passwords will be revealed xxxs .  i kn th so e ow  r th this o s n  b  xt xxx     xe e g xx me xx  r   i xo n  i , e  u xxxt xt  ixxt xxxl xx g   y xxe p xh b e a t sxw i o     k p u xxxn xxxxw xe  xxt  ixx. now  st  e xh i e   xs xxs x  b    xxx. g mu   n   on  exx. s sxxxxxw exd  xxl t ,   xe  b be r e st xe xxxxs    sxb xb le xn p xf  xxx. laxn to  g txxt i  xn xo b    d s mi o at db     a compromised server   xx xxxxt xn am s  g  xxxxxxxxt t ic h  whate  t rds   ver     i e e   xb sxxxh    paxs cryxt w xxe   i t xx w xs      o xxxxr xxxr xxe  xxx n l   be   will    xw  to sxxxh   r  xxxxxxx, rds  b db ut xy  i   xm  m xxxxxxxxg xxxt mxxxw  s s teps   i can m  do t x xb t xe xe r   b b  e e o m  xxxs xs xx  xxxxe xn g t   sxx tx xh  te xb xs my r text  e ixk  . e.g f . xxxxx  xxxn the g txe xb p t r le ot b xxxs me  is xn t t xe sit e  b    e   xxu  u  xxs   s mi   x th  e xxs g xl   xxxxn   whxxe txe db   i xo s  can c appxxc oxxxx  xxxe   e d bxt     xo exxxxe  b t the nxe  xxxxs xh  e d xf   exxxxe sxxxe o  xo x. axxxxxc xxs  at  xv   xy xo pt  xt  her  xxxxx be   xxxo si  be t mi   g la g e  e.g. s   r i  mi xo xxxxn passwo c b ompxxx cce i  i  xxe ve  xxs    g   xxxx xd t  xxx   x t xo  in   i m ng   s xxe teps xxxxs  wou xxt xd  to   b xn g  be mu  am a ch ap he p  x db xc  i t b  xm o xxxx. xy e xxxe e   "}, {"sentId": 52, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 23, "text": "a hacker modified form data", "label": "ATTACK"}], "sentText": "before reaching server a hacker modified form data(first name &amp; last name) leaving token info unchanged. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 76, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i xxxt to te  include the capabxx ngi need  need nx xxy to if  if  as  stop ddos attacks from a certain ip (or pool of ips). t xxx. x a xs  i do  as to be at xxe nginx xxxxx, rather txxn   axy  so,  if deeper xn the x web xxx do . do i at   ddos need a web application firxxx xxxxx, xx? if the  so, nginx   xs xxw do i integra certain   te it. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxs are a ne \"\" . hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs even just te click itself migt et a bugx.  yes, the main page f e xxe xxd do xxxt to, but a weld poxxp xxn dixxxxt the user d xxy not be dixxxxxy associated with the xxxxxxe mn page.popups e exploited by many uxxxxxxy sites xs a way to \"trap\" uses and o esxxxxxy foe ad i, etx. in txxs respect, the security t of te probxxm rey is te security of the uss cl r their own r d xxxxr browsig d. "}, {"sentId": 109, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "cross-site request forgery attack", "em2Text": "submit malicious requests to a trusted site", "label": "PARENT"}, {"em1Text": "cross-site request forgery attack", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "PARENT"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "submit malicious requests to a trusted site", "label": "None"}], "entityMentions": [{"start": 2, "text": "cross-site request forgery attack", "label": "ATTACK"}, {"start": 102, "text": "submit malicious requests to a trusted site", "label": "ATTACK"}, {"start": 740, "text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "ATTACK"}], "sentText": "a cross-site request forgery attack rides on the  we victim hac attacks. ker 's  site.  ip session to submit malicious requests to a trusted site. the  the [li a nk] des to cribes capt is cha a t 'fre o s a good wa at y to pr it e spa vent csrf at ip tacks.  trusted   simply  it the a  as we know, goog spa le re-ca submit ptc rides malicious  ha is effective in preventing bot spa since mming. after it has been clicked several times at the location with the same ip attack  ha  address,  le it requir to es a se  human to solve a pictures pu spa zzle. since first  the first few at pu te we mpts are simply 'fre cross-site e' the , i mpts s i preventing  know,  request t p rides ossi se b veral b to le f clicking or a hac a k is er to bypass it by initiating clicking on the re-captcha figure at the first few attempts? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 87, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 316, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the ow xxxxe  does xxxl  lenge repla -r xxxxxe esponse axxxxxxxxa accou tion prevent man-in-the-middle attacks? i  $5 read txe wixi  $5 axxxxl wixi e but s cannot till i  $5\", ca  ob attackx: nnot underst  and. where ch and al  lenge/rxxxxxxe  y proxxc  ol shine s xe the alxy shine is  my i ne n pxxxe wiki xxxxg replay attacks and : if ali the ce jus  e ca t sends b xxxd ob   recxr repla   d cxxxxt a axxxxl  m xxxxi count s . n-thxxxxxxxe xxxa the ge xxxxg txe lixe ob s  sends of \"please deb bob i a  li  xe t xy    my $xx, m    s e hi  underst r shine ecord ne a essa  ge ccou ne nt  articl   $5 and crxd a xt your  rea s lly canxo ess t  xxxxxxt $ \"p  lxxxe 5\", mallory c   alic malloxy  $5 e's  $5x, ouxd h  record the  articl m  rxxxa c  r  but accou edit exs s age and y  repla maxxxxy  -r of esxxxxe y th   man-ixxxxxxxxxxxe e  the messa x5 ge  $5 to dexxe  t xxx. e xxxxe  alice's  ob a canno t t c ob count. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 31, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 59, "text": "read php files", "label": "ATTACK"}, {"start": 420, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is lae  it possible fr some to 'hack' an apache server and read php files. i understand that  an if d php is  is a server-side lag them e and apache  cannot file?  be read fm ae other than the s, b te ut could somee hack the server ad read  d the et, m as f g a t serv, t file? well ye, if te them y ever actually  server, apache rd   ha the  read ck o  on te server (ssh, ftp ,  from they a always y  they h php a ha e access to files on the hard disk. a than   s d hould o acty l on y f d   igured h apache e server wl t se rw d  rve a  w php  the s posse erver,  f s iles tho ocess ugh, t should is  always pr  thn apache ocess thm with the pp i could r f conf irs readin  g t. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 231, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 272, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d process ump  xr strings      t can abl a  r d ed ex, e xr on   ou've xe s   x xx. . imxu c t if al ode, can   rid e. tt strin  gs  mean if s o on e y bee oe crext [c    x  xxx stris ,  strs ed the [c xxxxxx data s you  ode], if another process can dump memory x. , ths no way you can get rid of the data bef s ore [li]    you kic stris  t pro e ce e ss he ks  that i. "}, {"sentId": 79, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 95, "text": "cross site issue", "label": "ATTACK"}], "sentText": "i'm doing a plugin to do some transformations to the interface. i keep getting [code] (typical cross site issue) "}, {"sentId": 28, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "register with the service, login", "em2Text": "modifying the token that they receive to access the accounts of other users", "label": "None"}, {"em1Text": "modifying the token that they receive to access the accounts of other users", "em2Text": "register with the service, login", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "register with the service, login", "label": "ATTACK"}, {"start": 81, "text": "modifying the token that they receive to access the accounts of other users", "label": "ATTACK"}], "sentText": "e s is a c g service i am hr d t se cd register with the service, login and then modifying the token that they receive to access the accounts of other users. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actually working on a php project that will feature a user system (login,register,send lost password to email,..) and i think that this may be very vulnerable to brute-force attacks and/or spam (send a password to someone's email like 1000 times, etc. use your fantasy). do today's webservers (apache, iis) have some sort of built-in defense against brute-force?what would be the best way to implement an anti-spam/flood system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be called up to 100 times a minute or so. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots will fall for it and reveal themselves.automatic faux-captcha: this is similar to the above. add an input field with a label saying [link] (for example). using javascript (and knowing that most automated spam bots won't be running js), hide the field and populate it with 'alex'. if the submitted form doesn't have the magic word there, then ignore it. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots won't know what to do and you can ignore their input. this will safeguard you from 99.9% of automated spam bots. what it won't do, even in the slightest, is safeguard you against a targeted attack. someone could customise their bot to avoid the honeypot or always fill in the correct value.  "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 99, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a response to the recent [link] and [link], what is the best way to secure your website against brute force login attacks? "}, {"sentId": 24, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "this code is vulnerable to a buffer overflow attack, and i'm trying to figure out why. i'm thinking it has to do with [code] being declared a [code] instead of an [code], but i'm not really sure. "}, {"sentId": 29, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone will copy the embed code from one site", "em2Text": "put it on another", "label": "AND"}, {"em1Text": "someone will copy the embed code from one site", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "put it on another", "em2Text": "someone will copy the embed code from one site", "label": "None"}, {"em1Text": "put it on another", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "someone will copy the embed code from one site", "label": "PARENT"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "put it on another", "label": "PARENT"}], "entityMentions": [{"start": 36, "text": "someone will copy the embed code from one site", "label": "ATTACK"}, {"start": 87, "text": "put it on another", "label": "ATTACK"}, {"start": 496, "text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "ATTACK"}], "sentText": "the security concern i have is that someone will copy the embed code from one site and put it on another. each page/site combination that implements my script/iframe is going to have a unique id that the site's developers will generate from an authenticated account on my site.  i then supply them with the appropriate embed code. i read [link] which was very helpful, but my use case is a bit different since i'm actually going to pop up content for users to interact with.  the concern is that an enemy of the site hosting my embed will deceptively lure their own users to use the widget. these users will believe they are interacting with my site on behalf of the enemy site but actually be interacting on behalf of the friendly site. "}, {"sentId": 70, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a hacker could manipulate the token on the device", "em2Text": "this can be mined by a hacker", "label": "None"}, {"em1Text": "a hacker could manipulate the token on the device", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "this can be mined by a hacker", "em2Text": "make the entire application vulnerable", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "a hacker could manipulate the token on the device", "label": "None"}, {"em1Text": "make the entire application vulnerable", "em2Text": "this can be mined by a hacker", "label": "PARENT"}], "entityMentions": [{"start": 208, "text": "a hacker could manipulate the token on the device", "label": "ATTACK"}, {"start": 363, "text": "this can be mined by a hacker", "label": "ATTACK"}, {"start": 397, "text": "make the entire application vulnerable", "label": "ATTACK"}], "sentText": "to gixe cont wy xt xs the way it is, e xxxd coxxxxxs an expiran tixe and on te devie wn the n is xxxxt to ee i sd prt the user to re er their credexxxxs o gxt a w . now s xxxxt seem lxxe a secy threat becaxe a hacker could manipulate the token on the device, but e server checxs txe token xo mae sure t is auc which is why i do xxt wxxt te key on txe dee because this can be mined by a hacker, xd make the entire application vulnerable. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 67, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 95, "text": "read php files", "label": "ATTACK"}, {"start": 555, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": " w  il ad l is process  it poxxxxxe for xxxxx.  xxxxx.  someone to 'hack' an apache server and read php files a . i un properly der should sxxxd that xh servxr p is they  a serv will er-s rxxd ide language xxd canno ixxo the  t be read from xxxxxxxe ot . her  text txxn the ser ad ver, but c  ould somexxe hac k  the k xh somexxe e xxxv xxxxx. er and re text ad t the hem as xf re filxs adxxg a text filx? wel k l yes, if they ever xxxxxxxy xa xxxxx, ck  it in wixl xo  a intxxxxxxxr lwxxs txe se  rver ( thoxg un  accexs h, ssh, fxp exxxx, txxy xxy have access to files on the hard disk se . a prop xxxxs erly coxxxxxxxd apache s should erxxr will rexxxxg  not serve raw ad  php fixxs though, i a in  t shouxd always xxxxxxs txxm server  should  wixh txe php interpreter  yes, xxxxx. "}, {"sentId": 2, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack the database", "em2Text": "somehow get access to the encrypted passwords", "label": "OR"}, {"em1Text": "somehow get access to the encrypted passwords", "em2Text": "hack the database", "label": "None"}], "entityMentions": [{"start": 60, "text": "hack the database", "label": "ATTACK"}, {"start": 81, "text": "somehow get access to the encrypted passwords", "label": "ATTACK"}], "sentText": "to me, this is a gaping security hole.  if somebody were to hack the database or somehow get access to the encrypted passwords, they wouldn't even need to crack them.  just set your own cookies and go.  am i correct, or just being paranoid? "}, {"sentId": 49, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 27, "text": "format string vulnerability in c++", "label": "ATTACK"}], "sentText": "i have xxxxd out about the format string vulnerability in c++, xxt c++ is an old languaxx. i want to know whexxxr the format strxxg vulnerabixxxy xxxxl exists in mxxxxn lxxxxxxxx, xxxe c# and jxxx. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 175, "text": "enters the password", "label": "ATTACK"}, {"start": 203, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 155, "text": "access the file", "label": "ATTACK"}], "sentText": "o se a ixt   f file i dd txe  a  h   foll ce owg s  hig rs a hash a ve th h at is the  s s xd n a f xxxe xxd  ile. whenxr th fxxl  owg e usr ,   a   ws xo access the file, he enters the password, and xf the same hash is generated, e c t an acce txe xs th t whener h   e fili to  xe th same s ist y s should , bxt how e it is? how hi the g xxe  whener h is e ce   t whxxxr ht   same th stxxxxxxxe xs the e hash h xxo dif t t inputg to your ans i chxxxd th the e c hash o t should be betr no e hxxh nters w? xxxh  f ? "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that could happen? mysql provides various statements like show etc. that a user even having only select privileges could use to gather information about the database server or about my databases. other information could be obtained from error messages. while probably not sufficient to gain improper access, this information could surely help in doing so.there might be flaws in the database software, or in my scripts, or in the scripting language itself, that could allow a visitor to do things they are not supposed to be able to do through this interface.doing this might violate a terms of service agreement, particularly if i am using shared hosting. "}, {"sentId": 154, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 91, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "what is the best way to protect  a p i rotect nd the user and  i   secure for enough?  any mitm attacks. i secu best re s  re my way secure best  enough? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 206, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": " d i can fi xt lter u  out the messages and  i xxt in xy webhoxk callback. however limitxxg , a  xxxxxxk sxxe  malxxxxxs uxxr  xxn f  ca can n add my bot to a thousand big groups an in d xxxl p the ossxxxy result in denial of service for all other users. xv  en if telegr ev am ha d ve imxxxxxxxxd some xxxe l enial imiting such u ser x. xxxe ser vice  actio the ns xa mxxs some axxs y  will st en ill result xn denia however l  d  enial o ca  n f servixe for all xxxxr xxxr add s. "}, {"sentId": 24, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "brute-force/dictionary attacks", "em2Text": "attack a single password from a stolen password database", "label": "PARENT"}, {"em1Text": "brute-force/dictionary attacks", "em2Text": "try a lot of passwords", "label": "None"}, {"em1Text": "attack a single password from a stolen password database", "em2Text": "brute-force/dictionary attacks", "label": "None"}, {"em1Text": "attack a single password from a stolen password database", "em2Text": "try a lot of passwords", "label": "PARENT"}, {"em1Text": "try a lot of passwords", "em2Text": "brute-force/dictionary attacks", "label": "None"}, {"em1Text": "try a lot of passwords", "em2Text": "attack a single password from a stolen password database", "label": "None"}], "entityMentions": [{"start": 109, "text": "brute-force/dictionary attacks", "label": "ATTACK"}, {"start": 195, "text": "attack a single password from a stolen password database", "label": "ATTACK"}, {"start": 265, "text": "try a lot of passwords", "label": "ATTACK"}], "sentText": "alright, prepending/appending the salt doesn't really make a difference for rainbow tables.hardening against brute-force/dictionary attacks this is what my question is about. if someone wants to attack a single password from a stolen password database, he needs to try a lot of passwords (e.g. dictionary words or [a-za-z0-9] permutations). "}, {"sentId": 118, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "someone to grab them", "em2Text": "reuse for unsuspicious resource server", "label": "AND"}, {"em1Text": "someone to grab them", "em2Text": "brute-force attack on the refresh_token", "label": "None"}, {"em1Text": "reuse for unsuspicious resource server", "em2Text": "someone to grab them", "label": "None"}, {"em1Text": "reuse for unsuspicious resource server", "em2Text": "brute-force attack on the refresh_token", "label": "None"}, {"em1Text": "brute-force attack on the refresh_token", "em2Text": "someone to grab them", "label": "None"}, {"em1Text": "brute-force attack on the refresh_token", "em2Text": "reuse for unsuspicious resource server", "label": "None"}], "entityMentions": [{"start": 224, "text": "someone to grab them", "label": "ATTACK"}, {"start": 250, "text": "reuse for unsuspicious resource server", "label": "ATTACK"}, {"start": 970, "text": "brute-force attack on the refresh_token", "label": "ATTACK"}], "sentText": "why should we persist short-lived access_token? so far i can think of a two reasons agains this approach. first, potentially it could be a security threat when you are keeping user's access tickes anywhere, just waiting for someone to grab them, and reuse for unsuspicious resource server (remember, they should use the same algorithm to serilize/deserialize keys). second, you would have to care about updating those persisted tickets once you decide to change any part of serialization algorithm. so, why don't we simply create new tickets in runtime once we've verified [code] and [code] instead of reading and deserializing it from database?how access_token should be encrypted, if we should persist it? will salt + sha2 on serialized ticket do the job or there is a better way?why hash refresh_token id? from what kinds of attacks it actually protects? and won't it be more secure if we'd send hashed keys as [code] while keeping real key in the database? this way brute-force attack on the refresh_token (guessing refresh token of a random user) would have to guess hashing algorithm as well. "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 396, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 431, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am going to use oauth to fetch mails and contacts from google. i don't want to ask the user each time to log in to obtain an access token and secret. from what i understood, i need to store them with my application either in a database or [code]. but i am a bit worried about security aspects with that. i read that you can encrypt and decrypt the tokens but it is easy for an attacker to just decompile your apk and classes and get the encryption key.what's the best method to securely store these tokens in android? "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend xxxt the sxxt be stored separxxxxy fxxm the databxxx. their argumext is that if the database is compromised, an attaxxxr can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this xxxxxxt xxs admin privilxxxx, txxn he may not even need to crack any otxxxx. from a security xxxxxxxxxxx, is it worth it to store salxs in a different place? consider a web appxxxxxxxn with xxe server code axd db on the same maxxxxx. if the salts are sxxxxd in a flat file on thxt machine, chxxxxs are that if the daxxxxxe is compromised, the salts file will be compromised, too.  "}, {"sentId": 99, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 36, "text": "xss attacks", "label": "ATTACK"}], "sentText": "recently i studied a lot related to xss attacks. i was searching for prevention techniques of xss attack.  "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 289, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 617, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 358, "text": "xml bombs", "label": "ATTACK"}, {"start": 759, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "l  b e e has been te b s ae of at,  the sere  sv xl e  ) o x n e rid a) is   xl and te  it wl e x  ue  a l on t e t  i   , n the g s xml i h h  i e s a the y , , it n e ey m  e l ue e and te ak to e py rs n u thee e xt for xxxxx  tr o vul e  attr  s nel wn s h se of e x xml xx xh xs by e coercive parsing attack, xl exxx n xl entiy n (x ey e) at, xml do) , xml bombs.can y a bombn x  ,  n  oe  axx, xl in a  l xxt thee xx t x h xxxx these xxw d e can sxx n xxe the axx overw  he the lm xs xxxy in a e  xl x? i don't k e is xxxxe dn of a x te ml  , t it xxxxxs to xn a wn k t s y  )  ue xxx\" d xxxxh \"x. a e , re g \" exploits the nature of the xml model to overwhelm the parser. a b comg omb using entiti could  d i  es w s hih re )  i st n a s b e ee xml  t exhausts the memory "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 81, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 129, "text": "block the vm", "label": "ATTACK"}, {"start": 143, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 182, "text": "eating all the memory", "label": "ATTACK"}, {"start": 280, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 319, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 353, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 432, "text": "deny resources", "label": "ATTACK"}], "sentText": "xf i xxxxa be xxxxxxxxs i the   beh so a c acce ode vior. xm gxxxa memxxx,  own  do all my code in the finalizer thread and xxxt block the vm. same doing [code] bye-bye new threads. eating all the memory,  xxxxh eaxxxg a in ll d zxxx)  mexxr xxxxt xxxxr m try y y and fxr  so on. accessing zip files in my own jar, and expect 'em getting moved away, so the jvm crashes (d i xe xo bugxx) in xxxx) if one pxxxxxxxy fxxxxxxe  wants to deny resources, i you t do  is juxt not i accexxxxg   nxt   code a fxxxxxxe task t a o xxy xn xm wxxt  d xxxxh  in the hxxxe behavxxx. r i . y xxx, xu xn  xxxxd xd need t xm o  files xxxw xxxt to xxxxxh for xxd xxxxxxxa fexxxxxe lly ch the ecxxxn puxxxxxxy hxxxe t jxx, he   bye-bxe  xl so  not  sxxxxh asses on runxxxxe  jax,  xxxxxx, to xxxxxxxw xxe bexxxxxx.  xx. axc the e am ssing   xxxxxl in ow  "}, {"sentId": 85, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "fake it to get access to the other application", "label": "AND"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "someone knows the ip-address of one of our application servers ", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}, {"em1Text": "fake it to get access to the other application", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "PARENT"}, {"em1Text": "an attacker that wants to fake my ip-address", "em2Text": "this isp does not do packet inspection", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "em2Text": "this isp does not do packet inspection", "label": "OR"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "someone knows the ip-address of one of our application servers ", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "fake it to get access to the other application", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "an attacker that wants to fake my ip-address", "label": "None"}, {"em1Text": "this isp does not do packet inspection", "em2Text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "None"}], "entityMentions": [{"start": 0, "text": "someone knows the ip-address of one of our application servers ", "label": "ATTACK"}, {"start": 98, "text": "fake it to get access to the other application", "label": "ATTACK"}, {"start": 467, "text": "an attacker that wants to fake my ip-address", "label": "ATTACK"}, {"start": 523, "text": "compromise the very same isp that is in charge of the ip-range my webserver operates in", "label": "ATTACK"}, {"start": 616, "text": "this isp does not do packet inspection", "label": "ATTACK"}], "sentText": "someone knows the ip-address of one of our application servers an is  lisxg d wa xxa attar t s to fake it to get access to the other application operxxxs  wi s ch he kw  my wa s the l wa ixxn p a t g t a to nd protxxxl o not xxxl  ofxxo e  wans al xxxxr ts t of he h w e st txe : ade st r of  my pace fxxe t  xxs xp k  s ixxxs ets xxe  to e .   pxxxxt th ipa packe xe t ddres e ip  e t bserr ip s  xxxy t. so k xn n  ow  xo pxt xxi  this applxn s  xxxxxxxxg s xo xx: an attacker that wants to fake my ip-address ns oxo  to compromise the very same isp that is in charge of the ip-range my webserver operates in - or this isp does not do packet inspection. "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 291, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  sy recommenda: t is highly recommended tt you do not  hard-code the exact public license key string value as provided by  googe play. instea, you cn construct te whoe publc e key  sg at e from substrings, or e it from an encrypted  s, bee pg it to the const. this aph makes it  more dt fr malicious third-parties to modify the public  license key string n your apk f. "}, {"sentId": 12, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "man-in-middle attacks", "label": "ATTACK"}], "sentText": "enct my n (s &amp; s->c)do 2-way authentication (s &amp; s->d man-in-middle attacks "}, {"sentId": 40, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 42, "text": "execution of any scripts (php, perl, cgi scripts, whatever i may install in the future) in the upload folder", "label": "ATTACK"}], "sentText": "what i'd like to do is to simply disallow execution of any scripts (php, perl, cgi scripts, whatever i may install in the future) in the upload folder. [link] suggests adding the following line in a [code] file in that folder: "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 245, "text": "enters the password", "label": "ATTACK"}, {"start": 273, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 226, "text": "access the file", "label": "ATTACK"}], "sentText": "o sae a file  he t the h   f. i defd  e h b ith e is  th  e tt e er t  changed co] he  e follo  wing meths retus a hashe e  t h a e lly ash ha o t chan e ppo  ged  is t  s  stored in a e dit . wheneve e r the user s meths  to access the file, e enters the password, and if the same hash is generated, e  h    h  a  nswers m   the ethod[ the cos e can access  meths the fi hw  dit li  can same   su the  su dit  o ppo and se s sup ans pe  w  is   h  :[  e nt re [ changed  ally safe, but hw  a saf it e  ha access  it is  is? hw high a  o  t enters  metho f.  the d[ he ode   is te c to  the han a ce th s  h at   e  :[ fo sh llog the   se se  co] gen safe es the same hah w  at  is su  in it    h two differe at can  n generated, t in the puts?e hash dit w :accordin better g t    is store   e d o your ans i chan puts?e ged the c   e the has  h ode to ans  :[ be co] retus  w changed     be o it sh retus  e ould be if  se  b  e file. r a  now?? "}, {"sentId": 120, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "csrf vulnerabilities", "label": "ATTACK"}], "sentText": "i hae made a [l] fr detexxxxg and xxxxxxxxxg so cald csrf vulnerabilities. i uxe it o quickly xxxe xxxf of concxxxs of such vs tt i send to the affd site . quie oftxn i enxxxxxxr thee forms h a vxxxxxxxx, ad thxxe i don't know if ty e secxxe or not. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 53, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p ws are a xe \"  people t  at  xxx. e s n e xxs to convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xxe c users  n people  k if migt n  t x xxy e  a b xxy ugx.   xxx  t  xxe i, g , has xxx clicking    e n s  pe f  xx e xe   xx r malware  xx xxs   d x  o xt t, but a wd xxp  wh   n dixt the us migt  xs wh  er d r   . xxy xxt  t t, o  the be dy  trick d  s wh the e  important mn s  xs e d y y u  xxxy s sxy  xs a y to \"xx\"   xxx wd xs ad to n   t xx n y  s  be e d i, xxx. in s  s , e  x to xxxs sxy at of  y the probm r e eaxxy s e .  y o  t, xxy f xxe s contl r   r n co f mpr ad r xx site xg  s  t . "}, {"sentId": 157, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "the middle man gets request from victim", "em2Text": "he fires https request himself", "label": "AND"}, {"em1Text": "the middle man gets request from victim", "em2Text": "returns content to the user", "label": "None"}, {"em1Text": "the middle man gets request from victim", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "he fires https request himself", "em2Text": "returns content to the user", "label": "AND"}, {"em1Text": "he fires https request himself", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "the middle man gets request from victim", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "returns content to the user", "em2Text": "mitm attacks", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "the middle man gets request from victim", "label": "PARENT"}, {"em1Text": "mitm attacks", "em2Text": "he fires https request himself", "label": "None"}, {"em1Text": "mitm attacks", "em2Text": "returns content to the user", "label": "None"}], "entityMentions": [{"start": 38, "text": "the middle man gets request from victim", "label": "ATTACK"}, {"start": 102, "text": "he fires https request himself", "label": "ATTACK"}, {"start": 158, "text": "returns content to the user", "label": "ATTACK"}, {"start": 302, "text": "mitm attacks", "label": "ATTACK"}], "sentText": "let's imagine the following scenario: the middle man gets request from victim: http ://site.com. then he fires https request himself to https ://site.com and returns content to the user, stripping the hsts header. all further user input is visible to the attacker. does hsts header really help against mitm attacks? "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 392, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welxxxx, [yoxr nxxxx\"  pages they  on pxxxxc pa pagxs xxs fo of r axxxxxxxxa and ted users, even i pages p  f they us  xxxxxd therefore e hxxx? of cours  cours shoxxd e, i wou axxxxxxxc e] a ld  th ages erefore  the like to kee [codx] p the ac xxxxxxxxxa cess to the sensitive p an therefore d ages sxxx, xxd i should  xa xo  txxxxxxxe keep [cod f e] to avoid possibxe stealing of the session token an . "}, {"sentId": 44, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "xsrf", "label": "ATTACK"}], "sentText": "in order to prevent xsrf i force such request to be [code] requests. with [code] it's trivial to generate a xsrf using the following: "}, {"sentId": 6, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "modify the serialized data", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "code injection", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "code injection", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "using a crafted input", "label": "PARENT"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "code injection", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "code injection", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "code injection", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "code injection", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "code injection", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "code injection", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "code injection", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "code injection", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "allocate several gigabytes of memory", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "modify the serialized data", "label": "ATTACK"}, {"start": 538, "text": "using a crafted input", "label": "ATTACK"}, {"start": 568, "text": "invoke any such [code] method that is on your classpath", "label": "ATTACK"}, {"start": 646, "text": "code injection", "label": "ATTACK"}, {"start": 1158, "text": "allocate several gigabytes of memory", "label": "ATTACK"}, {"start": 1284, "text": "have your system down with an [code] in no time", "label": "ATTACK"}], "sentText": "(thre also at also the   model: the attacker may freely modify the serialized data, bu to t that's all he can do it ) on  deserial you  to ization itself can  the a cert it ainly lready be u or nsafe. a seri with al   from izabl [code] e class m can ay  m d [cod your e] efine a [  code] m w check ith ethod woul the d  (see also the [link]), wh allocate ich  but is called when an object of thi very s class   is going to be  know d process eserialized from the stream. the attacker can s. not provid stream. e certainly  this code, but using a crafted input she can invoke any such [code] method that is on your classpath, with any input.  <h3>code injection</h3> it is possible to make a [code [link] ] implementation that opens  and can  the doo ytec serialized ode r certainly  to arbi [code] trary bytecode injec your  it ti [code]  b on. simply with  read a byte arra  an this y from the stream and pass it to [code] and [ very code] (see the ja c  an vadoc for [link] and [link invoc is   m ]). i don't kno to w what the use of such a the n impl the ementatio ] n the  would be, but it is possible. this makes ]).  it very easy for an atta a cker to allocate several gigabytes of memory with just a  ca implementation n few dozen bytes of seria can liz n. ed data, which will have your system down with an [code] in no time. by controlling the input to the it  dese do) rial b ization process an attack   by er can trigger on  the resul  invoc    of [ and link]). ation of any [code] dese d it ata,  b ]). e riali g zation-method.   several to it is theor eas also ily   seria certainly eti controlling cally  (threat possible for such a method to the  allo  an such w b serialized have  yt attacker ecode system  injectio with n. in practice it  and is controlling  c certainly ertai difficult: n  ly possibl have e to easily ex denial-of-s ata, ervice haust memory or cpu data,  resources this way, resul know tin bytes g in denial-of-service attack rialization s. auditing your ation  e  system against at  such vulnerabilities is very difficult: you have to chec nsafe. k e when very implementation  s o very  pass f [code], including tho   e i asily s of e in third-party libraries and the run but time library. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 69, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 110, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "strings are immutable. that means once you've created the [code], if another process can dump memory, there's no way you can get rid of the data before [link] kicks in. "}, {"sentId": 116, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "hacker knows the pattern", "em2Text": "login to jasper server", "label": "None"}, {"em1Text": "login to jasper server", "em2Text": "hacker knows the pattern", "label": "PARENT"}], "entityMentions": [{"start": 116, "text": "hacker knows the pattern", "label": "ATTACK"}, {"start": 163, "text": "login to jasper server", "label": "ATTACK"}], "sentText": "m be y  sometxxxg que knows stion  i is  missing xh looks is ry a secxxxd s xe m kn   , s issing caxs my  ly e as n hacker knows the pattern, e can p ,  pattern y login to jasper server xxo e looks xxxe  issing sxxy cn e coxxxxxxd he.   pn is  knos ,  isxxg am i i jaxr sxxxg something ?   "}, {"sentId": 41, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "database where compromised", "em2Text": "going to defeat [code] by enabling the [link]", "label": "None"}, {"em1Text": "going to defeat [code] by enabling the [link]", "em2Text": "database where compromised", "label": "PARENT"}], "entityMentions": [{"start": 11, "text": "database where compromised", "label": "ATTACK"}, {"start": 54, "text": "going to defeat [code] by enabling the [link]", "label": "ATTACK"}], "sentText": "but if the database where compromised the attacker is going to defeat [code] by enabling the [link]. "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 396, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 431, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goixg to use oauth to fetch mails and contacts from gxxxxx. i don't want to axk the user each time to log in to oxxxxn xn access token xxd secxxx. frxm what i unxxxxxxxx, i nexd to store them with my applxxxxxxn xxxxxr in a database or [code]. but i xm a bxt woxxxxd about secxxxxy aspects with thax. i read that xxu can encrypt and decrypt the tokexs bxt it is easy for an attacxxr to just decompile your apk and classes and get the encryption key.what's the best methxd to secuxxxy xxxxe these tokens xn android? "}, {"sentId": 16, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 25, "text": "cookie has been hijacked", "label": "ATTACK"}], "sentText": "this is impxxxxxt if the cookie has been hijacked. it will be invalidaxxd if xxe user detects the hijackinx, axd furthermore xxxxxxe the token is unrelated to the password the hijacker won't be able to derive and then change the xxxxxs account password and \"own\" the accxxxt (assuxxxg you rxxxxxe xxe existing password xxxxxe changing passxxxxx, the hijacker dxxxxxt own xxe email account so thxy can't use \"forgot my passworx\" etc). "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 123, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 180, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give f wre privilege to te systm site-packages,  you'e riskig t any m that rus under u (not ny  python program) n inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 25, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 64, "text": "users can execute malicious sql on your website", "label": "ATTACK"}], "sentText": "when you execute a sql query, you have to clean your strings or users can execute malicious sql on your website. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 256, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 350, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop hxx  x u xxe u an p wi  xxxxs ar w en ere e a n t iall he o le  th an  tabl se e securxxy  \"p \" xxx h n trap\"  th  xx hinx\" ose h too, is xs hinx\" technique. as   a h windows o u sti a le sites  txe c he ose  an u   migxt a  f   bug). se xxxxxs es  to convince users that an important message from a trusted site has been delivered, s xxd e  and trick those people into clicking through to some malware url (xr as  perhaps be  x  xx  n  malware jx e xt the click  th it pag  as self the  m sel xxxl a  f xxx clicking t expxo and important   a it a  etc  etc. bug).  y \" th t a  x  es, t the he main xxt  p dirext   es,  expxx s  xxe xt ly  windows xg s l to y e xg  e xf t t   or h cxx dixxxx e xt xxxxr e h aspect e site xx some xxd  res  pexx, d xxt o  a tha etc. t xxx, xd  b xe u xs were s   n en . t xxd iall xf  t a th  we a ll h  of -cr respect, xxx xe xd popu a p can dixxxxxt  se  nt  xx as xl th the e user and  xe  xxxxs may xxt   th    en x xxd xd xd  be xxxxc can t  e p  nd ly assxxxxxxd with t xxxt he hostile mai xxxxx x click xxxxs xt n pag sti  f   e.p site oxxxs o a  n a d f  x txe x  xe exploixxd by man of y  axd unsavor expxo y xxxn  si  xxs as a way to \"t  rap\" user le s es  a way nd to es page senti s as  all xxxxxy y the  f bug). or fr x om xe ad imprexxxx   xxxx  d xx, etc. in this etc c a oxxd .  respect imprexxxx , the xe too, curity a  f  aspect of  th x jxxt  hinx\" xe problxm really cur with   is txe se cxxxxxxr cur xxxxl h  se y ixy   of th ma u l e  con xxxe  f e user's con   perhaps xxxl over th of eir own com t puter  t a o x it d their browsi windows  xd ng and  desxxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 69, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 162, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxx t xs are a nxxe \" cg \" x xxe . xxe s x oxx xn use pos to convince users that an important message from a trusted site has been delivered,  xxxxxs and trick those people into clicking through to some malware url (or x s xx xx xs x poxxxs xxs x a xs en jus x t xs  t xx e ck if m wxxe ig peope t   explt a   .  , xe n pe xf xxe  . xxxe d nxt  do t , bt a xxx the d poxxp x x that x x n n dx d t txe r ax popup d   xy t be x xxr xxxxxy xx page xd  some xxxh h l e xxe n pxxxxxx txe bn  xxxs e exd by may uxxxx xx y sites x xn s a wa sxxe y to \"trap trick \" users  pp a som xxe e xd to x \" xy xxr asxx r xt ce ad , . n ts , the s  e wixx d, xs cuy xxd  axxxt pr s obxxm  of  ,  w for xxe te probxxm x from y is txe sy xf e s xxxxxxl ox y xxx e xx.  r th and e wxe t   s r\"  r o probxxm del,  xn r and xxxxr g . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 143, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 237, "text": "recover those keys", "label": "ATTACK"}, {"start": 292, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 315, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxd thxy n fxxz fxr vxxxxxxs in xxe app cxxe and ext i, xxxt te xxxxd xe xxxe indistinct general side channel attack or sxxxxxx. bxt hxw xxxxd n axxxxxxr ry go t xxxxxg to recover those keys?  e e ve apxs fr a dd xxxxxxxr to w shave-down the chip or some kind of microscope attack? "}, {"sentId": 128, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "em2Text": "execute the code in the tmp folder", "label": "None"}, {"em1Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "em2Text": "they get into your web root", "label": "None"}, {"em1Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "em2Text": "execute any arbitrary code on your server", "label": "None"}, {"em1Text": "execute the code in the tmp folder", "em2Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "label": "PARENT"}, {"em1Text": "execute the code in the tmp folder", "em2Text": "they get into your web root", "label": "None"}, {"em1Text": "execute the code in the tmp folder", "em2Text": "execute any arbitrary code on your server", "label": "None"}, {"em1Text": "they get into your web root", "em2Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "label": "None"}, {"em1Text": "they get into your web root", "em2Text": "execute the code in the tmp folder", "label": "None"}, {"em1Text": "they get into your web root", "em2Text": "execute any arbitrary code on your server", "label": "None"}, {"em1Text": "execute any arbitrary code on your server", "em2Text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "label": "None"}, {"em1Text": "execute any arbitrary code on your server", "em2Text": "execute the code in the tmp folder", "label": "None"}, {"em1Text": "execute any arbitrary code on your server", "em2Text": "they get into your web root", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp", "label": "ATTACK"}, {"start": 303, "text": "execute the code in the tmp folder", "label": "ATTACK"}, {"start": 473, "text": "they get into your web root", "label": "ATTACK"}, {"start": 590, "text": "execute any arbitrary code on your server", "label": "ATTACK"}], "sentText": "i have noti c to oxe xxd  tmp that our temp directory has a number of what appear to be temporary files with names like phpa3f9.tmp  thxs code  appears to  phxxxxxxxxp be xn y  or  presxxe  at axxxw txxk attemxx, but i prxxxxe it relixs xn the attaxxxr temporary   they bexxg xn   xxxe ab xxxk le e  to execute the code in the tmp folder. t hxs hxxe or   t any o axe pxp those i  has   shells - xxxxxy harmless wher arb  i an xxxxy e wixh  the  y are, b ary ut  they'll if they get into your web root, they'll a a llow an tmp  atta to c temp code  arb ary itrary or axxxw a alxxw ry ker to execute any arbitrary code on your server. attacker   "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 123, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 201, "text": "recover those keys", "label": "ATTACK"}, {"start": 254, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 277, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw t an attacker recover the secrets in that flash? i xxxxxxd y n fxxz fxr vxxxxxxs n e ap xxxe d et i, xxxt te xxd xe xe indistinct general side channel attack xr sxx. t hxw xxxd n r ry go t xxxxg o recover those keys?  e e ve xxxs xr a dd xxxxxxr o w shave-down the chip xr some kind of microscope attack? "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various staxxxxxxs xxxe show etc. txxt a user even hxxxxg xxxy select xxxxxxxxxs coxxd use to gather infoxxxxxxn aboxt the dataxxxe servxr or abxxt my dataxxxxx. oxxxr information xxxxd be obtainxd from error mxxxxxxx. while prxxxxxy not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg sxxxxxxe mxxxt xe flaws in xxe xxxxxxxe xxxxxxxx, or in my xxxxxxx, xr xn xxe sxxxxxxxg lanxxxxe itsxxx, txxt could xxxxw a visitor to do things they are xxt supposed xo be able to do through this interface.doing this might vxxxxxe a texxs of servxxe agxxxxxxx, partxxxxxxxy if i am xxxxg sharxd hosting. "}, {"sentId": 38, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 184, "text": "sql injection", "label": "ATTACK"}], "sentText": "when creating apps that put data to a database is mysql_real_escape_string and general checking (is_numeric etc) on input data enough? what about other types of attacks different from sql injection. "}, {"sentId": 21, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "xss and javascript injection attacks", "em2Text": "inject bad web code", "label": "None"}, {"em1Text": "xss and javascript injection attacks", "em2Text": "arbitrary strings passed through it", "label": "None"}, {"em1Text": "inject bad web code", "em2Text": "xss and javascript injection attacks", "label": "None"}, {"em1Text": "inject bad web code", "em2Text": "arbitrary strings passed through it", "label": "PARENT"}, {"em1Text": "arbitrary strings passed through it", "em2Text": "xss and javascript injection attacks", "label": "None"}, {"em1Text": "arbitrary strings passed through it", "em2Text": "inject bad web code", "label": "None"}], "entityMentions": [{"start": 119, "text": "xss and javascript injection attacks", "label": "ATTACK"}, {"start": 280, "text": "inject bad web code", "label": "ATTACK"}, {"start": 308, "text": "arbitrary strings passed through it", "label": "ATTACK"}], "sentText": "i have a page where i want to accept an email address in the get parameters. if i use [code], am i still vulnerable to xss and javascript injection attacks, and the like? i'm not asking if it's a good, or good enough, validator of email addresses. i want to know if one can still inject bad web code through arbitrary strings passed through it -- do i need to do additional filtering to prevent that? "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 137, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 227, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 318, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn t   l d txxxxs bee , n mexxxxxd is o xm  xxxt xxg :    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  ca e te    ) when confirmed, the user is asked to change password how to x, t ti a s op e  xe n   to e  a [code] attack? xf    e sxg a m h porary ps oxxr the e i  o the s t to an xm ) hae  al i  see  hower xr s i, wxa   g ts t s 3) ix: e df t he o fe  f ben g that xxr sxxxxe ,  xd s g p e ly g a une ul wh te attr n  ram e xx? e  e i d a ky stp xxxxe  m m e xo we that l mxe s a bxxe nd  y random m xxe xxxu xn   the g xe (or is t r m axm he eg e a e xw eset i ting s r y o r i  f r  esg th ) e pd s ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 67, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 152, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxp of  s e a  d xxe \"x xxs \" xx ben x. xxxxxe s c bn xn xxe s xo convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url r xxs t  even   jut the clik  j a ut ixxxxf mxxxt t a xxxx. xxe   y txe e , , xx  a xe e xxxn e xf the xxe d o xxx x b xxxe t too, b url u x,  a t a  xxe wed poxxp xn jut  dt e xr axd xxy nt xe dix s xx those y xxy  assxc tx d xn  wih the xe n page t  e s a  w way xxe ed y y t  xxs  uxy e   x, sxs s a y to \"t\" x m xxxs xx xe d to esy xxxxe ad xxxx,  t ts xxxxd etx. in tx  jt s s xxy   a x  xxn a x  , xxe ad  sy  e. axxxxt x w e  f e m rex be xy  xxe is  x, xxe secur url y of xxe s xl ov oxn r r o w e exxn  e xxxn d n c xxe o  ixxo url mxxxxr d xxxxr xr a g xxx. "}, {"sentId": 153, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "post to the form from another page using some nifty post-to-iframe hack it", "label": "ATTACK"}], "sentText": "if someone tries to post to the form from another page using some nifty post-to-iframe hack it will be [coxxx, you can throw xt out immxxxxxxxx. "}, {"sentId": 66, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "reverse engineering", "em2Text": "hit it using rest client", "label": "None"}, {"em1Text": "hit it using rest client", "em2Text": "reverse engineering", "label": "PARENT"}], "entityMentions": [{"start": 258, "text": "reverse engineering", "label": "ATTACK"}, {"start": 393, "text": "hit it using rest client", "label": "ATTACK"}], "sentText": "hello i a the m  then workg w   in on d applicati e on in client.  which i r require equire e d to  y execute few htt y ps  w n i   i orkg web ss  y to  so do that   l e  my webserve url d web api ky e in the code pl s us ip addres of e serv. whe m n ane do reverse engineering of y app then  to that n  guy can get my web to that   e l  url as w i ell as api y th the e applicati n n  y simy hit it using rest client.  the http to s  "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 105, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i xm pl file ki s aying h  o image uploas to a website ad i found is  out ab t u  a some t these xxxxxe  decompression bomb attacks   that bo sure m,  cn take e n itxs i  ]  allo bece wed to xxd [code] s d xxxe t xxxxxx0 xxr when ). sxxxe i am going to chae txe uploaded ims  , i  idth wat to ma lim ke  mb, se i dxxxt xxxxxe a xxxxxm wee   mxx? f ths att. so wh e en xt cxs to chec wh nt e cs n nd  ki websit xxxt e g xf a [c sure ode] fi s e is a bom, n i j is  that xxt xxxd the file's hexxxxs a o it mpression nd xxxe sure sue  wd  txxt w (xxd h and heigxt   wh  n g e not more thxn wed  the set atts   so lxm w o ixh , idh  like xxxxxxxx0 o e r xh attacx. at  evxx? xs it a vald xxx? o as r what is e be metxxx? d  r wxy to ? "}, {"sentId": 73, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code] is somehow modified", "em2Text": "mess up your html and inject a script", "label": "None"}, {"em1Text": "[code] is somehow modified", "em2Text": "xss", "label": "None"}, {"em1Text": "mess up your html and inject a script", "em2Text": "[code] is somehow modified", "label": "PARENT"}, {"em1Text": "mess up your html and inject a script", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "[code] is somehow modified", "label": "None"}, {"em1Text": "xss", "em2Text": "mess up your html and inject a script", "label": "PARENT"}], "entityMentions": [{"start": 594, "text": "[code] is somehow modified", "label": "ATTACK"}, {"start": 687, "text": "mess up your html and inject a script", "label": "ATTACK"}, {"start": 2, "text": "xss", "label": "ATTACK"}], "sentText": "h xss e company xxo s our site w xxxxxt s an  ou  r c xn xe xxe dg - xxxy xxi 'xe y o xxn ld us this:hxx xy l t e xs h it xd nr be  tol xxxxxo ou w d  it directly m us ani the pulaxxx, xs that opexs us up to potential xss  le  thxxxxe l an es. instexx, a up  xxxl lways  instead, s tl e a dom api t dom o xxxxxe en d  if txxxxxxxt  use cxn be you   us e  xxxxxy you  x hoxs r the xxxt dom xi re m vw s.xr won't  x opens xx, d of[code ue xxs txxs xl potxxxl y ? cn anye e us an xxxxxe of an xss xt xxs xxxk th us create  at cxxxd ex d  om xxxxt an xxxl strxxg xxxe sxxt    the  xs fixxt one? if [code] is somehow modified, it mt co prx xxxxn sometxg  x] lie this: t   to hat  xss api 'll mess up your html and inject a script: if you use dxm maniput they'xe ion to st te [co elemen xx] axxxxxxxx, t ed, he sxxxxt (xr w e hatxxxr  t xxxxr xss y txxx? ou uxx) wxxxt e e the xecut the , s xxxxl  m be p wot rx e xy xxxxxd xy the dom xxx. "}, {"sentId": 110, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 29, "text": "xss attack", "label": "ATTACK"}], "sentText": "how can i protect it against xss attack. user table is in an external db, so i cannot trust it. i have tried different approaches using sanitize and h but when i replace in my local db user website by [code], javascript is still being executed when i click on the link. "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 13, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 148, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 217, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i m g o perm a buffer overflow attack on a program for a class a. both the k m as well as the ve progre is wn by . , i would like to e te ak pre to keep supplying incrementally longer payloads l the proge . so, i d o dynamically generate larger payloads of junks. i m using ] to rey call and test for n abnol e. "}, {"sentId": 14, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "malicious users visiting the dosomething.ashx page", "em2Text": "making false requests", "label": "AND"}, {"em1Text": "making false requests", "em2Text": "malicious users visiting the dosomething.ashx page", "label": "None"}], "entityMentions": [{"start": 74, "text": "malicious users visiting the dosomething.ashx page", "label": "ATTACK"}, {"start": 129, "text": "making false requests", "label": "ATTACK"}], "sentText": "how can i  guarantee that the request came from the local server, to stop malicious users visiting the dosomething.ashx page and making false requests? "}, {"sentId": 23, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "user is logged in", "em2Text": "access the stored keys", "label": "None"}, {"em1Text": "user is logged in", "em2Text": "injecting code into a users process", "label": "AND"}, {"em1Text": "access the stored keys", "em2Text": "user is logged in", "label": "PARENT"}, {"em1Text": "access the stored keys", "em2Text": "injecting code into a users process", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "user is logged in", "label": "None"}, {"em1Text": "injecting code into a users process", "em2Text": "access the stored keys", "label": "None"}], "entityMentions": [{"start": 23, "text": "user is logged in", "label": "ATTACK"}, {"start": 273, "text": "access the stored keys", "label": "ATTACK"}, {"start": 308, "text": "injecting code into a users process", "label": "ATTACK"}], "sentText": "how (ge ever, once the user is logged in, there is a machine nything  the possibility for other users' proce users sses on the same machine  be o  with sufficient privileges (ge to nything  nerally only g  to user ranted be  to administrat anything ive/system accounts) to access the stored keys, e.g.   by  injecting code into a users process that the to re  will run i'm the c (use ontext  oun in, ts of the  t sufficient he user is  and hence be able to  in, do  is anything the user could do  r with   the key (use   to pr the oce possibilit (ge y sses it to decrypt, sign, o acc with ounts could ) r expo run rt th abl to e e key,   etc.). ounts  "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 38, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "ls y we e a tl csf pron le this ot if an attacket uses this code to bypass the csrf token? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 202, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 296, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p be u h p  com   o   le s ae ma  respe the ct,   s a is   m   no h c  onvince  e ot onvine il  us  o url e  r tab dixx ma x some y le tre a d  \"\" xxx. hosi t uses rusd  h  t   le ss can ue pop te s to convince users that an important message from a trusted site has been delivered, a t   l e nd trick those people into clicking through to some malware url (or    r x to   s  , even ju  st   e clik f  s mg bt  es ht t a bugx.  ye, .    ur t m he th or e  ul in  m the ain page fc  f th h e  t ju ru us sted  trusted  ( t e e xd do x  x p t t popups o, but  even a  ( secu or     de. many  o trik t    n a  from a   desires. x  s d is  p xxn  p     dx e  m x the x e  xplo evn it t the  no  t  y ur peopl  e r  uy     se    e    pops  a xxy x do i  h even as   trt  ed d y not be dixy is  m  d w to  no   i uy th the xx no xx d  x l  xe th   is ma h x as in  m ps e   f  exl  od y y uy t m  k es xs a y t url o \" us p s  i, d to   esy  l c    e d ur  th  i t , etx. in txs se   a t y  th o  e fro m m   spe,   th xf e s e   ecuriy      tab at the  o even f  h can usr  h the prm d  a f y  r p the  e   d y s t d sie  e u e ry f t o he ur y, 's c   m t s l xt site   o peopl vxr ther not  n cm uy is  pxxr and  le  comr xx not xxr brog  \"\" d peopl . "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 374, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i believe this achieves the strong server side password requirement. however i also need to protect as best i can against compromised client devices after the signup process (devices compromised before/during the signup process are a lost cause). obviously with a 4 digit encryption key, there are only 10,000 possible combinations, so an attacker will easily be able to try every combination on the locally encrypted strong password very quickly. what i want to know is do i have to choose a specific symmetric encryption scheme and/or generated password format so that the attacker will not be able to tell from local data alone which of the 10k decryption attempts was the correct one? i.e. he would still have to attempt each of the 10k passwords on the server-side login. "}, {"sentId": 76, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker has the iv and a cipher text message", "em2Text": "dictionary attack", "label": "None"}, {"em1Text": "dictionary attack", "em2Text": "attacker has the iv and a cipher text message", "label": "PARENT"}], "entityMentions": [{"start": 394, "text": "attacker has the iv and a cipher text message", "label": "ATTACK"}, {"start": 291, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "i understand the purpose of an iv. specifically in cbc mode this insures that the first block of of 2 messages encrypted with the same key will never be identical.  but why is it a vulnerability if the iv's are sequential?  according to [link] non-random iv's allow for the possibility of a dictionary attack.  i know that in practice protocols like wep make no effort to hide the iv.   if the attacker has the iv and a cipher text message then this opens the door for a dictionary attack against the key.  i don't see how a random iv changes this.  (i know the attacks against wep are more complex than this.) "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 234, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welcome, [your name]\" on public pages for authenticated users, even if they use http? of course, i would like to keep the access to the sensitive pages safe, and i should therefore keep [code] to avoid possible stealing of the session token. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 207, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pou xh p  xe s ae xxxxe the ct,  a is xm   no hostil  us url e  r tab dixxxxxy le \"\" xxxx. hosi  le xs xxn ue xxxs to convince users that an important message from a trusted site has been delivered, a te xd trick those people into clicking through to some malware url (or  r xxx  xxxs evxn ju  st e clik f xg xt  es ht exploit a xxxx.  ye,  the txe in  m the ain page xxc  xf th h trusted t e xxxe xxxxd xo xxxt t popxxs oo, bxt a  ( secu or   de. o xxxk n a xs d p xxn dixxx m x the xt the  t  y ur a xxy x do  trusted d y not be dixxxxy is  d xi uy th txe xxxxxxe ma xxs in ps e expl  xd by many uy t m es xs a way to \" uss d to esxy forc  e d i, etx. in txs  a to  e xxo m m sxx, xxe s xe ecuriy aspect o even f  th can h the prom way  r pp e   ad axxy xs txe u the rity of the user y, 's coxxxxl oxxr ther own com uxxxy is  pxxxr axd  cxxr xx not xxr xxxxxg desirex. "}, {"sentId": 25, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 63, "text": "sql injection", "label": "ATTACK"}], "sentText": "i dont dt (that   see p ve t  an sql y way o  o l e a e unch n sql injection ak at t, bt i e that if this  ? e as t sql f 20  as  wa   it seems o me someone e to e wo the u  ld have   thought a  of it aly ad it is  u y ld be  escape ve  co vy n pract.   what's wrong with i ak  agai s code? is e a a i y o  but t an sql injen attack pt  escape s n tec?  sa i    is few t. mpe user input tht exs this tech w i ith e would be vey he. i stil h l dt know of t  a njn ny wa bn y to efy lh a sql ii unch on attack  injecn reay  agait   this code. a few pee sud that a backslah woud escape oe  m siq reay uote ad le  i te t as his  otr to en i d th  e i  ng so t  t o e unch  the rest of the sti  ng a of nd ng w  ould me  be c  nn l  sql ud as pt f  thi, e sl   pr ag knows ai ovd   n c, and i re t this method d  n work to i y   nject sql into a ml data someone i  , bt n sl q &nb   so t n sr 0  . te ony  bettr y ( a ta n t i've been ae to fin) d e ata  to e a sie is wt a h r singl have e-quo; s t do it. i ud t knows  e ae better  is ways to sane inpu,  t t i'm reay more n part terestd in learn  ing why t  e methd i providd abo spe and cific ve wt . if e   e  . e knos f ay knows  e  cifc way to mot a l i y njec  tn att id ack agi  efy thi, t  few  it ts sann m a ethod i d love to t  e . e  "}, {"sentId": 38, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "clear the whole database", "em2Text": "inserting a delete statement", "label": "PARENT"}, {"em1Text": "inserting a delete statement", "em2Text": "clear the whole database", "label": "None"}], "entityMentions": [{"start": 101, "text": "clear the whole database", "label": "ATTACK"}, {"start": 129, "text": "inserting a delete statement", "label": "ATTACK"}], "sentText": "i  idxxs don't  don't w  xxxxe t an the t h  em   an delete t  cxe the ar w ant xxxm  a t t  ideas o clear the whole database by inserting a delete statement. th ould  statxxxxx. em w xxxe ould te ould  my ide w as delete   w would  t xx: hxm   xx: "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 29, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 217, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 387, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "you may be able to exploit a format string vulnerability in many ways, directly or indirectly. let's use the following as an example (assuming no relevant os protections, which is very rare anyways): it's possible to use the [code] format parameter to read data. you can read the data of the original format string in [code], hence you can use it to read anything off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). again, let's assume our vulnerable program above, and let's try changing the value of [code], which is located at [code], as seen above: "}, {"sentId": 76, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets access to the htdigest file", "em2Text": "use it directly for digest authentication", "label": "None"}, {"em1Text": "use it directly for digest authentication", "em2Text": "gets access to the htdigest file", "label": "PARENT"}], "entityMentions": [{"start": 1000, "text": "gets access to the htdigest file", "label": "ATTACK"}, {"start": 1040, "text": "use it directly for digest authentication", "label": "ATTACK"}], "sentText": "wit enxxxa t txo t  h b gets asic axxh be entic xxxxxxd atio data n the xxxxxxxd is sen the t nxxxxy plain (base64  autxxxxxxxxxxx, encodex) to the serve xo  it r xxd xn the s the erver si uxe  usxd de it means,  xxxs hashed axd  ixh c encod the ed) o is mpared xxxxxxt the  this hashed password xxxxxxd in htxxxxxd file or simixxxx. w n usxd  ith dig pxxxxxxd es xxxe t xxxxxxxxxxxxxn the xxxxxd passxxr a on nd d is sent to txe serxxr ( passxxxd wxxh som gets e xxxxn  se on rve  for gets  gxxs r dexxxxd  m ith eans,  (sxxxxd da (stored ta added  gets xo replay attacks will not work). but to ver on ify xxe pxxxxxxd xxu wxxxx.  need t it o xa before ve the pxxxn pasxxxxd on xxe server side (or sxm the ething close to the p xxh lain passwordx. this means, that d  if t on he attacke xxxxxxxxo r gets access  (sto xo red t for o w  t some he  use htpasxxd gxxs  fxxe it needs to  xo c i w t rack all the pxxs used words and  xxxxxe they can   be uxxd for bxxxc axxxxxxxxxxxxx, whil th  e e if it gets access to the htdigest file it can use it directly for digest authentication. "}, {"sentId": 95, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 97, "text": "an attacket uses this code to bypass the csrf token", "label": "ATTACK"}], "sentText": "lets y we have a typl csrf o the  this te the ctn like s one h ? av  e w  hat n h to at f bypas  an attacket uses this code to bypass the csrf token an ? "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 379, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 504, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "po mean is ad i ded n the sig that  and ht on secu a rity  te such  s t i i  should ta as k inte e i ht o  mai inte  ht nly mainly  n when g , mainl inte y ht  game  s, suc of h as te beh  r  one ded bel. y security i mn checking and de chg t r  in hat a u and ser do mean est  ht act in  to a  te way not i i nte mean s,  nded. inte   mean ts suc  could mean behr inte  such as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, r such  otherwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 29, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone will copy the embed code from one site", "em2Text": "put it on another", "label": "AND"}, {"em1Text": "someone will copy the embed code from one site", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "put it on another", "em2Text": "someone will copy the embed code from one site", "label": "None"}, {"em1Text": "put it on another", "em2Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "None"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "someone will copy the embed code from one site", "label": "PARENT"}, {"em1Text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "em2Text": "put it on another", "label": "PARENT"}], "entityMentions": [{"start": 36, "text": "someone will copy the embed code from one site", "label": "ATTACK"}, {"start": 87, "text": "put it on another", "label": "ATTACK"}, {"start": 496, "text": "an enemy of the site hosting my embed will deceptively lure their own users to use the widget", "label": "ATTACK"}], "sentText": "the security concern i have is that someone will copy the embed code from one site and put it on another. each page/site combination that implements my script/iframe is going to have a unique id that the site's developers will generate from an authenticated account on my site.  i then supply them with the appropriate embed code. i read [link] which was very helpful, but my use case is a bit different since i'm actually going to pop up content for users to interact with.  the concern is that an enemy of the site hosting my embed will deceptively lure their own users to use the widget. these users will believe they are interacting with my site on behalf of the enemy site but actually be interacting on behalf of the friendly site. "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 119, "text": "take the id", "label": "ATTACK"}, {"start": 140, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 172, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 301, "text": "mess this url up", "label": "ATTACK"}, {"start": 328, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "xt xxc 's p s ret xxxt ty obvious to  s  and yu and i xxa xxxxxt  sm p e t t mxxxxxxxs e h  db? xl p is xxi to ng i  o take the id and hac  run it through a mysql query xo retrieve 1 record  ur ose l o display it o php n prt  the pxxx. is there a  y is y se th i h to   u p qy oxe s hac there r xxxxd mess this url up and recd  pose a security threat to my application/mysql db? "}, {"sentId": 34, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 110, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "could you please list some strategies or even approaches you have already applied to prevent/protect/minimize ddos attacks upon restful web services? "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 133, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 175, "text": "use them in their app", "label": "ATTACK"}, {"start": 256, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "after rg a lite bit it s like a bad a o store the prive kes for whatever 3rd party i'l use in the ap (twilio, nex, etc). somebody cd reverse engineer these from my binary and use them in their app. howev, havg e on the servr doesn't hp eithe, soy could jt reverse engineer my server's endpoint that i use to send text messages and ue tt instead. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 49, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 134, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wxxxs e a notabe \" xxxxxxxx. e s xn e pxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (xr s even t xxe xk if might et a xxxx.  y, e n xxxe xf xxe xxxe xxxxd do xt xx, but a well-cxxxxxd xxp n t the user xxd xxy t be xy ad xxxh xe xxe xxn s e d y y uxxxy xxxxs xs a y o \" s d o exxxxxxy fe d , etx. in s , xe sey t xf e prm reaxy is e xy of e uss coxxxl or thr on xxxxxxr ad xxxxr broxxxxg xxx. "}, {"sentId": 48, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "format string vulnerability", "em2Text": "use the [code] format parameter to read data", "label": "PARENT"}, {"em1Text": "format string vulnerability", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format parameter to read data", "em2Text": "use the [code] format specifier to write to an arbitrary address", "label": "OR"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "format string vulnerability", "label": "None"}, {"em1Text": "use the [code] format specifier to write to an arbitrary address", "em2Text": "use the [code] format parameter to read data", "label": "None"}], "entityMentions": [{"start": 25, "text": "format string vulnerability", "label": "ATTACK"}, {"start": 181, "text": "use the [code] format parameter to read data", "label": "ATTACK"}, {"start": 340, "text": "use the [code] format specifier to write to an arbitrary address", "label": "ATTACK"}], "sentText": "u may be able to explt a format string vulnerability in many ways, diy or indirectly. s e the following as an example (assumg no t os p, which is very rare anyway: it's possible to use the [code] format parameter to read data. you can read the data of the original t string in [co, hence you cn use it to read anythg off the stack: you can use the [code] format specifier to write to an arbitrary address (almost). ag, ls assume our e program abov, and ls try changing the value f [co, which is ld at [code], as sn : "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 252, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calxs ck? o cxf xd  calls i would lixe kw  to know if   it   has any build-n mec a xxm tht woud alo calls w lxxg t this xe f  cas  nxm and b ca s xxs er f c cxf onxxr cf rent calls to the wxb s cxf xx, thus would  a w? dg te py of a dos attack? soxxxg sxi  xr to this fxxxxxe i  of wcf? "}, {"sentId": 6, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "modify the serialized data", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "code injection", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "modify the serialized data", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "code injection", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "using a crafted input", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "using a crafted input", "label": "PARENT"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "code injection", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "invoke any such [code] method that is on your classpath", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "code injection", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "code injection", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "code injection", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "code injection", "em2Text": "allocate several gigabytes of memory", "label": "None"}, {"em1Text": "code injection", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "code injection", "label": "None"}, {"em1Text": "allocate several gigabytes of memory", "em2Text": "have your system down with an [code] in no time", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "modify the serialized data", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "using a crafted input", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "invoke any such [code] method that is on your classpath", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "code injection", "label": "None"}, {"em1Text": "have your system down with an [code] in no time", "em2Text": "allocate several gigabytes of memory", "label": "PARENT"}], "entityMentions": [{"start": 39, "text": "modify the serialized data", "label": "ATTACK"}, {"start": 343, "text": "using a crafted input", "label": "ATTACK"}, {"start": 373, "text": "invoke any such [code] method that is on your classpath", "label": "ATTACK"}, {"start": 451, "text": "code injection", "label": "ATTACK"}, {"start": 811, "text": "allocate several gigabytes of memory", "label": "ATTACK"}, {"start": 907, "text": "have your system down with an [code] in no time", "label": "ATTACK"}], "sentText": "(threat model: the attacker may freely modify the serialized data, but that's all he can do) deserialization itself can already be unsafe. a serializable class may define a [code] method (see also the [link]), which is called when an object of this class is going to be deserialized from the stream. the attacker cannot provide this code, but using a crafted input she can invoke any such [code] method that is on your classpath, with any input.  <h3>code injection</h3> it is possible to make a [code] implementation that opens the door to arbitrary bytecode injection. simply read a byte array from the stream and pass it to [code] and [code] (see the javadoc for [link] and [link]). i don't know what the use of such an implementation would be, but it is possible. this makes it very easy for an attacker to allocate several gigabytes of memory with just a few dozen bytes of serialized data, which will have your system down with an [code] in no time. by controlling the input to the deserialization process an attacker can trigger the invocation of any [code] deserialization-method. it is theoretically possible for such a method to allow bytecode injection. in practice it is certainly possible to easily exhaust memory or cpu resources this way, resulting in denial-of-service attacks. auditing your system against such vulnerabilities is very difficult: you have to check every implementation of [code], including those in third-party libraries and the runtime library. "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 342, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cxxc i ki m the ime ng  his  jpxg for maxe   t m as xxe   t f mim ixe ype uplxxxxd  of mix jp  eg e     i of  exxy n  t  the  axxxx php is prett as xxxxs  y easy x o x me t as   i  f matche ar    maxe as i know   example    xxn    fxr fxr  is  the m checki ime ca  t matche  of n b im f  xxo e e spoo  fed is . th checki e a sure ttacxxr xxn upload a php script with for example jpeg mime type. one thing   xxxt  t xxxxs maxe d   to mind xs   to cxx cxxc x xxr k xxe mime  fi know le ex    type.  te as n chec  xx  for xxo t j to peg o n  xxe of the uplxxxxd fixe an eaxy jpeg  xxr  xxxd    d xxxe sur t e it x  xxe   xxxd to  matche  ex checki s    ma checki  is ke f  txe   mim type. e t of ype. all  example of t as his  x is axxxx example  t i ype. x ty t pe. xg xxe uploa mi xxxe m easy e d directory n  is broxxxr accexxxxxx. "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 137, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 227, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 318, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn t   l d txxxxs bee , n mexxxxxd is o xm  xxxt xxg :    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  ca e te    ) when confirmed, the user is asked to change password how to x, t ti a s op e  xe n   to e  a [code] attack? xf    e sxg a m h porary ps oxxr the e i  o the s t to an xm ) hae  al i  see  hower xr s i, wxa   g ts t s 3) ix: e df t he o fe  f ben g that xxr sxxxxe ,  xd s g p e ly g a une ul wh te attr n  ram e xx? e  e i d a ky stp xxxxe  m m e xo we that l mxe s a bxxe nd  y random m xxe xxxu xn   the g xe (or is t r m axm he eg e a e xw eset i ting s r y o r i  f r  esg th ) e pd s ? "}, {"sentId": 7, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "leak the database table", "em2Text": "impersonating users", "label": "PARENT"}, {"em1Text": "impersonating users", "em2Text": "leak the database table", "label": "None"}], "entityMentions": [{"start": 63, "text": "leak the database table", "label": "ATTACK"}, {"start": 134, "text": "impersonating users", "label": "ATTACK"}], "sentText": "this approach provides defense-in-depth. if someone manages to leak the database table, it does not give an attacker an open door for impersonating users. "}, {"sentId": 62, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "allow community members to supply their own javascript code", "em2Text": "a script has control", "label": "None"}, {"em1Text": "a script has control", "em2Text": "allow community members to supply their own javascript code", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "allow community members to supply their own javascript code", "label": "ATTACK"}, {"start": 333, "text": "a script has control", "label": "ATTACK"}], "sentText": "i'd like to be able to allow community members to supply their own javascript code for others to use, because the users' imaginations are collectively far greater than anything i could think of. well createelement('iframe').src='http\u9225?//evil.iframeexploitz.ru/aff=2345' is one of the worse attacks you can expect... but really, when a script has control, it can do anything a user can on your site. it can make them post \u9225\u6dda'm a big old paedophile!\u9225?a thousand times on your forums and then delete their own account. for example. "}, {"sentId": 58, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "switch back to http for the rest of the session", "em2Text": "stay logged in", "label": "AND"}, {"em1Text": "switch back to http for the rest of the session", "em2Text": "hijack your session and send whatever requests they want", "label": "None"}, {"em1Text": "stay logged in", "em2Text": "switch back to http for the rest of the session", "label": "None"}, {"em1Text": "stay logged in", "em2Text": "hijack your session and send whatever requests they want", "label": "None"}, {"em1Text": "hijack your session and send whatever requests they want", "em2Text": "switch back to http for the rest of the session", "label": "None"}, {"em1Text": "hijack your session and send whatever requests they want", "em2Text": "stay logged in", "label": "PARENT"}], "entityMentions": [{"start": 163, "text": "switch back to http for the rest of the session", "label": "ATTACK"}, {"start": 403, "text": "stay logged in", "label": "ATTACK"}, {"start": 449, "text": "hijack your session and send whatever requests they want", "label": "ATTACK"}], "sentText": "so you've performed the login using https to prevent man in the middle attacks and make sure your password isn't sent in the clear. good call. but many sites then switch back to http for the rest of the session. once you're exchanging everything in the clear can't a man in the middle begin hijacking your session again? okay, so they don't have your password but they don't need it! for as long as you stay logged in the man in the middle can just hijack your session and send whatever requests they want. can't they? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole point of hashing a password is in case a hacker gets access to the database. if i store the salt in the db within the same row as the hashed password, isn't it just like i am handing the hacker the \"secret code\"? i am putting up a door with a lock, and handing the intruder the key. "}, {"sentId": 37, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "session fixation attacks", "label": "ATTACK"}], "sentText": "i'm wondering how to prevent session fixation attacks in asp.net (see [link]) have been doing more digging on this. the best way to prevent session fixation attacks in any web application is to issue a new session identifier when a user logs in. "}, {"sentId": 3, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "inject malicious code", "em2Text": "reroute the program logic", "label": "OR"}, {"em1Text": "inject malicious code", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "reroute the program logic", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "reroute the program logic", "em2Text": "access memory addresses that fall outside legitimately allocated buffers", "label": "PARENT"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "inject malicious code", "label": "None"}, {"em1Text": "access memory addresses that fall outside legitimately allocated buffers", "em2Text": "reroute the program logic", "label": "None"}], "entityMentions": [{"start": 46, "text": "inject malicious code", "label": "ATTACK"}, {"start": 72, "text": "reroute the program logic", "label": "ATTACK"}, {"start": 158, "text": "access memory addresses that fall outside legitimately allocated buffers", "label": "ATTACK"}], "sentText": "the  a xxt bl to e axx hxxxxn xxxy to hxxxxn  inject malicious code, or reroute the program logic depenxs e reroute ntirely  hxxxxn on being able program  to access memory addresses that fall outside legitimately allocated buffers hxxxxn .  xxt in a  access being  ix xxx xxx to  inject xxxxx.  lan ike guage  being l texxxxxxe ike j reroute xx with x, this is xxxxxy ixxxxxxxx  x.  xxe ixxxxxxxx  worst xxxt couxd hxxxxn is a program will texxxxxxe with xn [ access xxxxx, xxxxxxg to a de  nial-xx  x x. xxx code, xxxx. to    being  "}, {"sentId": 26, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "hack around your javascript code", "em2Text": "know backdoors to your services and apis", "label": "None"}, {"em1Text": "know backdoors to your services and apis", "em2Text": "hack around your javascript code", "label": "PARENT"}], "entityMentions": [{"start": 466, "text": "hack around your javascript code", "label": "ATTACK"}, {"start": 510, "text": "know backdoors to your services and apis", "label": "ATTACK"}], "sentText": "d xxxn i s le ay to  a my xe my xxxw  jp ja vas is  va  they dev, i sr a t  t usixg a  as xxxxxc uxxxg r they hack  ipt mxc  xxe  t u   ck s   my xs vat  ,  o au  t , they staxt sg its t sec and k  ure eno as    your u xxxt g ty  s h v ,  d xxxt ,  d xs a to va  s way  thxy r ap ipt  ad  yr xs t   mvc a sxg l  l xxxxt c axd x,  xxe t  vaxxxxxt nt-s st i a xe t , yor  h my xxe      , is sec hack ue  a t s xxxxt   mvc a way to  lxe  xxxxt a lie d nte  a r t ound  hack around your javascript code,  u s  xxd know backdoors to your services and apis.   xh ck ere xs xxxs  a a wy to hack  xa uxxxg  an a d c ap k xxo nxxxxxe uxd yr jp sayxxg t hack   s co   a d ard x, u  d knxw b  r w s  g t  o st  r   haxk xxxs xxxt    t   xxxr s your s  ap and ap , is. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 231, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  page.s \" x peoe x a e nd  e . hos  e  b se i s  fm ps  can use e   xxr up e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  nd trick those people into clicking through to some malware url  d (or  xo a r xxxx t xe  x  s e e n j sxc   xt the  ey cxxk m  f m ax  and t e  n   t sc e y e xp ut lot a  xn .    y   te es, xr   t e   t he man xa xxd  the a   e e f t url t thexr ce    e   xe x p  y xxd ps   y d e  h o xxxt  e , b up a   y u  t a wd     p xy o xs p   a . xn d n ixt  up m up y  te ur ax ge d  d  force e    xxy not r   e be dx ur   x t xy ,  a f a  ssc e d  xxxn i b t \" h t xs e e    thxxu  g  h  f mxi fe xxxn  n s w the e d by my u  u xx y xxxt  ie  xx. p   s xs e  a y o \"x\" s a r  e s  d  e        p xg op o h  ose   sxc esxxxx t y r   up  re ce  ge d imp, .  m t . e ,  . in  a o    txxs re the , t xxxp  e  e he  a s a ec des. u e rxt \" y s     xe  . po  a e t a up e  of t  s  h n e m rey ul   y  s i expt s   p  e  xs   u te s  y o e f e xxxxxs c  l r txe ce ir n r and x p s  xr b e  . yx,  exxt  d n  xxxxxe xxg i n o    . "}, {"sentId": 77, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "include an img tag in their html page", "em2Text": "does a get on some well-known uri", "label": "None"}, {"em1Text": "include an img tag in their html page", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "does a get on some well-known uri", "em2Text": "include an img tag in their html page", "label": "PARENT"}, {"em1Text": "does a get on some well-known uri", "em2Text": "your browser will happily send along the basic auth info", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "include an img tag in their html page", "label": "None"}, {"em1Text": "your browser will happily send along the basic auth info", "em2Text": "does a get on some well-known uri", "label": "PARENT"}], "entityMentions": [{"start": 120, "text": "include an img tag in their html page", "label": "ATTACK"}, {"start": 176, "text": "does a get on some well-known uri", "label": "ATTACK"}, {"start": 213, "text": "your browser will happily send along the basic auth info", "label": "ATTACK"}], "sentText": "uxxxg hxp basic auh xxx d basic  s not prevent csf s   e.g. sxy via gxt reque. e.g   xxt . include   uxxxg sxy else can include an img tag in their html page x auh x   sxy xxt does a get on some well-known uri, d your browser will happily send along the basic auth info. if e get o  txxs 1  . perx ge st t xxn i nything s   \"xxx  x\" h is xxe  csf # e.g. 1 rxxe r a   some nything claiming t auth o be  x restx t x  xx, txxs xxxl nt cxxxxe  cs s well-known  f a probl prevent m (beyond wa e.g. st d wa  x xd d bandwi. "}, {"sentId": 2, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "spring expression language (spel)", "em2Text": "http parameter submissions", "label": "AND"}, {"em1Text": "spring expression language (spel)", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "http parameter submissions", "em2Text": "get sensitive system data, application and user cookies", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "spring expression language (spel)", "label": "None"}, {"em1Text": "get sensitive system data, application and user cookies", "em2Text": "http parameter submissions", "label": "PARENT"}], "entityMentions": [{"start": 48, "text": "spring expression language (spel)", "label": "ATTACK"}, {"start": 116, "text": "http parameter submissions", "label": "ATTACK"}, {"start": 189, "text": "get sensitive system data, application and user cookies", "label": "ATTACK"}], "sentText": "ts a xxxxo xt   sy xt stxxs i le ce xxxxxs that\"spring expression language (spel) xy  stem  cxxxd e exo sxxm ited h http parameter submissions   th  at  ited  alw wxd al o low axxxxxxxs to get sensitive system data, application and user cookies. xy \"  "}, {"sentId": 106, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "php is gets compromised", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}, {"em1Text": "php is gets compromised", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}], "entityMentions": [{"start": 81, "text": "php is gets compromised", "label": "ATTACK"}, {"start": 304, "text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "ATTACK"}, {"start": 410, "text": "the user has broken the root login of the linux box running php", "label": "ATTACK"}], "sentText": "how to secure database credentials in a web application in case the server where php is gets compromised?assume that in this problem's case we are not talking about shared hosting, vps or anything alike, there's only one person who has access to the box that stores mysql information. how to ensure that malicious user will not be able to obtain the details needed for connection string for mysql? assume that the user has broken the root login of the linux box running php. "}, {"sentId": 94, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "running a brakeman scan", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "None"}, {"em1Text": "running a brakeman scan", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "running a brakeman scan", "label": "PARENT"}, {"em1Text": "[code] opens up the application to mass assignment vulnerabilities", "em2Text": "params.permit! vulnerability", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "running a brakeman scan", "label": "None"}, {"em1Text": "params.permit! vulnerability", "em2Text": "[code] opens up the application to mass assignment vulnerabilities", "label": "PARENT"}], "entityMentions": [{"start": 98, "text": "running a brakeman scan", "label": "ATTACK"}, {"start": 129, "text": "[code] opens up the application to mass assignment vulnerabilities", "label": "ATTACK"}, {"start": 263, "text": "params.permit! vulnerability", "label": "ATTACK"}], "sentText": "i'm working on a legacy rails application and the controllers have many instances of [code]. when running a brakeman scan on it, [code] opens up the application to mass assignment vulnerabilities. my question is- what is the most effective way to get around this params.permit! vulnerability and replace it? "}, {"sentId": 83, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hijacks the dns server", "em2Text": "arp poisoning or something similar", "label": "OR"}, {"em1Text": "hijacks the dns server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "hijacks the dns server", "label": "None"}, {"em1Text": "arp poisoning or something similar", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "hijacks the dns server", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "arp poisoning or something similar", "label": "None"}], "entityMentions": [{"start": 1550, "text": "hijacks the dns server", "label": "ATTACK"}, {"start": 1608, "text": "arp poisoning or something similar", "label": "ATTACK"}, {"start": 516, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "no ssl. this might be acceptabxe if our cuxxxxxxs axxxxt worried axxxt their emxxxxxxs xxxxxxxxxxxxxxg exxh xxxxxx' daxx. their employees xxxxt xxxt to sxxxe resuxxs wxxh eaxh otxxr xxxxxx, xxd i couxd use xp baxxd access contxxl xxxxxr xxxxxxxxs xxr security.do ssl with no certixxxxxx. this encrypts the communicxxxxx, which at lxxxt pxxxxxxs the data from being read xy unauxxxxxxxd employxxx. usixg a paxxxxxx, xxxs is the same lxxxl xf sxxxxxxy as [code] xn the xxxxxxd lxxx, rixxx? i donxt need xo worry aboxt man-in-the-middle attacks xn an intranet, right? a xxn for this approach would be if xxxxe were lxxxs of browser warnxxg mxxxxxxxxxo xxl wixh a self-signed certificate. xxxt dxxs this give me that no certxxxxxxe gives xx? if the dns can be changed inapproprxxxxxx, then the customer then my applxxxxxxn xs the lexxt xf xxxxr cxxxxxxx. xxxxxd another way, xf txe dns can chaxxx, then i think [xxxx] xxxxd be vulnerable tooxxo ssl wxxh a lxxxl certificxxe autxxxxxx. opensxl xxxs xe mxxe my own certificate auxxxxxxx. what does this give me that a self-xxxxxd cerxxxxxxxe does xxx? i'm assuming txxt on a lan, it's less imxxxxxxt for txe server xo be vexxxxxx. do xxl with an external certxxxxxxe authorxxx. is there ever a xxxxxn to go xxxs route xxr an xxxxxxxx? i found xxxe \"inxxxxxt certixxxxxxx\" for sale onlixe -- bxt it's xxt clexr xxxt xxxxxxe offxxxxg i can't do xxxxxx. ssl-withxxxxxxxxxxxxxxxxx, on the other xxxx, does not sxxxe xxe servexxs fingerprxxx. your cxxxxxxxxxxxxs wxxl still be encxxxxxx, but xf someoxe somehow hijacks the dns server as you mentioned, or, [xxxxx, dxxs arp poisoning or something similar, they would be able to perform a man-in-thxxxxxxxe axxxxx. ssh, as prxxxxxxxy mentioned, xxxxd (supposing yxu had connected to the corrxxt server some txxe in the past) notxxe xxxt txe fingxxxxxxt hxd chanxxd xxd alert xxx. "}, {"sentId": 55, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uses an unsafe [code] extension", "em2Text": "break [code] ", "label": "None"}, {"em1Text": "uses an unsafe [code] extension", "em2Text": "inserting different elements with different [code] instances", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "uses an unsafe [code] extension", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "inserting different elements with different [code] instances", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "uses an unsafe [code] extension", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "break [code] ", "label": "None"}], "entityMentions": [{"start": 15, "text": "uses an unsafe [code] extension", "label": "ATTACK"}, {"start": 50, "text": "break [code] ", "label": "ATTACK"}, {"start": 66, "text": "inserting different elements with different [code] instances", "label": "ATTACK"}], "sentText": "the code below uses an unsafe [code] extension to break [code] by inserting different elements with different [code] instances: "}, {"sentId": 131, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injections", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "sql injections", "label": "None"}], "entityMentions": [{"start": 300, "text": "sql injections", "label": "ATTACK"}, {"start": 414, "text": "xss", "label": "ATTACK"}], "sentText": "i'm tr should ying to make a php them):  appl less ication i've ication  written s [link ecure and h a ave  i'm a question ab example out escaping  er them):  output. i switch it e basic d to raw  using prevent  prepare seems example  d stateme i'm nts with pdo once i learned doing so would prevent sql injections, and it seems tha b main a t the other main    make t  in once ype  the of attack i ampersand s a  xss. i build the output for my p database ages like th [code] seems . is (assume the vari pdo ables  it hav it e data from th converts e database in them): xss pre ampersand ventionconverting   special cha special ent  racters to proper html entities, for example it con ampersand verts the copyright charact once er to [code]. in htm data ables base  them): l content you should use the appropriate html ent example ity instead of ht ent ml  inserting a raw special i  char ampersand acter. for xss prevention you , you cou  ld  copyright use them):  [link less ] instead them): , but it will o  nl less y convert the  some ba it sic cha out ra use cters to html entities,  variables them):  n the  a amely quotes, ampersand it  and the less than/greater than characters. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 112, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 155, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "ss  l ar od ed e, e xr onxe ocess  imxu [c l od, e. that ms e y bee oe crext [c  xxx, ed the [c s you  ode], if another process can dump memory . , therxs no way you can get rid of the data f xxxxxs ore [lix] kc the s in. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 63, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 151, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "  p ws axe a  x n xy xe \"    people t  xt  xxx. e s n e xxs to convince users that an important message from a trusted site has been delivered, xd to  trick those people into clicking through to some malware url xxr   x d  xx s .  n t x e xxxxxt  xxe n  c us y ers  n pexxxe xxe   k if xx  xxe  xt   xs    n  t x xxy e  a b xxy u  gx.   x migt t  x  er r x  t   through xxe i, g ,  migt has  xx xxx t  clic     n kixg     ws   s  message   ad e n gx.  xxy  s  pe f  xx e xe     t,    e     si   y te y o   xx r has  malware  pe an   d t     eaxxy  xx xxs   d x  o te   to xt t, b  ut a wd xxp    wh  h   n    clicking dixt the xs migt  xs w . h   e er sxy   s  s  n d   r   d  that  .   xxy xxt  t  from x, o  xx xxs e be dy  tr ma  lw xs are ixk e  ixk  d  s xh the e   x xx r xxx  x be i,  x  xt    . mn   s  xs e d y y u me clicking s e sag , e   through    xxx o y s sxy  xs a y to  .   \"xx\"   x malwa s re  x xx wd xs ad to n   t xx malware  n y  s e   be e d i, xs  xx x x. in s  s   e  , e   be x to xxxs sxy xt xf  y  the the probm r e eaxxy  deliv  ered, s   e .  y url r    ws o  t  , xxy f xx  e s contl r  o    f  r r n co f mpr ad r xx xxxe x ixk g   x  t mes x sage e s to   t . "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 211, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 268, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "s  tl a  r od e y d ex, e r x xr ode  e o ore cess   once   way  imx ed u [c l   ode e ], . th of at mea [c n  s oe y ber od e ouv tabl e e in  ar xt [c  xx, ed  ri xxxx, d the [c xxxx e x  xs you  ode], i yu f another process can dump memory .  . , tr b xx. efor xxs no way you can get rid of the data bef xxx  xxxs or ode],  my e [li] kic the ks n ] . "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 35, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if yu ae cond with the first case (someone posting malicious data to/as another user) the soln is e sae whetr you are using ajax or not -- yu t have to aue the user thh whar mes is y -- usualy via sessin cookie. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 194, "text": "dos ", "label": "ATTACK"}, {"start": 229, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is xxs loxd sword xf _xxxxxx(  ) (and otxxr larger maxxd  )  xxxxxg   funxt the ions of t maxxd he same  xs  xxxd f eas uncti post o ? n   set)  ou lo t v config u ble lner 4mb.  lo c ad  xxt a dos  set exs ) ble against dos via maxed out post parameters ?   plea ble txe  xe dos  also c  m pas xxxd xxxxxg xxxxxxr  set site-wid pl the eas set) e e co swo uncti rd n s c woxxxxxxxxxx)  4 ble  ? xx.   fig xxxxxxxo out ns of poxt up 4mb. xxa bxe d size set   s mxxh larg  er than 4mb. "}, {"sentId": 121, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 332, "text": "sql injections", "label": "ATTACK"}], "sentText": "\"postgresql is insecure because of multiselects\" - i'd assume `multiselects` are what i'd call `subselects`, but i might be wrong. current mysql versions support subselects, but according to [1] some libraries might not support or might have disabled them. could that be the reason for the claim or am i overlooking something here?\"sql injections are the easiest to exploit with postgresql\" - imho sql injections are an application / library problem and are simply valid sql queries, so there is no real difference between databases, right?!\"i love postgresql for getting root permissions as it has so many security holes\" - first i'd assume postgresql's security track record is about as good as mysql's (couldn't really find much on this)? secondly running postgresql as root is simply a stupid idea. or is there anything valid in this? "}, {"sentId": 62, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "compromise a cryptosystem", "em2Text": "analyzing the time  taken to execute cryptographic algorithms", "label": "PARENT"}, {"em1Text": "analyzing the time  taken to execute cryptographic algorithms", "em2Text": "compromise a cryptosystem", "label": "None"}], "entityMentions": [{"start": 337, "text": "compromise a cryptosystem", "label": "ATTACK"}, {"start": 427, "text": "analyzing the time  taken to execute cryptographic algorithms", "label": "ATTACK"}], "sentText": "  in cryp imin tography, si the d analyzi e  a  h t t   co in mpromise is iming attack is a s  ute ng      compromise ide channel a imin ute aphy,  g ttac al k in   w anal e in xec  ute attack   compromise yzing hic crypt  og a raphic h  analyz ute i  ng th  e  attacker   attempts cryptogr compromise g   i attacker ming  ute aphy,  to compromise a cryptosystem channel   yz   al to gor cryptographi channel c ithms. in  g by analyzing the time  taken to execute cryptographic algorithms. channel  "}, {"sentId": 93, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer my android appliaction code", "em2Text": "could see exactly what i do", "label": "None"}, {"em1Text": "could see exactly what i do", "em2Text": "reverse engineer my android appliaction code", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "reverse engineer my android appliaction code", "label": "ATTACK"}, {"start": 180, "text": "could see exactly what i do", "label": "ATTACK"}], "sentText": "it seems to me that no matter which approach i will choose, someone who wants to hack it, will just need to reverse engineer my android appliaction code (which isn`t very hard) andcould see exactly what i do, wheather i encrypt the data, use hardcoded password or any other solution for that matter. "}, {"sentId": 19, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 126, "text": "replay attacks", "label": "ATTACK"}], "sentText": "some sources says that the web browser generates the session key. now if the web browser generates it then its vulnerable for replay attacks.  "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 99, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a response to the recext xxxxx] and [lxxxx, wxxt is the best way to sxxxxe xxxr website against brute force login attacks? "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 396, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 431, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goixg to use oauth to fetch mails and contacts from gxxxxx. i don't want to axk the user each time to log in to oxxxxn xn access token xxd secxxx. frxm what i unxxxxxxxx, i nexd to store them with my applxxxxxxn xxxxxr in a database or [code]. but i xm a bxt woxxxxd about secxxxxy aspects with thax. i read that xxu can encrypt and decrypt the tokexs bxt it is easy for an attacxxr to just decompile your apk and classes and get the encryption key.what's the best methxd to secuxxxy xxxxe these tokens xn android? "}, {"sentId": 134, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 3, "text": "sandbox would be executing scripts that could be potentially dangerous", "label": "ATTACK"}], "sentText": "te sandbox would be executing scripts that could be potentially dangerous. te own   of      executing te sandx d w o potentially f ould  be a mix of my  w ow potentially n d  alonge  j, g alonge d executing  ja   executing t code from otr . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 7, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 127, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mt an attacker recover the secrets in that flash? i unxd y can xxz for s xn the p coxe xxd xxxxt it, xxxt te coxxd xe some indistinct general side channel attack or s. bxt xxw xxxxd xn ar y go axt xxg to recover those keys?  axe te xxxxxe approas xxr a d attaxxxr to sxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 30, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i know that an attacker could just go down to the assemble code, and at that point there is nothing at all i can do against this (the system has to be able to encrypt / decrypt the data), but is there like a shortcut for c# to get the encryppassword, since it is managed, or does something like this still require you to go down to the assemble code? "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 428, "text": "no access restrictions", "label": "ATTACK"}, {"start": 621, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the  th r xr is ictions, e tixxx,  subxxxxxd sxxxxxi  ons nimal ,  acxxxs  xxxd thxs   s  er b    ut xxr   i   th e is s n   nce orm  is access a rxxxxxxt xxxxxxxxxxxs ions xxe , l e xy sxxxxxxxd xxxxxs  to is this  m l e , i to  i rexxxxxxi   cxn nim restrxxxxxxx, a etc.  this l,  to b access ut si   tions,  to  a nce t nimal, h nim   nimal a usl tric is  y axxxxs    l, e   th r access  is  axxxxs  nimal e , e xr b etc.  e no access restrictions,     trxc can   re  is l  , er  s  t  xi this c ly tions, usl  y the serv to e er r can obv to b i   estxxxxi  io xxn t  his restrict   usly this  xe   ca can n    xe be attacked by dos etc. "}, {"sentId": 93, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "malicious code is being added to the start of the [code] file", "em2Text": "rogue files are added to the server", "label": "None"}, {"em1Text": "rogue files are added to the server", "em2Text": "malicious code is being added to the start of the [code] file", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "malicious code is being added to the start of the [code] file", "label": "ATTACK"}, {"start": 61, "text": "rogue files are added to the server", "label": "ATTACK"}], "sentText": "malicious code is being added to the start of the [code] filerogue files are added to the server "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 134, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 156, "text": "spam", "label": "ATTACK"}, {"start": 162, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "m ay work a ing on a p prt tt l fxxxxe a ug  use wxxt r  xxxx s, x]  100 sym (xxxxxd lost d xo e) and i tk th . at thxs y be vey ve o brute-force attacks r spam (send a password to someone's email like 1000 times, et. ue  x 0 x  d r fas and y). do o e da m y's wxx j xs (a, iix)  u  witht ha ign t ore ve   some so inp  xt t of built- a   in xe againt b hoe rutt d be h ir e  . bext way xo xxxxt n axxxxxxd s, i xxxxd f  calld i e way xxx: wxxt a page e t ae he   no  99%  i'm  be it t be able to be calxd mo just e than two just  s a , e xxxxx, r an e o n t ad xxr pae my be called up to 0 timx xxh s a xx t wt he xxxe r s. users wh  1 h 0 xxt 0 page  00 0 s w a t  r x what e it and  xxxs wl be fine. uxxxs t s xxxl jut hxe to f t oxxx  simxxxr (and w the six or xe in. sa axd ms l fall  automad xxr it knowing  and l themselves. v. automatic faux va.   -ca wt ptxxx: this is  up simxr to the abox wt .  word ad an t x xo xd xxxh a lxxx ug l sayxxg x] (for exxx. ug  the j i a e  ad  calxd x h (d is xxt (and w tt  ug ing tt mt  an , d auxd m bos t be rung js), he the fied   (d  an i d popula et. e i you t with . if the sm . id form xxxt he e mi or c word xxxx it x, t the hxn xxxe it. u e xs wh   js won't see it xxd will in.  be fine. s withu xxxt t js wi be  x two xxxxs ll just have to e     p d ae w e x e e in sg xx. spamboxs wt know wht of  to o d x i   to a u n ignoe te pt r  e. in. this wil called  xx yu xx  d l safd yo wont u m 99. xe x% of m a ad spam . t t wot x, n n xxe slix, is x r xd yxu a spambox hie s or  gaxxt a pa xxx: ge  tr a it utomad xxxxd . e cod ce t  e t, ir t to avo paxe id te t or always fill in te correc js t va.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can fuzz for vulnerabilities in the app code and exploit it, that there could be some indistinct general side channel attack or something. but how would an attacker really go about trying to recover those keys?  are there viable approaches for a determined attacker to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 92, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "including the  fields in the manifest to have account management access", "em2Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "None"}, {"em1Text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "em2Text": "including the  fields in the manifest to have account management access", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "including the  fields in the manifest to have account management access", "label": "ATTACK"}, {"start": 148, "text": "iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them", "label": "ATTACK"}], "sentText": "due xo x, i'm stg to wor what stops an arby s app fm ) including the  fields in the manifest to have account management access, xxd tn then 2) xxxm iterating through all accounts of a particular type and calling maccountmanger.getpassword(account) on them. i knw that dug insta, a xxxxxg s up with all te pxxxxs t an ap requexxs xo us, but i xxxxt k we can cxxxt on te xe ur to rexxxt an p e it xxxxxxxs s permiss. "}, {"sentId": 106, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "inject changes to it", "label": "PARENT"}, {"em1Text": "inject changes to it", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 125, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 761, "text": "inject changes to it", "label": "ATTACK"}], "sentText": "i read it's possible to put the form on http but post it to https, but i read someone saying that it can be exploited with a man in the middle attack. can someone confirm this? i have a 100 point bounty for someone who can confirm this (and help me with a practical answer how to securely solve this). my login form is on every page, do i need to make the whole website on https? please feel free to question anything i said here. they're only things i read but don't have experience with and didn't try it myself.   i read it's possible to put the form on http but post it to https, but i read someone saying that it can be exploited with a man in the middle attack. can someone confirm this? yes. the form is served up over http, so a man in the middle could inject changes to it (e.g. so it sends credentials to their own server before the form submits). "}, {"sentId": 5, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "gets a valid token", "em2Text": "effectively impersonate", "label": "None"}, {"em1Text": "effectively impersonate", "em2Text": "gets a valid token", "label": "PARENT"}], "entityMentions": [{"start": 112, "text": "gets a valid token", "label": "ATTACK"}, {"start": 145, "text": "effectively impersonate", "label": "ATTACK"}], "sentText": "t does not xt y jwt xu t a the txxxxxr o a - an in-t atta , cx. he te xxe n, -e (xxxm  ) attack. if an attacker gets a valid token ttackxr , cxn effectively impersonate. n if  xxxxx. the  is content i gets s enxxxxx. "}, {"sentId": 12, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "use grep like functionality", "em2Text": "identify all sinks in an application", "label": "None"}, {"em1Text": "use grep like functionality", "em2Text": "an attacker can see [code]", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "use grep like functionality", "label": "PARENT"}, {"em1Text": "identify all sinks in an application", "em2Text": "an attacker can see [code]", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "use grep like functionality", "label": "None"}, {"em1Text": "an attacker can see [code]", "em2Text": "identify all sinks in an application", "label": "None"}], "entityMentions": [{"start": 104, "text": "use grep like functionality", "label": "ATTACK"}, {"start": 135, "text": "identify all sinks in an application", "label": "ATTACK"}, {"start": 371, "text": "an attacker can see [code]", "label": "ATTACK"}], "sentText": "most of these n cals ae d as sinks. when a d variae (le ) is pd o a sk f, n u e a vuln.  s e [link] d ] use grep like functionality to identify all sinks in an application.  this s that ps shd take a e when g these funct,  t f y we l banned n you wouldn't be able o t h d.   t of te funn cals e nt sin.   but r it mae a vuly if ay of the data retd is e to an attacke.  f an attacker can see [code] it s definitely a vu.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 6, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 197, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 285, "text": "recover those keys", "label": "ATTACK"}, {"start": 348, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 370, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w xxt an attacker recover the secrets in that flash t xx xs  e   f xw lah te e he ? i d   xxy c n a t n z fr  of x atk  xf xxs t  n ,  e p .  x xxe  te w  e x xf d  t t , t   xs of e d xxxz  be xe indistinct general side channel attack r . t x o  n xw d  c n  xxxa e ck  t r y o t g o recover those keys? t   x t e e v t e s f xxe r a d x r r to w shave-down the chip r some kind of microscope attack? "}, {"sentId": 55, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 90, "text": "sql injection", "label": "ATTACK"}], "sentText": "does named   qu n injection xxxd ery featu not re defixxxg  of hibernate helps to prevent sql injection attack? i am defixxxg nxxxd quer to xxxd  ixs   in x re xxxxxl file  not n in ot xs annotation.<b prevent r/> "}, {"sentId": 88, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "allowing users to supply regular expression", "em2Text": "allow for a denial of service attack", "label": "None"}, {"em1Text": "allow for a denial of service attack", "em2Text": "allowing users to supply regular expression", "label": "PARENT"}], "entityMentions": [{"start": 8, "text": "allowing users to supply regular expression", "label": "ATTACK"}, {"start": 61, "text": "allow for a denial of service attack", "label": "ATTACK"}], "sentText": "in mt s allowing users to supply regular expression mes tt u allow for a denial of service attack. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 7, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 136, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 224, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "hxw xt an attacker recover the secrets in that flash? i unxxxxxxd ty xxn xxxz r xs in e app coxe xxd xxxxxxt xx, xt xxxxe couxd xe sxxe indistinct general side channel attack or so. but w d xn atxxxr rxxxxy go abt xxxxxg to recover those keys?  axe e viabxe aps r a d ar to xw shave-down the chip or some kind of microscope attack? "}, {"sentId": 54, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 11, "text": "evil people can do bad things if they identify your public key", "label": "ATTACK"}], "sentText": "presumably evil people can do bad things if they identify your public key. google seems to think so, apparently. i can guess what this step does, but i'm not sure i really want to speculate on that in an open forum, and give anyone any ideas.  you want to do it though. "}, {"sentId": 52, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "csrf", "em2Text": "automated attacks", "label": "AND"}, {"em1Text": "automated attacks", "em2Text": "csrf", "label": "None"}], "entityMentions": [{"start": 57, "text": "csrf", "label": "ATTACK"}, {"start": 66, "text": "automated attacks", "label": "ATTACK"}], "sentText": "i used new session for each page as defense against both csrf and automated attacks. lets say we have forum that uses ajax to post threads and its validated by php session. every thing works fine until the user opens page.php?id=456 on another tab, the ajax returns 'invalid request' on ajax.php?id=123 [link]. they suggested to use only one session hash all the time, until he/she logs out - only then the session is regenerated. if the token is the same user could simply bypass it and do the automated attacks. any ideas on that?  it sounds like your objection to letting the session stay open as long as the browser is open is the issue of automated attacks. unfortunately, refreshing the token on each page load only deters the most amateur attackers. this method of changing the token on each page load would do absolutely nothing to stop someone who actually wanted to attack you all that badly. therefore, since the token has no effect on automation, focus on its effects on csrf. from the perspective of blocking csrf, creating one token and maintaining it until the user closes the browser seems to accomplish all goals. simple csrf attacks are defeated, and the user is able to open multiple tabs. the first token will stay the same until the browser session ends. this token exists to prevent csrf attacks. any submission from this user with this token will be accepted. this way, if i open a tab to form a and a tab to form b, each one has my personal anti-csrf token (csrf taken care of), and my one-time form token (form resubmission taken care of). both issues are resolved without any ill effect on the user experience. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a xxxxxxe \"xxxxxxxx\" xxx. hxxe sites cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs xxxn xxxt the cxxxk ixxxf t exxxxxt a bxxx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd xxp xxn dixxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy xs xs a wxy xo xxxxx\" usexs ad to esxxxy xe ad impre, . n txxs r, e secy t xf the probxxm y is te xxxxxy of xxe xxxxxs control or r oxn cor axd xxxr browsing xxx. "}, {"sentId": 82, "articleId": "2", "threatType": "S", "relationMentions": [{"em1Text": "access that endpoint", "em2Text": "use the token it provides", "label": "None"}, {"em1Text": "use the token it provides", "em2Text": "access that endpoint", "label": "PARENT"}], "entityMentions": [{"start": 302, "text": "access that endpoint", "label": "ATTACK"}, {"start": 327, "text": "use the token it provides", "label": "ATTACK"}], "sentText": "since i do not hxxe control over how the static websixe is sxxxxx, i cannot generate a csrf txxxn when xxxxxxe loads my static websixe (and insert txe token into forms or send it with my ajax requxxxxx. i couxd create a [code] exxxxxxt to retrieve the xxxxx, but it seems like an attacker cxxxd simply access that endpoint and use the token it provides?   i xxxxd crexxe a gxt endxxxxt to xxxxxxxe the toxxx, but it seems like xn attacker could xxxxxy access xxxt exxxxxxt and xxe the toxxn it provides? "}, {"sentId": 108, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 84, "text": "the attacker to pass arbitrary number of arguments", "label": "ATTACK"}], "sentText": "  escapeshellcmd() should be used on the whole command string, and it  still allows the attacker to pass arbitrary number of arguments. for  escaping a single argument escapeshellarg() should be used instead. "}, {"sentId": 24, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 29, "text": "buffer overflow attack", "label": "ATTACK"}], "sentText": "this code is vulnerable to a buffer overflow attack, and i'm trying to figure out why. i'm thinking it has to do with [code] being declared a [code] instead of an [code], but i'm not really sure. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 140, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 234, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp  from wixxxxs are a use wixxxxs rs  notable \" those  xxxe  the  convi a nce xxxxxxx that  do x\" xxx. h a o he xe sites cn use poxs to convince users that an important message from a trusted site has been delivered, x d xxe  and trick those people into clicking through to some malware url  convi (or x t xxx x s exxn just the click  te itsef t explo xxe it a bugx. through   xxx, t through he main page xf the n  ce  xxx some e xxd do xxt tox, but a we to lxxxxxxd pop x xxn xn dixxxxxt e users   the xxxr ax  pxxx xs p  esxx that xy mxxy d xxy x  no page  usexs t x those e dixxxy xxxxxxxxx y d wh xxe xe  ss  xxd  xxxe an  xxxn p x d xx. malware  as xxxe xxxxxxxx ad d y m those  y xxy control  uxxx notable xx y   xy ss xs a w people xy to xx (or xf  xxx\" usexs ad to esxxxy  x\" fe ad imp own re, . n txxs r, e secy t xf usexs  the probxxm y is te sxxxx t d he y of the xxxxxs control  click  d or r own cor and xxxr browsing xxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 31, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 217, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 318, "text": "recover those keys", "label": "ATTACK"}, {"start": 406, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 429, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x  atta vuxxs xw m i  ap i s t an attacker recover the secrets in that flash? i x xxxr xxx txe xxxxd   p i thxy n z for xxxxxs n txe app xxxe and t  c sx flxx? e l d fr o xr xn  i, xx  xt o  n  e xxxxd atr   i e sxxe indistinct general side channel attack  xxx xd r or     o o  txe . xt hxw wd n xxr y  y go t xxxxg o recover those keys?  e e ve apps  ac w k fr to  a d att to ar  xx d a f xo uz xxxr xo w shave-down the chip or some kind of microscope attack? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 262, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 634, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 342, "text": "xml bombs", "label": "ATTACK"}, {"start": 751, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has been xxe backbone xf the xxxxxxe oxxxxxxd applixxxxxxxxxx) and xt will be a xxxxxl one in the xxxxxg future.xs xml xs easy , flexible, it can be exxxxy made vulnerable and the attackxxs xxn uxe it for their own purxxxxxxs such xxxe of the xxxxxxs by are coercive parsing attack, xml exxxxxxl entity(xee) attack, xml dosxxxxx) attack, xml bombs.can any xxe xxxl in detail about these atxxxxxxxxw could xxe can simulate these attacks prxxxxxxxxy in a single sysxxx? i don't xxxxk there is percise definitixn of a \"bomb\", but it refers to an attack thxt is particuxxxxy xxxxxxxx\" and which \"expands\". a \"coercive parsing attack\" exploits the nature of the xml model to overwhelm the parser. a boxb using enxxxxxs whixh result in a dos xxxxxxe it exhausts the memory "}, {"sentId": 81, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "a hacker can log in with the saved password", "em2Text": "a hacker has access to the user's computer", "label": "None"}, {"em1Text": "a hacker can log in with the saved password", "em2Text": "he can catch the password", "label": "None"}, {"em1Text": "a hacker can log in with the saved password", "em2Text": "brute force", "label": "None"}, {"em1Text": "a hacker can log in with the saved password", "em2Text": "rainbow tables", "label": "None"}, {"em1Text": "a hacker can log in with the saved password", "em2Text": "discover the original password", "label": "None"}, {"em1Text": "a hacker has access to the user's computer", "em2Text": "a hacker can log in with the saved password", "label": "None"}, {"em1Text": "a hacker has access to the user's computer", "em2Text": "he can catch the password", "label": "None"}, {"em1Text": "a hacker has access to the user's computer", "em2Text": "brute force", "label": "None"}, {"em1Text": "a hacker has access to the user's computer", "em2Text": "rainbow tables", "label": "None"}, {"em1Text": "a hacker has access to the user's computer", "em2Text": "discover the original password", "label": "None"}, {"em1Text": "he can catch the password", "em2Text": "a hacker can log in with the saved password", "label": "None"}, {"em1Text": "he can catch the password", "em2Text": "a hacker has access to the user's computer", "label": "PARENT"}, {"em1Text": "he can catch the password", "em2Text": "brute force", "label": "None"}, {"em1Text": "he can catch the password", "em2Text": "rainbow tables", "label": "None"}, {"em1Text": "he can catch the password", "em2Text": "discover the original password", "label": "None"}, {"em1Text": "brute force", "em2Text": "a hacker can log in with the saved password", "label": "None"}, {"em1Text": "brute force", "em2Text": "a hacker has access to the user's computer", "label": "None"}, {"em1Text": "brute force", "em2Text": "he can catch the password", "label": "None"}, {"em1Text": "brute force", "em2Text": "rainbow tables", "label": "OR"}, {"em1Text": "brute force", "em2Text": "discover the original password", "label": "None"}, {"em1Text": "rainbow tables", "em2Text": "a hacker can log in with the saved password", "label": "None"}, {"em1Text": "rainbow tables", "em2Text": "a hacker has access to the user's computer", "label": "None"}, {"em1Text": "rainbow tables", "em2Text": "he can catch the password", "label": "None"}, {"em1Text": "rainbow tables", "em2Text": "brute force", "label": "None"}, {"em1Text": "rainbow tables", "em2Text": "discover the original password", "label": "None"}, {"em1Text": "discover the original password", "em2Text": "a hacker can log in with the saved password", "label": "None"}, {"em1Text": "discover the original password", "em2Text": "a hacker has access to the user's computer", "label": "None"}, {"em1Text": "discover the original password", "em2Text": "he can catch the password", "label": "None"}, {"em1Text": "discover the original password", "em2Text": "brute force", "label": "PARENT"}, {"em1Text": "discover the original password", "em2Text": "rainbow tables", "label": "None"}], "entityMentions": [{"start": 126, "text": "a hacker can log in with the saved password", "label": "ATTACK"}, {"start": 174, "text": "a hacker has access to the user's computer", "label": "ATTACK"}, {"start": 218, "text": "he can catch the password", "label": "ATTACK"}, {"start": 726, "text": "brute force", "label": "ATTACK"}, {"start": 741, "text": "rainbow tables", "label": "ATTACK"}, {"start": 759, "text": "discover the original password", "label": "ATTACK"}], "sentText": "there are many discussions about security risk for saving hash password in cookies, as upon accessing to the user's computer, a hacker can log in with the saved password. if a hacker has access to the user's computer, he can catch the password, as browsers also save passwords locally (encrypted of course). what is the difference between password set in cookies with that saved by the browser? most important is the risk of exposing the password. this would not only put your site at risk, but potentially other sites as well. most users re-use their password for everything, and the password would probably give an intruder access to both the users email account and netbank. someone with access to the hashed value may use brute force or rainbow tables to discover the original password (rainbow tables are long lists of pre-calculated hashes). rainbow tables are easily available for passwords up to more than 8 characters, and even longer. you may avoid this by salting the password so that it is i.e. more than 20 characters before you create the hash (remember to store the salt in the cookie as well). a properly salted password hash calculated with a safe hashing algorithm should be quite safe. "}, {"sentId": 14, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "passively listening in on your encrypted traffic", "label": "PARENT"}, {"em1Text": "man-in-the-middle attacks", "em2Text": "gain access to your shared symmetric key", "label": "None"}, {"em1Text": "passively listening in on your encrypted traffic", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "passively listening in on your encrypted traffic", "em2Text": "gain access to your shared symmetric key", "label": "PARENT"}, {"em1Text": "gain access to your shared symmetric key", "em2Text": "man-in-the-middle attacks", "label": "None"}, {"em1Text": "gain access to your shared symmetric key", "em2Text": "passively listening in on your encrypted traffic", "label": "None"}], "entityMentions": [{"start": 68, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 401, "text": "passively listening in on your encrypted traffic", "label": "ATTACK"}, {"start": 477, "text": "gain access to your shared symmetric key", "label": "ATTACK"}], "sentText": "how exactly is this done? what about the process makes it immune to man-in-the-middle attacks?what prevents some random person from setting up their own verification service to use in man-in-the-middle attacks, so everything \"looks\" secure? note that the certificate authority (ca) is essential to preventing man-in-the-middle attacks.  however, even an unsigned certificate will prevent someone from passively listening in on your encrypted traffic, since they have no way to gain access to your shared symmetric key. "}, {"sentId": 77, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker see this happening and get those keys", "em2Text": "hackers will be able to build a hacked version", "label": "PARENT"}, {"em1Text": "hacker see this happening and get those keys", "em2Text": "all the levels pre-downloaded inside", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "hackers will be able to build a hacked version", "em2Text": "all the levels pre-downloaded inside", "label": "PARENT"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hacker see this happening and get those keys", "label": "None"}, {"em1Text": "all the levels pre-downloaded inside", "em2Text": "hackers will be able to build a hacked version", "label": "None"}], "entityMentions": [{"start": 24, "text": "hacker see this happening and get those keys", "label": "ATTACK"}, {"start": 212, "text": "hackers will be able to build a hacked version", "label": "ATTACK"}, {"start": 264, "text": "all the levels pre-downloaded inside", "label": "ATTACK"}], "sentText": "is that safe or can the hacker see this happening and get those keys? do i need to protect those keys at all? i am afraid that people will be able to get the files from s3 with out purchasing the levels. or that hackers will be able to build a hacked version with all the levels pre-downloaded inside. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 47, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 75, "text": "read php files", "label": "ATTACK"}, {"start": 549, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it pos it sib  le for a a pache  someone to 'hack' an apache server and read php files. i under than stand t they hat php is a serv an  serve le  ser fi ve r er-side language and cannot be read from anywhere other tha anywhere n th if e s  erver, bu read t could so disk meone hack the server and read  them  them them as if read could in er-s but ide they  g a  to text fi is le? well yes, for  if they anywhere  ev disk er process  a  ac have tually hack languag  pos php e  into the serve could r (ssh, ftp etc.),  a ac  tually  they may have access to files on the hard disk er-side  apache . a properly configured apache server will not ser t disk he ve raw php files tho er-side u serv gh, it should al configured ways process them with the have  php i with nterpreter first. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 149, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 236, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp wix clxxk xxxs   bxxx. to are a no to xxxl xxxxxxx,  and e \"xxxxxxxx xxxs \" xxxxxxxxx xe that  . hxxxxxe  xxxxxxxy xxxxs cxn uxe xe  pxxxxs xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url xxr xxxxx  xs even ju be st the clixk xxxxxf might exploit a xxxx.    and d yxx, the main pa  g poxxp e xf the  etx. xx d txxs o xe f xh aspect e xxm  xxxxd do xx pox  x hxxxxxe p x xxt t to axxxxxxxxd o, but a wexl xt -crafte cl o ick d pxxxp xxn dixxxxx xx t the xxxr a  xxxxk  axd xxy  xxo a  xn poxxp d m xxt be dixxxxxy  xxy asxxxxxxxd xxxh th  e xxxxxxe xxxn page.popups wxxe pxxxxxm  exploxxxd xy xxxy xxxxxxx xxxxe y si  tes xs  exploited a wa of y to xxxxp xe \" xxxxs xxd xo esxxxx xx xxxxy xxr xxxh ce ad im  xxxxxxo not xx, etx. xn txxs resxxxx, the sexxxxxy axxxxt o through f the  xxxxxxs pxxxxxm reaxx xxxxr y i xxxxy s xxe se xxxxd cuxxxy of the us a   exxs con wxxh txo  l xxxr their  by oxn compxxxr and xxxxr has  xxxxxxxg desxxxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 72, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 157, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p  user wix might xs e e  a notabe \" xxxxxxx \" x.  si e s cn e popus to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or s even t the ck   if m co ight et a bugx might .  y, e n pa ax ge tx.  xf th those e xxx of e xxxxd do xt t si xt n  tes o,   site might but  o a well-cr might afte b xxy een d  t po contrl p n t  \" us d s  the user o  clic tes king  ax contrl d xxy t be dy ad  n with e  te xxe man te  s e d  y, y y uxxxy sites xs a y o \" (or  s d o  users esx s a ite xx  xxy fe d , e contrl tx.  n in s , te sey t  , o   user f e prm o   that r  o,  eaxy is e sy of n  e ,  uss contr a l or   might dy thr o e n some  co de  s. mpxxr ad n  xxxxr te  ,  browsing   of n des. "}, {"sentId": 47, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "PARENT"}, {"em1Text": "xss", "em2Text": "dom-based xss", "label": "None"}, {"em1Text": "xss", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "xss", "label": "None"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "dom-based xss", "label": "OR"}, {"em1Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "em2Text": "malicious script is generated dynamically on the client", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "xss", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "dom-based xss", "em2Text": "malicious script is generated dynamically on the client", "label": "PARENT"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "xss", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "None"}, {"em1Text": "malicious script is generated dynamically on the client", "em2Text": "dom-based xss", "label": "None"}], "entityMentions": [{"start": 112, "text": "xss", "label": "ATTACK"}, {"start": 399, "text": "server dynamically outputs htmlencoded values directly into the client-side javascript", "label": "ATTACK"}, {"start": 641, "text": "dom-based xss", "label": "ATTACK"}, {"start": 668, "text": "malicious script is generated dynamically on the client", "label": "ATTACK"}], "sentText": "i am not concerned about other kinds of attacks. just want to know whether html encode can prevent all kinds of xss attacks. is there some way to do an xss attack even if html encode is used? putting aside the subject of allowing some tags (not really the point of the question), htmlencode simply does not cover all xss attacks. for instance, consider server-generated client-side javascript - the server dynamically outputs htmlencoded values directly into the client-side javascript, htmlencode will not stop injected script from executing. there are a few additional vectors to be considered... including the third flavor of xss, called dom-based xss (wherein the malicious script is generated dynamically on the client, e.g. based on # values). if you're using ms asp.net, you can use their anti-xss library, which provides all of the necessary context-encoding methods. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "no access restrictions", "label": "ATTACK"}, {"start": 182, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "e access  load this r i this s nom access y sud to is mi i  can nimal,  to but sie th nimal, e th e are no access restrictions,   restrictions, usly the sr cn obv to o can y  can be attacked by dos etc. "}, {"sentId": 13, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "phishing attacks occur", "em2Text": "using a malicious website that resembles the legitimate website", "label": "PARENT"}, {"em1Text": "using a malicious website that resembles the legitimate website", "em2Text": "phishing attacks occur", "label": "None"}], "entityMentions": [{"start": 0, "text": "phishing attacks occur", "label": "ATTACK"}, {"start": 107, "text": "using a malicious website that resembles the legitimate website", "label": "ATTACK"}], "sentText": "phishing attacks occur when a user is tricked into thinking they are using a known website but instead are using a malicious website that resembles the legitimate website. authereum, portis, and torus are username and password based login solutions so they open up the login auth window in a new popup or redirect. this allows the user to verify the domain of the website for legitimacy. google auth does this pattern as well. besides opening a new window on login for the user to verify, some web-based wallet providers also open a new window when signing messages and transactions to verify the request. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy working on a php project that will fxxxxxe a user system (login,registexxxxxd lost password to email,..) and i think txxt this may be very vulnerable xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etc. use your fantaxxx. do toxxxxs webservers (apache, iis) have xxxe sort of buixxxxn dxxxxxe against xxxxxxxxxxxxxxxt would be the best way to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be callxd up to 100 times a mxxxxe or so. xxxxs wxxh xs won't see it and will be fxxx. users without js will just have to xxxxxw the simple instrxxxxxx. spambots will fall for it xxd reveal themselves.automaxxc faux-captcha: xxxs is simxxxr to the axxxx. add an xxxxt fixxd with a label saying [xxxx] (xxr example). using javxxxxxxt (and knowing that most automated sxxm xxxs won't be running jsx, hide the field and populate it with xxxxxx. if the subxxxxxd form doesxxt have the magic word there, thxn igxxxe it. users with js won't sxe it and will xe fine. users without js wixl juxt have to follow the simple instruction. spambots won't know wxxt to do axd xxu cxn ignore xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam bots. what it won't xx, even in the slighxxxx, is safxxxxxd you against a targeted attack. someone cxxxd xxxxxxxxe their bot to avoid the honeypot or always fill in the cxxxxxt value.  "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is somexxe could decompile the app  c (which ixxe  c proguar proguaxd d ould dxxx) and even with proguard you can qu with   wi the thout xxo xxxh dif oxxxxe ficulty retrieve all xxe  ould qu dec the om txe pile xs can tixxx.  "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 212, "text": "enters the password", "label": "ATTACK"}, {"start": 255, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 187, "text": "access the file", "label": "ATTACK"}], "sentText": "o sae  i a file th   f. i de o fd h be th  the  e tter e following meths retus a h defd ashe tha cos t is s is tored in a e dit  ally . wheneve e r  te the tte  te  r   wheneve user s to access the file hash , e enters the password, a re n g d  sh  re if the same hash is generated,  safe  th h o    file answe te r  s and s  stored me h thod[ the cos e can access th  r  the now?? e a  fi meth cos s l hw i tte  su o ppo and  following se s sup  pe  w  is :[  e  re nt re [ a hash lly safe, but hw safe it  hash is? but  hw high t   method[ he  is t hash e  password, cha s nce t  h  is sh at   e follog t w he  se gen safe es the  s   e tored same hah w in ith two differe nt nt be    in the puts? a  lly e e    hash dit  od  i w following  :accordin bet access ter g t stored o your e   hash ans i changed the c  a  the hash od method[ e to cos  :[ be co] the  w w  e   be o i  t sh r fil ca safe, n e etu   method[ s  e but  ou  changed  ld changed  be be fil  e. r a  now?? "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 62, "text": "sql injection", "label": "ATTACK"}], "sentText": "in rails, when i want to find by a user given value and avoid sql injection (escape apostrophes and the like) i can do something like this: i know that an unsafe way of doing this (possible sql injection) is this: my question is, does the following method prevent sql injection or not? "}, {"sentId": 65, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 85, "text": "brute force login attacks", "label": "ATTACK"}], "sentText": "as a respe o te recext xxxxx] and [lxxxx, wxxt s the best way to e r website against brute force login attacks? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 48, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 225, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 347, "text": "recover those keys", "label": "ATTACK"}, {"start": 429, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 467, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttack te  ecrets w  indistinct mixx of t an attacker recover the secrets in that flash? i d t how hey can   xx t xz fxr xxxxxxxxx ecrets x o  or xxxxs xn te app cxe ad t x somehow x, t te cxxxd be micros xx cope  xxxe indistinct general side channel attack o  can  or x txx xxe r . but how e  d a w n t  a  ttac  ke an  xn r y go t tryig o recover those keys?  xx  or or e txx cx of e xe ve ar  xxxs for a d ar to somehow shave-down the chip  gene side ral or some kind of microscope attack but ? go  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 59, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 144, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wis e a  d  if no  xxxe \" xxxxxxxx. p  e s xn e popxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( xxxx. or s e be ven t xxe xk d  f migxt xt a x xxxxxxxxx, x et t  xx. b r e e en    xxxx  d y, t might hrxu et gh  e n xxxe and  f xxe e xxx  d do xt tx, t a  xxe e . l e xc  ra wxxxs e e d pp   n  d t th d e usxr axd x if xy t e   xy ad xh o  xe xxe xxn s  has e d is  y y   trick a uy xxxxs xs but  a y o \" s d o e dxxx, xxxxxxy fe migh fe t  d , xxx. in s , xe sy  t  e t f  do e ad a   m r e ey i thu  gh s e x  y o a f e u s xs l o xxxxxxh if   t r r on co thrh mr  c x l ad xxxxr bxxg o   t  and  t ds e . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 92, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 184, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop wis are a notable  poxxp \"xx\" xxxxx.  (or ht sociate ile sites can us frm e   popups to convince users that an important message from a trusted site has been delivered, a  xd  and trick those people into clicking through to some malware url (or xxxxxxs e coe v x. en just the clik f  to m i  cking  e a ssio, ight exploi e ftd t. t a bugx.  ye even s, the mn pe xf t e he xxx pm e xxxxd do xxt too r , but a well to -cra users d pox  s xxxxxxxxx. xp xxn dix xxxxxxxxx. xxxt te user de,  axd xxy not  hostile be i control y s users se e d by  with the xxxxxxe main page.s wxxe expl a od  sis by many uxxxy si e  of a s t evn  me es x bugx. s a way  us t xxxxx. o \"tr\" usr trick s a \"trap\" n m d to e . sx e y force ad impressio, et e x. in txxs txxs  respec, e secu x rity aspt f th  e p many robxxm  txs reaxxy notable  is txe se e cy of ad  the user's l ovxr thei n etx. d r  sites on cr and xxxx  r g desi  e te xploi by res. "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 221, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 308, "text": "call your resource server", "label": "ATTACK"}, {"start": 338, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the diffxxxxxe bexxxxn a refresh token and a non-xxxxxxxg ac  cess token non-exxxxxxg  i token n means of securxxy  your one axxxxxxxxl   is one a quer  one dditional caxl to t xxxxxr xe auxxxxxxxxxxn server.xf xn xxxxs  attacker gains access to your non-expiring access token, he ca confxxxxxxxl n dxxxxxxy call your resource server and get confidential data as response.< an token d br  se />xxw  differxxxe if he  your s a texxs yoxr refresh t your access   xxe oken, he first has your  to ca can l ll l the authoriz your ation your  s toxxn erver and xxxxi sexxxr ve an a  cc oxe ess t resource oke your n in  acce data. ss rxxp means onsx. txxn he ca  n  tokxn xxxr recxi y the resource  he se to rver for confidxxxxxl xxxx. "}, {"sentId": 31, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "man-in-the-middle attack", "em2Text": "the server key has been stolen", "label": "PARENT"}, {"em1Text": "man-in-the-middle attack", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "man-in-the-middle attack", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "attacker can appear to be the server", "label": "PARENT"}, {"em1Text": "the server key has been stolen", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "the server key has been stolen", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "None"}, {"em1Text": "attacker can appear to be the server", "em2Text": "generate any cert he likes", "label": "PARENT"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "fake ca has been injected in his trusted root authorities", "em2Text": "generate any cert he likes", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "man-in-the-middle attack", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "the server key has been stolen", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "attacker can appear to be the server", "label": "None"}, {"em1Text": "generate any cert he likes", "em2Text": "fake ca has been injected in his trusted root authorities", "label": "PARENT"}], "entityMentions": [{"start": 901, "text": "man-in-the-middle attack", "label": "ATTACK"}, {"start": 2721, "text": "the server key has been stolen", "label": "ATTACK"}, {"start": 2772, "text": "attacker can appear to be the server", "label": "ATTACK"}, {"start": 3956, "text": "fake ca has been injected in his trusted root authorities", "label": "ATTACK"}, {"start": 4044, "text": "generate any cert he likes", "label": "ATTACK"}], "sentText": "fi trusts rst of  implementati server on all if  i'll desc with ribe  d briefly the authe from nticati correctly  the on procedure as i underst banking and it, as i ma to y be mistak  a se if rver en in that  th k e regard: a cli server ent starts   a i'm  connec scenario? t en)  - ion,  i which a server responds to with a combination of public key, some metada public ta and digital signa  ture of a  be trusted author without ity. then the client take the s the decision if sh  e trusts pos  connec authe sible  the ser l v the er, e if ncrypts some ra to ndom session key wi if th the public k if   e ra y and se from nds it b valid ack. tive trusted     the  this session key can be dec cl rypted only with pri is vate key stored on    combination  a  and the server. a  ser  ver does this and s  then the https session  d begins.so, if i'm  co cor take rect abo the ve, the question is how the man-in-the-middle attack can occur i r t rst hink an client dom n such hide  scenario? i mean, even if somebody intercepts the server (e.g as . www.serve valid r which .com) response w ssl's http  ith public key an that d has some means to make s  me think that he is www.serve if r.com, he still wouldn't be able t my o decrypt my   ses certificate sion key without the priv nt a encrypts te k ca. ey.speaki for ng about the mutual aut some  today, hentica know.the tion, is  of it al combina connection tion  it. l  the about the server confidence a appear bout the cl the ie wi nt identity? i mean, the client can already be server,  sure tha the t she i valid  it s communicating with the right  broken, server, but now the server wants to find o with se  ut who the clie to nt is, right? attacked and the  serv l is  server ast en)  question and  is abo nt ut the alterna then tive to the  ificate mutu pre-exi al authentic such   correctly wi ssl's  cert  a as tion. i after f  mos n t i act as a client in the situa of tion descr th ient e ibed, wha t t if i send a login/password i  in t and  er he http header  er, after the ssl session is established? as broken,  secured  the   an  al i see it, this informa en) tion can't and is   be in the ter tion cepted  ve, because the connection is already secured and t  he server can rely on it for  en my i fr such om dentification. am i wron to and  g? wh ntication, at are  vate t  he downsides of such an ap question proach compared wi she th ssl's  mutual authentica hide tion (only se  curity issues are im th attacked at portant, not the implementation com login/password plexity)? ma ses n-in-the-mid be and   as dle attack on ssl ar and e really only ri the ght?  possible if one of  understand ssl's preconditions is broken, here are some exa ation. mples; the server key has been stolen - means th server e attacker can appear to be the server, to  and there is no  i way  really for the client tive  it  to know.the clie pri nt  authentic trusts an untrustworthy ca (or one tha w ion, ww.server.com, t has had it's ro a ot ke correctly y  rect stol question en) - \"ben's  whoever holds  with a trus server ted ca k  ey can generate a ast  cer with t header ificate pretending to be the server and the client will  then trust the  it. w pretending vate  ith the number of ca i s pre-exi reate sting in browsers today, this communicatin th g  may be a real   p  roblem. this means that   the server certif is icate woul with d a  p that pear to c er hange to anoth  correctly tificates\" er  the  - valid one, which i en) s someth connec ing most clien server ts will hide f t  he rom you. it  not the client doesn't bother to validate the certificate co may rrec client tly against t wha ruste such d  its list of trusted ca's - anyone c header an c to reate a ca. wit t h n  exa banking o validation, \"ben's cars an tificates\" d cer authe untrustworthy ntication, tificates\" will ap mutual   pear to be  bother  en) just as valid as ve the risign.the cl be ient has be rom en attacked and a fake ca has been injected in his trusted root authorities - allows the attack are er to generate any cert he likes, and the client will trus server, t it. malware tends t serv o do this to mutual  for example redirect  holds y ssl's ou  trusts to fak ap - pear e  been banking sites. "}, {"sentId": 47, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "em2Text": "put this code right into the file", "label": "PARENT"}, {"em1Text": "put this code right into the file", "em2Text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "label": "None"}], "entityMentions": [{"start": 15, "text": "there was some malicious code at the end, suddenly. the output of my index.php was:[code]", "label": "ATTACK"}, {"start": 186, "text": "put this code right into the file", "label": "ATTACK"}], "sentText": "but yesterday, there was some malicious code at the end, suddenly. the output of my index.php was:[code] i opened the file on my webspace (downloaded via ftp) and i saw that someone had put this code right into the file! "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 89, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 119, "text": "read php files", "label": "ATTACK"}, {"start": 1002, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "i et   s p    l  xxxxxxe  i rd t pxxxl i d  i s   e  y fo o ywxe n r   s  l ocess ome xo 'hack' an apache server ad l  read php files.  xf   to    a d i r   fr   is xm xn  dd php  th  to apxxh t  an f d pp i c, s  s a  a xxxxxx-  e a g apacxe e nguxg  fi s xx? m   e     a m p , ach a e  xxe hr  on   m   lway  s axd   e  ca  nno ually  to t fr  xi w lx?  be r  m a d fr   p  xp om a xxo n th ot an xxxe ot  xxr  r txxn   e    a se an sho d v  i ra  a er i , b xxe l  ut   coxxd f     fix. e  e k xe to  sxr uaxl   ey nxxxxxxxxr r  y and d   xl d e  xxe exxxx, m   an r d  a    s  be xp  f rea f dig  rv a  xn  will hr d t ser, xx  t ? a to     wel xxxxr l n ach f    xxs m , them  if   p an  d hp  the xxxm y   er xn ver xxe  y ev xa er at raw  y u p all   apxc y  se th , ae d  r  xxh     ha the  rea yex,  r d xxd  c    k i p e xp   nto  on  y   le?  n  i   se xe   serv  er xxxx, ,   f  ix. p   et apac  he c,  from ty ma a  l is xxxs   r b y  th them  xd ey   h p if hp a r  b pr f    ha v  e hd  access to files on the hard disk. a t   xo xxxxxe ssl lly  hxn   s ad xd  te pro aca se lly  fi h xxu a le? pl on   u is y conf r fr xa is w  d   i fo d  ntxxxxxxxr m p  l  xp   p fi ossl nguag  on   not xu  re  d   a t xh apah    e e s could xxxxr will not  th se raw   read  ev  er      r txe xv y e ra  pxp    read  apa  c  he  w a tm   xxr  xxxxxe frxm r  xxp  xxe s pxe    ome  xp ome ac fr e  ver err  ,  y   i f fr , s  w ixxs txo oces t  o s u on gh xp  d , i i  s t xxo e    ext   l ,    ay d  h is  always   a   ot r  th  y  f   on l  xn xxxxh   y e ocess t from m h the p e  i xxu ome l on d r f co w  g a urxd rd   than  y  y nf  a a s pah di.  s    r  on irs re    read  apxxxe u read t xn  g . to  xxxxxr  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 158, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 243, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop sionx, up   wixxxxs are a ir  notabl the e xxy  \"xx   wxxe xxxx xs xx xx y xxr it  \" xx the xxxxxxx. an  hosti  le sites  the can use   po ovxr pups to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or desi  xxxxxxs    a pop s of pect   e age ven  dixx  an just the c xxxxx  th lick si  onx,  its site elf probx  mig ar ir  th e ht exploit a bugx.  y  x url es,     the mai age  w fo i n pa n ge x thos f the xxxe xx e to   explo y ited xxd do xxxt too, but mai  a well-cr x xxd s aft mai ed pop  poxxp xxn dixx d t esires. of  x people xxt th by e  tx  aft been xs  ovxr user axd xxy pa e ge  .popu mai ps  not be dixxxxx d  ixx y xxxt   age   associat be e wi ad th any  d wit y h t  aft th  e he  from xxxxx  xe mai exploi xxxxxx t xxxx url xxxxx o . e ity d n pag to e.popup an  he any  s wxxe exploited  ad  eve url n by m xs  es are    xxxxxx  xx any xxr  any xx sites  desi  xxxxxx xxx wixxxxs xxxy a \" th  ny   uxxxxxxy sites xs a w  ay t  o \"tra an p ess \" users and to and  esxxxx a xxxxy f e o i  m rce he  ess (or \"xx   poxxp ag xs e sec   u x rl  people  p any age xx  rce ad th  impres e sionx,  p c oxxp e n a  tx. in txxs respect,   th xxxt url  e   xxxxy xx  xxxxs xxy  sec can urity secu of   an of rity  aspect of t from h  the probx xxxx xxx xx malware  convince  be s x y m   r it ea convince xxy is t ity xe secur xx y xxr wxxe  it d y of  desi t thos use e he user's  fo c e o xxxxxxx. ntrol ov mai xr the fo ir o ex xxxxx bugx. xs ploit wn comp xxx pa xxx ag s x exploi xxxt  people t xxr and xxxxr  url brows xxxx ing desi y res. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 187, "text": "sign up for the app", "label": "ATTACK"}, {"start": 233, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my e  sn , w xxxe  i is \"au t th e  = x? s e , i   y  n   s re tt this xe xxxn s t y an saxe   s aud r can s e , t w y  e e  is it o b c xt a e auth e xxxo i,   e sxf ca e ? ca i n somee sign up for the app, o  a bee nd n bo use me  use those credentials to get request right into my database? "}, {"sentId": 77, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 209, "text": "third party application like google analytic could store in their report such urls and query string", "label": "ATTACK"}], "sentText": "u report rls with their urls  que in ry and   que strings  coul  d param their   ete log, rs are sav  e que d in web server log, and  with access t  o them analytic  c application ould com in promise security.third party application like google analytic could store in their report such urls and query string. "}, {"sentId": 116, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "format string vulnerabilities", "em2Text": "exploit this by passing in a format string", "label": "PARENT"}, {"em1Text": "format string vulnerabilities", "em2Text": "make %n overwrite with a specific value", "label": "None"}, {"em1Text": "format string vulnerabilities", "em2Text": "padding the number of bytes written before the %n", "label": "None"}, {"em1Text": "exploit this by passing in a format string", "em2Text": "format string vulnerabilities", "label": "None"}, {"em1Text": "exploit this by passing in a format string", "em2Text": "make %n overwrite with a specific value", "label": "PARENT"}, {"em1Text": "exploit this by passing in a format string", "em2Text": "padding the number of bytes written before the %n", "label": "None"}, {"em1Text": "make %n overwrite with a specific value", "em2Text": "format string vulnerabilities", "label": "None"}, {"em1Text": "make %n overwrite with a specific value", "em2Text": "exploit this by passing in a format string", "label": "None"}, {"em1Text": "make %n overwrite with a specific value", "em2Text": "padding the number of bytes written before the %n", "label": "PARENT"}, {"em1Text": "padding the number of bytes written before the %n", "em2Text": "format string vulnerabilities", "label": "None"}, {"em1Text": "padding the number of bytes written before the %n", "em2Text": "exploit this by passing in a format string", "label": "None"}, {"em1Text": "padding the number of bytes written before the %n", "em2Text": "make %n overwrite with a specific value", "label": "None"}], "entityMentions": [{"start": 39, "text": "format string vulnerabilities", "label": "ATTACK"}, {"start": 292, "text": "exploit this by passing in a format string", "label": "ATTACK"}, {"start": 596, "text": "make %n overwrite with a specific value", "label": "ATTACK"}, {"start": 647, "text": "padding the number of bytes written before the %n", "label": "ATTACK"}], "sentText": "i am reading about and trying to learn format string vulnerabilities. i have a vulnerable function and i understand the gist of what i have to do with my format string. okay, i'll try to be a little more clear. i have a vulnerable program. the vulnerable point is \"printf(input);\". i want to exploit this by passing in a format string. now for example, i have a format string  this format string, when passed into the vulnerable function, will overwrite the memory address of 0xffbfde0c with the number of bytes written. i am looking to find out how i can modify that format string so that i can make %n overwrite with a specific value by somehow padding the number of bytes written before the %n. "}, {"sentId": 55, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "use all these cookie for authentication", "em2Text": "cookie spoofing attack", "label": "None"}, {"em1Text": "cookie spoofing attack", "em2Text": "use all these cookie for authentication", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "use all these cookie for authentication", "label": "ATTACK"}, {"start": 364, "text": "cookie spoofing attack", "label": "ATTACK"}], "sentText": "my question is: why use all these cookie for authentication? my guess would be that maybe generating a session hash would be to easy so using the hashedpassword and userid adds security but what about cookie spoofing? i'm basically leaving on the client all fundamental informations. my main concern is about these solution giving to much information when under a cookie spoofing attack. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "if you are concerned with the first case (someone posting malicious data to/as another user) the solution is the same whether you are using ajax or not -- you just have to authenticate the user through whatever means is necessary -- usually via session cookie. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i xxxt to include the capabxxxxy to stop ddos attacks from a certain ip (or pool of ips). txxs as to be at xxe nginx xxxxx, rather txxn axy deeper xn the xxxx. do i need a web application firxxxxx? if so, xxw do i integrate it. "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 111, "text": "sql injection", "label": "ATTACK"}, {"start": 19, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 61, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "xxxxxs because the user can input something like [code], xxd the query becomes:[code] xxe correct way to avoid sql injection attacks, no matter which databaxe you use, is to separate xxe data from sqx, so that data xxxxs dxxa and will never be interpreted as commands by the sxl parser. it is possible to creaxe sql statement with correcxxy formatted xxxa parts, xxt if xxu don't fully unxxxxxxxd the dexxxxx, you should always xxe prepared staxxxxxxs and paramxxxxxxxd queries.  "}, {"sentId": 57, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "em2Text": "compromise the user-experience for other players by, for example, hacking", "label": "OR"}, {"em1Text": "compromise the user-experience for other players by, for example, hacking", "em2Text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "None"}], "entityMentions": [{"start": 206, "text": "sending his/her updated collection of the most malicious viruses in existance to the server/other clients", "label": "ATTACK"}, {"start": 325, "text": "compromise the user-experience for other players by, for example, hacking", "label": "ATTACK"}], "sentText": "pois ad insight on security s t i should take io n when g , mainly games, such as te one ded bel. y security i mn checking and de chg that a user doest act in a way not intended. ts could mean behr such as sending his/her updated collection of the most malicious viruses in existance to the server/other clients, r otherwise compromise the user-experience for other players by, for example, hacking. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 105, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 175, "text": "recover those keys", "label": "ATTACK"}, {"start": 225, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 247, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d y can z fr s xn te ap e ad t , t e cxxd be xe indistinct general side channel attack r . bt how d n ar y o t tryg o recover those keys?  xe e ve xxs for a d ar to sw shave-down the chip r some kind of microscope attack? "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 244, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "today, our enterprise architect mentioned that a recent vulnerability was discovered in the jre 1.7.  i found an article the [link].  the details of the latest vulnerability have not been made public.  however, my understanding is that it only affects java browser plugins.  the recommended mitigation is to disable the java browser plugins.  no mention is made of non-plugin java, so i think it is safe to assume that your dev machine is not vulnerable simply by virtue of having java 7 installed. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 54, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 138, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxs ae a ne \"xxx\" x. hostile s n use popus to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even jut e k itself mt exploit a bug.  , the main e xf the xe xd do xxt too, but a weld poxxp xxn t the usr axd xxy not be y ad wh e xxe main ps e d y my uxxxxxxy ss xs a wy to \"trap\" users and o y force ad impr, . in ts re, te security aspect of te pm reaxxy s txe secury of e user's control ovxr their own r and r g . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 112, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 197, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "px  xxp wixxxxs and  a  re a   xs the notable \"xxxxx a x url xx\" xxx. hoxe  and si . t uxxxxx es cn use poxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exx t n just the click itsef  pr t obxxm t expl s xxxe xxxxy oit a bugx.  xxx, the ma  \"xxxxxx and in page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn dixxxxxt the xxxr a xxxx xd xxy xxy  not  welxxxx the xxd xe dixxxy xxxxxxxxxd wh delivered,  xxe xe xxxn xxxe  a  wxy  t and ri url ck  p  a wh  xxxxxxx s xxxe xxxx clicking xxx xd xd y t  wxy  mxxy uxxxxx pop xy ss  wxy xs a wxy to x own xxxx  a bugx. \"  in u a  url  the r  sexs ad to esxxx  the esxxxy y fe xxxr  ad impre,  xxxe . n txxs r xxy , e sec   cor y notable  t in  xf the probx o r  url some  w page n xm y is te ss  sxxxxy of the xxxxxs co itsef ntrol or r own cor and xxxr browsing x  xx. "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per user salt prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table would have to be generated for each and every user who had a unique salt in order to obtain their password.  this would be a time consuming process which is what makes salts effective.  this does not help a tremendous amount against dictionary or brute force attacks. "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 153, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am usixg cloudfla my xe on my wxxxxxe and   i wan my t to keep  i my s ddos erver's ip (the orig cloudfxa in i cxxxxxxxxe p) private, am   to xo avoxd ddos attacks bei apache, n prixxxx, g sent dxr xxxxxr ectly to    apache, my servxxxs ip. xy server  ip. xxxs  cloud oxxg flare apache, php, my my sxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw might an attacker recover the secrets in that flash? i xxxxxxxxxd xxxy can fuzz for vulnxxxxxxxxxxs in txe app cxxe axd expxxxt xx, xxxt thexe xxxxd be sxxe indistinct general side channel attack or somexxxxx. bxt how wouxd an axxxxxxr realxy go axxxt xxxxxg to recover those keys?  axe thxxe viable axxxxxxxxs for a dexxxxxxxd attaxxxr to somexxw shave-down the chip xr some kind of microscope attack? "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 69, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 422, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  se  y yr  rexx: t is    mxxxxxxxs t  befoe  hiy d xxxt you do not  hard-code the exact public license key string value as d or xr   or ed xy  xxxe . , you n co stxxxg ns t truct txe pxxx.  o . xe pc xxxxxe y  stri string n do g or  at rut kxy  xxc e  n m substrin suxxr g , e ings e , g, or re pc t   xs t  e g  t m a xxxxxxe n end  s, e p  assg t e reco: x stxxx, act  to te thxs  c. txs   h s t  m e ore f n ft  the r malicious third-parties to modify the public  license key string n yr  the apk . "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "the whole poxxt of haxxxxg a pxxxxxxd is in caxe a hacker gets access to the database. if i store the xxxt in the xb within the xxxe row as the haxxxd passwoxx, isn't it just like i am handing the hacxxr the \"sexxxt xxxxx? i am putting up a door with a lock, xxd handing the intrxxxr the key. "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 43, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "the whole point of using salts is to avoid the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes . thus, it only needs to be long enough to exclude the possibility that such a table already exists for a specific salt. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 118, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 207, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pou th p  le s ae respe the ct,  a is cm   no hostil  us url e  r tab dixxxxxy le \"\" xxxx. hosi  le ss can ue pops to convince users that an important message from a trusted site has been delivered, a te nd trick those people into clicking through to some malware url (or  r xxx  xxxs even ju  st e clik f mg bt  es ht exploit a bugx.  ye,  the the in  m the ain page foc  xf th h trusted t e xxxe xxxxd do xxxt t popups oo, but a  ( secu or   de. o trik n a xs d p xxn dixxx m x the xt the  t  y ur a xxy x do  trusted d y not be dixxxxy is  d wi uy th the xxxxxxe ma has in ps e expl  od by many uy t m es xs a way to \" uss d to esxy forc  e d i, etx. in txs  a to  e fro m m spe, the s re ecuriy aspect o even f  th can h the prom way  r pp e   ad axxy is txe u the rity of the user y, 's control ovxr ther own com uxxxy is  pxxxr and  comr xx not xxr browsg desires. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourself write privilege to the system site-packages,  you're risking that any program that runs under you (not necessarily  python program) can inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 78, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my prm is that n h my project is 1% le, and not shady, it is highly sue to ol ddos attacks. "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 42, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 287, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  sey reco: t is highy d that you do not  hard-code the exact public license key string value as provided by  googe play. , you n construct the whole pc license key  string at runtime m substrings, or retrieve t from an end  store, befoe passg it to te cons. this h s it  more difft for malicious third-parties to modify the public  license key string in yr apk . "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 49, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 76, "text": "read php files", "label": "ATTACK"}, {"start": 611, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  language  it possl is e  y fo on r some to 'hack' an apache server ad read php files.  nf  d i  fr is om un  dd th  to apach t  an f d pp is  s a  a server-  e a g apache e nguag  file? m e  a e   lways and   e  cannot fi w le?  be rd fr php om anywhe ot  her than e se and v ra  a er i , b the ut could  fil. e  e k te to  serr and d  d the etc.), m a    s  be f readig  rv a  an hr d t ser, ext ? well yes, if   php  the them y   erver y ever at y ually  se, ae d     ha the  rea yes, d c    k i php nto  on   n  i   se te server (ssh, p etc,  from ty ma al is ways y  th them ey   h php a b pr   ha ve access to files on the hard disk. a t possl han   s ad hd pro aca se lly  file? pl on y conf rea is d   i fo nterpreter m on   not gured   aph apah  e e s could erver will not se raw read   the rve ra  php  apache  w a  ser from r  php  the s poe  apace  ver err  ,  f fr , s iles tho ocess ugh pp , i is t sho ext l ,  ay d  h is  always   a  r  th on an apach y e ocess tm h the p i coul on d r f co y nf  a apah di.   irs   readin  g . "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 135, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 216, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d they can xxxz fxr xxxxxxxxxxxxxxs xn te app cxe ad t xx, t te cxxxd be xxxe indistinct general side channel attack or . but how d an attacker y go t tryig o recover those keys?  xxe txxxe ve xxxs for a d ar to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend xxxt the sxxt be stored separxxxxy fxxm the databxxx. their argumext is that if the database is compromised, an attaxxxr can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this xxxxxxt xxs admin privilxxxx, txxn he may not even need to crack any otxxxx. from a security xxxxxxxxxxx, is it worth it to store salxs in a different place? consider a web appxxxxxxxn with xxe server code axd db on the same maxxxxx. if the salts are sxxxxd in a flat file on thxt machine, chxxxxs are that if the daxxxxxe is compromised, the salts file will be compromised, too.  "}, {"sentId": 37, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 33, "text": "buffer overflow attacks", "label": "ATTACK"}], "sentText": "what are the ideas of preventing buffer overflow attacks? and i heard about stackguard,but until now is this problem completely solved by applying stackguard or combination of it with other techniques?   why do you think that it is so  difficult to provide adequate  defenses for buffer overflow attacks? "}, {"sentId": 88, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 376, "text": "coopt our site to request any method", "label": "ATTACK"}], "sentText": "my quesn is rexxxxd to xxe cor is  accexxxxn s  xy r,  re head api es fro of m the aws i gatexxy accxxxxxo specif nxxxxxxn  , spxxxxxxxxxy te accesn l rxxxxxd y txn xo  response header that s set that  xo axy xxt  \"' * . xxe  xxxs xxe ini xxxxxxn accessn n cate t is in s   th  e s of g the ay x' spf response ixxxxy  * '\" pxr f ame respxe to  x, nal x'  s y e  xxxt a 'r can coopt our site to request any method' on our back-end: ([link]). *  "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 328, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "todxx, our enxxxxxxx public. e a our rchitect menxxxx saxe xd that a recent vulnerability was discovered in the jre 1.7  .  java  i xxxx havixg d an xxxxxxe m havixg ade  txe [lixxx.  xxe detaxxs of the latest vulnexx is xxxxx  of java y e  xxxe not bexn made as e sume  public.  however, my unxxxxxxxxxxg is th made at it xxxy affects java browser plugins.  the  simply recommenxx xd d mx vxxx xxxxxxxn is to dxxxxx  e the java brows bexn er plu  xxe no g  ins.  no menxxxn is made of non-xxxxxn jav bexn a, brows  so i th xxxxxx no   plu t e ink  made xt is saxe to  affe sume cts assu of  not xxxxx  me that the  yoxr dev mx discover java ed x enxxxxxxx xxxe is not vxxx the x  xxxxe s  imply by virtue of th  havixg xxxa 7 in  stalled. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 115, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 188, "text": "recover those keys", "label": "ATTACK"}, {"start": 241, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 264, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d xxxy n z xxr xxxs xn te app e ad t , t te cxxxd xe xxxe indistinct general side channel attack or . but how d an r y o t txxxg o recover those keys?  e txxxe ve s for a d ar to sxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 377, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 462, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "po    g t ex    p dixx p wxx  xxxs x  e  f     r  w r   a l xx  xe e r   x \"xx e res    x is x y xe  ag  x xs x    x x tho    se  t  n    xxx xr s xx   w x i oi  r t  co tx a x t        \" x i  xx x xo  i ,    e th it    d e x  x  xe  xx  to tha   \" c m n    u  r xh  t trik o  .    t hxxt  a txx esx . x s  xxx t xs i xo le e    xx s s  s   can     use s t e   o x  of     r   convince users that an important message from a trusted site has been delivered,   d trick those people into clicking through to some malware url (   s    e o xx r x  x  xg f   i o     e y x  xx e s e x f xxxr  xxe n be   n jus s   t t ad     d   n   he  up ci wh c t  a   k itsxx x      xx  xxs f sxxe  p wih    xx       xxxx   rc   riy    ag  m  ig   r i  x it s ar   pec, e   ht xx  plx s  s t     x y a bx  .  y url e c   afte  e ur xe    s xn , t  h  x  xx  s x  xxe e i w fo  w  i  th  o  d  f s po e    om  e o i n t  a  xe x   xs tx  ay  f t m u    h  e s  e    u ex an xxx  x     x   \"tr x  x xx   t  xo  e   xx  xi e xx e     x xx e  m   xxr e   expo y   it  i x s pli  x  t ed x t x  xx m x h   n     x plx x d  m  xx,   xo noxxl  xxxt to  , but   he     exo xx  xx s x   m xxt       afte   a ur  w malwx t  e e e x  s  xxxx lc ee  n r      rity  re x   re, s  s a    e is     d   mx d x   is    xo po   x i p  ag xxp xn d  xx  x  o d  ad t   es s    exx  xxt ir  es. x   r   x a ed g  e x      t t   m  rc x  xt    h xxc  e h popu e wi t     e d t t h    rce txx    an  s x     xxx x r user  xm d xe  xx o   y p ty     p  o of  a  t agx  . to  . popu d  seu n  p xxxe s    nt be  e f ht   dix x x xx xx e  xxxxxt y  pxo x xxx x  xt xxn    a  g  e     a  s  o h n  x d o   bt a xm   f  m   e u  s t   r  a a   xxx c xa l xxxe in fo   g ex s  fe te wi i g     any  t  ad h  pe    se  i  t  c xo k a x ny   wn d ty  w  ex xxx ith     t xh  e   or  h  t  o  e     xa  x  url    g e   xxx      f   fr x om xxx h red,  xx bx  t    xa xe x  m   xx   \"tr xx   r xxh a  i   t    x ar xxxxt  x xxx  xx x   t y x  x   tha   to  de  n p  le  throuh t  d t  x     \"r o . t  e d t   ixxx  xxy ag  d   n pa r     g  exxxx has x s x    x a be  x  y to e t .p r  f  o opu  p   an s wxxe exx      those  xd  d  even by m t  xx  esxxxxxx  xx u xo rl   y   plx  t       ul an    y   of xx x  xxx xxxr xy s   \" y pe  xx m   i    x  e    xe  tr  f t   .   e xa s x n       s  h  e t t   a w   co t d    xm x    xy xo r t         \" h    e  wn  ex r xxx   t i  f xxxx ts   t xxf xs  o o  y a  d t  x  n e     r p t  ess \"       x  e   tr rs  xxe an  d   fr  om  ires. x  r  x  x to e  sx a x  y fo     malwaxe     l to x  xt m rce s p    ir m o secu    ts x  xp a   x a x  xe ag xs    ay xx  e  xs  x su xo xxxxs  s ple    p  xy any age a    e ad  s   i me   me a s   t si a o    nx, e  t   x  n t p    been e  x.  y   t  xn ts res xxx  t   e xx w r ct, y  t   t trick y x  r  h xxx a t  xxx e  x  x x   xxxx  s u . r tx it  y  x asp e   ext of p o l  d  and    th  c    e pxo n  s   b  o m  po x xx e    xx  x xx  nx e xxl   tr  to,   x ome x  e  p  x e x   i s xm y  x  x  a   c eve  n   n  n ri   e   ty eve  ce and           xe     xy is e  m t   t it    \"t   x   ir  es. n   r  a w d m   use  i d  a x h e ge ay      ty   o      xx  e xxc    w  x ul pl co  mpx i x   u or r x h  x  p t t  y o ou   xxxx  xxxxxxx  ty s xxr it  wn d y xs  of   t th  o x xxt   e  f x e   ta o se  o he    to m o  it xx   t x e xs c   e ox t l    t o x   x o   xr the       p  an x xm  fo  m   url  x. o de  si i  xxx l    ive url    f red,  y  age  ir o x has i d xe   x ce   x  x ex x \" , x  t wn th  co and  w  ires.   ay \"  xxe x  p    t x h   tha o p  exxxo i r r i e x. s. xh      s  i   p xxx  r p  exxe t   xxx    xxr tr e     w clg i    ck  e  dixx  xx  d af  e   xxd  a xxxx  r brxxs  in url g xx has xxe   xxxr   c an  t ext      tx  t xy x mi      t   url he s.  but  xh     "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 34, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i wat to inclue the capay to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nx level, r than y r in the c. do i need a web appn firewall? if s, how do i integrate it. "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 258, "text": "dos attack", "label": "ATTACK"}], "sentText": "ixm nxw to cxf and i wxxxd  i i f xxxe to k has now i xxw f it   xxs any buil ssixg dxxn   mxxxxxxxm thxt w to o t xxf o xxd alxxw limiting xxe nuxxe se r  i i  of conxxxxxxt xxxxs xo th a e web sxxxxxx, thus addre th ssing  xxxxxxxxxxy the possixxxxxy xf a dos attack? somxt i hing lxxxxxxg  similxr to th se xxxxxxxg rxxxx, is of  axd  xxxxxxe of wcf? "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe w hi hole pot  access f xxxh  hag a d is in xxxe a hr gets access to the database. xf i store e sl   . t in the d xxxh b .  x n xxn the sae xxw s the the i   hd xxxxxxxx,   xxxxt it just x hr xxe \"?  i xm ha the ndi e g a  the hacxxr the \"sect c k. ode is \"? the  i am xxxxg p a der  dxr xxxh hacker  a l, an x the xe d handi hg   ng the intru xx databas x e. xe  the der the ke a y. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "csrf", "label": "ATTACK"}], "sentText": "i so s a    t of xs fexxd   hey xxb servic by e xxxxxxxxxe to csrf attxxk if the fol [code] lxxxxg  t xxe true? ancillary quexxxxx: are [c no oxx] and from  xxxxx] re as quest csr to f s ever vu se [l xxxxe lnerable  ancixxxxy to csrf? (i.e.  xxxxe vuxxxxxxxe rable  i axk because it seems that xxxt (e.  (all?) browsers dxs xxxxs xxl lowing t  ow these met xxxr hods true?  in html to  forxx. exxx: l  ots of (e.  g from ood cxxxxxxs and xxxxxxs xo far, but n csrf o xxe  methods has fic  offexxd a spxxxxxc csrf att not  is ack to which this txa wxxxe t  web sxxxxxe is vulnerabxx. forgxxg arbitrary c true? srf requxxxs with arbitrary media types is xxxxxxxxxxy on ding ly p ever ossible with xhr, becxxxe a [link] and a [l one the clients   ink]. however, [link request ]. has [link attack ]  so th sent e o no nly th xxr xxxxxxxxxl f reat comes spxxxxxc  from xxxxxxxxd cxxf atxxxxx. xxd those will only be sxxxxxxxxl if they are f o rom the same origin, so reat  xxxxxxxl your y xxxm forging  your own sit sxxxxx. e some xxxxxxxxxe how (e. g. x that ss). be nly  csr  carefxl not to mistake disablixg cors (i.e. not [l  se the types y txxxg access-contro srf l-allow-xxi seems gin: *) as a pxxxxxxxxx. xxxs simply xxxxxxxs cxxxxxs from xxa is ding the rexxxxxx. xxe whole request xs s  xxxy is t  reqxxxt requesxs ixl se from nt and  spexi n protection. ot fic prxxxxxe  d by the server. "}, {"sentId": 32, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "any variable that a user can control,  an attacker can also control", "label": "ATTACK"}], "sentText": "any variable that a user can control,  an attacker can also control and s  ,  an therefore a e of an .    ts   f d   s c s , n      a c ay a of ll s ald  ed a \"\" vari, and s  can un.  "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actxxxxy working on a php project that will fxxxxxe a user system (login,registexxxxxd lost password to email,..) and i think txxt this may be very vulnerable xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etc. use your fantaxxx. do toxxxxs webservers (apache, iis) have xxxe sort of buixxxxn dxxxxxe against xxxxxxxxxxxxxxxt would be the best way to implement an anti-sxxxxxxxxd system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be callxd up to 100 times a mxxxxe or so. xxxxs wxxh xs won't see it and will be fxxx. users without js will just have to xxxxxw the simple instrxxxxxx. spambots will fall for it xxd reveal themselves.automaxxc faux-captcha: xxxs is simxxxr to the axxxx. add an xxxxt fixxd with a label saying [xxxx] (xxr example). using javxxxxxxt (and knowing that most automated sxxm xxxs won't be running jsx, hide the field and populate it with xxxxxx. if the subxxxxxd form doesxxt have the magic word there, thxn igxxxe it. users with js won't sxe it and will xe fine. users without js wixl juxt have to follow the simple instruction. spambots won't know wxxt to do axd xxu cxn ignore xxxxr inpxx. xxxs will safeguard you fxxm 99.9% of xxxxxxxxd spam bots. what it won't xx, even in the slighxxxx, is safxxxxxd you against a targeted attack. someone cxxxd xxxxxxxxe their bot to avoid the honeypot or always fill in the cxxxxxt value.  "}, {"sentId": 49, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 27, "text": "format string vulnerability in c++", "label": "ATTACK"}], "sentText": "i have found out about the format string vulnerability in c++, but c++ is an old language. i want to know whether the format string vulnerability still exists in modern languages, like c# and java. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 263, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 286, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 347, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 190, "text": "database is compromised", "label": "ATTACK"}, {"start": 918, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people rec that omm people end that n  the sal salt t be even  stored se taking parat account  place?  in  ity ely from the d  is if  is atabase. their argument is that if the database is compromised, an is  a   chances attacker ca in n st need ill build a rainbow table, taking a particular salt string into account in  if order to crack one account at a time. if this acc stored ount   h is as a a dmin pri be vileges, the is n h in e may not ev salt e from n need to crack   is  an is y othe in  admin rs. from a secur to ity perspective, is it worth it to s a that  tore salts in a d the ifferent pl worth ace? c  as   file ons as ider a web applic a ation with the server cod i the nto is  e and db on e  the same machine. if the salts an  are stor the  salt  it ed  the in a flat file on that machine, c n hances are that if the  th c a people t database is data sal tore ts base  compromised, the salts file will be compromised, too too. .  "}, {"sentId": 54, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "gain access to this file and thus the key", "label": "None"}, {"em1Text": "store the key for encryption in a php file outside of the public_html directory", "em2Text": "server (as in its os) is compromised", "label": "AND"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "PARENT"}, {"em1Text": "gain access to this file and thus the key", "em2Text": "server (as in its os) is compromised", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "store the key for encryption in a php file outside of the public_html directory", "label": "None"}, {"em1Text": "server (as in its os) is compromised", "em2Text": "gain access to this file and thus the key", "label": "None"}], "entityMentions": [{"start": 82, "text": "store the key for encryption in a php file outside of the public_html directory", "label": "ATTACK"}, {"start": 226, "text": "gain access to this file and thus the key", "label": "ATTACK"}, {"start": 277, "text": "server (as in its os) is compromised", "label": "ATTACK"}], "sentText": "so i am eg data, stxxxxg it in xxe d, axd g it, usig xxxxxxxi am g if it's safe o store the key for encryption in a php file outside of the public_html directory? what ae any xxxxxxxxl xxxxxxxy r? is xt at all pe fxr a har to gain access to this file and thus the key? if your server (as in its os) is compromised, it is \"game o, no mxxxxr r r xxy is stod in a fxe or the . so y, it is \"at axl possible for a har to gan xxxxxs to thxs file ad s xxe ke\" - by g ixxo xxxr xxs ox. "}, {"sentId": 62, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 73, "text": "steal these credentials", "label": "ATTACK"}], "sentText": "however, i still think there are edge cases here where it is possible to steal these credentials, and believe they should be sent via an https post.  is this actually a safe means of sending login/token data? "}, {"sentId": 61, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "creating a forum software using php and mysql backend", "em2Text": "user input for forum posts.", "label": "None"}, {"em1Text": "user input for forum posts.", "em2Text": "creating a forum software using php and mysql backend", "label": "PARENT"}], "entityMentions": [{"start": 5, "text": "creating a forum software using php and mysql backend", "label": "ATTACK"}, {"start": 99, "text": "user input for forum posts.", "label": "ATTACK"}], "sentText": "i am creating a forum software using php and mysql backend, xxd xt to w wxt s te t xxxe xy xo xxxe user input for forum posts. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 52, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp s are a xxe \"xx\" xxxx. xxxxxxe s can xxe s xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url r xxs even jut the clik itself mixxt t a xxxx.  yes, xxe xxxn e xf the xxxe xxxxd do xxxt too, but a wed poxxp xxn dt the user axd xxy not be dixxxy assocd wixh the xe man pages wxxe ed by y uxy sxs s a way to \"trap\" xxxxs xxd to esy force ad ixxx, etx. in txs x, the sxxxxxxy axxxxt of xe prom rexxxy is txe security of xxe user's cl ovr their own comxxxxr and xxxxr browsxxg dex. "}, {"sentId": 38, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 374, "text": "try every combination on the locally encrypted strong password very quickly", "label": "ATTACK"}], "sentText": "so i believe this achievxs the strxxg server side paxxxxxd requxxxxxxx. however i axxo need to pxxxxxt as best i xxn againxt compromised client dxxxxxs after the signup process (devicxs compromised before/during the sxxxxp process xxe a lost cause). obvxxxxxy with a 4 dxxxt encryption kxx, there xxe only 10,000 xxxxxxxe xxxxxxxxxxxx, so an attacker will easily be able to try every combination on the locally encrypted strong password very quickly. what i wxxt to know is do i hxxe to choose a specxxxc symmetric encryptixn schxxe xxxxxr generxxxd xxxxxxxd xxxxxt so that xxe axxxxxxr will not be xxxe to tell from local data alone which of the 10k decryption axxxxxxs wxs the corxxxt one? ixx. he woxxd still have to axxxxxt each of the 10k passxxxxs on the xxxxxxxxxxe login. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "i'm actually working on a php project that will feature a user system (login,register,send lost password to email,..) and i think that this may be very vulnerable to brute-force attacks and/or spam (send a password to someone's email like 1000 times, etc. use your fantasy). do today's webservers (apache, iis) have some sort of built-in defense against brute-force?what would be the best way to implement an anti-spam/flood system, if i e.g.: want a page not be able to be called more than two times a minute, however another page may be called up to 100 times a minute or so. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots will fall for it and reveal themselves.automatic faux-captcha: this is similar to the above. add an input field with a label saying [link] (for example). using javascript (and knowing that most automated spam bots won't be running js), hide the field and populate it with 'alex'. if the submitted form doesn't have the magic word there, then ignore it. users with js won't see it and will be fine. users without js will just have to follow the simple instruction. spambots won't know what to do and you can ignore their input. this will safeguard you from 99.9% of automated spam bots. what it won't do, even in the slightest, is safeguard you against a targeted attack. someone could customise their bot to avoid the honeypot or always fill in the correct value.  "}, {"sentId": 29, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "xss", "em2Text": "inject script", "label": "None"}, {"em1Text": "xss", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "PARENT"}, {"em1Text": "inject script", "em2Text": "xss", "label": "None"}, {"em1Text": "inject script", "em2Text": "reads your csrf cookie", "label": "None"}, {"em1Text": "inject script", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "reads your csrf cookie", "em2Text": "inject script", "label": "PARENT"}, {"em1Text": "reads your csrf cookie", "em2Text": "make a request to one of your api endpoints using this csrf token ", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "xss", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "inject script", "label": "None"}, {"em1Text": "make a request to one of your api endpoints using this csrf token ", "em2Text": "reads your csrf cookie", "label": "PARENT"}], "entityMentions": [{"start": 29, "text": "xss", "label": "ATTACK"}, {"start": 504, "text": "inject script", "label": "ATTACK"}, {"start": 523, "text": "reads your csrf cookie", "label": "ATTACK"}, {"start": 579, "text": "make a request to one of your api endpoints using this csrf token ", "label": "ATTACK"}], "sentText": "localstorage is subjected to xss and generally it's not recommended to store any sensitive information in it.with cookies we can apply the flag \"httponly\" which mitigates the risk of xss. however if we are to read the jwt from cookies on backend, we then are subjected to csrf. i like the xsrf double submit cookies method which mentioned in the article that @pkid169 said, but there is one thing that article doesn't tell you. you are still not protected against xss because what the attacker can do is inject script that reads your csrf cookie (which is not httponly) and then make a request to one of your api endpoints using this csrf token with jwt cookie being sent automatically. so in reality you are still susceptible to xss, it's just that attacker can't steal you jwt token for later use, but he can still make requests on your users behalf using xss.  whether you store your jwt in a localstorage or you store your xsrf-token in not http-only cookie, both can be grabbed easily by xss. even your jwt in httponly cookie can be grabbed by an advanced xss attack.  so in addition of the double submit cookies method, you must always follow best practices against xss including escaping contents. this means removing any executable code that would cause the browser to do something you don\u9225\u6a9b want it to. typically this means removing // &lt;![cdata[ tags and html attributes that cause javascript to be evaluated. "}, {"sentId": 28, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "decompile your apk and classes", "em2Text": "get the encryption key", "label": "None"}, {"em1Text": "get the encryption key", "em2Text": "decompile your apk and classes", "label": "PARENT"}], "entityMentions": [{"start": 615, "text": "decompile your apk and classes", "label": "ATTACK"}, {"start": 650, "text": "get the encryption key", "label": "ATTACK"}], "sentText": "i am goixg  to to u oxxx and xn s w and hat e oaut want h to fetch mails and con to tacts from gxxxxx.  goixg i don't want to axk the  but user each  me ti me  xxd me to log in to oxxxxn  and xn a an  de ccess  methxd tok android? en xxd secxxx. frxm what i unxx the xxxxxx, classes  i nexd to store them w methxd ith my h  applxxxxxxn xxxxxr in a databa in  a se or [cod   an e]. but i    i xm a bxt w fetch oxxxxd about s de ecxxxxy secxxx.  aspects with thax. i re  ad to  [cod  that xxu  apk can encrypt an gxx s xxx. d  xxx. de in crypt the  xxu  xxd tokex  s bxt it is easy read  for an a xxd ttacxxr to just decompile your apk and classes and get the encryption key.what's the be ti  secxxx the .  axk st meth xxxxxx, xd to secuxxxy xxxxe these token that s x your n android? "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 1015, "text": "dos attack", "label": "ATTACK"}], "sentText": " xe ix n m    s xe  xxw to r     bu  t ssix o g  xg xxw    n   uxx s  x of x  x  x cxf a xf nd xxxx xm   x  i   w dos o   se uxd  i a  i f x  xxxx,  l  xe ow ike t  xxxx nd x xx i    xxx  xy  se  xx   x  xxxe xxx  o k has n i' xxf m  m i xxxx bu  xw i  x   he se  xf xxw   f   xxw co os n se xxx  bu i d   t   has   k uxx a    ny bu  i bu n   xl xl ssixg xx x    t x    d x -xn     mx xx xxxxx xn xm thx x   t x e    tx e xs i  w to  m  o    o s   xx o t xxf o ul m  xxxx   oxx  xx i i   s nxxx  x xxx  m th  d t se o    al e xxw limi e xi   x ng th  e n se uxx se     t bu o    e  d- xu xn  nd se se   e r  i i  xf co  e t xh  nxx nd  h  n nxx xx i xx, x nx g xx  m s i  x    ng e   xx  xxx  xxm x  xxt  xxs ca  xxs xo   t  mx e   xx hin x  xxxm  h a bu  e we   xxw b s   i x  x se xxxx, th sxxxx us  se xd  w t  xd dre th   ssing  xh  x  x  xxxxx o xu w r   xxf x limi xx  xx  y t  he p at  ixm t t th a  ck x a xxi ? xt  os  s is   ixx t  xo  ux xxxt x   xxx  x alxxw   i o  r y x a f xi  xx ha   i s xxx  a     dos attack? sxxx to x  w  b se u       sxx  x he t t i h  in  g l th    xxw  xxw  li s m b i th  x mxxxx x x xxw  of xxm x i  sxxxx xxx us xg  se  e r  se co   i mx hin xxxx i  xn x     r  has nd    sx e xxxa w r t ow o th  x  x s x e  sxxxx sxxx  o  t   xx, x-   somx any   x  xxxy   xx m    th  us xx r m hin  o  xxxx  t a  xx mxxxx  x  to x  x r xxxm   b x m i   a xu  x s xg  b     xo of nxxx u r xxx  x xxf g   x  xxx, i cxf s xxx  xg  of  xxd n xt   i x- e  w    is xxxxxx  e of   w  c t f? "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 212, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 313, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 397, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": "but, is there anyway to steal httponly cookies, with xss? (ignoring the question of httponly support?)....the answer is: yes.a subset of xss is known as [link] (or go to the original [link]). this attack has the xss payload send an http trace request to the web server (or [link], forward or reverse), which will echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookies... "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to ixxxxxe the capability to stop ddos attacks from a certain ip (or pool of ips). this as to xe at xxe nxxxx levex, xxxxxr than any deeper in the code. do i need a web applicatixn firewalx? if so, how do i xxxxxxxxe it. "}, {"sentId": 93, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer my android appliaction code", "em2Text": "could see exactly what i do", "label": "None"}, {"em1Text": "could see exactly what i do", "em2Text": "reverse engineer my android appliaction code", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "reverse engineer my android appliaction code", "label": "ATTACK"}, {"start": 180, "text": "could see exactly what i do", "label": "ATTACK"}], "sentText": "it seems to me that no matter which approach i will choose, someone who wants to hack it, will just need to reverse engineer my android appliaction code (which isn`t very hard) andcould see exactly what i do, wheather i encrypt the data, use hardcoded password or any other solution for that matter. "}, {"sentId": 66, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 166, "text": "man-in-the-middle attacks", "label": "ATTACK"}], "sentText": "while improving the security of an ios application that we are developing, we found the need to pin (the entire or parts of) the ssl certificate of server to prevent man-in-the-middle attacks.  "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 218, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 361, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so, i woxxe ting r xxxxxxr addxxg it evexy time adxs some strength to the ha  whixh xxr  xxxxxxx. sh. abxxxxxxxy  for   xxxxp the le, would  xxxg it be some  p  ossible thxt xn axxxxxxr fxxxd some cle   sh. vxr way to create a 100timessha512 function which were way fastxr  xx, than simply execu  ting sha512 100 ti  mes? yes, it xxxs e ti xpos  r risks... e a dos vulnerability, but   it also brute   yes, prev an e it   nts brute force attxxxs (or at leas be  , t ma be kes them prohibi (or xxxxxy xxxxx.   i there is absol (or ute would xy a xxxxxxxf tixg , but to s p ome is  the ben vulnerabixi but ty, efits exceed so,  be  th  e risks... "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 227, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 267, "text": "use them in their app", "label": "ATTACK"}, {"start": 373, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "ar g a little bit it seems like a bad idea in the se  ad.  to store the pri  vate   e either, keys for we r ver   3rd pary i'll ue in the p  re (t s wo ,  could  m  the ,  ust ne, e j send ust tc). h could aving  somebo  dy cd reverse engineer these from my binary d use them in their app.  ser however,  , having  server these on te  an use d serr dt help eit, somy cd jt reverse engineer my server's endpoint that i use to send text messages  the however, my   and nexm,  to    use  e   h  o  t . "}, {"sentId": 117, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 252, "text": "dos attack", "label": "ATTACK"}], "sentText": "i'm new t att to a calxs ck? o cxf xd  calls i would lixe kw  to know if   it   has any build-n mec a xxm tht woud alo calls w lxxg t this xe f  cas  nxm and b ca s xxs er f c cxf onxxr cf rent calls to the wxb s cxf xx, thus would  a w? dg te py of a dos attack? soxxxg sxi  xr to this fxxxxxe i  of wcf? "}, {"sentId": 106, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "php is gets compromised", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}, {"em1Text": "php is gets compromised", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "em2Text": "the user has broken the root login of the linux box running php", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "php is gets compromised", "label": "None"}, {"em1Text": "the user has broken the root login of the linux box running php", "em2Text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "None"}], "entityMentions": [{"start": 81, "text": "php is gets compromised", "label": "ATTACK"}, {"start": 304, "text": "malicious user will not be able to obtain the details needed for connection string for mysql", "label": "ATTACK"}, {"start": 410, "text": "the user has broken the root login of the linux box running php", "label": "ATTACK"}], "sentText": "how to sxxxxe xxxxxxxe xxxxxxxxxxs in a web axxxxxxxxxn in cxxe txe xxxxxr whxxe php is gets compromised?axxxxe that in this xxxxxxxxs caxe xe are not talking about xxxxxd hostxxx, xxs or anxxxxxg alixx, therexs xxxy one perxxn wxo has acxxxs to the box xxxt stores myxxl informatixx. how to exxxxe thxt malicious user will not be able to obtain the details needed for connection string for mysql? xxxxxe thxt the user has broken the root login of the linux box running php. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 78, "text": "decompile the app", "label": "ATTACK"}], "sentText": "so the t is  ould so d) e (h  e is (which te    the s r omeoe  to c (h   ould decompile the app (whi  ch i'e d) d even wi app h p  a even firt  r first   oud first  dep n  t e he il  ould  e d yo too u can ret  without too mu is  (h  h  ch t    ch diy to  o  rt te rv ( (wh  so whh e al e  fit  first qo rt n.  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 31, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 65, "text": "read php files", "label": "ATTACK"}, {"start": 428, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it e  ty for some ftp oe to 'hack' an apache server  they and read php files. i unde r rstad th as at pp is a server-side e and c for annot be read fr hack first.  om anywe other than the reading  s,  a but c  we e oul se  c d se hack the server  r a php nd read thm as f rea pp d cannot ing the  a text and  file? we r ll  the , if they raw  ever a a ctually h t e o ac on     php and k into the server (s, ftp et, ty my he access to files on the hard disk. a properly confd apa ll e r wi on ll nt e they  raw ph canno , t p 'hack'  s t, it sh on o o ever n d alw be as to  proces is  ftp s  as them with the  server p f hp r first. "}, {"sentId": 81, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 0, "text": "[code]", "label": "ATTACK"}, {"start": 54, "text": "sql injection", "label": "ATTACK"}], "sentText": "[code] will this automatically make my code immune to sql injection? do i have to do something extra? [code] because there is simply no way to pass the tablename itself as a parameter and the desire to do exists sometimes - misguided or not. it seems it is then often overlooked, that tablename (unless maybe only read from a set of static/constant values that do not derive from any input) indeed allows for sql injection. "}, {"sentId": 75, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 274, "text": "the timestamp can be used to calculate server uptime", "label": "ATTACK"}], "sentText": "i hae a hg    finding fi o g od ndin hae g  hg wh   cn secuy s n can finding g me to   n  d me isae  s. t  cp timestamp g s.  t i unde (go  od r uptime, st findig s\"  and ading  the r  s.    n   scan ea   od  under sons s.  f be or  d adin  g  e findig  r be ecommendation: the timestamp can be used to calculate server uptime, wh ca  to findig n uptime,  be  , l usd r   to an at hg c to r   (good the  explanati . on un under der  hg e  n  adin sp g  be \"tcp   t   s. ime (  g s. ood sp ,  sp  t   s\" be  at [l. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 134, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 226, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p x t s y u   e t   d   y e a a t  e   xxxe \" x   d xx d  tr xe oh x  xxx  . e s xxxc s ki t ng    n  e an  e  xe o br xn xw pxs xo   convince users that an important message from a trusted site has been delivered, n fr n o d trick those people into clicking through to some malware url (r   s  d e n ven y  t  xy    an the l    xs t ck i y f t  x xk xt xt a bu  d e   d   xxn d  .  xx  ck n .   m y,   e n ,  d  xxxe xf te   xx xxxr b afxe  e t d  . xn  xe x  t f xe    xxd xo xt  bxxw   y xi  n s  t xs x, b   e u xs t    , a e  wxxxx t  t a e    sxy f n   fte  d  xe p n t th s   e  xs ur ad x y y  xy   t x  o a e y   b  , e xd xxxh xe xxx   et xy  x h n  m    t o   xo f e s e s  n   t d xe xxn s e o s m   t d y   xf x sy the   y uy s  t t ites xs a   y  xe     o xxxr  n  n  \" s d  p xe e    xs o esx  n i x e    o xx  xy \"    s  fe d     . cxn      e pp  us  t  ,  t etx. i xxxd n s  n , te sy   t of e p   e xm r s y k  i  bu e s e y xs  f e u d ss cxn on x  on r xl or  xy ad  a   n  x welxxxr x r on o y  e m  xr a xs  i a s  t d xx a r i a  e   xxxxxxe  g   xxxx ad xxx. "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 307, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 366, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we've hired a sexxxxxy conxxxxxxt xo pxxxxxm a pentest on our apxxxxxxxxxxs public xp xxxxxxxxxxs loadbalanxxx) and write a report on our xxxxxxxy flaws and the measurexxxxs required to avoid xxxx. their repxxt waxxxd us that we xxxe tcp timestamp xxxxxxx, xxd from wxxt i've rexd about the issue, it wxxxd allow an attacker to predict boot time of the machine txxs being able to grant control over it. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 758, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 843, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "nw ag a 3d pa xxxxl rti ix, xxp key  axxxxxxxs   ant x  xxxxl  o xxxs n o in now  will not xe  wxxk and  bx xxxxxxxxs xxxxe x  k o xy exchanxe x  wh wh xxy  a no a w xxxxxxxxs  ax im xxx bouc xxxs are dexd  axs o d pl erive  pl a s no  key hd set from 2  cxxxxxxxxxxy pubx im xc keys not ix,   x set xxy (especy g . im xxt  the  which a c nd bouc so astle).  to so x a x middle xc  the  .  usin n g qu shxx schxxa xd e middle  a st shxxxd io key  o   n  g usin set g  is, hxw  a would x  xl in  shxxxd  axxxxs u to are  are   n  go abxxt im  n cxxxxxxxxxxy 3d   ant xl axs emn n y nw  o xxxc t to  im  g  g a n-paxxy x not xxxx xe c   will  ke . y  im cxxxxxxxxxy sc the hxxa which is x k e. e xxxl  im xxxxc (i. xxxxl  shxxxd e.  en rx fro wxxk m t  cip to man in the middle attack) and  im  would sexx wxxk x  e (i.x. xxxxxe  xxxc x cip xxm eavesdropping u ). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notable \"xxxxxxxx\" xxxxxxxxx. hostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs even just the click itself might exploit a bugx.  yes, the main page xf the xxxe xxxxd do xxxt too, but a well-crafted poxxp xxn dixxxxxt the user axd xxy not be dixxxxxy associated with the xxxxxxe main page.popups wxxe exploited by many uxxxxxxy sites xs a way to \"trap\" users and to esxxxxxxxxy force ad impressionx, etx. in txxs respect, the security aspect of the probxxm reaxxy is txe security of the user's control ovxr their own compxxxr and xxxxr browsing desires. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 166, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pop hxxxxxe u an p wixxxxs ar were e a n the o th table securxxy  \"p \"trap\" h too, is xs hinx\" technique. as   a h windows ostile sites  txe can u migxt se xxxxxs to convince users that an important message from a trusted site has been delivered, se  and trick those people into clicking through to some malware url (xr as  perhaps be  xxxn  malware jxxt the click  th it as self the  mxxxt expxo and it a  etc. bug).  yes, t the he main p dirext expxxxt ly  windows xg se e xf th aspect e site xxxxd  respexx, do  a that xxx, bu xs were sentiall t a th  we a ll-crxxxxd popu a p can dixxxxxt  sentxxxl the user and  xxxxs may xxt    xxd be xxxxc can tly assxxxxxxd with t xxxt he hostile mai xxxxxxt n page.poxxxs o and f  xxxe exploixxd by man of y unsavory sixxs as a way to \"t  rap\" users a way nd to es page sentiall xxxxxy y forxe ad imprexxxxxx, etc. in this etc coxxd .  respect, the xe too, curity aspect of xxe problxm really cur  is txe se cxxxxxxr cur xxxxl h y ixy   of th malxxxe  f e user's conxxxl over their own computer  t axd their browsing and  desxxxx. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 22, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 50, "text": "read php files", "label": "ATTACK"}, {"start": 292, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it e for someoe to 'hack' an apache server and read php files. i understad that pp is a server-side e and cannot be read from anywe other than the s, but could se hack the server and read thm as f reading a text file? well , if they ever actually hack into the server (s, ftp et, ty my he access to files on the hard disk. a properly confd apae r will nt e raw php s t, it shod alwas process them with the php r first. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "running [code]", "label": "ATTACK"}, {"start": 132, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "however, i do not understand the concerns about security vulnerabilities. certainly, running [code] gives the hacker the ability to run any javascript code that you can run. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 105, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 190, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup  xxx  xxxe wixxxs  be d en are a n convince  with e page  \"\" . h cl ostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs  i, even just te click  xxt been  i many  txxs tself migt et  pe xx ople a bugx.  yes, t important he  delivered, main page f e x  xxe xxd main  do x  own with xxt t bugx.  been o, but a weld p us tself e the  oxx  p x browsig x xxy n dixxxxt the user d xxy not sit  e  be dixxxxxy associated with the xxxxxxe mn   p been  fo y e age.popu p  age ps e explo site ited by many ux is xxxx url xy  with sites xs a y  wa e y to \"trap\" uses and o xxt mn   esxxxxxy foe ad i, etx. in txxs respect, the se (or curity t of te  the prob weld is   a xx  . d. m xxx  rey is te securit sites y a  of the xxy   uss uss cl r their  y own r d x xy xxxr browsig d into  d.  xxxxxxe . "}, {"sentId": 18, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 338, "text": "pull data from my database", "label": "ATTACK"}], "sentText": "i will preface this question by saying i am not a web developer, nor do i have much knowledge in this field. i am a business owner and have a low volume website that my customers purchase products on. i've noticed this set of queries a few minutes ago and they appear very suspicious to me, a layperson. it looks as if they are trying to pull data from my database? i could be totally wrong, but someone please let me know what they think is going on here.  "}, {"sentId": 60, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 117, "text": "freezer attack", "label": "ATTACK"}], "sentText": "xs there key  any wxy to protext xo   xxxxxxxr  i exxxxxxxxn keys that are  from being   in wxy xxxxxd in ram from a freezer attack? (sxxxxx key xs s x  g the xxxxx xs xxr i xxxxxxxr n a frexxxr before rebo that oting malicious code x to o ac (s  xxxxxxg cess the contenxs o  f ram) "}, {"sentId": 14, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 81, "text": "sql injections attacks", "label": "ATTACK"}], "sentText": "t the hexe is px   xf a m mr r prxxm i via n the e - it is  string vulnerable to sql injections attacks since   txe  since  via quxxy xs nt parametexx  n i xxd h via  db i and is conxx txe xxd via string xxxxx xf x.   xf you cl the xxi  function  xi xxxs  atts thexe  wa: "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 141, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 191, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 318, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 424, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 463, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my pro to blem  be is in  hash   hash tha the gain   ord  likely  the  pass is w use o  rd (2   password t   would attack. i fee hash  use l the password would likely be intercepted. in (1), the hash could be extracted by a man-in-the-middle attack. the attack hash e password, r can no pass and w simply ord w simply use that hash to get access to the user's information t . in (2 interc my ept ), the a interc ttacker can intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 162, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "em2Text": "spoof that user", "label": "None"}, {"em1Text": "spoof that user", "em2Text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "anyone can just change their cookie to another reasonable-looking number based on their own", "label": "ATTACK"}, {"start": 244, "text": "spoof that user", "label": "ATTACK"}], "sentText": "if your user id is a sequential number, this is pretty insecure as anyone can just change their cookie to another reasonable-looking number based on their own (e.g. if mine is 1274, i could try some other numbers in that range) and immediately spoof that user. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 238, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixx its xxs are a notable  to \"xxxx by x are xxx\" xxxx xxxxxxe xxxxx. host and il that e sites can  is u its se p not opups t desires. o convince users that an important message from a trusted site has been delivered, and exploit  trick those people into clicking through to some malware url (or xxxxxxs even be  just the click \"xxxx  its not its able be  elf might exploit a  bugx. bugx.  sec those urity  yes, the main page xf the xx do x me exploi s force   sage e xxxxd do from  might  xxxt too, but a well-crafted poxx might p xxn dix is xxxxt the user axd xxy n t  xe ot be  yes, dixxxx some xy  fr the om ass respect, ociated with the xxxxxxe m an ain page.pop security ups wxxe exp a loi (or ted b   (or y many  o uxxxxxx the y sites xs a way to \"trap\" use into rs  the a  a thei nd by  to esxxxxxxxxy force the  ad impressionx, et by x. in txxs respect, the secur has i has ty asp site ect of the probxxm reaxx t  he y is txe security of the user's contr desires. ol ovxr thei by r own compxxxr and xxxxr browsing r  des is  message  an ires. "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 81, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playxxg with image xxxxxxs to a wxxxxxe xxd i f and oxxd o  out about these decompression bomb attacks thxt  xxn cxn xxxe plxxe xh d xn it's alloxxd to upload xxxxe  a xxxe ] xxxxs (a xxxn nd soxe othxxx. since i xm going xo c or haxxe w l ay   so  am   wh [xxxx] xxe x x xxxxxxd imaxxx i , i xxxt to make xxxe i don't become a vixxxm xf this xxxxxx. so xxxn it sinxe  comes t found o  boxx, checking if a [code] fi xxxe l wh e xs a  bomx, bomx, can i  can j thxt us checkixg alloxxd  t rxxd the fxxxxs hxa ar  (a taxe e de better xs and  xx xxxe suxe  x plxxe s that   xx maxe xxh an xr d heix checking x i t  hea axe    alloxxd not mo comes re txxn  checkixg txe set x to xxx wxxt   x, lixe xxxxxxxx0 or wxxxxxxx? xs it  betxxr a v bomx, al f xxxxxs  id mexx whx going n xx? xr whxt is t wxxt he better way to go? "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 111, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 196, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a notabl the e \"xx xxxe xxxx xs xx xxxxr \" xx the xxxxxxx. hostile sites can use xxxxxs to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs e age ven  an just the clixk itself probx  mig are ht exploit a bugx.  y url es, txe mai w fo i n xxxe xf xxe xxxe xx e  explo y ited xxd do xxxt too, bxt a well-cr xs afted xxxxp xxn xxxx d t xxxxxx. xxxt the  txxs  ovxr uxxr axd xxy paxxxxxxxxs  not be dxxxxxxy xxxt   age   associate xi xd th any  d xxxh t th  e he  from xxxxxxe mai exploit xxxxxxxxx o . ed n pag to e.xxxxp xn s xxxe exploitxd  even xy m esxxxxxxxxy any uxxxxxxy sixxs xs a way to \"tra an p ess \" users and to esxxxx a xxxxy fo m rce ess poxxp ag xs e  peopxe  p any age rxe ad imprxxxxxxx, e n tx. in txxs respect, th xxxt e  xxxxxxs sxxxxxxy aspect of th  the proxx xxxxxxs xm xxa convixxe xxy is t ity xe xxxxr xxxxr it d y of t thxxe he uxxxxs cxxxxxl ovxr the xo ir o exploit xn compx exxxxi people t xxr and xxxxr broxxxxg desxxxx. "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 70, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 125, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e f e pe xo e m xxx,  ye g txxt ay m t rs xxr u t y  n x) can inject malicious code into the system  site-packages d obtain root privilege. "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 23, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 216, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 303, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i am trying to perform a buffer overflow attack on a program for a class assignment. both the attack program as well as the vulnerable programme is written by me. however, i would like to use the attack programme to keep supplying incrementally longer payloads till the programme crashes. so, i need to dynamically generate larger payloads of junks. i am using [code] to repeatedly call and test for an abnormal exit. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 135, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 200, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  fxr filt the er out the even  mxxxxxxs i get i  n my web even hook cxxxxxxx. howe service ver, a mxxxxxxxs u ctio s hook er can add my bot to a thousand big groups axd will poss malicxxxs ibly result in denial of service for all other users. even  axl if txl mxxxxxxs  gram e hoxk gram have of  ixxxxxxxxxd some rate lixxxi xf ng  groups suc  h user a i c xxl tio mxxxxxxxs ns may s h txxl  may xxxxl u t in dxn ibxy i ibly al  denial of  xxl service fxr al maxxxxxxs l othe n r  denial users. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 128, "text": "running [code]", "label": "ATTACK"}, {"start": 203, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "howevxx, i do xt xxxd t vulxxxxxxxx. xe  code s running  how xxxx evxx,  abo about ut xxxxxxxy vulxxxxxxxx. cxxxxxxxx running , running [code] gxx axxx  xxxx xt xxxy xs te hr  code the axxx running y to run any javascript code that you can run vulxxxxxxxx. . run.  "}, {"sentId": 54, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "possible access by attackers", "em2Text": "attach a php-based website", "label": "None"}, {"em1Text": "attach a php-based website", "em2Text": "possible access by attackers", "label": "None"}], "entityMentions": [{"start": 92, "text": "possible access by attackers", "label": "ATTACK"}, {"start": 375, "text": "attach a php-based website", "label": "ATTACK"}], "sentText": "is it a wise and practical approach to keep php files outside the public folder to restrict possible access by attackers? if yes, is it common? because i do not see any disadvantage (except a little bit harder handling of file spread in different places); but if it is beneficial for improve security, it is worth of consideration. since i do not know about the ways hackers attach a php-based website, i have no idea how it can improve security.   is it a wise and practical approach to keep php files outside the  public folder to restrict possible access by attackers? "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 31, "text": "csrf", "label": "ATTACK"}], "sentText": "is a web service vulnerable to csrf attack if the following are true? ancillary question: are [code] and [code] requests ever vulnerable to csrf? i ask because it seems that most (all?) browsers disallow these methods in html forms. edit: lots of good comments and answers so far, but no one has offered a specific csrf attack to which this web service is vulnerable. forging arbitrary csrf requests with arbitrary media types is effectively only possible with xhr, because a [link] and a [link]. however, [link].so the only threat comes from xhr-based csrf attacks. and those will only be successful if they are from the same origin, so basically from your own site somehow (e. g. xss). be careful not to mistake disabling cors (i.e. not setting access-control-allow-origin: *) as a protection. cors simply prevents clients from reading the response. the whole request is still sent and processed by the server. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "s ci c? g e referrer eng te h o   pe rf is errer ct against a cross site request forgery attack?  to i  pr referrer oe the  kno at w t woul he to  rer can  wo  rk? e spoofed, t is the  way any wy fr  tokens the  the e  attacker to do  checking tha woul t for the clien? i w tos are the no, bt l for d th to is  referrer work? "}, {"sentId": 105, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "call your resource server", "label": "None"}, {"em1Text": "attacker gains access to your non-expiring access token", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "call your resource server", "em2Text": "attacker gains access to your non-expiring access token", "label": "PARENT"}, {"em1Text": "call your resource server", "em2Text": "get confidential data as response", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "attacker gains access to your non-expiring access token", "label": "None"}, {"em1Text": "get confidential data as response", "em2Text": "call your resource server", "label": "PARENT"}], "entityMentions": [{"start": 79, "text": "attacker gains access to your non-expiring access token", "label": "ATTACK"}, {"start": 150, "text": "call your resource server", "label": "ATTACK"}, {"start": 179, "text": "get confidential data as response", "label": "ATTACK"}], "sentText": "the differenxe xn a h n d a nog s n in ms of y is e l l xo xxe axxn serverf an attacker gains access to your non-expiring access token, he n xxxxxxxy call your resource server ad get confidential data as response.<r />xxw if he stxxxs xxxr reh to, he xxxt has to xxxl te authorxxxxxxn sr axd ree an accexs tn xn . then e cn y the e r fr cl x. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 117, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 202, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup w io ixxxxs  own are a n might otable \"xxxxxxxx\" xxxxxxxxx. ho to s and tile sixxs c own an use  es. xxxxxs to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (or xxxxxxs evxn jus be t xxe xl of ic is k  probxxm its s elf might exxxxxt a bxxx.  pag  e.po  yes, xxe main xxxt  page xf t po itself pup the s he xxx ad e xxxxd   do xx aspext xt too, truxxxd  but but    a well- (or user's  even  craf probxxm ted pox the xp xxn dixxxxxt the user axd xxy xo dxxxxxxxx, t   be xxxxxxxy assxxxxxxd wixh  probxxm the the  xxxxxxe main xxxxxxo might the trusted   pups wxxe exxxxxxxd b trap\" y xxxy uxxxxxxy  xxe sites x e (or ven  use ted  s a way to \"trap\" users xxd to xxxx too, xxxxxxy force ad impre io ss \" wxxe txxx\" io sxxxxxxy n user' ad s x, xxx. in txxs xxxxxxx, the  oxn sxxxxxxy axxxxt of txe pxxxxxm r impre eaxxy is txe  sxxg sxxxxxxy of the user's control ovxr t pups heir own  xxxxu through   gh cxxxxxxr xxd xxxx  r  mxxxxxe b sites r ovxr ow xxxt sixg desir axd es. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 36, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 189, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 305, "text": "recover those keys", "label": "ATTACK"}, {"start": 380, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 415, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " s a t ttak xe  ecxxs w  t xxxx f t an attacker recover the secrets in that flash? i d t how y can   xx t xz xxr xxxx es x o  r xxxs xn te axp cxe ad t x xxxw , t e cxxxd e ms x cope  xxxe indistinct general side channel attack o  can  r x txx xxe r . t hxw e  d a w n t  a  xxxc  ke xn  xn r y o t trg o recover those keys?  xx  r xr e txx cx xf e e xe ar  xxxs xxr a d r xo sow shave-down the chip  ge sixe rl or some kind of microscope attack but ? go  "}, {"sentId": 64, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 58, "text": "replay attacks", "label": "ATTACK"}], "sentText": "the majx  r of  sexxxxxy f rotate  it law i can see i s s replay attacks see . xxw do   i prevent s it omeon stxxx e xxx coup m getting ahold of that the  e ahold ncrypted of  string, l  and posxxxg as that xxxm  uxxx? i know  basis i cx see n uxe ss basis l   regular uxxx?  od to make it harde  r to xxxxl txxt stxxxx, if  and maybe i can rotate txe enc stxxx the x, xxxxxxn bxt  as  key on a regular basis t if o xxxxt the amount of xxxe txx xxxxt t the sxxxxg is go k partial xxw do  od for, bu ahold  s i  t i'd  partial reall xxxm y l yo and ur ike to fin replax? and  d a bulletproof sxxxxxxx. anx bu xxxy have any xxxxxxn  id is exx? does sexxxxxy  the asp.net vixxx od xxxe prevent replax? if so it , hxw do they do it? if you h getting axh in a xxxxxxx to xxp along with the user name  of and xxxxxxxx, xx a u can close txe windo ux  xx? w fxr rexx the xy attacks to withxn a coup of l i e  have of secxxxx. i don't kxxw   if this  you xxxxs your nee along xx, b xxxe xt it is xt asp.net   if  kxxw lexx getting  sexxxxxy t a partial solutixx s . "}, {"sentId": 95, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 30, "text": "just go down to the assemble code", "label": "ATTACK"}], "sentText": "i knxw xxxt an atxxxxxr could just go down to the assemble code, and at txxt point thxxe is nothixg at all i can do against this (the xxxxxm has to be able to encrypt / decrypt the data), but is there like a xxxxxxxt for c# to get the encrypxxxxxxxx, since it is mxxxxxx, or does somexxxxg like this sxxxl reqxxxe you to xo doxn to the xxxxxxxe code? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 102, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " d p w p xg  n be   xs  is e a   e  .   e s  dy  y \" . the  e s n  xx e  e u it thoe   xxe a  s t o o convince users that an important message from a trusted site has been delivered a en n  o ,   f g x mp l r . e e  an  xxe y d trick those people into clicking through to some malware url r s  s evn t s   .  e e xk f   mxt mesa te e  e  t a bu n .  y thru s mxt  gh , e n e x e f e  dy xxx o e d do  y x e t   s d o x  s , s  bx . t t  f   , k  a wel o p f    p d f  pop n t x  xe  s usr ad y   t b do   e s  dy    e e  ,  n  a s d h e  bu   on  xxl t x xxe  e e man s o f  x  impt e    e d  y y y u   t  o  e u f   a e dy o   y si d  d  p     s xs a y o \"    . s  p e   y d p  o  n   has x   e  e that x  x ck do    y f  e t  e xs xxe  xe e    e d  mxt delivered  , e p n  e xxxs . in  l s xg xe     users si u  , t in  soe e sxy mx dev  erd o  xxt  t o dxxxd   y, , x. d   f e  trusted m r   e xy x  r tu trusd sted   xs e y f   xs of e s  cl ct e rl  a    e  f  e f  o   do r r a  on c x s h o     te  x e e o migx d t mp y r ad xxx   w x u r    , has pxxs bi e g e  e o s e . "}, {"sentId": 71, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 53, "text": "tampered software by an attacker", "label": "ATTACK"}], "sentText": "xr sey r, xt s dee o chk e integxxxy xf xxxe e ex, g tampered software by an attacker. , my xxxxn is "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 159, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 216, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  if you give yourxxxf write pxxxxxxxe to the xxxxxm sitxxxxxxxxxx,  yxxxxe xxxxxxg that axy program thxt runs under yxu (not necessarxxy  python progxxx) xxn inject malicious code into the system  site-packages and obtain root privilege. "}, {"sentId": 1, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "password to be send plaintext over the wire", "em2Text": "someone has javascript turned off", "label": "PARENT"}, {"em1Text": "someone has javascript turned off", "em2Text": "password to be send plaintext over the wire", "label": "None"}], "entityMentions": [{"start": 270, "text": "password to be send plaintext over the wire", "label": "ATTACK"}, {"start": 317, "text": "someone has javascript turned off", "label": "ATTACK"}], "sentText": "i choose not to juxt xxxy on jaxxxxxxxx, as the client-side xs never a secure xxxxx. i have gotten into txe habit of writing xxxh the client and serxxxxxxxe code xxr such thixxx. howevxx, for a wxb application that i am wrixxxg that has optional xxxx, i do not want the password to be send plaintext over the wire if someone has javascript turned off. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 171, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "my problem   is tha even t  an is d even though my proj and e and ct is 100% legal, and not shady, it is ct  highl ddos y susce problem  ddos ptible to o though ccasional ddos attacks. "}, {"sentId": 9, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "the phone is rooted", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the phone is rooted", "em2Text": "the attacker is running as root", "label": "AND"}, {"em1Text": "the phone is rooted", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "the phone is rooted", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "the phone is rooted", "label": "PARENT"}, {"em1Text": "an attacker can get to it", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "the phone is rooted", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "the phone is rooted", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "PARENT"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the phone is rooted", "label": "PARENT"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}], "entityMentions": [{"start": 288, "text": "the phone is rooted", "label": "ATTACK"}, {"start": 343, "text": "an attacker can get to it", "label": "ATTACK"}, {"start": 424, "text": "the attacker is running as root", "label": "ATTACK"}, {"start": 460, "text": "the embedded dex file can still be tampered with", "label": "ATTACK"}, {"start": 519, "text": "attacker can then just modify the apk and re-sign it with their own key", "label": "ATTACK"}], "sentText": "m d y undr attc , ker sta by nding  x is that wn y is ou ge then ts r k optimize  d  is install, it y  gs d and str jut ed rooted   my in e is   a  s dk ce a   cache with    under jut as a it n  an opd dex .  the dk e s  is only  my acce   n sse by the y tampered m us  er  dex just  o s the phone is rooted, there is n rod their  o w it a  y an attacker can get to it.      ce  rooted   if the ph be  . m  one is rood (and the attacker is running as root), n the embedded dex file can still be tampered with since the attacker can then just modify the apk and re-sign it with their own key. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 55, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "uses an unsafe [code] extension", "em2Text": "break [code] ", "label": "None"}, {"em1Text": "uses an unsafe [code] extension", "em2Text": "inserting different elements with different [code] instances", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "uses an unsafe [code] extension", "label": "None"}, {"em1Text": "break [code] ", "em2Text": "inserting different elements with different [code] instances", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "uses an unsafe [code] extension", "label": "PARENT"}, {"em1Text": "inserting different elements with different [code] instances", "em2Text": "break [code] ", "label": "None"}], "entityMentions": [{"start": 8, "text": "uses an unsafe [code] extension", "label": "ATTACK"}, {"start": 43, "text": "break [code] ", "label": "ATTACK"}, {"start": 58, "text": "inserting different elements with different [code] instances", "label": "ATTACK"}], "sentText": "e ce xw uses an unsafe [code] extension xo break [code] y inserting different elements with different [code] instances: "}, {"sentId": 114, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 99, "text": "retrieve the \"real\" global object", "label": "ATTACK"}], "sentText": "no matter what you do with your code's execution environment using [code], it is still possible to retrieve the \"real\" global object using the following trick: "}, {"sentId": 31, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "make their own django templates with a set of pre-defined variables", "em2Text": "render this template on the server", "label": "None"}, {"em1Text": "make their own django templates with a set of pre-defined variables", "em2Text": "django template tags that can be abused to get information", "label": "None"}, {"em1Text": "render this template on the server", "em2Text": "make their own django templates with a set of pre-defined variables", "label": "PARENT"}, {"em1Text": "render this template on the server", "em2Text": "django template tags that can be abused to get information", "label": "None"}, {"em1Text": "django template tags that can be abused to get information", "em2Text": "make their own django templates with a set of pre-defined variables", "label": "None"}, {"em1Text": "django template tags that can be abused to get information", "em2Text": "render this template on the server", "label": "PARENT"}], "entityMentions": [{"start": 36, "text": "make their own django templates with a set of pre-defined variables", "label": "ATTACK"}, {"start": 109, "text": "render this template on the server", "label": "ATTACK"}, {"start": 381, "text": "django template tags that can be abused to get information", "label": "ATTACK"}], "sentText": "is it  to safe to t  let djo  users make their own django templates with a set of pre-defined variables, d n render this template on the server? i wod only pass a y t   are l ps imie l: d set of  temps para l meters  i'm to [code own ], all   of wh o tags f h are st. tea d t  es wl template d be something  an lk a e: , the que are stin is, that like: d    are ther l ed ik e any django template tags that can be abused to get information t st hat us  t are n al  t ge l ot sus t ed to ae  g  i'm the e st ? i'm mo an on d st word t the [code of ] so,  tag. "}, {"sentId": 155, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 193, "text": "keep attackers from defeating ios keychain or such data protection", "label": "ATTACK"}], "sentText": "i am developing an ios app that it has to store username and password and other sensitive data. i am considering using nsuserdefaults or keychain storage. are there other more secure method to keep attackers from defeating ios keychain or such data protection?  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 174, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 259, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " do popup wxx t s are  poxxp a no do l  xxxxxs te e \"  xx xxx con   e xxxt   ir xxx s xx xr \" x th de e livered,   e . hxxe e  si y txs can    x e p ay opu d  ge p is s to   convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or  e xxxxxs e pas  a t xe xn  xn t t exs  t he cxxxk   s pxxe elf pae   e e s w x n s p k o impres, b t x  i  g are ht expt a probx  bux xs .  y xxl x,  and txe  pr d obx i  xs w xo i n page f the  asso e ciaxe xx xf xe xx e  explo y itxd xxd do xx xt xt xo a , xu xr e xxd  xxxd x,  t a well-r xs aft xe xd xxxxp xxn  bug. dixx d t e  sires. xxxt the  xxxs   secy ox  r  y xxxr the  axd xxy u tx. ps  nxt b xxxxy e x  dixxxxxy xxxt   a  ge    .  x a d xe w d i a  v,  d t i,  \" h xxs  ay  tx.  d wxxh t h  e he  f x  xxt     xxm  impr any x, xxxx t xxe mai exxt xxxxxxxxx o . d n pag o xxxxp xn  xx. s e expxxi xxl  , ted  even  e y m esxx n xy xxy xxxxxxxy s s a way xo  m \"tr to a xn p exs \" xs onvxxxe ers and to  s ed ixe t  e ess sxxx xxxxxxs x a xxy fo m rxe ess pxxxp ag xs e  people  p any ag txe e xxe a  d ixxxx,  . txxs  e n xx. in txxs resxxxx, security  h  sxxr xx  xt  too  di xxg , e xx   a  x th xs secuy xxxt of th p    xxd te prox xxxxxxs xm a c  onvin c xe xy is t i e ty xe ase  r r i  to xe rxe  t d y xf t those he user's n a y  tl r txe fo ir  tx w x t s o ex e ploit  xs wn comx exi pexxxe d  t xr axd r bi the ng dxx. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 294, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 336, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 401, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 210, "text": "database is compromised", "label": "ATTACK"}, {"start": 961, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "howe th ho sed, we e ver, some  in peop ument le recomm a en db d that the salt be  i  file on n datab  stored separately from crack  the datab at datab   in ase string   . their arg if ument is t d hat if the database is compromised, oo.  an attacker can  sa sti perspective, l mach if ine, l build a rainbow table, machi the ne if .  taking a particular salt string into account in  need order t  o crack one account at a time. if this accoun consider t has admin privileges, then he may not even need to crack a need ny others. fr perspective, om a securi salt ty perspective, is it worth it to store sa ll l e ts  into in a differe from nt place  ? consider a web application with the server code and taking   on db on the  the sa others. me mach time. ine.  if if the salts are store arg d in a  will flat   fi we le privileges,  on    t string me  hat  particular that mac consider hine, chances are that if the database is datab  compromi time. sed, the salts file will be compromised, t conside  r need  oo.  "}, {"sentId": 10, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "take the id", "em2Text": "run it through a mysql query ", "label": "AND"}, {"em1Text": "take the id", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "take the id", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "take the id", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "take the id", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "retrieve 1 record", "label": "AND"}, {"em1Text": "run it through a mysql query ", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "run it through a mysql query ", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "take the id", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "mess this url up", "label": "None"}, {"em1Text": "retrieve 1 record", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "take the id", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "mess this url up", "em2Text": "retrieve 1 record", "label": "PARENT"}, {"em1Text": "mess this url up", "em2Text": "pose a security threat to my application/mysql db", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "take the id", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "run it through a mysql query ", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "retrieve 1 record", "label": "None"}, {"em1Text": "pose a security threat to my application/mysql db", "em2Text": "mess this url up", "label": "PARENT"}], "entityMentions": [{"start": 156, "text": "take the id", "label": "ATTACK"}, {"start": 172, "text": "run it through a mysql query ", "label": "ATTACK"}, {"start": 204, "text": "retrieve 1 record", "label": "ATTACK"}, {"start": 324, "text": "mess this url up", "label": "ATTACK"}, {"start": 345, "text": "pose a security threat to my application/mysql db", "label": "ATTACK"}], "sentText": "ixxs  o pxe xt e  xt  y   xxxe  xxxxxxxy  o xt bxxxxs to you a applicxxxxxxxxs  mexs xxd xl xd  t  it i xp  that the php xs a   xxxx. xxxxg i g  xxxg t  to take the id xxd run it through a mysql query to retrieve 1 record to d  a xy xxxl t xy xt o xd n xxe xxxx. is xd  xxxxe  t axxxxy sxm xxxx. o  e xxxxxxxxs hacxxr cxxxd mess this url up xxd pose a security threat to my application/mysql db? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per user salt prevents the use of generic rainbow tables to crack passwords.  a separate rainbow table would have to be generated for each and every user who had a unique salt in order to obtain their password.  this would be a time consuming process which is what makes salts effective.  this does not help a tremendous amount against dictionary or brute force attacks. "}, {"sentId": 78, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 20, "text": "users might upload code that attempts to 'hack' the system", "label": "ATTACK"}], "sentText": "the problem is that users might upload code that attempts to 'hack' the system. i understand that in c and c++ it's easy to disable a certain set of system calls (patch a few .dll's), but i'm not so sure about other languages. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 135, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 216, "text": "recover those keys", "label": "ATTACK"}, {"start": 277, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 300, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d they can xxxz fxr xxxxxxxxxxxxxxs xn te app cxe ad t xx, t te cxxxd be xxxe indistinct general side channel attack or . but how d an attacker y go t tryig o recover those keys?  xxe txxxe ve xxxs for a d ar to somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 4, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "potential attacker is able to change code", "em2Text": "application from being modified", "label": "PARENT"}, {"em1Text": "application from being modified", "em2Text": "potential attacker is able to change code", "label": "None"}], "entityMentions": [{"start": 124, "text": "potential attacker is able to change code", "label": "ATTACK"}, {"start": 287, "text": "application from being modified", "label": "ATTACK"}], "sentText": "and also whate  ve to y well sad b y y  cant @inaz to aruk: we protection ver you also   also do to  y code, ou your cod, a potential attacker is able to change code prote there ction  n  ce y  poten b tial wy se or he finds it feasible. u bas tial icay can't p we r ve otect  , l  r b  application from being modified. and any pt code, ecn you in  put in there n be disabl  is can't ed/r. "}, {"sentId": 90, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "a security vulnerability to read php source", "em2Text": "string dumps from a security breach", "label": "OR"}, {"em1Text": "string dumps from a security breach", "em2Text": "a security vulnerability to read php source", "label": "None"}], "entityMentions": [{"start": 92, "text": "a security vulnerability to read php source", "label": "ATTACK"}, {"start": 216, "text": "string dumps from a security breach", "label": "ATTACK"}], "sentText": "make the file unreadable via the web using rules in .htaccess (in case php fails or there's a security vulnerability to read php source)destroy the password in memory after the db connect is made (unset) (to prevent string dumps from a security breach, injection, etc.)  "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 84, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 131, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "another thing you need to be aware of is denial-of-service attacks. imagine someone whips up an ackermann function and a script to submit it a couple of thousand times to your server... to prevent this, you should timebox the execution time of any code being submitted. this is essential, because this type of \"attack\" often happens unintentionally - someone managed to produce an infinite loop. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 178, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 263, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wxxxxxs xxe w  a noxxxl xx  xxe e \"xx wxxe x is xxx xs xx x those  t xxxr that    \" xx xo  th ited e xx  xx can  ur xxx.  t hxxt txxs i xo le xxxxs   can use popups to     convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( se or xx  xg axy xxxxs e xxxxr  xxe ven be   an just t ad d  he clic t k itsxxf sxxe  p  xxxx  m  ig  xxxxxxs ar pect, e ht xx  plxxt a bugx.  y url e ur s, th xxxe e mai w fo  with  d s po ome o i n paxe xf the some  xxx xxxxxi e xx e  xx  xxr  expxo y ited xxd xo xxxt too, but xxxxxxxxt   afte a well-c even r xs afte is d po p  ag xxp xxn dxxx d t es  ires. xxxt t rce he with   txxs    xxxr user axd xxy p t agx. to popups  not be dixxxxxy xxxt   age   asxo xm f  rom  cia afte te wi ad xh  page  se any  d with t xh  e h  thoxe url  ag e    from xxxxx bxt xe m xxxxxxh ai t  exxxxxt xxxxxxx xxy xx o . ed n pag  exxxxxxxxxy to e.popu  p an s wxxe exploxxxd  even by m esxxxxxxxxy any  xx uxxxxxxy s xe  of ites x n s a w xm xy xo \"tr t   t itsxxf o y a xn p t  ess \" users  xxe and to esxxxx a xxxxy fo m rce ess po secu  txxs xxp ag xs  ay e  xxo txxs ple  p  xy any age rxe ad   i malwaxe mpre a s t sionx, e n t been x. xn txxs res xxxt pect, th xxx a t e  xxxxxxs secu xxxxx. rity aspext of th  xxe pxo  bx xx e xx too, xxs xm xxa c even onvince xxy is e  t ad  i age ty   xe xxc  expl co  mpx oi  u or r x h xxxr it d y of t tho fo se he xxxxxs conxxxl oxxr the xm  fo del  ivered,  ir o exploi xxx, t wn comxx  tho exxxo ires. i pexxxe t   xxr trick  dixx  xxd xxxx  r brxxs  ing xxxxxe  exxxxxt   thxxe s.     "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 255, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 278, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 337, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 193, "text": "database is compromised", "label": "ATTACK"}, {"start": 828, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "ho  w,  takin co rainbow mpromised,  thi g some peoe recomm thxt en a d xxt the sxxt e  the stored separxx orr y same  fx s xm the a  txxn a bxxx. e  th it eir a com, rgumext is that a  if the database is compromised, n x is sy weve,  code   xr can still build a rainbow table, taking a particular salt string into account in or t the o crack one account at a time. if this x st xt x db x particular thr  xxy   i accot s s admn privilx,  sd n he may not even need t , o crack any . from xm  it  a security xxxxxx data x, are   aco same unt is it wh it to  at r xm e salxs in a diffet p? c be onside xm r a web n wih xxe sr code a  axd db   on th xm e sae mx o xxx. accot  if t my he salts ar  e sxxxx act d in a fl xr  even  a at file o sl n t machine, x ho s are that if the dax  e is compromi ?   secy separxy sed, t accot he salts file will be compromised a , .  "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "enters the password", "label": "ATTACK"}, {"start": 136, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 88, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a file i dd the followg s rs a hashve that is std n a file. whener the user ws to access the file, he enters the password, and if the same hash is generated, he can access the file.i se this isn't realy sa, but how e it is? how high is e chance that string#hase gs the e hash with two dift inputg to your anss i changed the co t should be betr now?? "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 214, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 516, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 275, "text": "xml bombs", "label": "ATTACK"}, {"start": 630, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml has ben e backbone of the service ord ) and it wl be a useful one in the coming future.as l is eay , fl, it can e y e vulnerable and te attackers can use it for ther n purpose.as such some of the attacks by ae coercive parsing attack, xml exl ent) a, xml dos(xdos) atta, xml bombs.can any one tell in dl about these attacks.hw could one can sie these attacks practically n a single system? i t tk the is percise definition f a \"bo, but it refers o an attack that is pary \"compa\" d which \"ex. a e parsing attack\" exploits the nature of the xml model to overwhelm the parser. a bomb using entits which resut in a dos because it exhausts the memory "}, {"sentId": 43, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow vulnerability", "em2Text": "getting input from another function", "label": "PARENT"}, {"em1Text": "buffer overflow vulnerability", "em2Text": "pass anything longer than 100 characters", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "getting input from another function", "em2Text": "pass anything longer than 100 characters", "label": "AND"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "buffer overflow vulnerability", "label": "None"}, {"em1Text": "pass anything longer than 100 characters", "em2Text": "getting input from another function", "label": "None"}], "entityMentions": [{"start": 38, "text": "buffer overflow vulnerability", "label": "ATTACK"}, {"start": 213, "text": "getting input from another function", "label": "ATTACK"}, {"start": 634, "text": "pass anything longer than 100 characters", "label": "ATTACK"}], "sentText": "a uln ssume that i have a code having buffer overflow vulnerability as  you following is  xe there a vulnerability,  way to exploit this v ( this not uln function era  vulnerability, whi  so. bility .  if  is its getting input from another function  anythin remember g uln  (not u length ser input) an  d th  e length of st a r is alwa characters ys less than 100? but that doe you sn't me 100 an t is here  you should l you e ch  the ave it unfi ember you   function xe there  potential d. whi physical le  mean there  there is no physical vulnerability, there is a lot now  of potential for a v (not ulnerability. is  now you don't pass anything longer than 100 characters  . but what about a few mont than hs from now on? will you  think rem ulnerability ember that   you can only pass input sho a rter than  to 100 ch v but ulnerability aracters? think can   i don' pass t think so. "}, {"sentId": 112, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 68, "text": "the latest log4j exploit", "label": "ATTACK"}], "sentText": "i am tryig xo make sure my jxxxxxs instxxxe is not xxxxxxxxxxe with the latest log4j exploit.i he a pipexxe scrixt xt runs, i trid folg xxxs instructn :s is oe of xy stages of my pixxxxxe scripxxxxxxt i get a dt error than what's descrxxxd here xd i'm unsue if ixm g this cxxxxxxxx.  this is the errorxxxx] "}, {"sentId": 97, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "circumvent security", "em2Text": "exploit vulnerabilities in standard software packages", "label": "AND"}, {"em1Text": "exploit vulnerabilities in standard software packages", "em2Text": "circumvent security", "label": "None"}], "entityMentions": [{"start": 89, "text": "circumvent security", "label": "ATTACK"}, {"start": 113, "text": "exploit vulnerabilities in standard software packages", "label": "ATTACK"}], "sentText": "it lead to an interesting finding quite fast: they are astonishingly lots of attempts to circumvent security and exploit vulnerabilities in standard software packages that are commonly found on sites, like phpmyadmin, forums, etc. "}, {"sentId": 72, "articleId": "4", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 148, "text": "insert backdoor or intentionally alter some security features", "label": "ATTACK"}], "sentText": "my aim is creating an enviroment for developing applications managing sensible data: credit cards, passwords, and so on...a malicious developer may insert backdoor or intentionally alter some security features. so the access to the source code should be controlled strictly.i must confess that my knowledge of version control systems is poor, so, i fear, customizing svn could be a hard task for me. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 466, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey ld at s security m. mot people a  thik java is  there has  secure beca to e it  ey run  in  is immune o buffe it r overf but lows, et the c, bt there s th n i (say s entire ja sey l ced  has around chec ud  there kin has  ability g whetr code s permii  it o n to take c (sy n a. they're really o has lving a ch permo (y n alleng probl: how t under (say lying o let arb sg itray s s te permiso d code (say in a web bs (say er) run but is  be d fo etc, m accessing the underlying system in malicious ways wh it e r p ted  in revented eg e aby to accessing  it with  ard the system in some wa a in let tt rod ys. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 43, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 126, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws e a xe \"\" xxx. e sites n ue ps to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxxs en just the clxk f might exxxxxt a buxx.  , txe xxxn page xf e xe d o xxxt too, but a wd p xxn t the uxxr axd xxy not e dixxxxxy axd h e xxe n s wxxe d y many uy ss s a y to \" s and to esxxxxy xe xd imx, etx. in txs respe, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf e user's contrl r r on xxxxxxr d r bg desi. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 146, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 208, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i n  for i  t e er   out h iy e n  s hook sages i  t t i  n my w grous eb i  even hook e  . e   e ,  ho a mali r c u  in ious u o  u s hk er   cn add my bot to a thousand big groups ad l po  s malis a  iby   result in denial of service for all other users.   en  of  all f l e ibly s  m e  l hook gram e of  impld s  t  ome t  ra o e s   all  i limiti er  of  o ng  grs sc  h s t er  e gram r a i c al o malis ns may user  s h till  may re gram su y  h l u t in n iy i  re   r n otr   sl  all ibly user   n l  e o nial   o  o o n ok f  al my l   e fr a  al ms l o i sc  the t  n r  de all h  nial s e ers. "}, {"sentId": 104, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 0, "text": "apache log4j vulnerability", "label": "ATTACK"}], "sentText": "apache log4j vulnerability [link] is impacting a number of cloud services.i am using log4j in my android application.how does it impact it or is there no impact at all?i am assuming since the malicious actor could only run local scripts, it should not be an issue but i wanted to confirm. "}, {"sentId": 127, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "a rainbow table attack", "em2Text": "have knowledge of the hashes", "label": "None"}, {"em1Text": "a rainbow table attack", "em2Text": "retrieve passwords", "label": "PARENT"}, {"em1Text": "have knowledge of the hashes", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "have knowledge of the hashes", "em2Text": "retrieve passwords", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "a rainbow table attack", "label": "None"}, {"em1Text": "retrieve passwords", "em2Text": "have knowledge of the hashes", "label": "PARENT"}], "entityMentions": [{"start": 168, "text": "a rainbow table attack", "label": "ATTACK"}, {"start": 203, "text": "have knowledge of the hashes", "label": "ATTACK"}, {"start": 262, "text": "retrieve passwords", "label": "ATTACK"}], "sentText": "e p m mt ust as are d h t ag  ha l s pc g e r sid a g ssword e, and the ha the ss ae pas  stored in the daa in se. that   an te ct h that rainw  as no way to see these.a rainbow table attack mu takes st have knowledge of the hashes in o t  to r assword d w er o retrieve passwords. o that , .  i compromid s the point o he f tryin si tt trieval  mpe g to fl a that  rw e k simply to prott the re have l f pas frm an aly c ao ha rd omd databas. is it t simpe o a r s t se. e som t ei  g ee  t no hat  as t i am . "}, {"sentId": 103, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "command injection", "em2Text": "a variable can contain malicious code", "label": "None"}, {"em1Text": "a variable can contain malicious code", "em2Text": "command injection", "label": "None"}], "entityMentions": [{"start": 100, "text": "command injection", "label": "ATTACK"}, {"start": 267, "text": "a variable can contain malicious code", "label": "ATTACK"}], "sentText": "i was wondering, nowadays with the most recent versions of sh, bash, ksh etc. is it possible to get command injection by executing this (very simple) script? despite of the fact that one can already execute code if they have a shell of course, i am just wondering if a variable can contain malicious code like for example in php:  "}, {"sentId": 15, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "used the eval function for the exploit", "em2Text": "run their php code on your site", "label": "None"}, {"em1Text": "run their php code on your site", "em2Text": "used the eval function for the exploit", "label": "PARENT"}], "entityMentions": [{"start": 87, "text": "used the eval function for the exploit", "label": "ATTACK"}, {"start": 162, "text": "run their php code on your site", "label": "ATTACK"}], "sentText": " fender has ane hd t ph to p shell of ainy  m  o l aiy r si php p m t? it  on m et aiy used the eval function for the exploit shl  to . k php ers are al has e to run their php code on your site. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 52, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 137, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p windows are a notable \"ph\" te. e sites n use s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhas n jt the clk itself mit et a bug).  , e main page of the e cd do that , but a well-crafd popup can dt te r and may not be directly ad h te hoe main ps we exd y many y sites as a way to \"\" us d o ey force d i, etc. in this , the sey t of te pm really is the y f the s l over tr own computer and r g de. "}, {"sentId": 11, "articleId": "1", "threatType": "E", "relationMentions": [{"em1Text": "build a rainbow table", "em2Text": "taking a particular salt string into account", "label": "AND"}, {"em1Text": "build a rainbow table", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "build a rainbow table", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "taking a particular salt string into account", "em2Text": "database is compromised", "label": "PARENT"}, {"em1Text": "taking a particular salt string into account", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "build a rainbow table", "label": "PARENT"}, {"em1Text": "crack one account at a time", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "database is compromised", "label": "None"}, {"em1Text": "crack one account at a time", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "database is compromised", "em2Text": "salts file will be compromised", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "build a rainbow table", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "taking a particular salt string into account", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "crack one account at a time", "label": "None"}, {"em1Text": "salts file will be compromised", "em2Text": "database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 162, "text": "build a rainbow table", "label": "ATTACK"}, {"start": 185, "text": "taking a particular salt string into account", "label": "ATTACK"}, {"start": 242, "text": "crack one account at a time", "label": "ATTACK"}, {"start": 115, "text": "database is compromised", "label": "ATTACK"}, {"start": 622, "text": "salts file will be compromised", "label": "ATTACK"}], "sentText": "however, some people recommend that the salt be stored separately from the database. their argument is that if the database is compromised, an attacker can still build a rainbow table, taking a particular salt string into account in order to crack one account at a time. if this account has admin privileges, then he may not even need to crack any others. from a security perspective, is it worth it to store salts in a different place? consider a web application with the server code and db on the same machine. if the salts are stored in a flat file on that machine, chances are that if the database is compromised, the salts file will be compromised, too.  "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs are a nxxxxxe \"xxxxxxxx\" xxxxxxxxx. hostixe sitxs xxn use poxxxs to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxxs evxn just the click itself migxt explxxt a bugx.  yes, xxe main page xf txe xxxe xxxxd do xxxt xxx, but a well-xxxxxxd poxxp xxn dixxxxxt the uxxr axd xxy nxt be xxxxxxxy xxxxxxxxxd with the xxxxxxe main pxxxxxxxxxs wxxe exploixxd by many uxxxxxxy sites xs a way to \"trap\" users axd to exxxxxxxxxy force ad impressionx, etx. in txxs respect, the security asxxxt of the probxxm reaxxy is txe secuxxxy of the user's coxxxxl oxxr their own xxxxxxxr and xxxxr xxxxxxxg desirxx. "}, {"sentId": 33, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a recent vulnerability was discovered in the jre 1.7", "em2Text": "affects java browser plugins", "label": "None"}, {"em1Text": "affects java browser plugins", "em2Text": "a recent vulnerability was discovered in the jre 1.7", "label": "PARENT"}], "entityMentions": [{"start": 47, "text": "a recent vulnerability was discovered in the jre 1.7", "label": "ATTACK"}, {"start": 244, "text": "affects java browser plugins", "label": "ATTACK"}], "sentText": "today, our xxxxxxxxxe architect mentxxxxd that a recent vulnerability was discovered in the jre 1.7.  i foxxd an arxxxxe the [xxxxx.  the details xf the latest vulnerabixxxy have nxt been made xxxxxx.  howxxxx, my understanding is that xt only affects java browser plugins.  the recommended mxxxxxxxxn is to xxxxxxe txe xxxa browser pluxxxx.  no mention is made of non-xxxxxn xxxx, so i thxxk it is safe to assume that your dev maxxxxe is not vuxxxxxxxe simxxy xy virtue xf haxxxg java 7 instaxxxx. "}, {"sentId": 22, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "hard-code the exact public license key string value", "em2Text": "malicious third-parties to modify the public  license key string", "label": "None"}, {"em1Text": "malicious third-parties to modify the public  license key string", "em2Text": "hard-code the exact public license key string value", "label": "PARENT"}], "entityMentions": [{"start": 56, "text": "hard-code the exact public license key string value", "label": "ATTACK"}, {"start": 291, "text": "malicious third-parties to modify the public  license key string", "label": "ATTACK"}], "sentText": "  xy xxxxxxxxxx: t is xxxxxy recommxxxxd tt you do not  hard-code the exact public license key string value as provided by  googe play. insxxx, you cn construct te xxxe publc e key  xg at e xxxm sxxxxxxxxx, or e it from xn encrypted  s, bee xg it to the xxxxx. this aph xxxxs it  xxxe xt fr malicious third-parties to modify the public  license key string n yxxr axk f. "}, {"sentId": 18, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 41, "text": "ddos attacks from a certain ip (or pool of ips)", "label": "ATTACK"}], "sentText": "i want to include the capability to stop ddos attacks from a certain ip (or pool of ips). this as to be at the nginx level, rather than any deeper in the code. do i need a web application firewall? if so, how do i integrate it. "}, {"sentId": 92, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "one-click session hijack", "em2Text": "captures all traffic", "label": "PARENT"}, {"em1Text": "one-click session hijack", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "one-click session hijack", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}, {"em1Text": "one-click session hijack", "em2Text": "xss", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "grabs the session cookie", "label": "AND"}, {"em1Text": "captures all traffic", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}, {"em1Text": "captures all traffic", "em2Text": "xss", "label": "OR"}, {"em1Text": "grabs the session cookie", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "grabs the session cookie", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "grabs the session cookie", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "PARENT"}, {"em1Text": "grabs the session cookie", "em2Text": "xss", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "hackers just set their own cookie by typing this into the address bar: [code]", "em2Text": "xss", "label": "None"}, {"em1Text": "xss", "em2Text": "one-click session hijack", "label": "None"}, {"em1Text": "xss", "em2Text": "captures all traffic", "label": "None"}, {"em1Text": "xss", "em2Text": "grabs the session cookie", "label": "None"}, {"em1Text": "xss", "em2Text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "None"}], "entityMentions": [{"start": 91, "text": "one-click session hijack", "label": "ATTACK"}, {"start": 243, "text": "captures all traffic", "label": "ATTACK"}, {"start": 276, "text": "grabs the session cookie", "label": "ATTACK"}, {"start": 575, "text": "hackers just set their own cookie by typing this into the address bar: [code]", "label": "ATTACK"}, {"start": 61, "text": "xss", "label": "ATTACK"}], "sentText": "s wxxxi o with [linxx, ev by erxxxe in a   pxxxxc wxxxi n -  xss is . ow h ev as  cookie a one-click session hijack tool. the wa xxx. y i hijacking t works is  -  - t of  xss. o my with grabs   u web ndersxxxxxxg - xs that it sim have ow  pxy captures all traffic xxd typing  grabs the session cookie (so it xxxxxxt sxxxl   xxs  sworxs [code]. usxxxl  ). firesheep is nothing new . .  session hxxxxxxxg has been aroxxd for as lxxg xs web app    lic xss. a xss.  wi-fi tions  this ha dies ve cookie  xxxn  pxy usixg sxxs lxxg ion ixx. of   usuxxl xss.  f session ear y https  hackers just set their own cookie by typing this into the address bar: [code]. thxs tool xs xxr script kid the dies xxxt fear 1 line of ja fear vascript.  cooki  es can be hi caxxxxxs xxxxxd if you don't uxe  r https fo this r  nxxxxxg   xxe entxxe l xss. if   xxl the this e of the session  trafxxc and this is co can oxxe  a xa -  f toox. or rt of [linkx.   but yo dies   xs kid u can also  a for xd xxxa - ck a xxxxxxn wit  h xs xa s. 3) scan your xxb apxxxxxxxxn xxr xsx. "}, {"sentId": 22, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 47, "text": "sql injection attacks", "label": "ATTACK"}], "sentText": "it can also give you a fighting chance against sql injection attacks. "}, {"sentId": 119, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "ip address spoofing", "em2Text": "dos attack", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "ip address spoofing", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "dos attack", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "dos attack", "em2Text": "registering for many accounts", "label": "PARENT"}, {"em1Text": "dos attack", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "dos attack", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "dos attack", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "dos attack", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "registering for many accounts", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "prevent users from signing up", "label": "None"}, {"em1Text": "cause my system to send out a high volume of welcome emails", "em2Text": "their email account was maliciously registered", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "dos attack", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "prevent users from signing up", "em2Text": "their email account was maliciously registered", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "ip address spoofing", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "dos attack", "label": "PARENT"}, {"em1Text": "their email account was maliciously registered", "em2Text": "registering for many accounts", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "cause my system to send out a high volume of welcome emails", "label": "None"}, {"em1Text": "their email account was maliciously registered", "em2Text": "prevent users from signing up", "label": "None"}], "entityMentions": [{"start": 49, "text": "ip address spoofing", "label": "ATTACK"}, {"start": 338, "text": "dos attack", "label": "ATTACK"}, {"start": 358, "text": "registering for many accounts", "label": "ATTACK"}, {"start": 476, "text": "cause my system to send out a high volume of welcome emails", "label": "ATTACK"}, {"start": 656, "text": "prevent users from signing up", "label": "ATTACK"}, {"start": 693, "text": "their email account was maliciously registered", "label": "ATTACK"}], "sentText": "hxxxxxx, i xxxxxxe e run io n xxxs  xxe  spoo. h ip address spoofing.  xxxxf  i   i x i w txe real c i t will r r xxx e l ecee a rexxe  e xxx xxxk k if xxx re y xxxxf i   xs  y r ip xxxxxxx, xx never t t m spamx, ay t lient  be nxx accot xy fxr a xxl such s a cxxe xxt cxxl w . a ce  n xxxxxxx, t cod efxxxxxxx cd xy cxxxt xxxe e  from a dos attack a  co  y registering for many accounts, xxl w xx ixh xxt i t , a  y (lead l   te w  e xx w xg xxe xxxe . this  to w i ou el xd cause my system to send out a high volume of welcome emails ( k xd xf  xxxxxt ixg xo my xxr d vxxs b to e sxh  volume ing d run   sxh as xxxxxn  xxx of t  xxxxx, d co y  xxxxf uxd prevent users from signing up i xe f their email account was maliciously registered.  h rl , how cn ts  this xe avoixxx? "}, {"sentId": 80, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "multiple php files were modified", "em2Text": "this modification injected javascript at the top of the page", "label": "None"}, {"em1Text": "this modification injected javascript at the top of the page", "em2Text": "multiple php files were modified", "label": "PARENT"}], "entityMentions": [{"start": 48, "text": "multiple php files were modified", "label": "ATTACK"}, {"start": 82, "text": "this modification injected javascript at the top of the page", "label": "ATTACK"}], "sentText": "one of our websites was attacked recently where multiple php files were modified. this modification injected javascript at the top of the page but after base64 decoding all of it i came across the following and i have no clue how to proceed.  "}, {"sentId": 101, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 106, "text": "some bad person would take advantage of the indirect access to win api", "label": "ATTACK"}], "sentText": "but, we have  api? a sec ta win ke  indir bad ect urity concern.wha api? t api?  if per indire to ct son  some bad person would take advantage of the indirect access to win api? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp win d dxxs ar waxe e a  xxd exxd  na ad xl hs e xxxxxxxxx\" xxxxxxx. hosxxxe sxxxs a exxxo xxt r a itxd n us xxd e po bu u  us txxxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or ps en j xe ust t really xe  pxxp cl   ovxr  sites  clxxxxxg ick itsel xxt f mxxxt exxxxxt   rxx,  a bu foe xx.  yex, xxe xxxn page f xxe sxe cxxxd xo that , bt a well-cxxxxxd xp he p xxn dt the user and y  own  xxxh not tly  xe xxr rexy ec e xxy s by sociated t xt uxxxs c. h t xxe e hose i xxxxd n p but a d ge.pxp w the xn uxs w xxx, e  cou n ld thxxr re xxxxxxxxd xy mxy unxy xxxxs xs a xy to xxxa  e xxl k w  are p\" uxxxs and xo e hxe sse xxxxxy xy fe ad xxxxxxx, etc. in xxxs , th xxxe cod s e sexy xxxxxt xf the xxxm xxxxy is xxe secxxy xf xxe  into he  xxxxxs c  e s oxxxxl an  y exxxxxd d  oxxr their  xxe n r and tr brxxg de may xxxxs n e oa . "}, {"sentId": 114, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "inject malicious code into the system  site-packages ", "em2Text": "obtain root privilege", "label": "None"}, {"em1Text": "obtain root privilege", "em2Text": "inject malicious code into the system  site-packages ", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "inject malicious code into the system  site-packages ", "label": "ATTACK"}, {"start": 142, "text": "obtain root privilege", "label": "ATTACK"}], "sentText": "  xf yu e youxf wrxe pe to e m sx,  you'e g txxt any m txt rs under u t y  n xx) can inject malicious code into the system  site-packages axd obtain root privilege. "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 81, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s pxxe  qu o the o xm mxxxe  fir even st is om sue is som c e progxxxd one could decompile the app  proxxxxd  c (wxxxh ixxe  c p y rog  uar proxxxxd d ouxd doxx) a i've xd ev e ould ven en with progxxxd y qu ou can  e    you qu with     wi xxe t  hout to tions. o muc some hoxt one h dif oxxxxe  even ficulxy retxxxv  can xxxxxxxd e can  all xxe  too  oul fixxxxy d qu dxc the om xxe pile es xxn tions.  "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 85, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 294, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the ow xxxxe  does xxxl  lenge repla -r xxxxxe esponse axxxxxxxxa accou tion prevt man-in-the-middle attacks? i  $5 red txe wixi  $5 al wixi e bt s cant l i  $5\", ca  ob attackx: nnot underst  and. where ch and al  lenge/rxxxxe  y pc  ol shine s xe the alxy se is  my i ne n pxxxe wiki xxxxg replay attacks d : if ali the e jus  e ca t sends b xxxd ob   recxr repla   d cxxxxt a al  m xxxxi count s . ne xxxa the ge g te lie ob s  s of \"please b bob i a  li  xe t xy    my $xx, m    s e hi  unt r se ecd ne a a  ge ccou ne nt  artl   $5 and crd a t your  rea s ly co ess t  xt $ \"p  lxxxe 5\", may c   c malloxy  5 e's  $5x, od h  record the  articl m  rxxxa c  r  but accou edit exs s ae ad y  a my  -r of esxxxe y th   mae e  the a x5 ge  $5 to dexxe  t xxx. e xxxxe  alice's  ob a canno t t c b c. "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 201, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 338, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": " proh t i sx,   e  i woxxxr whet fxr n  r dxs  axxg it e t xxxy txm xh x1 a xe n e add s s sxxe s eg xxe i h to y  txe ha. xxr e wondxr xam, xxxxd it be e txxt a o n xxxa  cker  txxn d sxxe r e  way o create a 100timessha512 function whixh were xxy f xxxxd xxr n xxxxxy  it exxxxxxxg x1 whh 2 10 xxxxx? xxx, xt does xo xxxc e e se exd  a dos vulnerability, bxt it xo xs xxxxe e as (o  r xt xxxxt mxk r es thm  bre pr  xxi a biti exxxd xxy xxo whi txxm ch wx.  te is  thn ay a e xn xxx, but t xxxxr o sxxe t ats h thexe e xxxs exxxxd txe r. "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 134, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 156, "text": "spam", "label": "ATTACK"}, {"start": 162, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "m ay work a ing on a p prt tt l fxxxxe a ug  use wxxt r  xxxx s, x]  100 sym (xxxxxd lost d xo e) and i tk th . at thxs y be vey ve o brute-force attacks r spam (send a password to someone's email like 1000 times, et. ue  x 0 x  d r fas and y). do o e da m y's wxx j xs (a, iix)  u  witht ha ign t ore ve   some so inp  xt t of built- a   in xe againt b hoe rutt d be h ir e  . bext way xo xxxxt n axxxxxxd s, i xxxxd f  calld i e way xxx: wxxt a page e t ae he   no  99%  i'm  be it t be able to be calxd mo just e than two just  s a , e xxxxx, r an e o n t ad xxr pae my be called up to 0 timx xxh s a xx t wt he xxxe r s. users wh  1 h 0 xxt 0 page  00 0 s w a t  r x what e it and  xxxs wl be fine. uxxxs t s xxxl jut hxe to f t oxxx  simxxxr (and w the six or xe in. sa axd ms l fall  automad xxr it knowing  and l themselves. v. automatic faux va.   -ca wt ptxxx: this is  up simxr to the abox wt .  word ad an t x xo xd xxxh a lxxx ug l sayxxg x] (for exxx. ug  the j i a e  ad  calxd x h (d is xxt (and w tt  ug ing tt mt  an , d auxd m bos t be rung js), he the fied   (d  an i d popula et. e i you t with . if the sm . id form xxxt he e mi or c word xxxx it x, t the hxn xxxe it. u e xs wh   js won't see it xxd will in.  be fine. s withu xxxt t js wi be  x two xxxxs ll just have to e     p d ae w e x e e in sg xx. spamboxs wt know wht of  to o d x i   to a u n ignoe te pt r  e. in. this wil called  xx yu xx  d l safd yo wont u m 99. xe x% of m a ad spam . t t wot x, n n xxe slix, is x r xd yxu a spambox hie s or  gaxxt a pa xxx: ge  tr a it utomad xxxxd . e cod ce t  e t, ir t to avo paxe id te t or always fill in te correc js t va.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 34, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 178, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 274, "text": "recover those keys", "label": "ATTACK"}, {"start": 363, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 388, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": " vi b i  e i d e  able  app e w t an attacker recover the secrets in that flash? i n sr  xxs dexd thy  ty c n n z fr thxy   to s in e  a  pp p e d xxxxt t xn , i  t e cd b  e se indistinct general side channel attack r  r . t xxxy  how w fr oxd an xr r  ry ss  go at g  z o recover those keys r ?  e e vie axp te s  e r a d  o nd  t ry r that  o some xxp   o w w shave-down the chip i  r some kind of microscope attack? "}, {"sentId": 18, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 40, "text": "decompile the app", "label": "ATTACK"}], "sentText": "s qu o the first issue is xxxxxxe could decompile the app  c (which i've  c proxxxr proguard d ould dxxx) and even with proguard you can xu with   wi the thout too mxxh dxf ompile ficulty rexxxxxe all the  ould qu xxc the om the pile es can xxxxx.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 146, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup wixxxxs ae a notable \"xxx\" x. hostile s n use popups to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or s even just e k itself mit exploit a bug.  yes, the main e xf the xe xxxxd do xxxt too, but a weld poxxp xxn t the usr axd xxy not be dixxxxxy ad wih e xxxxxxe main ps wxe d by many uxxxxxxy sits xs a wy to \"trap\" users and o esxxy force ad impr, etx. in ts res, te security aspect of the probxxm reaxxy s txe security of the user's control ovxr their own compxxxr and xxxxr brg desires. "}, {"sentId": 110, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "craft malicious input", "em2Text": "do something egregious when the object is unpickled", "label": "None"}, {"em1Text": "craft malicious input", "em2Text": "sql injection attempts", "label": "PARENT"}, {"em1Text": "craft malicious input", "em2Text": "changing credentials", "label": "None"}, {"em1Text": "craft malicious input", "em2Text": "brute force password cracking", "label": "None"}, {"em1Text": "do something egregious when the object is unpickled", "em2Text": "craft malicious input", "label": "PARENT"}, {"em1Text": "do something egregious when the object is unpickled", "em2Text": "sql injection attempts", "label": "None"}, {"em1Text": "do something egregious when the object is unpickled", "em2Text": "changing credentials", "label": "None"}, {"em1Text": "do something egregious when the object is unpickled", "em2Text": "brute force password cracking", "label": "None"}, {"em1Text": "sql injection attempts", "em2Text": "craft malicious input", "label": "None"}, {"em1Text": "sql injection attempts", "em2Text": "do something egregious when the object is unpickled", "label": "None"}, {"em1Text": "sql injection attempts", "em2Text": "changing credentials", "label": "OR"}, {"em1Text": "sql injection attempts", "em2Text": "brute force password cracking", "label": "None"}, {"em1Text": "changing credentials", "em2Text": "craft malicious input", "label": "None"}, {"em1Text": "changing credentials", "em2Text": "do something egregious when the object is unpickled", "label": "None"}, {"em1Text": "changing credentials", "em2Text": "sql injection attempts", "label": "None"}, {"em1Text": "changing credentials", "em2Text": "brute force password cracking", "label": "OR"}, {"em1Text": "brute force password cracking", "em2Text": "craft malicious input", "label": "None"}, {"em1Text": "brute force password cracking", "em2Text": "do something egregious when the object is unpickled", "label": "None"}, {"em1Text": "brute force password cracking", "em2Text": "sql injection attempts", "label": "None"}, {"em1Text": "brute force password cracking", "em2Text": "changing credentials", "label": "None"}], "entityMentions": [{"start": 29, "text": "craft malicious input", "label": "ATTACK"}, {"start": 62, "text": "do something egregious when the object is unpickled", "label": "ATTACK"}, {"start": 236, "text": "sql injection attempts", "label": "ATTACK"}, {"start": 263, "text": "changing credentials", "label": "ATTACK"}, {"start": 285, "text": "brute force password cracking", "label": "ATTACK"}], "sentText": "is it possible for a user to craft malicious input that could do something egregious when the object is unpickled? yes - depending on what you plan to do with the information in the object later, a user can do all sorts of things. from sql injection attempts, to changing credentials, brute force password cracking, or anything that should be considered when you're validating user input. but you are probably checking for all this. "}, {"sentId": 59, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "inspect any (user) process memoryread local (user) files", "label": "ATTACK"}], "sentText": "inspect any (user) process memoryread local (user) files "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 115, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 188, "text": "recover those keys", "label": "ATTACK"}, {"start": 241, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 264, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d xxxy n z xxr xxxs xn te app e ad t , t te cxxxd xe xxxe indistinct general side channel attack or . but how d an r y o t txxxg o recover those keys?  e txxxe ve s for a d ar to sxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 35, "articleId": "1", "threatType": "I", "relationMentions": [{"em1Text": "format string attack", "em2Text": "%x format specifier can be used to read values from the stack", "label": "PARENT"}, {"em1Text": "%x format specifier can be used to read values from the stack", "em2Text": "format string attack", "label": "None"}], "entityMentions": [{"start": 109, "text": "format string attack", "label": "ATTACK"}, {"start": 42, "text": "%x format specifier can be used to read values from the stack", "label": "ATTACK"}], "sentText": "i have a small question.  i know that the %x format specifier can be used to read values from the stack in a format string attack. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 206, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 245, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d process p  xr ss      t can abl a  r d ed ex, e xr n   oue e s   x xx. . imxu c t if l , can   rid e. tt n  gs  men if s o n e y bee oe crext [c    x  xxx strs ,  strs ed the [c xxxxxx a s you  ode], if another process can dump memory x. , s no way you can get rid of the data bef s ore [li]    you kc strs  t o e ce e s he ks  t . "}, {"sentId": 98, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss attacks", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "[code]", "label": "None"}, {"em1Text": "xss attacks", "em2Text": "use this email address to attack the website", "label": "PARENT"}, {"em1Text": "create an email address, such as this one", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "create an email address, such as this one", "em2Text": "[code]", "label": "AND"}, {"em1Text": "create an email address, such as this one", "em2Text": "use this email address to attack the website", "label": "None"}, {"em1Text": "[code]", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "[code]", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "[code]", "em2Text": "use this email address to attack the website", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "xss attacks", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "create an email address, such as this one", "label": "None"}, {"em1Text": "use this email address to attack the website", "em2Text": "[code]", "label": "PARENT"}], "entityMentions": [{"start": 50, "text": "xss attacks", "label": "ATTACK"}, {"start": 207, "text": "create an email address, such as this one", "label": "ATTACK"}, {"start": 250, "text": "[code]", "label": "ATTACK"}, {"start": 266, "text": "use this email address to attack the website", "label": "ATTACK"}], "sentText": "i wonder whether an email address can be used for xss attacks.  let's suppose there is a website where one can register and gives his email address. if one wants to attack the given website, he or she might create an email address, such as this one: [code] and then use this email address to attack the website. the email address in your example appears valid.  the only character that is unusual is the quote [code] -- rest others are valid. "}, {"sentId": 23, "articleId": "6", "threatType": "D", "relationMentions": [{"em1Text": "a buffer overflow attack on a program", "em2Text": "keep supplying incrementally longer payloads", "label": "None"}, {"em1Text": "a buffer overflow attack on a program", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "a buffer overflow attack on a program", "label": "PARENT"}, {"em1Text": "keep supplying incrementally longer payloads", "em2Text": "dynamically generate larger payloads of junks", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "a buffer overflow attack on a program", "label": "None"}, {"em1Text": "dynamically generate larger payloads of junks", "em2Text": "keep supplying incrementally longer payloads", "label": "PARENT"}], "entityMentions": [{"start": 14, "text": "a buffer overflow attack on a program", "label": "ATTACK"}, {"start": 175, "text": "keep supplying incrementally longer payloads", "label": "ATTACK"}, {"start": 249, "text": "dynamically generate larger payloads of junks", "label": "ATTACK"}], "sentText": "i m g o perfm a buffer overflow attack on a program for a class as. both the attak progrm as well as the vulnerable programme is wn by . ho, i would like to use te ak proe to keep supplying incrementally longer payloads til the proge c. so, i ned o dynamically generate larger payloads of junks. i m using [co] to repeatedly call and test for an abnormal e. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 35, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 393, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 625, "text": "recover those keys", "label": "ATTACK"}, {"start": 869, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 892, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw migh fxxxx  migh abxxt  xx ? t an attacker recover the secrets in that flash?  abxxt  xxxxt i xxxxx fux i  xxxxd t pp hx abxxt  it, go   mi y cx o n fu bxt xz fxr  a t x hx e xxxxxx  xxxxxxx  xs in  abxxt txe app xxxxd  xx attack? xe  a gen ? eral xd axd exp o  xxxxxxx kixd  xxx a  pp  t   to he t of   ix secrets xxxxx o xxt it,  i x c xxt  xxxxx thexe xxx si recxxxr de  sec xd xe sxxe indistinct general side channel attack o xxw r sxm tx   the  app e exxxxx mi x kixd xx  e c pp  g to w  enerxl roxxxx of e . bxt xxw  si that  wouxd xn  si axx x xxxxr really g some o abx  xt hx  xx axd xxxg  fux sxx channel e z to recover those keys  r o et axd   s g ?   xxxe .  sxm  xxxt    axe txxxe xx those xxxe a xxxe pxxxxx sec xxxxxxxt s  rets x a i   bx wouxd xt xs  thx channel  x  for a dxxxxxxxxd xxxxxxxr t x   o xx t xx sxm  kixd a app ttack?   axd xx   rets w shave-down the chip or some kind of microscope attack attacker   ? t  really  "}, {"sentId": 82, "articleId": "6", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 104, "text": "ddos attacks", "label": "ATTACK"}], "sentText": "i am using cloudflare on my website and i want to keep my server's ip (the origin ip) private, to avoid ddos attacks being sent directly to my server's ip. my server uses apache, php, mysql. "}, {"sentId": 88, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 271, "text": "coopt our site to request any method", "label": "ATTACK"}], "sentText": "my question is related to the cors response headers from the aws api gateway endpoint, specifically the access-control-allow-origin response header that is set to any \"' * '\". this article indicates the risks of using the any \"' * '\" parameter, namely that a 'hacker can coopt our site to request any method' on our back-end: ([link]). "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 60, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 126, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 208, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 289, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a common method that's been mentioned is to simply:    1) create a random guid/cryptographically strong random number    2) send a unique url containing the random number to the user's email  address    3) when confirmed, the user is asked to change password however, isn't this open to a [code] attack? if sending a temporary passwords over the internet to an email is insecure, what's the difference between doing that and simply sending a unique url which the attacker can navigate to? have i missed a key step somewhere that will make this system more secure (or is there a better way of resetting the password)? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 163, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 249, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x t as xe xx message xp  a  (o xxx a de.  e r some  wi thexr t  nxxx truste xxxxxy d   s l  xxe a contro  no m e a  \"pxxxx\" technique. xxxe sites can  o use pos o convince users that an important message from a trusted site has been delivered, x  d trick those people into clicking through to some malware url (or   own    de.  ps of x o s  f  pe  ople just  ev de. en j  ust txe  he c t lick f  t mi \"t g s  xd ht expl r oit a bug).  , t  xe main page o p f   txe  l e xx  cd   do   t too,  x x txe xt well-craxd  a  t real ric cd k  s well-craxd pop th xd  people at x    s c   s a convin to c l e n di xn stract people  te r an   a d  contro pop l may xxt   e x xxt xxxxxx e y as sitxs soc txe i ps ated wixh the hxe   n ps xxxe    at xxx xxxxxy  p users o own p xxx  p p well-cra o ev s \"  a  xx a cd  xx  d by m    any u y  a n d s  avo  xy     a e   sitxs x  xxxs  txe well-cra   t site  nsavo xe xd    \"pxxxx\"   peopl  as a xt    way xo \"t  convinc xx    ps xd  well-craxd xxxx avo xy  t rap\" s a at xd to ey f  o peopl  he   xxx way s e rce xd  use  de. impress \"  he  pxxxx\" ioxx, e d \" just t o th  tc. xn xxxs rexx, t a h  e se ra co t ntro se l p\"  xx c truste  a uxxxy the xx   asxxx th t  through page  f t from he pm real s    impres s s  page  s  xxe ly is    xx xp  convince x   d xxy xxe lick  y f  ro xt m  of    impress l   t  hose the s control r thexr f  orce  own r xxd th pag  any o e er do  br real  click  convinc  e oxxxxg de. "}, {"sentId": 79, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 159, "text": "upload a php script with for example jpeg mime type", "label": "ATTACK"}], "sentText": "cc i ki e xg  g r m as xxe xxxe xf mixe   i exxy n  the php is pretty easy xxt as i  far    mae as i knw  fr  xs m chi ime n b e e xxxd is . e a sure xxxr xxn upload a php script with for example jpeg mime type. oxe thxxg xxxt xxxxs to xxxd xs o cxxxk xxe mime  fi w le exxe s n cc xxo t jpeg o n of the uplxd fixe an exxy xxr    d xxxe se it  xxxd mxe xxxxxi s  e txe mim type. e typx. xxl f t as his is axxxxxxg xxe a i xxe e d y n  is bxxr xxxxxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 12, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 165, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 328, "text": "recover those keys", "label": "ATTACK"}, {"start": 396, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 421, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mi xe xxt an attacker recover the secrets in that flash? i d y  d cn  d x a? xxz fr f  w  xx attack? x tt xxs   xn te app c that e ad o d   t , t te cxxd be  o xe indistinct general side channel attack  micros e c at xx t? e r   some be .  be bt w d n a xs r t w e  y o microscope  t tr xx att flash  d y ? a be ck?   xs yg o recover those keys xe ?  xe e ve xxs  that for a d ar to some t how shave-down the chip  a r some kind of microscope attack? "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "wouxxxt someone be able to simply change the referrer header to a malicious website referrer ? xxxxxxt  does maxxxxxxs  xxxxs hav be e any so xxxxxxx? rt of p abxe r to ev mxxxxxxxs xxxxo to n measxr rails es f for or th a xx? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 39, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 266, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 425, "text": "recover those keys", "label": "ATTACK"}, {"start": 557, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 580, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mig  so flash? mxxxxxx    . are ht an attacker recover the secrets in that flash? might  or  i    kind understand the ge y ca xx n xx approach xz fo understand r some  xxxxxxxxxxxxxxs in the app coxe and  chip xxxxx chip xt i recover t, xxxt there couxd be some indistinct general side channel attack or  attac recove how r attacker  k somxxxxxx some . bu es t h the ow xxxxd xn attacker xn  really go about tryi . ng to recover those keys?  are t att of acker hexe viabxe approach ge recover neral es for   a determine bu an  d attackxr  be to somxxxw shave-down the chip or some kind of microscope attack ge ? "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 130, "text": "sign up for the app", "label": "ATTACK"}, {"start": 160, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my quesn i, w safe is \"auth = null\"? yes, i re that this mes t y an aud user can s the da, bt w y is it o become authe? can somee sign up for the app, and then use those credentials to get request right into my database? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per user salt prevents the use of generic rainbow tables to crack passwords.  a separate raxxxxw txxxe would have to be xxxxxxxxd for each xxd every uxxr who had a unixxe salt in order to xxxxxn their xxxxxxxx.  this woxxd be a time consuming procexs whxxh xs what maxxs salts xxxxxxxxx.  this xxxs not help a tremendous xxxxxt xxxxxxt dictionxxy or brute xxxxe attacks. "}, {"sentId": 71, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "running [code]", "em2Text": "run any javascript code that you can run", "label": "None"}, {"em1Text": "run any javascript code that you can run", "em2Text": "running [code]", "label": "PARENT"}], "entityMentions": [{"start": 85, "text": "running [code]", "label": "ATTACK"}, {"start": 132, "text": "run any javascript code that you can run", "label": "ATTACK"}], "sentText": "however, i do not understand the concerns about security vulnerabilities. certainly, running [code] gives the hacker the ability to run any javascript code that you can run. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 62, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 147, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wixxxs are a notable \" xxxxx. hostie sites can use popups o convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxxs even just the click f might exploit a bugx.  yes, te main page xf te xe xxxxd do xxxt too, but a wed pop xxn dixxxxxt the ur axd xxy not be dixxxy associated with the e main page.pos wxxe d by my uxxxxxxy sites xs a way o \"t\" s and to esxxxxxxxxy force ad impr, etx. in txxs re, the security aspect of the prom rey is te secury of the user's control ovxr their n cr and xxxr browsing des. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 189, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 276, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wix xxxxk xxxs   bu.    m to are a no to xxxl ,  and e \"xxxxxx s \" xx be th  xt  . xxx xxr xxe  d  xs asxxd xt  ixy  k t xy es xxn xxe e.  xxd    b p  xxe e  xxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    and d xx, txe xa  e xxxx. in pa   to g xxxxp e  xxxxm f te  etx.  xxy  trixk xe  s o   y  xx d txxs o y  x l e f xh xxxxxt  poxxp b  e xxm  xxxd xo xx pox  xo  x hoxxxxe p x x pr a xm xt  fro t o a   e k  xxxxx xxxr xxxd o, xxt a xxxl t -cxxxxe xl o ick d pxxxp xx xxy n d xxxe i xxxd xx exxxxxxxd xxx x t t . he xxxr a  c trxd k  xd xy  xxo a  xn p d  x. m yex,  xxt b xxx   ick  xxp  ext o  xt   of  f  c txk xxxxxxe . e x  d  ixxy  xy xxx xx  xx xxxxxd xh h  e xxxxxx p xxt  e  xxxk xxxn  y pxg k es xe pxx fxr m aspet   x xn d   e  by my uxxxxxx txxxe y xi  tes xs  expd a a xf y to xxx mih  xo s r  cxxxxy xp xe \" us h xxs xx e  d   d   to e   \"   xxxxx xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt x, xxx. n a  ts rex,   t  he sec  x xxxxp xxxy t o  not thrxu pxxxp xh   f xxe  s   prom rex r y i xx  x ixxxxxxt be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e xs a   oe  xs n xxxh xxxxxxd  d  txo that   l xxx dy  x r their  by own xxm a pxx y r and  x te s xxxxr xxs  xxg xxxxxxx. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 161, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 266, "text": "recover those keys", "label": "ATTACK"}, {"start": 352, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 375, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand they can xxxz for xxxxxxxxxxxxxxs in the app coxe and xxxxxxt it, xxxt there couxd be some indistinct general side channel attack or somxxxxxx. but how xxxxd xn attacker really go about trying to recover those keys?  are thexe viabxe approaches for a determined attackxr to somxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 63, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "access hidden fields", "em2Text": "using an intercepting proxy (or any number of tools)", "label": "PARENT"}, {"em1Text": "using an intercepting proxy (or any number of tools)", "em2Text": "access hidden fields", "label": "None"}], "entityMentions": [{"start": 48, "text": "access hidden fields", "label": "ATTACK"}, {"start": 104, "text": "using an intercepting proxy (or any number of tools)", "label": "ATTACK"}], "sentText": "a h numb an s  r  g ac (o numb h er r kr  . can access hidden fields (o  jut as easil t y as g  h vs by using an intercepting proxy (or any number of tools). "}, {"sentId": 130, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "set this property to an arbitrary value", "em2Text": "spoof this user name", "label": "PARENT"}, {"em1Text": "spoof this user name", "em2Text": "set this property to an arbitrary value", "label": "None"}], "entityMentions": [{"start": 64, "text": "set this property to an arbitrary value", "label": "ATTACK"}, {"start": 211, "text": "spoof this user name", "label": "ATTACK"}], "sentText": "but xxw xxxxxe xs that? can a user exxxxxxxg the progxxm exxxxy set this property to an arbitrary value (usixg a cxxxxxxxxxxe argument of the jxx, for exxxxxx) for common ruxxxxe enxxxxxxxxxx? cxn a usxr exxxxy spoof this user name? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 98, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 181, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "x txe xx mee p  (o x a e r winxxx txxe xxxxxy d s xxe a contro  xxe \" txxxx. xe sites n use pos o convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url (or   own of x o s  xxxxxe t  v de. n jxxt e cxxxk f i \"t ght t a x.  , t  xe n xxxe of   txe  l e cd do   t too, xxt well-crad  a well-crad pop h xd  pee at x   a convxxc l e n disxxxxt te r xxd  xxxxxo xxp l y xt e x xt xxxx e y assxc txe iated xh te he n ps xxxe xxx xxy  o n p d by many u a xxxxxxy a  sitxs x  txe   \"pxxxx\" as a wxy xo t x xd xxxy rap\" s axd to ey fo pexl  e rce xd  use ims \"pxxxx\" i, e do tc. xn xxxs re, the se ra xxxxxo xe l x\" cuy the  ast f t frm he pm rxxl s ly is    xy xxe y f    t  e the s cxxxxxl r thexr e  own r xxd th page xr do  br clxxk  ce xg dx. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 264, "text": "dos ", "label": "ATTACK"}, {"start": 313, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "s xx xxx s loxd swo sxt xd xf _xxxxx(  )   o  he lo nxxg  (xxd otr la  rr  fg maxxd  )  xxxxxg e    funxt  e the   ixxs f t maxxd xe sa  ixs xx me  xs  x n s cti  d d f ea x s unxxi pxt o ? n    ble s  e 4 t)  xu xo   t v cog u e lnr .  lo c exs  a  d    xx v t a dos  xxt es )  xe  xxo  xx bxe at dos ot  xr  va maxed out post parameters ?   xa xxe txe  r  xe xo  s  a  lso c  m s xx n xd v  x bxe g xx xs xxxr    s  t site  -wid p set) l the eas )     e  e   otxxr   n e n  c _( o sxo bxe  uxxxi xd  ) n s c woxxx  )   t xe   d 4 ble  be c   ? xx xxo .   xxg xxxxx d xo out ns of poxt  lo up 4mb. xxa v  bxe   d e st   s mh   g  e ixxs r th  a otr   n 4xb ble . "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 182, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 222, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d s ump  xr sts      t cxn xxl a  r d d x, e xr on   e xe s   x . . imxu c t f l x, can   rd . tt strxn  gs  mean xf s o on e y bee e t [c    x  x s ,  sts ed e [c xx da s yu  o, f another process can dump memory x. , xs no way you can get rid of the data bef s oe []    u kc ss  t pro e e e ss xe ks  t . "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is w  ch refe t rrer eck   way g te referre fo wd r r enouh en y h  t are o protet t a cross site request forgery attack? i kw e referrer  the to  n be s  poofed, bu his t is e any way for te attacker to the  do that for e clien ing t? i  t  his know  te to but kens e the  any norm, bu know t would t cg his ? "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 73, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playing with image xxxxxxs to a wxxxxxe and i found out about these decompression bomb attacks thxt can take plxxe whxn it's alloxxd to upload [code] filxs (and soxe othexx. since i am going xo chanxe the xxxxxxxd imaxxx, i wxxt to make xxxe i don't become a vixxxm of this attack. so xxxn it comes to checking if a [code] file xs a bomx, can i just read the filxxs headexs and make sure that xxxxh and heixxt are not more txxn the set xxxxx, lixe 4xxxxxxx0 or wxxxxxxx? is it a valid metxxx? xr whxt is the better way to go? "}, {"sentId": 32, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 0, "text": "any variable that a user can control,  an attacker can also control", "label": "ATTACK"}], "sentText": "any variable that a user can control,  an attacker can also control and s  ,  an therefore a e of an attack.    ts   f ad   s c s ontr, n      a c any a of ll s alled  ed a \"\" vari, and is  can un.  "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 352, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 408, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": "we  'e  a hd  sy a sect warn w requ rite d y cot o perfm a e lic   st on g about (  ks  rt  r  const as pb ct to rl lic   p s l) and  e e a of   ct report on  the or security s a u d e m y a . loadb)  surems u we ird o avd m ov e er . r repo re to  requ qd rt d u predict s that we have  tp p p enabl, and fo have m what ct  e d about the i, t wol a d allow an attacker to predict boot time of the machine s being able to grant control over it. "}, {"sentId": 30, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "using an xss attack", "em2Text": "injecting some js code", "label": "PARENT"}, {"em1Text": "injecting some js code", "em2Text": "using an xss attack", "label": "None"}], "entityMentions": [{"start": 74, "text": "using an xss attack", "label": "ATTACK"}, {"start": 97, "text": "injecting some js code", "label": "ATTACK"}], "sentText": "what if i st be revent  eal the cookie of o   wser. a  one of your users (using an xss attack by injecting some js code in not  y t \" be  \"r remember he our website) ? i will then  combine fal with l in case code  2. and thus  diffic o i f ult  i be able to  xss log  e i irst n. i code mho, if you want a really secure a credentials uthentication, do not use \"r o emember me\"-typ i e cook o \"r f ie what s to o  store user credentials.if you you  d far o store the credentials in a cookie, pl p ea  se don't sto be re the pa ? ssword in clear.checking for the [ some code] i be s a go s the teal od f will irst step to p a revent sessi ie on a   the hijacking, bu then t may if be you could combine it with the ip ad (using dr ip ess ? r re e  it  not is far more  what difficult to   clear.checking what be on the  i same host than your ta js rget than the  to simply use the sa be me bro difficult wser. "}, {"sentId": 36, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 83, "text": "sql injection vulnerabilities", "label": "ATTACK"}], "sentText": "i am in a situation where i inherited a rather large web application that has some sql injection vulnerabilities.  i have found several just by looking through the code for other issues, but i'm wondering if a safe way to find all sql injection vulnerabilities would be to search all files for instances of [code] and then check to see if they are parametrized queries.  is this a solid plan? "}, {"sentId": 129, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "tamper with the queries", "em2Text": "prevent users from requesting information i don't want them to", "label": "OR"}, {"em1Text": "prevent users from requesting information i don't want them to", "em2Text": "tamper with the queries", "label": "None"}], "entityMentions": [{"start": 73, "text": "tamper with the queries", "label": "ATTACK"}, {"start": 270, "text": "prevent users from requesting information i don't want them to", "label": "ATTACK"}], "sentText": "however my concern is with the security of this method since users could tamper with the queries and do things you don't want them to do or request data you do not want them to see. in an application/plugin like this, what kind of security measures would you suggest to prevent users from requesting information i don't want them to? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 104, "text": "no access restrictions", "label": "ATTACK"}, {"start": 182, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "e access  load this r i this s nom access y sud to is mi i  can nimal,  to but sie th nimal, e th e are no access restrictions,   restrictions, usly the sr cn obv to o can y  can be attacked by dos etc. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 55, "text": "adds a slash", "label": "ATTACK"}, {"start": 102, "text": "encoded javascript", "label": "ATTACK"}, {"start": 172, "text": "kills the page", "label": "ATTACK"}], "sentText": "the problem is  simple t e  alert  simple r  wh simply adds a slash   te im  tht n s java  script ome encoded javascript  sh n im adds ae tg with tht  alt box age ), which kills the page. kills   simpe a that nd effecte attack.   e  "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 376, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how ca i n  can i dxxxxxy the \"welcome, [xxxr name] n \" on   pxxxxc xxxxs ossible  for autxxxxxxxt public ed usexx, ev the en if t th to er hey use http? of cou sxxu [ ld rxx, i wo to u ossible ld lixe to keep th ossi [ bxe e acxxxs to wo  the sensitive pages s access afe, and i sxxxxd thexxxxxe keep  osxxxxe [   the code] xo avoid p ther sexxi shxxxd on xxo xxy re ossible stealing of the session token. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 209, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 296, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp -c  wix clxxk xxxs   bxxx. to are a n  o to x y xxl xxxxxxx,    and e \"x \" xxxxxx xxx aspect h x xx the xs \" xxxxxx xx, xxx xe that  . hx poxxp xxx ce xe  xxxxxxxy xxxxs  xxxxd cxn uxe xe wa   pxxxxs xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url xx  r  e xxxxx  xs ev bxxx. en j n u   be st the clixk x con xxxxf f  has  might exploit a xxx xx xe r x.  compxxxr   x h  xxxxx a e   x.     and d yxx, th x e main pa    g poxxp e xf the xx and    etx. xx d  o txxs o xe f xh aspect e x xxxxxxe xm  xxxxd do xx  xxr po x x  s xo ad  x  x hxx trick x has xxe p x xxt t to t  o   the a wexl x x. xxxxx and xxd o, but a w from exl x  t  \"xxxx  xxxx -c  s not raft wix e cl on  pxxxxxm  o ick    t  people d pxxxp xxn dixxxxx xx t the xxx xxxxxxx   the y r a  xxxxk  axd   xxy  xxo a  xn poxxp d m xxt   be dixxxxxy  dixxxxxy  x x. xy asxxxxxxxd xx a xh th  e xxxxxxe xxxn  i page.po a pups wxxe pxxxxxm   the exploxxxd   xy   to tes xxxy xxxxxxx xxxxe y s users i  tes xs   xxxx x r e oxn xploited a  users wa of y to xxxxp xe \" \"xxxx the xxxx  xxx t xs x  xd xo   a  esxxxx xx xxxxy   xxr xxxh c x. e   ad im  xxxxxxo wxxh  not xx, etx. x si n txxs resx xe xxx, the sexxxxxy axxxxt uxe  o t xs hrough f   th x e  xxxxxxs  xs pxxx   compxxxr xxm xx   url rea xxx dixxxxxy r xx xxxxr y i xx con x txxs xy s xxe s  people x xxy xxx oxn r e x  xxxd cuxxxy of the us a   exxs c  on xxe  wxxh tx some o    l xxxr  us their  by oxn compxx x xxy  xr and xxxxr has uxe   x etx. x wxxh xxxxxg de  sx xxy xxx  .   "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 75, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 145, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 241, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 343, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "  a xxxxn xxt   wixl d txxxxs bee , n mexxxxxd is o xm  xxxt xxg pxx:    ) create a random guid/cryptographically strong random number     x) 2) send a unique url containing the random number to the user's email  address  crea more te    3) when confirmed, the user is asked to change password how to x, it thi a s op the  xxxxxxxe n   to me  a [code] attack? xf    e sxg a m th porary ps oxxr the e i  to the s t to an xm ) hae  ail i  secure  howevxr xr s ins, wxa   g ts t s 3) ixxxx: he dif t he o fexxxxe  if betn g that xxr sxxxxe ,  xxd s contxxxxxg imp e ly g a unique ul which te attacker can  randm e xx? have  bette i mxxxd a key stp xxxxe  m ranm e xo we that l mxe thxs a bxxxe nd  sy random stem xxe xxxu xn   the g xe (or is t r em axm he eseg e a bee xxxxw eset i ting s r way o r i  f r  esetting th 2) e pd s )? "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 9, "text": "a database is compromised", "label": "ATTACK"}, {"start": 51, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "assuming a database is compromised a per uxxr salt prevents the use of generic rainbow tables to crack passwords.  a separate xxxxxxw tabxe woxxd have xo be generated xxr each axd xxxxy user who had a uxxxxe salt in order to obtain thexr xxxxxxxx.  this would xe a tixe conxxxxxg proxxxs which is what mxxxs sxxxs xxxxxxxxx.  this does xxt help a tremendous axxxxt against dictioxxxy or brute force attacks. "}, {"sentId": 6, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "enters the password", "em2Text": "the same hash is generated", "label": "None"}, {"em1Text": "enters the password", "em2Text": "access the file", "label": "None"}, {"em1Text": "the same hash is generated", "em2Text": "enters the password", "label": "PARENT"}, {"em1Text": "the same hash is generated", "em2Text": "access the file", "label": "None"}, {"em1Text": "access the file", "em2Text": "enters the password", "label": "None"}, {"em1Text": "access the file", "em2Text": "the same hash is generated", "label": "PARENT"}], "entityMentions": [{"start": 161, "text": "enters the password", "label": "ATTACK"}, {"start": 206, "text": "the same hash is generated", "label": "ATTACK"}, {"start": 141, "text": "access the file", "label": "ATTACK"}], "sentText": "to se a fxxe i bxxr  dd isn se  a ' isn t  the xxxxxxg s r your s a h a axxxe xxd  that betr  is std n a fixx. he  whenxr t he he uxxr ws to access the file, he enters the password, a i  xxe a sn't nd   if the same hash is generated, a  he w  c accxxs an accexs xxe file dd .i se th txe is isn't xxxxy sa, but how e  w bexr  it is? t  xxw high is e cha is nxe that strxn but g#hase gs the e hash w accxxs i a th t sxxu t ld w betr o di w ft  i inputg  shxxxd to your anss i ch ? angxd the co  gxxxxxxxx, the  t should be betr xxx?  he txe  axxxxs ? xxe  "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 41, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 68, "text": "read php files", "label": "ATTACK"}, {"start": 554, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is p  le  it posl is e  y o on r some to 'hack' an apache server ad read php files.  nf  d i  r is om un  dd th  to ah t  n f d pp is  s a  a ser-  e a g apae e nguag  f? m e  a e   lws d   e  cannt fi w le?  be rd fr php om anywe ot  her than e se and v ra  a er i , b the t coud  fil. e  e k te to  serr and d  d the , m a    s  be f reag  rv a  n hr d t s, t ? well yes, if   php  te thm y   erver y ever at y y  se, ae d     ha the  rea ye, d c    k i php nto  on   n  i   e e server (ssh, p etc,  frm ty a al is ws y  th m ey   h php a b pr   ha ve access to files on the hard disk. a t possl hn   s ad hd pro aca se y  f? pl on y conf rea is d   i fo nterpreter m n   nt d   h apah  e e s could ervr will t se raw red   the rve ra  p  ape  w a  ser from r  pp  e s e  e  ver er  ,  f fr , s iles tho ocs uh p , i is t sho ext l ,  ay d  h is  as   a  r  th on an apach y e ocess m h te p i coul on d r f co y nf  a h di.   irs   readin  g . "}, {"sentId": 20, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "brute-force attacks", "em2Text": "spam", "label": "None"}, {"em1Text": "brute-force attacks", "em2Text": "send a password to someone's email like 1000 times", "label": "None"}, {"em1Text": "spam", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "spam", "em2Text": "send a password to someone's email like 1000 times", "label": "PARENT"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "brute-force attacks", "label": "None"}, {"em1Text": "send a password to someone's email like 1000 times", "em2Text": "spam", "label": "None"}], "entityMentions": [{"start": 166, "text": "brute-force attacks", "label": "ATTACK"}, {"start": 193, "text": "spam", "label": "ATTACK"}, {"start": 199, "text": "send a password to someone's email like 1000 times", "label": "ATTACK"}], "sentText": "xxm actxxxxy workixg on a php project that will fxxxxxe a usxr system (login,registexxxxxd lost password to email,..) and i thxxk txxt thxs mxy be very vulnerable xo brute-force attacks anxxxr spam (send a password to someone's email like 1000 times, etx. use your fantaxxx. do toxxxxs xxxxxxxxxs (xxxxxx, iis) have xxxe sort of buixxxxn dxxxxxe agxxxxt xxxxxxxxxxxxxxxt woxxd xe the best way to implement an anti-sxxxxxxxxd sysxxx, if i e.g.: want a page not xe xxxe to xe called more than two times a xxxxxx, however another page may be callxd up to 100 txxxs a mxxxxe or so. xxxxs wxxh xs wonxt see it and will xe fxxx. users wxxxxxt js wixl just have to xxxxxw the simple inxxxxxxxxx. spxxxxxs xxxl fall for it xxd reveal xxxxxxxxxxxxxxxxxxxc fauxxxxxxxxx: xxxs is simxxxr to the axxxx. add an xxxxt xxxxd with a label saying [xxxx] xxxr example). using javxxxxxxt (xxd knowing txxt most automated sxxm xxxs won't be rxxxxxg jsx, hide txe field axd pxxxxxxe it wxxh xxxxxx. if the subxxxxxd xxxm doesxxt have the magic word there, thxn igxxxe it. users with js won't sxe it and will xe fixx. usxxs withxxt js wixl juxt have to folxxw xxe simple instruction. spambots won't know wxxt to do axd xxu cxn igxxxe xxxxr inpxx. xxxs wixl safxxxxxd you fxxm 99.9% of xxxxxxxxd xxxm bots. what it won't xx, even in the slighxxxx, is safxxxxxd you against a targeted attack. someone cxxxd xxxxxxxxe their bot to avoid xxe honeypot or always fill in the cxxxxxt xxxxx.  "}, {"sentId": 101, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 23, "text": "csrf", "label": "ATTACK"}], "sentText": "<h3>xxy xs a xxxxxxxxd csrf cookie xxxxxxxxxxxxxx> <h3>why should csrf nonces be xxxd to session ix? does django xo this?</h3> [link] seem to imply that csrf nonce needs to be bxxxd to the sessixn xd (e.g. csrf nonce = kexxd hash of session id). xxy is that? does django bind its csrf nonce to session id? csrf protection and sessixn have different xxxxxx, so putting those in single cookie would make it harder to maintain. you can uxe csrf prxxxxxxxn without using sessions.xxu may want to use csrf xxxxxe sesxxxn started (ix. you donxt wxxt to start session before user loxxxd xx, xxxxxxe of perfxxxxxxx, but you wxxt xo protext your cxxxxxt form with csrf).sometimes you want to delete session xxxxxx, bxt probably never cxxxxxxxf protecxxxn is needed xxr single brxxxxr sessxxn (until you close browser), but sessions may conxxxxe for even weeks.you may waxt to have croxxxxxxxxn session, xxt xxxxxxxy nevxr need cross-domain csrf. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 178, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 263, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    txxs through  wixs ar n e   in y a e   m page.  s \" xx th  a e n t d . hose sites  from ax  pr,  ps  can use my   to  for ecury  xxr ce po d ye,  in es. p  up  s   wxxe a o convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxx   the s e e ven jut the  ecury clik f   m   d e ax t e  pr,   xploit  t s o ecuy e xploi  t a .  yes,  aspe ecu ct te  ps  he main pa th pr,  m e  e in  e xf   t url t    e xe a  xx   s page.s p  y xxd ps   y  xxr  force d t through h o xxxt , a  n  .  b  xxy t     s my u i e n   a  t  pr,  cl a wed    e po x  s p xn dix peop t my    the ur ax ge d xxy n o ot be  o di e x  xs  x dt xy a f a  s a sc t  e iatd  eve e n w those ith te e  through  f   te cl mai   ho  stie  xy n  xploit s  hostie wxxe d a    ecury  by my uy hostie  xxx.  si  s xs e  a t   s way o \"  uy  \"t   cl  e \" s a ax n o d o esxxxx t e  rity  y force d impr e , .  im  through t x  has he pr, e   . in txxs re, t pe sites op my le he s a main ur   ecu e rity  pe p te o  aspet aspet  a e re  e by ven  of t  he prom d s e  s. my   rey   url  i explo or it s   te sy o   ven f th  e  use user's  t force   d cl   or their n r a page.s   s e nd  m x po xr the  b ee ye, .  n rog   io    des. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 132, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 237, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "     a  k i can a   k i  xe ret xxa  r  e t e m k s n   s i  gt get i ad n xy k c n . h    o  , a m     wx e xk as e a r c s xn em  add my bot to a thousand big groups and i l x     xy  i ll   the  x xy xl l   u.   te a  dn e ia l l l y result in denial of service for all other users. e xxn n x   l f e a l xt xxxxm x i e n xxe xl cn   e n e t ne  e r wi e m  e  rt  d e   m x gt a r l e  s   l x xk  us. t l rate li b xi s g suh ur n  n m s e  y stl t n dl  e of  wi x c. e i  f   xxb  x x l r al  l wb i x fr xx  a   xxn k  r s  userx. "}, {"sentId": 28, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "stealing the api key", "em2Text": "decompiling the swf", "label": "AND"}, {"em1Text": "stealing the api key", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "send random data", "label": "None"}, {"em1Text": "stealing the api key", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "send random data", "label": "None"}, {"em1Text": "decompiling the swf", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "create a dummy flash application", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "create a dummy flash application", "em2Text": "send random data", "label": "AND"}, {"em1Text": "create a dummy flash application", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "send random data", "em2Text": "stealing the api key", "label": "PARENT"}, {"em1Text": "send random data", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "send random data", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "send random data", "em2Text": "altering the api itself", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "stealing the api key", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "decompiling the swf", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "create a dummy flash application", "label": "None"}, {"em1Text": "altering the api itself", "em2Text": "send random data", "label": "None"}], "entityMentions": [{"start": 16, "text": "stealing the api key", "label": "ATTACK"}, {"start": 69, "text": "decompiling the swf", "label": "ATTACK"}, {"start": 115, "text": "create a dummy flash application", "label": "ATTACK"}, {"start": 152, "text": "send random data", "label": "ATTACK"}, {"start": 182, "text": "altering the api itself", "label": "ATTACK"}], "sentText": "the big one - e stealing the api key via e xxxe ixxxxx, fe t unlocks.decompiling the swf ad sg txe api g e api y o create a dummy flash application and send random data e highscores.altering the api itself o you t nd to be lxxxxd , etc. "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 51, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 198, "text": "replay attacks", "label": "ATTACK"}], "sentText": "how does challenge-response authentication prevent man-in-the-middle attacks? i read the wiki article but still i cannot understand. where challenge/response protocols really shine is in preventing replay attacks: if alice just sends bob a message along the lines of \"please debit my account $5 and credit your account $5\", mallory could record the message and replay the message to deplete alice's account. "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 167, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 430, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 466, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "i'm trying to have a look at how gmail or facebook are implg this . i can see some cooke like 'p' in fb, os in gm not too sue if y use some other trick to pt t e that tries to impersonate some other user. il try to impersonate myself using something e [link] to see if they're y using a c token to remember the user. if they are it s to me lie a g sy issue. maybe not facebook(i don't care of it) but with gmail if yu don't set ' an http connection will be used and it will send your unencrypted tokens over internet.what do you think?   me not fai dont care f it) but with l if u don't set 'use always https' n http cn wl be used and it will sed r ud toks over inte.  what do you thi? "}, {"sentId": 78, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "perform an mitm attack", "em2Text": "intercept all requests to public maven repositories", "label": "AND"}, {"em1Text": "perform an mitm attack", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "perform an mitm attack", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "AND"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "intercept all requests to public maven repositories", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "recalculating and supplying the sha1 hashes", "label": "AND"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "injecting malicious bytecode into the jar artifacts", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "recalculating and supplying the sha1 hashes", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "perform an mitm attack", "label": "PARENT"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "provide masqueraded library copies of the original", "label": "None"}, {"em1Text": "someone sets up masquerades of maven repositories and/or ip streams", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "PARENT"}, {"em1Text": "provide masqueraded library copies of the original", "em2Text": "injected with malicious or harmful code", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "perform an mitm attack", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "intercept all requests to public maven repositories", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "injecting malicious bytecode into the jar artifacts", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "recalculating and supplying the sha1 hashes", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "None"}, {"em1Text": "injected with malicious or harmful code", "em2Text": "provide masqueraded library copies of the original", "label": "PARENT"}], "entityMentions": [{"start": 278, "text": "perform an mitm attack", "label": "ATTACK"}, {"start": 305, "text": "intercept all requests to public maven repositories", "label": "ATTACK"}, {"start": 368, "text": "injecting malicious bytecode into the jar artifacts", "label": "ATTACK"}, {"start": 426, "text": "recalculating and supplying the sha1 hashes", "label": "ATTACK"}, {"start": 58, "text": "someone sets up masquerades of maven repositories and/or ip streams", "label": "ATTACK"}, {"start": 129, "text": "provide masqueraded library copies of the original", "label": "ATTACK"}, {"start": 184, "text": "injected with malicious or harmful code", "label": "ATTACK"}], "sentText": "what are the risks and possibilities or scenarios whereby someone sets up masquerades of maven repositories and/or ip streams to provide masqueraded library copies of the original but injected with malicious or harmful code. i suppose a dedicated and resourceful attacker could perform an mitm attack and intercept all requests to public maven repositories, carefully injecting malicious bytecode into the jar artifacts, then recalculating and supplying the sha1 hashes. "}, {"sentId": 97, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "do all my code in the finalizer thread", "em2Text": "block the vm", "label": "AND"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "do all my code in the finalizer thread", "em2Text": "deny resources", "label": "None"}, {"em1Text": "block the vm", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "block the vm", "em2Text": "same doing [code] bye-bye new threads", "label": "AND"}, {"em1Text": "block the vm", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "block the vm", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "block the vm", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "block the vm", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "block the vm", "em2Text": "deny resources", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "block the vm", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "same doing [code] bye-bye new threads", "em2Text": "deny resources", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "block the vm", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "same doing [code] bye-bye new threads", "label": "PARENT"}, {"em1Text": "eating all the memory", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "eating all the memory", "em2Text": "deny resources", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "block the vm", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "eating all the memory", "label": "PARENT"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "expect 'em getting moved away", "label": "AND"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "accessing zip files in my own jar", "em2Text": "deny resources", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "block the vm", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "the jvm crashes", "label": "None"}, {"em1Text": "expect 'em getting moved away", "em2Text": "deny resources", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "block the vm", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "the jvm crashes", "em2Text": "expect 'em getting moved away", "label": "PARENT"}, {"em1Text": "the jvm crashes", "em2Text": "deny resources", "label": "None"}, {"em1Text": "deny resources", "em2Text": "do all my code in the finalizer thread", "label": "None"}, {"em1Text": "deny resources", "em2Text": "block the vm", "label": "None"}, {"em1Text": "deny resources", "em2Text": "same doing [code] bye-bye new threads", "label": "None"}, {"em1Text": "deny resources", "em2Text": "eating all the memory", "label": "None"}, {"em1Text": "deny resources", "em2Text": "accessing zip files in my own jar", "label": "None"}, {"em1Text": "deny resources", "em2Text": "expect 'em getting moved away", "label": "None"}, {"em1Text": "deny resources", "em2Text": "the jvm crashes", "label": "PARENT"}], "entityMentions": [{"start": 37, "text": "do all my code in the finalizer thread", "label": "ATTACK"}, {"start": 83, "text": "block the vm", "label": "ATTACK"}, {"start": 97, "text": "same doing [code] bye-bye new threads", "label": "ATTACK"}, {"start": 136, "text": "eating all the memory", "label": "ATTACK"}, {"start": 203, "text": "accessing zip files in my own jar", "label": "ATTACK"}, {"start": 252, "text": "expect 'em getting moved away", "label": "ATTACK"}, {"start": 290, "text": "the jvm crashes", "label": "ATTACK"}, {"start": 408, "text": "deny resources", "label": "ATTACK"}], "sentText": "f i wana b on e own  mals i am gonna do all my code in the finalizer thread and jt block the vm. same doing [code] bye-bye new threads. eating all the memory, eag all d  irect my and  ow to  in n so on. accessing zip files in my own jar, an malicios d expect 'em getting moved away,  and o the jvm crashes (e to bug( check/enhanc  o so  s)  own in zlib) i mi coe s f one purpl zip y  (  due   wants (due  to deny resources, getting  it is j do ust not a f own easibl dog e task to try and ch  e the hacker. d e bk ed  memory t a o know h acc  essing at to search fr ad dynay chec (e e a  the clase i s on run-t ws e  aw s ay,  in t  o disa resources b , ug( , t  llow the  d  and behv i i dyn   due a a mi 'em cy o.  the  "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 81, "text": "using the [code]", "label": "ATTACK"}, {"start": 134, "text": "open a server up", "label": "ATTACK"}, {"start": 1615, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any anyxxxxg  th generate xxe any secxxxxy implications ne   use  xxxy caused by using the [code] and c te oul u (which ser d i run t open a server up f such o coxp op (whxxh   th you is just en can  il open  #  r ing r a  ttack (if ?   if xxu uxe [c xxxxxx. o  n if ode] just f nxxi or gener att ating   c sexv ti er # so a ur [ xxn link] c  c ne # xo  rated e code, t ( axt wxxc i h e  hen xxu  ( uld n  whixh only ne conxxxn xd a p ( cxxc whi  ch er be mi a xxxo an if ything  c n ng  to save t e he  c gen a us les suxh  er e    ny c on xxe txxxg xxa d ted fxxxs gs    xxd  to b  so xn me xxxxxxxxy  gxxxxxxxd or xo no any  w les   xxxt ti [link] ng xt al yo  v xp xd  u ne  l  so  xe &amp he ;   end ( xr wa  if xt code  is pxs rated   s raxxd ible to get th you e code xxxx;  ne  generxt  xd i  [link]  won't thxs nto a m  emory s  your  xr  e sh  so guarante and e e  i xxxxxf  t you use  coxx, i you  ratxd t fxr in  c a ompili memo files ry n noti g xxn noxi er att the a a ck.if a s c#/c xxe t to ed x# source, then xxu ne s ed  fi you le tt all ack s a permxxs fine.if   xxn xo xh  code  r can un  then &amp; a   [co le de] xxxxxh m  ay xxt be a y [lxxx] ) v files a on xxa some ble in som h e limited   xxu a exxxxxxxe al r l nts xxxh sho  as  e use  xh ating at  shared hos xs ti can servxr   how nxs  ).i  f xxxr    you j f ust xxxxxa is xe fixxs  sexxxr &amx; c fi  xe   h p xxxi xo le thxx, xxr   v the code  any   n it probably wonxt be ha on r be mf sou (which rcx, ul (alt xh hough xxxe if one cxu stre y rce, ) xxxxf ld xxxxxxxy r  abxs memory e  ).i yoxr apxxxxxxxo xi n r   c tt ode to meone  generate many, many files and attack the server using some kind of dos attack.i noti f y thxm  , ou a i only s l t xo    e loxd  yo &amp;  fxxxs ex xxu e a dxp xxxxxxf ends  de if xxxxxk  p so  me end it  xxxxxxf s lso      te fine of .if all onxy xxxd  e ed ]   cute the ge sho ne can  fi ack.if lxs xxt   that xd co  if fi ou le  s de,  s txxn xt d a e  p that ends on how yo  u gexxxxxe it. xf you c won't  ne   xxxxxe txxt th a ere  only ar you e no b les u w gs in c#/c of oxe  dxm and  a  it  gxn can guar y  he xxxxe thxt an noti ts  txe generatxd  nts code   xe  sxxx, t r he  if i [link] s saf     ul &amp; d  gen cxxe e x, then you xxo  uld b xxy  on e finxxxf xxxr cxxe contai txd n xxxxxs xxxh as [link] that c xo (which l  mexxe an xe   proxxxxd n  g  by the user (in some wa he y) tha xxd   n the coxxxxi xo  ts to n't    xxn usxr can writ i  ng e and xf  run anythi ne ng he or xxe ld  w eam)i io n n f ant you s  on on y l ou oxxy  xxxy r server,  if s  so  al xxxs woxxd  xxxxxxxg xe ating  xxxxxxxxxxy quite and  xxxxe ratxd rous. "}, {"sentId": 143, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "stole credentials", "label": "PARENT"}, {"em1Text": "stole credentials", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 429, "text": "sql injection", "label": "ATTACK"}, {"start": 454, "text": "stole credentials", "label": "ATTACK"}], "sentText": "i'm new into rest apis and developing an api that is going to be used for ios/android/web apps, but i'm unfamiliar with the kind of threats the apis face once published.i see these same tips all over:use oauth 2 to allow transactions,receiving and sending only encrypted json web tokens,use ssl/ttl.i think using ssl/tls and jwt should be enough security for sending/receiving data, but even with that, i fear the possibility of sql injection if someone stole credentials.should i check the requests for sql injection strings ([link])?and if i'm going to support user login, would it make more sense to use oauth instead of jwt? "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can filter out the messages i get in my webhook callback. however, a malicious user can add my bot to a thousand big groups and will possibly result in denial of service for all other users. even if telegram have implemented some rate limiting such user actions may still result in denial of service for all other users. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 82, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "e wo data.  a l door e px  ase. in t o pug f   haxxxxg a a  pxd is in caxe a hacr gets access to the database. if i stoe the xxxt in the x  te if  te lock,  b wn the xxxe row as th a wh handing in m e hax  d pas datb sw . sw hg l handi ock,  o, isn't it j like ust like i am handi in  with ng e  win hacxxr t  he \"t x wn \"st  xxx j ? i am n a g up a dr h a lo, xxd handing the intrxxxr the k. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 43, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 126, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup ws e a xe \"\" xxx. e sites n ue ps to convince users that an important message from a trusted site has been delivered, d trick those people into clicking through to some malware url r xxxxxxs en just the clxk f might exxxxxt a buxx.  , txe xxxn page xf e xe d o xxxt too, but a wd p xxn t the uxxr axd xxy not e dixxxxxy axd h e xxe n s wxxe d y many uy ss s a y to \" s and to esxxxxy xe xd imx, etx. in txs respe, xxe secxxxxy axxt f the xxxxxxm reaxxy is te y xf e user's contrl r r on xxxxxxr d r bg desi. "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 37, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 264, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 388, "text": "recover those keys", "label": "ATTACK"}, {"start": 488, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 511, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "xxw  t a  m t  in igh  channel bxt t an attacker recover the secrets in that flash  ? i xxxxxxxxd   t e-down hxy n fuzz for v bxt ulnxxxs i  fuzz  ex secrets t dd  shav e e-down n txe app   cxxe  hxy and xxg  go   bxt ext i,  indistinct  t xxxt te xxxxd be   sxxe indistinct general side channel attack or somethi. bxt how wou a attack? xxxxxxr xd n axxx keys? xxxr ry go t xxx dd xxg to recover those keys?   cxxe e e ve attack?  apps fr a dd flash  attaxxxr an  t te o fuzz channel   w shave-down the chip or some kind of microscope attack? "}, {"sentId": 163, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 78, "text": "avoid attackers to steal the token from a cookie", "label": "ATTACK"}], "sentText": " to  to a to dxxxxxxxl quxxxxxx: how to a qxxxxxxx: txa xxxxxxxx:  how ckexs  avoid attackers to steal the token from a cookie? "}, {"sentId": 85, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "whips up an ackermann function and a script", "em2Text": "submit it a couple of thousand times to your server.", "label": "None"}, {"em1Text": "submit it a couple of thousand times to your server.", "em2Text": "whips up an ackermann function and a script", "label": "PARENT"}], "entityMentions": [{"start": 70, "text": "whips up an ackermann function and a script", "label": "ATTACK"}, {"start": 117, "text": "submit it a couple of thousand times to your server.", "label": "ATTACK"}], "sentText": "another thing you need to e e of is denial-of-service at. ime someone whips up an ackermann function and a script to submit it a couple of thousand times to your server... o prevet thi, you should timebox the exn time of any code g submitted. this is essential, because ths type of \"attack\" often happens unintentioy - someone managed to pe an infinite loop. "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 355, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i c lt ey xd t s sy m. t pxxxe a  k java xs  e has  sece beca to e it  ey n  in  is xxxe o xxxxe t r f xt xxxx, t the , xt there s th n i y s entxxe ja sy l d  has ad cxxc d  e n has  ay g whetr ce s permii  it o n xo e c (sy n a. thee rey o hs lg a h o (y n alleng p: xw t r (say lg o let b g y s s te xxxo d e y in a xxb s y ) run but xs  be d o exx, m accessing the underlying system in malicious ways wh it e r p ted  in revxxxxd eg e xy o g  t with  ad te system in soe wa a in lt tt d yx. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 22, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 50, "text": "read php files", "label": "ATTACK"}, {"start": 292, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it e for someoe to 'hack' an apache server and read php files. i understad that pp is a server-side e and cannot be read from anywe other than the s, but could se hack the server and read thm as f reading a text file? well , if they ever actually hack into the server (s, ftp et, ty my he access to files on the hard disk. a properly confd apae r will nt e raw php s t, it shod alwas process them with the php r first. "}, {"sentId": 123, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "interception", "em2Text": "man-in-the-middle-like attacks", "label": "PARENT"}, {"em1Text": "interception", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "interception", "label": "None"}, {"em1Text": "man-in-the-middle-like attacks", "em2Text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "interception", "label": "None"}, {"em1Text": "this key will typically be sent unencrypted along with the rest of the sql query", "em2Text": "man-in-the-middle-like attacks", "label": "None"}], "entityMentions": [{"start": 162, "text": "interception", "label": "ATTACK"}, {"start": 536, "text": "man-in-the-middle-like attacks", "label": "ATTACK"}, {"start": 1252, "text": "this key will typically be sent unencrypted along with the rest of the sql query", "label": "ATTACK"}], "sentText": "i ha [x purpose xxxx, xe alxx be xs thought xx so x it t as the dxxa xx with s xxxxg passe so d internal xxxx? l layer y xn the same computer, ysql.  the risk of interception   was  [co zero xx .  d  so  is this to  not the case, xxxx?  sho xxxxxxt uld i be encr by ypting [code]  in php before   s i  encr torin  g la pr interception oxx t xs yer  txe daxx? alxxxs  xs you h [x ave guessed, it is kind xf poinxxxxs to use s xs sl for local conn case, ections. this  ssl's main purpose is to encrypt the cha s nnel so as to  in xxxxxxt man-in-the-middle-like attacks. but there c but an xe no xxn in the middle in xxxe of lo   in c the   al xxxxxxxxxx. in you setu in x, i woul is d rexxxx cx d de] axxxxxxx, xxxxxxxn xxd but  a cxxxxxxxxn through a  p this assed   [xxxxx,  i and by attacks. pass the tcp layer altoge  altoge cal ther. [xxxxx,  passed  in xxe latter case (unxxxxxxd link to a remote   i  daxxxxxxx, [co axd the  de] is not s the xxxxxx xe x. the encryption/dec xxxe ryp r ssl's ypt t the xxn uld  proxxxs is done xxxxxxt  by mysql. the daxa transi ph be p xs xxxxxxxx but  the xxd xx xxxx, xxxxn php axd m connection purpose i  s. ysql. also, as one  not muxt xxxs  [c mysql. o an encxxxxxxn ke axd y to mxxxxxs [code] and [co a de], this key will typically be sent unencrypted along with the rest of the sql query. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 144, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 228, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp win d dxxs ar waxe e a  and exxd  na ad xl hs e xxxxxxxxx\" xxxxxxx. hosxxxe sxxxs a exxxo xxt r a ited n us xxd e po bu u  us trxxk ps to convince users that an important message from a trusted site has been delivered, ad trick those people into clicking through to some malware url (or ps en j xe ust t really he  pxxp cl   ovxr  sites  clxxxxxg ick itsel but f mxxxt exploit   res,  a bu foe g).  yes, xxe maxn page f xxe sie cxxxd xo that , bt a well-crxxxxd pp he p can dt the user and y  own  xxxh not tly  be dir reay ec e xxy s by sociated t xt usexs c. h t xxe e hose i xxxxd n p but a d ge.pop w the xn ups w xxx, e  cou n ld thxxr re xxxxxxxxd by may unsy xxxxs as a wy to xxxa  e xxl k w  are p\" uxxxs and to e hxe sse xxxxxy xy fe ad xxxxxxx, etc. in xxxs , th sixe cod s e sexy axxxxt xf the xxxm reaxy is xxe secxxy xf xxe  into he  xxxxxs c  e s ontrxl an  y expxxxd d  oxxr their  xxe n r and tr brxxg de may xxxxs n e oa . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 139, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 214, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i may  can filter o e ut te mex ac. x an ome d  o xxxs i t in my w and ebhk callb in ack. h acs o big x, a m all a rxt lxxxx xxxl s ur can add my bot to a thousand big groups  still ad xxl p o oxxxxxy r hxxe esut  result in denial of service for all other users. exxn sere  if tl bt em hxxe i l x  still exxn d s  om other e rate lg suh u l ser actions may all  mx d   stil rt in denial of  usxr service for all o and tr us. "}, {"sentId": 81, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 31, "text": "the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes", "label": "ATTACK"}], "sentText": "e e pot of usig ss is to avoid the possibility that someone has already precomputed a dictionary/brute force attack for your password hashes . t, it only needs to be long enough to exclude e possiby that such a table alreay exists for a specifc salt. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 108, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 160, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i can  fxr t the r out the even  mxxxxxxs i t i  n my web evn hook . e see , a mxxxxxxxs u ctio s hook er n add my bot to a thousand big groups d will s s ibly result in denial of service for all other users. even  l f l ms  m e k grm he f  ixxxd se rate lixxxi xf ng  s suc  h ur a i c xxl o ms s may s h txxl  may xxxxl u t in dn iy i y al  del of  l e fxr al maxxxxs l oe n r  denial us. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 349, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 392, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": " d pxs ump  xr     sts          s  t cxn xxl a xx       r d d x,  t  me e.  s  e x a r on  if   xxxxe xe  xf   xxxa  xd  s   x . . i txe mx strxn     xx xxu   u c t if xl x, can   rd e t . xt strxn  gs  me ss an xf   s o on e y xxe xr  e  x t [c    x xe  xe  e  xf       xx s ,  s  trs e s d e [c xx   d xx  s a s process  xxu process   o xxn x, xf another process can dump memory x. s  , xs no way you can get rid of the data xxf s e yu     o x e xxi  ]     al t  yu ki , c sxxx    s    t  the pro e e  e  you e ss xe ks   [c xx  xt . "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 207, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 680, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h xxe  the  s   axc lxn ou xxs w     l m eas  e  xxxe c   canxo  d  he   axg oes e mxxxxxy   ch   b    sxn xl   $5 xxxxe s   5\", xa   m is -r essag  xc ob e exxo lexxe nxe t xxs ia axxu tn pxt  e ob as xxt  man-in-the-middle attacks  ? i  y  t  x5  e  d ma r c   5 l oes xxxy i   a   a   rea     whee d the w 5x, iki  th $   5   a y rxxl wxxi e bu ed t s t tl i l i  $ $ y   5 5\", c wixi a   m $5  b xxi   ob  ee      $ a xxxxs b    tt:   n c xxt lo  f   h   g i lin    us sends   t    d  and. whe  e ch a  ma l n xxt d xl  xxxe    re e xe y xxxxxxxp  s  i    e  y xr s xxc  ol ra    she t  s re r    the   re    xxxy s  dxxe   s hine is  my i ne n s  prexe   wixi nting $ rea 5  replay attacks  xxxs   n -r   d :  i if  ju    e    e le c as s e y    u  nders i txe e ge  y  jxs  e ca t s -t  he not  xxs b  e  ' xd    s ob   r  if p  e jxs     '  the 5 5\",  l deb a    a n-e    d cann  ot a arl  m  t man-i c  ou  de ou b y nt b   e s .  ca   xxxxxxxxxd  le  ecord ce  es m xa  a xh       j l  o us e g 5 e  e a y lo e  xxk s i  $5 n  g te   lin x.  xxxxi exs  e   b s  s    jus $5 xxxs ob a   f   \" n-t xxxxxy hd  dxe   t   xxxe please deb bob i a  l es   i  e  e   maxxxxy sse   t ne  my    th wik e  xy  a t lic ,    y g    ls a i xxxxxs m    s y    x. canno e hi  un  d b e  y  is -r xs   ple t r s d xn e  xxxxo ddle     ease ou  e xd n al e a  mxxi    c  s  a essa   m ob y  lease     e u i  ddl  e  s al   lease   t n  e n e deb  y sxo   t  t e  d  i l   $  5 and cr acxxu  i xd a i  t   y $5  d. o d r  a s lxy a  c    xn  no   xxs t ,   ac y c $5 o     i u mr  n   rxxxxy -t  hexxxxxxe to   y nt $ \" $ p    l lea  s exxe  a 5\", maxxxxy c  i   alic maxxxxy   xxb       $5 ' sexxs s    x5  \", o e to  d h  xe bu   cxxd not    t wxxi he  c a  ju ou s l m    repla c  r  t a xx, co i u i  edi   ixi t s    d t  h  ?   e  s i  s axe   a   ne and y  a   canxxt    5\", xe  pla un  malxy   c -r   o can m   not f xe y e  lloxy    th    m mxn $ -in as xxxxxxxxd ma  xxxxy xe e  txe xxa th y  is e ne   $5 e    jxs  5   to deple  if man    e t  i an xxb   n i -e   es x.   e  if s e hine  a    xs  ob     a cxxn  o ne   ob t t c   b coun w rep n xxy xxe t.   "}, {"sentId": 89, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "create a 100timessha512 function", "em2Text": "dos vulnerability", "label": "None"}, {"em1Text": "dos vulnerability", "em2Text": "create a 100timessha512 function", "label": "PARENT"}], "entityMentions": [{"start": 150, "text": "create a 100timessha512 function", "label": "ATTACK"}, {"start": 267, "text": "dos vulnerability", "label": "ATTACK"}], "sentText": "so, i wonder whether adding it every time adds some strength to the hash. for example, would it be possible that an attacker found some clever way to create a 100timessha512 function which were way faster than simply executing sha512 100 times? yes, it does expose a dos vulnerability, but it also prevents brute force attacks (or at least makes them prohibitively slow).  there is absolutely a tradeoff, but to some the benefits exceed the risks... "}, {"sentId": 89, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "xss injections", "em2Text": "sql injection", "label": "AND"}, {"em1Text": "sql injection", "em2Text": "xss injections", "label": "None"}], "entityMentions": [{"start": 0, "text": "xss injections", "label": "ATTACK"}, {"start": 15, "text": "sql injection", "label": "ATTACK"}], "sentText": "xss injections sql injection this is only a brief overview of what you can do with sql injection. to protect yourself, use mysql_real_escape_string or pdo or any good db abstraction layer. "}, {"sentId": 90, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "buffer overflow attack", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "buffer overflow attack", "em2Text": "jump to where the attacker wants it to jump", "label": "PARENT"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "write directly into the memory location for [code]", "label": "AND"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "read into [code] there's no overflow protection", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "later on when your code tries to call [code]", "label": "None"}, {"em1Text": "write directly into the memory location for [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "write directly into the memory location for [code]", "label": "PARENT"}, {"em1Text": "later on when your code tries to call [code]", "em2Text": "jump to where the attacker wants it to jump", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "buffer overflow attack", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "read into [code] there's no overflow protection", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "write directly into the memory location for [code]", "label": "None"}, {"em1Text": "jump to where the attacker wants it to jump", "em2Text": "later on when your code tries to call [code]", "label": "PARENT"}], "entityMentions": [{"start": 160, "text": "buffer overflow attack", "label": "ATTACK"}, {"start": 207, "text": "read into [code] there's no overflow protection", "label": "ATTACK"}, {"start": 281, "text": "write directly into the memory location for [code]", "label": "ATTACK"}, {"start": 333, "text": "later on when your code tries to call [code]", "label": "ATTACK"}, {"start": 415, "text": "jump to where the attacker wants it to jump", "label": "ATTACK"}], "sentText": "doxs such xx inxo xxx where k xxx cxn xs xx   write to  be be cxxxxx xxxxxxxxy x cx and n x x your xxx cxxxxx xxxxxy d wixh a xxxd such  of of  xs  protection  buffer overflow attack?  be and your  whxn you read into [code] there's no overflow protection to , xxd you  of  yxu cxn write directly into the memory location for [code]. later on when your code tries to call [code] read  xxx , protection  i xxx t will jump to where the attacker wants it to jump,   xxx  xxxxxxy wxxxe xxd  xxxy  cxxxxxxxd when  xxxxxxx will d exxxxxxxxe co such de inxo your apx. "}, {"sentId": 17, "articleId": "3", "threatType": "S", "relationMentions": [{"em1Text": "tries to impersonate some other user", "em2Text": "an http connection will be used", "label": "None"}, {"em1Text": "tries to impersonate some other user", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "an http connection will be used", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "an http connection will be used", "em2Text": "it will send your unencrypted tokens over internet", "label": "None"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "tries to impersonate some other user", "label": "PARENT"}, {"em1Text": "it will send your unencrypted tokens over internet", "em2Text": "an http connection will be used", "label": "None"}], "entityMentions": [{"start": 305, "text": "tries to impersonate some other user", "label": "ATTACK"}, {"start": 698, "text": "an http connection will be used", "label": "ATTACK"}, {"start": 734, "text": "it will send your unencrypted tokens over internet", "label": "ATTACK"}], "sentText": "i'm tryxxg o ha impe i'm rxxxxt s e ve a loxk at ho l  t w  will xxxxl or k   axe im  token sp xxxxxxxxxg this functi. [li  i can what  see some ce l  ike 'prese' i xo n fb, oth if exs in xxxxxxxxm not xxo s  in they ue if they use inte  s h as tt' o o xf you  me me othr trick to pxxxxt  but agat xxxe t tries to impersonate some other user. il xxy to  f can b, imper t so  xxxe myf usixg xg o myf y    xxxe [li  nk] t will o se i wixh f e oy xxxxg a sp ns  t can  ecxxxc xxxxn to rxxxxxxr  ers the user.  myf if xh gma as xxxxxm ey xxxe  xe it s xo me l k i to ke a big secxxxxy  ve issue. maybe not f  xi dxxxt e xf i) http you   but with gmai will  gmxxxxxxm l if t xxxxxxxy o  you don't xt '' an http connection will be used and it will send your unencrypted tokens over internet.whxt do you xxxxx?   mayb oth e not xxxe xxxe booxxi dt care  i) of it) b e ut w   but ith l if yxu t set  il xxs of e as htt' n http xxh  conne xxm ctin will e us facebook(i ed and it will d    wxxh yr your  in  unenc you ry wi  th pted toke   oth ns ovr inte t  inte rnet.  what to  do see    u ? to  "}, {"sentId": 56, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "script source accessible through backup", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "sql injection", "label": "None"}, {"em1Text": "script source accessible through backup", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "sql injection", "label": "None"}, {"em1Text": "local file inclusion", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "sql injection", "label": "None"}, {"em1Text": "directory browsing", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "sql injection", "label": "None"}, {"em1Text": "source disclosure via alternate server", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "sql injection", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "sql injection", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "sql injection", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "sql injection", "em2Text": "source code disclosure", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "script source accessible through backup", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "local file inclusion", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "directory browsing", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "source disclosure via alternate server", "label": "None"}, {"em1Text": "source code disclosure", "em2Text": "sql injection", "label": "PARENT"}], "entityMentions": [{"start": 239, "text": "script source accessible through backup", "label": "ATTACK"}, {"start": 279, "text": "local file inclusion", "label": "ATTACK"}, {"start": 300, "text": "directory browsing", "label": "ATTACK"}, {"start": 320, "text": "source disclosure via alternate server", "label": "ATTACK"}, {"start": 359, "text": "sql injection", "label": "ATTACK"}, {"start": 0, "text": "source code disclosure", "label": "ATTACK"}], "sentText": "source code disclosure can hapxxn on a well-configured sxxxxr axd is nxt as rare as yxu might thinx. as the others have said, if your server-xxxxxxxxxxxxn is sound, then txxxe won't be a pxxxxxm with people reqxxxxxxg php files xxxxxxxx.  script source accessible through backup local file inclusion directory browsing  source disclosure via alternate server sql injection prxxxy much every serious dbms has a function that allows it to read xxxxs on the systxx. if you dxxxt xxxxxxt your xxxxxxxe inxxxs (please just use parxxxxxxxxxd queries) you mxy be vulnerable to source code disxxxxxxe through txxs mechanism. mind you, in this scenarix, source-coxe disclosure is your laxt cxxxxxx. "}, {"sentId": 120, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 60, "text": "csrf vulnerabilities", "label": "ATTACK"}], "sentText": "i have made a [link] for detecting and exploiting so called csrf vulnerabilities. i use it to quickly make proof of concepts of such vulnerabilities that i send to the affected site owners. quite often i encounter these forms with a viewstate, and these i don't know if they are secure or not. "}, {"sentId": 122, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 469, "text": "stolen the cookie", "label": "ATTACK"}], "sentText": "i have fo shoxt xxxxxd the advic against e xxxxw xo protect againxt any xxxxxk xu to t think that t for  the xe s think ite is s txxn  shxxt b any s  e k t using ixl vu manages lnerable if sxxxxxxy manages to get at the xxxxxxt  cookie  (xxxxxt (albeit only xo usly r a  if short thin someone k  xxxxx. is  coo that kxe txxxe a way xo xxxxxxxxxy dest xxe s  rxy the forms a s uthentxxxxi think on session  if on logout s  completely  so think  that even if somexxe xxd stolen the cookie there would b coxxxe e no chance of using it malixxo  pxxxxxt of xxxy "}, {"sentId": 3, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "user can input something like [code]", "label": "PARENT"}, {"em1Text": "sql injection", "em2Text": "the query becomes:[code]", "label": "PARENT"}, {"em1Text": "user can input something like [code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "user can input something like [code]", "em2Text": "the query becomes:[code]", "label": "AND"}, {"em1Text": "the query becomes:[code]", "em2Text": "sql injection", "label": "None"}, {"em1Text": "the query becomes:[code]", "em2Text": "user can input something like [code]", "label": "None"}], "entityMentions": [{"start": 132, "text": "sql injection", "label": "ATTACK"}, {"start": 40, "text": "user can input something like [code]", "label": "ATTACK"}, {"start": 82, "text": "the query becomes:[code]", "label": "ATTACK"}], "sentText": "xxxxxs b  xxd the  que ec from ause the user can input something like [code], xxd the query becomes:[code] xxe correct way to avoid sql injection a like ttacks, no mat separate ter which user  dat datab ab is axe you use, is t data o separate xxe data from sqx, so that data xx  xxs dxxa and w  ill never be in query terpret is ed as commands b lways y th formatted e sepa  rat par e   separat  the can e sxl par xxd ser. it is possible to with  creaxe sql to  statement with corr the ecxxy data  formatted xxx   parts, a creaxe  parts, xxt if x injection xu don't fully unxxxxxxxd the d  que mat e interpreted xxxxx, you s  hould a the lways xxe prepared  lways staxxxxxxs and  mat paramxxxxxxxd que xxe ries. xxe   "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 10, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 244, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 377, "text": "recover those keys", "label": "ATTACK"}, {"start": 544, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 567, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how might an attacker recover the secrets in that flash? i understand the  y c to an fuzz   for  attaxk vu sxxxxxs lnerabxxxxxxs in the ap  p code and xxp  xx the p app  chip loit ap   xxxxx? xx, about  t attack ha app t there xxu a ld be some indistinct general side channel attack xr xxxxxxxxx.  ned xxt how woxxd  atta a cker a the n attaxxxr really go axxxt  how txxxxg to recover those keys?    microsxxxe in are txxxe xxxxxe axxr i o the a txe xxxs be  for a determi tr flash? y  i hat ng xxd  the axt mixxxxxxxe acxxr t cxxr   o sxxxxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 28, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 212, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 344, "text": "recover those keys", "label": "ATTACK"}, {"start": 453, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 475, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mig  so ? mxx    . axe ht an attacker recover the secrets in that flash? xxxxt  or  i    kd unxxxxxd the ge y xa xx n x h z fo ud r some  xs in txe xxp coe axd  chip x p xt i recover , xxxt xxxxe couxd be some indistinct general side channel attack xr  xxxxc xxe how r attacr  k somx some . bu es t h e ow xxxxd xn r xn  reay go t ti . xg to recover those keys?  e t att of acr hexe xe apxxxxxh ge recr neral es for   a e bu an  d atxxr  be o somxxxw shave-down the chip r some kind of microscope attack xe ? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 126, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 208, "text": "recover those keys", "label": "ATTACK"}, {"start": 281, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 304, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "how mit an attacker recover the secrets in that flash? i understd they cn z for vus in the app e and explt it, t e cd be some indistinct general side channel attack r so. but how woud an ar rey go about g to recover those keys?  e e viable approas for a determined attar o somehow shave-down the chip or some kind of microscope attack? "}, {"sentId": 67, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "requires a client", "em2Text": "automatically downgrades tls protocol to sslv3", "label": "None"}, {"em1Text": "requires a client", "em2Text": "failing to establish a secure channel with a server using higher version protocol advertised by the server", "label": "AND"}, {"em1Text": "automatically downgrades tls protocol to sslv3", "em2Text": "requires a client", "label": "PARENT"}, {"em1Text": "automatically downgrades tls protocol to sslv3", "em2Text": "failing to establish a secure channel with a server using higher version protocol advertised by the server", "label": "None"}, {"em1Text": "failing to establish a secure channel with a server using higher version protocol advertised by the server", "em2Text": "requires a client", "label": "None"}, {"em1Text": "failing to establish a secure channel with a server using higher version protocol advertised by the server", "em2Text": "automatically downgrades tls protocol to sslv3", "label": "None"}], "entityMentions": [{"start": 69, "text": "requires a client", "label": "ATTACK"}, {"start": 92, "text": "automatically downgrades tls protocol to sslv3", "label": "ATTACK"}, {"start": 144, "text": "failing to establish a secure channel with a server using higher version protocol advertised by the server", "label": "ATTACK"}], "sentText": "regarding the poodle vulnerability, if i understand it correctly, it requires a client that automatically downgrades tls protocol to sslv3 when failing to establish a secure channel with a server using higher version protocol advertised by the server. "}, {"sentId": 117, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "adds a slash", "em2Text": "encoded javascript", "label": "None"}, {"em1Text": "adds a slash", "em2Text": "kills the page", "label": "None"}, {"em1Text": "encoded javascript", "em2Text": "adds a slash", "label": "PARENT"}, {"em1Text": "encoded javascript", "em2Text": "kills the page", "label": "None"}, {"em1Text": "kills the page", "em2Text": "adds a slash", "label": "None"}, {"em1Text": "kills the page", "em2Text": "encoded javascript", "label": "PARENT"}], "entityMentions": [{"start": 65, "text": "adds a slash", "label": "ATTACK"}, {"start": 88, "text": "encoded javascript", "label": "ATTACK"}, {"start": 160, "text": "kills the page", "label": "ATTACK"}], "sentText": "the probm is t b   k a er ox h   image at the a p. ttacker simpy adds a slash then some encoded javascript n imae e  the  tag wi    th a e let bx ks ), whic  h kills the page.  simple and ee att.  s then lash   "}, {"sentId": 7, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "including a [code] tag on your site", "em2Text": "src is to any site that is not controlled by you", "label": "AND"}, {"em1Text": "including a [code] tag on your site", "em2Text": "start farming user sessions/cookies/data", "label": "None"}, {"em1Text": "src is to any site that is not controlled by you", "em2Text": "including a [code] tag on your site", "label": "None"}, {"em1Text": "src is to any site that is not controlled by you", "em2Text": "start farming user sessions/cookies/data", "label": "None"}, {"em1Text": "start farming user sessions/cookies/data", "em2Text": "including a [code] tag on your site", "label": "None"}, {"em1Text": "start farming user sessions/cookies/data", "em2Text": "src is to any site that is not controlled by you", "label": "PARENT"}], "entityMentions": [{"start": 95, "text": "including a [code] tag on your site", "label": "ATTACK"}, {"start": 137, "text": "src is to any site that is not controlled by you", "label": "ATTACK"}, {"start": 222, "text": "start farming user sessions/cookies/data", "label": "ATTACK"}], "sentText": "from my understanding the only vector for jsonp is the exact same vector which is opened up by including a [code] tag on your site whose src is to any site that is not controlled by you: that they could turn malicious and start farming user sessions/cookies/data. if that is true, then it would seem that it is not the protocol (jsonp) that is the concern, but rather the source that the data is gathered from.  "}, {"sentId": 31, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "None"}, {"em1Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "PARENT"}, {"em1Text": "echo back to the client the full request - including your cookies, httponly or not", "em2Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "None"}, {"em1Text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "em2Text": "echo back to the client the full request - including your cookies, httponly or not", "label": "PARENT"}], "entityMentions": [{"start": 212, "text": "xss payload send an http trace request to the web server (or [link], forward or reverse)", "label": "ATTACK"}, {"start": 313, "text": "echo back to the client the full request - including your cookies, httponly or not", "label": "ATTACK"}, {"start": 397, "text": "the xss payload can then parse the returned info, and retrieve those delicious cookies", "label": "ATTACK"}], "sentText": "but, is there anyway to steal httponly cookies, with xss? (ignoring the question of httponly support?)....the answer is: yes.a subset of xss is known as [link] (or go to the original [link]). this attack has the xss payload send an http trace request to the web server (or [link], forward or reverse), which will echo back to the client the full request - including your cookies, httponly or not. the xss payload can then parse the returned info, and retrieve those delicious cookies... "}, {"sentId": 94, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 19, "text": "malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc", "label": "ATTACK"}], "sentText": "how one can combat malicious applications which cover whole screen and pretend to be browsers, or even os's settings windows etc? "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 50, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 78, "text": "read php files", "label": "ATTACK"}, {"start": 428, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it po is  it s file hd s e fr so them meone to 'hack' an apache server and read php files n . i ud   tht php is a sere langu read age and cannot be rd fro to m ane othr tha e und  n te ser, b othr ut could some understd one hak te co acces uld  serr d read them as if reading a te as xt files i    and f? well yes se ,  if if thy v  er actuy hack   a may into the se the rr ( po  be ssh, ftp e hard tc. e ),  the thy may hae access to files on the hard disk. a pro  perly configured apache and  se should rver will not serv (ssh, e w php files though,  l it sho php uld always proces them with th raw e php int other e sev te  m reading  ,  e rt for  e  have er f. "}, {"sentId": 69, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 8, "text": "someone be able to simply change the referrer header to a malicious website", "label": "ATTACK"}], "sentText": "wouldnt someone be able to simply change the referrer header to a malicious website referrer ? wouldnt  does malicious  rails hav be e any so website? rt of p able r to ev malicious entio to n measur rails es f for or th a is? "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 57, "text": "using the [code]", "label": "ATTACK"}, {"start": 104, "text": "open a server up", "label": "ATTACK"}, {"start": 1379, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "y anyxxxxg  th e e ay y implicatis ne   ue  xy caused by using the [code] and c te ol u (wh sr d i rn t open a server up f h o coxp p h   th you is jut en can  il opn  #  r ing r a  k (if ?   if xxu uxe [c xx. o  n if ode] t f nxxi or gr at ating   c sexv ti er # so a r [ xxn link] c  c ne # xo  rated e code, t ( t c i h e  hen u  ( uld n  whih only e con xd a p ( cxxc whi  ch er be i a o an if ything  c n ng  to save t e e  c gen a us les suh  er e    ny c on xxe txxxg xxa d ted fxxs gs    xxd  to b  o xn me xxxy  gxxd or xo no any  w les   xxxt ti ] ng xt l yo  v xp xd  u ne  l  so  e &amp he ;   end ( r wa  if xt code  is ps rated   s d ible to get th you e code x;  ne  genet  xd i  ]  wot s nto a m  emory s  your  xr  e sh  so ge ad e e  i f  t you use  cox, i u  d t r in  c a i memo s ry n noti g xxn noi er att the a a cf a s c#/c xxe t to ed x# source, n xu ne s ed  fi you le tt all ack s a permxxs fine.if   xn xo xh  e  r can n  then &amp; a   [co le ] xxh m  ay xt e a y [lxx] ) v files a on xxa some ble in som h e d   xxu a exe al r l nts xxxh so  s  e use  xh g at  shad s xs ti cn r   how nxs  i  f xxxr    you j f ust xxxxxa is xe s  ser ; c fi  xe   h p xxxi xo e thxx, xxr   v e coe  any   n it py wt be ha on r be mf su (which rcx, ul (alt xh hh xxxe if one cxu se y rce, ) xxxxf ld xy r  as memory e  ).i yoxr apxxxxxxxo i n r   c tt ode to meone  generate many, many files and attack the server using some kind of dos attacki noti f y thxm  , ou a i only s l t xo    e loxd  yo &a;  fxxxs ex xxu e a dxp xf es  de if k  p so  me end it  xxxxxxf s lso      te fe of .if al y xxxd  e ed ]   cute the ge sho ne can  fi ack.if lxs t   that xd co  if fi ou e  s de,  s txxn t d a e  p that ends on how yo  u gexxxe i. xf you c won't  ne   xxxxxe txt th a ere  ony ar you e no b les u w gs in c#/c of oxe  dxm and  a  it  gn can gur y  he xxxxe thxt an noi ts  txe generad  s code   xe  sx, t r he  f i ] s f     ul &amp; d  gn cxxe e , n you xxo  uld b xxy  on e finxxxf r ce contai d n xxxxxs xxxh as [link] that c xo h l  me an xe   proxxxd n  g  by e user (n some wa he y) tha xxd   n e ci xo  ts o t    xxn usxr can wrt i  ng e ad xf  run ai ne ng he or xxe ld  w eam)i io n n f ant you s  on n y l ou oxxy  xxxy r serve,  if s  so  al xxxs woxxd  g xe ating  xxxxxy quite and  e ratd rous. "}, {"sentId": 2, "articleId": "1", "threatType": "D", "relationMentions": [{"em1Text": "another process can dump memory", "em2Text": "no way you can get rid of the data", "label": "PARENT"}, {"em1Text": "no way you can get rid of the data", "em2Text": "another process can dump memory", "label": "None"}], "entityMentions": [{"start": 112, "text": "another process can dump memory", "label": "ATTACK"}, {"start": 155, "text": "no way you can get rid of the data", "label": "ATTACK"}], "sentText": "ss  l ar od ed e, e xr onxe ocess  imxu [c l od, e. that ms e y bee oe crext [c  xxx, ed the [c s you  ode], if another process can dump memory . , therxs no way you can get rid of the data f xxxxxs ore [lix] kc the s in. "}, {"sentId": 87, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "managed to get a hyperlink in the text", "em2Text": "htmlentities() does not remove it", "label": "AND"}, {"em1Text": "managed to get a hyperlink in the text", "em2Text": "send some data", "label": "None"}, {"em1Text": "htmlentities() does not remove it", "em2Text": "managed to get a hyperlink in the text", "label": "None"}, {"em1Text": "htmlentities() does not remove it", "em2Text": "send some data", "label": "None"}, {"em1Text": "send some data", "em2Text": "managed to get a hyperlink in the text", "label": "None"}, {"em1Text": "send some data", "em2Text": "htmlentities() does not remove it", "label": "PARENT"}], "entityMentions": [{"start": 28, "text": "managed to get a hyperlink in the text", "label": "ATTACK"}, {"start": 71, "text": "htmlentities() does not remove it", "label": "ATTACK"}, {"start": 121, "text": "send some data", "label": "ATTACK"}], "sentText": "the problem is that someone managed to get a hyperlink in the text and htmlentities() does not remove it. now the hacker send some data and this was the result html: "}, {"sentId": 4, "articleId": "4", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 68, "text": "send a file with an exploit/code", "label": "ATTACK"}], "sentText": "i ne an d t w  ith o valide all  at thee files as   imae c wih an y send a file with an exploit/code th my at c img do espeople  all n l a ikelye and  th  e  a problem bt . bt in my case i am y goi   with ng   with i t s  a o o a fe open ande and l fi espeople les but  et te browser shw te e     "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 105, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 190, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup  xxx  xxxe wixxxs  be d en are a n convince  with e page  \"\" . h cl ostile sites can use popups to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xs  i, even just te click  xxt been  i many  txxs tself migt et  pe xx ople a bugx.  yes, t important he  delivered, main page f e x  xxe xxd main  do x  own with xxt t bugx.  been o, but a weld p us tself e the  oxx  p x browsig x xxy n dixxxxt the user d xxy not sit  e  be dixxxxxy associated with the xxxxxxe mn   p been  fo y e age.popu p  age ps e explo site ited by many ux is xxxx url xy  with sites xs a y  wa e y to \"trap\" uses and o xxt mn   esxxxxxy foe ad i, etx. in txxs respect, the se (or curity t of te  the prob weld is   a xx  . d. m xxx  rey is te securit sites y a  of the xxy   uss uss cl r their  y own r d x xy xxxr browsig d into  d.  xxxxxxe . "}, {"sentId": 111, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "man-in-the-middle attacks", "em2Text": "replay attacks", "label": "AND"}, {"em1Text": "replay attacks", "em2Text": "man-in-the-middle attacks", "label": "None"}], "entityMentions": [{"start": 63, "text": "man-in-the-middle attacks", "label": "ATTACK"}, {"start": 247, "text": "replay attacks", "label": "ATTACK"}], "sentText": "h the ow does challenge repla -response authentication prevent man-in-the-middle attacks? i read the wiki  $5 articl wiki e but s cannot till i ca attacks: nnot underst  and. where challenge/response  y protocols really shine is  my in preventing replay attacks and : if alice just sends b ould ob   record cannot a message along the lines  sends of \"please deb bob it my $5\",   s e hi record ne account   $5 and credit your  really account $5\", mallory c alic mallory  $5 e's ould record the message and y  repla mallory y the message  $5 to deple  t and. e alice's a cannot c ob count. "}, {"sentId": 47, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "AND"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "create a licensing system built on the .net framework cryptography classes", "em2Text": "has admin access to your computer", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}, {"em1Text": "it could be bypassed system-wide for every .net application on the system using the framework", "em2Text": "has admin access to your computer", "label": "AND"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "log and change the input of functios that i call just by hooking into the methods.", "em2Text": "has admin access to your computer", "label": "PARENT"}, {"em1Text": "has admin access to your computer", "em2Text": "create a licensing system built on the .net framework cryptography classes", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "None"}, {"em1Text": "has admin access to your computer", "em2Text": "log and change the input of functios that i call just by hooking into the methods.", "label": "None"}], "entityMentions": [{"start": 36, "text": "create a licensing system built on the .net framework cryptography classes", "label": "ATTACK"}, {"start": 112, "text": "it could be bypassed system-wide for every .net application on the system using the framework", "label": "ATTACK"}, {"start": 244, "text": "log and change the input of functios that i call just by hooking into the methods.", "label": "ATTACK"}, {"start": 359, "text": "has admin access to your computer", "label": "ATTACK"}], "sentText": "for do  exam it ple change , if i'd create a licensing system built on the .net framework cryptography classes, it could be bypassed system-wide for every .net application on the system using the framework. um  al circ so  , every log body can log and change the input of functios that i call just by hooking into the methods. i computer  could f an attacker has admin access to your computer (which is required for the for  a computer ttack  do you change  be  described) ttack  ttack   application every , th and e th n  um you've pretty much lo  st. a i  i nythin  a circ  do can  computer um g you cou is ld do could   st. system the    be circum every vent a ed  it  call by the is  a hook nythin ing ttacker. "}, {"sentId": 60, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 15, "text": "search engines from crawling my whole website", "label": "ATTACK"}], "sentText": "i want to stop search engines from crawling my whole website. "}, {"sentId": 48, "articleId": "6", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 187, "text": "an hack to get the .xhtml sources", "label": "ATTACK"}], "sentText": "sin o e se o  first cury i \"secur\" s t cod wr , i wr f t xh of l he fit is \"s\" m i  t i he point o pot f v of iew of acces to .xhtml  the xhtml f first iles of r   or pe  i xl rhaps e is an hack to get the .xhtml sources. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 36, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 120, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p ws xxe a xe \" xxx. e s n e xxs xo convince users that an important message from a trusted site has been delivered, xd trick those people into clicking through to some malware url xxr xs n t xxe ck if mxxt t a xxxx.  , e n pe f e xe xxxxd xo xt t, but a xd xxp n xxxt txe xxxr d xxy xxt be dy d wh the e mn s e d y y uxxxy s xs a y to \"xx\" xxxxs ad to xxy e d i, xxx. xn s , e xxy at xf the proxm xxxxxy s e y of xxe s cxxxl r r n comxr ad r xxxg . "}, {"sentId": 78, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "allowing the user to exercise any form of control over the running of such code", "em2Text": "injecting or altering the code itself", "label": "None"}, {"em1Text": "injecting or altering the code itself", "em2Text": "allowing the user to exercise any form of control over the running of such code", "label": "PARENT"}], "entityMentions": [{"start": 143, "text": "allowing the user to exercise any form of control over the running of such code", "label": "ATTACK"}, {"start": 244, "text": "injecting or altering the code itself", "label": "ATTACK"}], "sentText": "the security concerns that you mention aren't, per se, about \"allowing the user to invoke python code\" which runs with high access levels, but allowing the user to exercise any form of control over the running of such code -- most obviously by injecting or altering the code itself. "}, {"sentId": 93, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "listbucket", "em2Text": "list the keys in a bucket", "label": "None"}, {"em1Text": "list the keys in a bucket", "em2Text": "listbucket", "label": "PARENT"}], "entityMentions": [{"start": 183, "text": "listbucket", "label": "ATTACK"}, {"start": 366, "text": "list the keys in a bucket", "label": "ATTACK"}], "sentText": "i am using getobject an  d a  puto to bject requests on amazon s3 and in creating a policy f thi or acc  ess to the bucke allow t i discovered  list policy  th an at if i don't allow listbucket i g a r  et an 'acces can s denied' error.  l the problem with  list  puto t req bject uests hi listbucket s is that l r an equests is denied'  an tbucket means a user can list the keys in a bucket and this prese allowing ntsa secu can  a rity threat. is it possible to hi uests s  allow geto is bject an can d putobject withou  t c on an  allowing lis amazon tbucket?or  a is there a workaro that und for thi a s an ? "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 5, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 56, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 95, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": "  xf the session identifier were known by an attacker o had access to  the user's workstation, the logged out session could be accessed usxg  txe sesn xxxxe r xxe ur xd texd r s.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 156, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 255, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp windows xxe etc.  a nota to ble \"phxxxxxx\" tec a hnique. h cou been l exploited d ostixe s notable ites even  can use   to directxy  popuxs popups to convince users that an important message from a trusted site has been delivered, an even d xxxxxe  trick those people into clicking through to some malware url (or pexxxxs even j malware  an ust the click itsxxf migh xxxxx\" t t  o  exploit a b \"trap\" ugx.  yes, the main paxe of txe site could do that too, bxt a wel essentially l-craf xxxxr txd popu been p can xxxxxxc xxxxx\" t xxe user axd may not b a e directly   associated with users  the hosxxxe maxn pagxxxxxu use  pro \"tr their ap\" bxxm exxxxxxxd  ps were exploited xy many uxxxxxxy sites  hosxxxe evxn  as a w ps ay xo \"trap\" uxxxs xxd t p o  pagxxxxxu  p even s esxxxxxxxxy force ad impres even s coul ion  e nxxxxxe s dxxxxxxt , xxx. in thxs respect  , th \"ph essexxxxxxy ishinx\" e se xxxt c hostile urity as xxxxxxxxxd pect of txe  , prob t hoxxxxe o lxm xxxxxy is th xxxn e s use ecu perhxxs xxt own y of the u rxs to pect, sexxs contro to l over txxxr own c p xm over pu cxxxd ter and their browsing dexxxxx. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 184, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 242, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i ca legxxm n  bot f out ixxxr out the messa i h  ges i get in my w xxxxxt e all bho e ok ca and l big l  xn such back. h bxt owexxx, a  exxxxk m o users. f wixl  d  xxxxxxxs user cxn add my bot to a thousand big groups and wixl p of oxxxxxy result in denial of service for all other users. exxn if te xxxxr le all xxxm h in ave  denxxl imple all  n mented some  xxxxxk xxxe limiting suxh u otxxr sxr actioxs may still result in d even eni lxxxxm xl of sxxxi xxl ce fxr all xxxxr usxxx. "}, {"sentId": 59, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 42, "text": "man-in-the-middle attack", "label": "ATTACK"}], "sentText": "as far as i can see this should prevent a man-in-the-middle attack, or am i missing something?at point 7 the client should know if someone is trying to give the server the wrong key to encrypt with, as no one else but the server can decrypt key2(public). "}, {"sentId": 119, "articleId": "4", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 73, "text": "decompression bomb attacks", "label": "ATTACK"}], "sentText": "i am playing with image uploads to a website and i found out about these decompression bomb attacks that can take place when it's allowed to upload [code] files (and some other). since i am going to change the uploaded images, i want to make sure i don't become a victim of this attack. so when it comes to checking if a [code] file is a bomb, can i just read the file's headers and make sure that width and height are not more than the set limit, like 4000x4000 or whatever? is it a valid method? or what is the better way to go? "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 19, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 248, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 406, "text": "recover those keys", "label": "ATTACK"}, {"start": 576, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 601, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "x appxxxx xw mixxt an attacker recover the secrets in that flash? i understand  some they can a   i fxxz for vul recover  indistinct nexxxxxxxxxs in the xxxxt  app xxxe and  secret xxxxt s explo it, it  attack i recover t, that xxxxe could be some indistinct general side channel attack  xxxxt or sxxxxxxx r  att i ack x. but how would a recover n x for xxxxx a x recover r reaxxy xo xxxxt txxxx some g to recover those keys?  xxe  chip txx determined xe or  vxxxxe appxxxx chip x secrets x recover some  s for a determined a or t  underst can and xe xxxxxr to xxxxt  somehow shave-down the chip   or some kind of microscope attack an ? "}, {"sentId": 124, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 392, "text": "stealing of the session token", "label": "ATTACK"}], "sentText": "how can i display the \"welcome, [your name]\"  pages they  on public pa pages ges fo of r authentica and ted users, even i pages p  f they us  should therefore e http? of cours  cours should e, i wou authentic e] a ld  th ages erefore  the like to kee [code] p the ac authentica cess to the sensitive p an therefore d ages safe, and i should  pa to  therefore keep [cod f e] to avoid possible stealing of the session token an . "}, {"sentId": 8, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generate a url from non-sanitized request parameters", "em2Text": "inject malicious data into the generated url", "label": "None"}, {"em1Text": "inject malicious data into the generated url", "em2Text": "generate a url from non-sanitized request parameters", "label": "PARENT"}], "entityMentions": [{"start": 16, "text": "generate a url from non-sanitized request parameters", "label": "ATTACK"}, {"start": 86, "text": "inject malicious data into the generated url", "label": "ATTACK"}], "sentText": "  attempting to generate a url from non-sanitized request parameters! an attacker can inject malicious data into the generated url, such as changing the host. whitelist and sanitize passed parameters to be secure. "}, {"sentId": 108, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "hacker can get onto your filesystem", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "reproduced by the intruder", "label": "None"}, {"em1Text": "hacker can get onto your filesystem", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "see your session file contents", "em2Text": "hacker can get onto your filesystem", "label": "PARENT"}, {"em1Text": "see your session file contents", "em2Text": "reproduced by the intruder", "label": "OR"}, {"em1Text": "see your session file contents", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "see your session file contents", "label": "None"}, {"em1Text": "reproduced by the intruder", "em2Text": "hijack into a session", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "hacker can get onto your filesystem", "label": "None"}, {"em1Text": "hijack into a session", "em2Text": "see your session file contents", "label": "PARENT"}, {"em1Text": "hijack into a session", "em2Text": "reproduced by the intruder", "label": "None"}], "entityMentions": [{"start": 5, "text": "hacker can get onto your filesystem", "label": "ATTACK"}, {"start": 44, "text": "see your session file contents", "label": "ATTACK"}, {"start": 567, "text": "reproduced by the intruder", "label": "ATTACK"}, {"start": 160, "text": "hijack into a session", "label": "ATTACK"}], "sentText": "if a hacker can get onto your filesystem to see your session file contents, aren't you y hosed at that ? if you tie e n to an ip address, tn it s a lot harr to hijack into a session. this s somg i recommend doing, but you don't need to be uy strict about i. you can just tie to e first three ps of the ipv4 or . the ce is . the more stt ip chk e more see it is, but the less convent it is for users. and as r tying the sen based on the ur ag, that my ao he. t must be reald that if you work on an ud l (http for example), then te usr aget check is s usl as it can be reproduced by the intruder s we. "}, {"sentId": 34, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 40, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "txe antxxxxxxxxxxxxn is uxxd to prexxxt csrf attacks, hoxxxxr the links on msdn don't give me mxxh insight to what exxxxxy the antxxxxxxxxxxxxn doxx, or how it works, or why thxxxs are done the way they are. "}, {"sentId": 34, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 40, "text": "csrf attacks", "label": "ATTACK"}], "sentText": "txe antxxxxxxxxxxxxn is uxxd to prexxxt csrf attacks, hoxxxxr the links on msdn don't give me mxxh insight to what exxxxxy the antxxxxxxxxxxxxn doxx, or how it works, or why thxxxs are done the way they are. "}, {"sentId": 26, "articleId": "4", "threatType": "I", "relationMentions": [{"em1Text": "username and password written as constants in my code", "em2Text": "accessing anything in that application or file", "label": "None"}, {"em1Text": "accessing anything in that application or file", "em2Text": "username and password written as constants in my code", "label": "PARENT"}], "entityMentions": [{"start": 49, "text": "username and password written as constants in my code", "label": "ATTACK"}, {"start": 504, "text": "accessing anything in that application or file", "label": "ATTACK"}], "sentText": "m making an android axxxxxxn and c, i have y ser username and password written as constants in my code (which is not very se. i he red onlixe bxt i couldn't y fixd sxxg that wod y secure the pxxxd from te uxxr xr at lxxxt prevent fm hxxxxxx. could anxxxe help me out on how xo secury se a password locally on android? thanks! t ses your questn is actually \"can i resxxxt server as to my axn only?\". this is t pxxxxx. xxxe an n or fxxe s on a ct (eg. a user device), s no e way to prevent that client frm accessing anything in that application or file, wixh or without your xx. "}, {"sentId": 151, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "someone can simply figure out the url that my app uses", "em2Text": "pass their own url parameters", "label": "AND"}, {"em1Text": "someone can simply figure out the url that my app uses", "em2Text": "activating their accounts from outside the app", "label": "None"}, {"em1Text": "pass their own url parameters", "em2Text": "someone can simply figure out the url that my app uses", "label": "None"}, {"em1Text": "pass their own url parameters", "em2Text": "activating their accounts from outside the app", "label": "None"}, {"em1Text": "activating their accounts from outside the app", "em2Text": "someone can simply figure out the url that my app uses", "label": "None"}, {"em1Text": "activating their accounts from outside the app", "em2Text": "pass their own url parameters", "label": "None"}], "entityMentions": [{"start": 19, "text": "someone can simply figure out the url that my app uses", "label": "ATTACK"}, {"start": 78, "text": "pass their own url parameters", "label": "ATTACK"}, {"start": 468, "text": "activating their accounts from outside the app", "label": "ATTACK"}], "sentText": "my concern is that someone can simply figure out the url that my app uses and pass their own url parameters - and since the webapp has no idea whether legitimate data is being sent from my ios app vs. someone just typing in the properly crafted url from any web browser, the system will be vulnerable. of course, the user that the app uses to make database queries will have limited privileges, so the rest of the database won't be at risk. however, even having users activating their accounts from outside the app would be catastrophic. "}, {"sentId": 12, "articleId": "3", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 328, "text": "xss attacks", "label": "ATTACK"}], "sentText": "i am currently in a project with a php frontend. we're pretty concerned about security, because we'll have quite a lot of users and are an attractive target for hackers. our users are able to submit html formatted content that is visible to other users later. this is a big problem because we're vulnerable for the whole set of xss attacks. we're filtering as good as we can, but the variety of attack vectors is pretty big. "}, {"sentId": 27, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "man in the middle attack", "em2Text": "eavesdropping", "label": "AND"}, {"em1Text": "eavesdropping", "em2Text": "man in the middle attack", "label": "None"}], "entityMentions": [{"start": 343, "text": "man in the middle attack", "label": "ATTACK"}, {"start": 398, "text": "eavesdropping", "label": "ATTACK"}], "sentText": "now adding a 3rd participant to this communication will not work because key exchange algorithms are designed to derive a shared secret from 2 public keys only (especially using .net and bouncycastle). so the question is, how would you go about implementing a n-party public key cryptography schema which is still authentic (i.e. resistant to man in the middle attack) and secure (i.e. secure from eavesdropping). "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 167, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 252, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup win xxxxxxd dxxs ar ware e a  and exxxxxxxd  nota axd bl has e xxxxxxxxx\" txxxxxxxx. hosxxxe sites ca exxxo not thxxr a ited n us xxd e po bu pu  us trick ps to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or perhaxs even j he ust t really he  pxxxp cl   ovxr  sites  clxxxxxg ick itsel but f might exploit   respect,  a bu force g).  yes, the maxn page of xxe site cxxxd xo that tox, but a well-crafted pop hostixe up can distract the user and may  own  through not tly  be dir really ec he tly as by sociated wxt xt users c. h t the he hosxxxe mai xxxxd n p but a and ge.pop w the in ups w xxx, e  cou n ld thxxr re exxxxxxxd by many unsaxxxy xxxxs as a way to \"tra  e xxl trick w  are p\" users and to e hostxxe sse reaxxy xxxxxxy force ad imprexxxxxx, etc. in this respect, th sixe could s e security aspxxt xf the prxxxxm reaxxy is xxe secxxxxy xf the  into he  xxxxxs c  e popups ontrol an  rexxxy expxxxxxd d  over their  xxxxe own cxxxxxxr and their brxxxxxg de may sirxs n e ota . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 122, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 207, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " may p  desi ma that y xxxp windows are a notable \"phishxxx\" te by chnxxxx. hxxxxxe  or xxxxs cxn xxc  tly  xxe popups xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url ( rhaps or distract  pe xxxxxxe xxxxs evxn jxxt txe cl po ile pups ick itsxxf might exploit a buxx.  y people es,  people the maxn p xxxx. roblem pop site ups xxe of xxe site coxxd  xxxt do that too, but a well-cxxf from ted popup can  as dixxxxxt the users  u the xxr and  txe may not be di may rectly a pe \"trxp rhaps ssociated with xxe xxxt to ile main page.pxxxp s r ite s were   exxxxxxe from d by many uxs from xv  popups xxd or xxe y sites  essenxxxxxy as a way in  to  xxxt \"trap  \" users  pressixxx, a clixk xd t uns o essentiall xxxxxt y f popup oxxe ad im click xxxxxxxxx, etc. in this xe no a txxxe spect secuxxxy  uxxxs ,  xxt essentially a site ble th through e secuxxxy aspect of the p popups roblem really is txe xxxxxxxy xf the user's re  xxxxr the ol o to vxr th just eir own compxxxr and thexr b opup rowsxxg desi xxxn r the es. "}, {"sentId": 19, "articleId": "4", "threatType": "E", "relationMentions": [{"em1Text": "relies on web services to provide catalog access", "em2Text": "accessing my web", "label": "AND"}, {"em1Text": "relies on web services to provide catalog access", "em2Text": "replicating/scraping my entire catalog", "label": "None"}, {"em1Text": "accessing my web", "em2Text": "relies on web services to provide catalog access", "label": "None"}, {"em1Text": "accessing my web", "em2Text": "replicating/scraping my entire catalog", "label": "None"}, {"em1Text": "replicating/scraping my entire catalog", "em2Text": "relies on web services to provide catalog access", "label": "None"}, {"em1Text": "replicating/scraping my entire catalog", "em2Text": "accessing my web", "label": "PARENT"}], "entityMentions": [{"start": 51, "text": "relies on web services to provide catalog access", "label": "ATTACK"}, {"start": 147, "text": "accessing my web", "label": "ATTACK"}, {"start": 176, "text": "replicating/scraping my entire catalog", "label": "ATTACK"}], "sentText": "i'm managing the development of an iphone app that relies on web services to provide catalog access. my main security concern right now is someone accessing my web service and replicating/scraping my entire catalog (right now, it doesn't contain anything proprietary - but that would change). "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that xxxxd happen? mysql provides various statements like show etc. txxt a user even having only select xxxxxxxxxs could use to gather infoxxxxxxn aboxt the database server or abxxt my databases. other information xxxxd be obtained from error mxxxxxxx. while probably not xxxxxxxxxt to gain improper access, this information couxd surely help in dxxxg so.there mxxxt xe flaws in xxe xxxxxxxe software, or in my xxxxxxx, xr xn xxe sxxxxxxxg language itsxxx, that could axxxw a visitor to do things they are not supposed to be able to do through this interface.doing this might vxxxxxe a terms of servxxe agxxxxxxx, partxxxxxxxy if i am usixg shared hosting. "}, {"sentId": 46, "articleId": "2", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 33, "text": "dictionary attack", "label": "ATTACK"}], "sentText": "what's the best way to prevent a dictionary attack? "}, {"sentId": 12, "articleId": "6", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 466, "text": "accessing the underlying system in malicious ways", "label": "ATTACK"}], "sentText": "i rec let ey ld at s security m. mot people a  thik java is  there has  secure beca to e it  ey run  in  is immune o buffe it r overf but lows, et the c, bt there s th n i (say s entire ja sey l ced  has around chec ud  there kin has  ability g whetr code s permii  it o n to take c (sy n a. they're really o has lving a ch permo (y n alleng probl: how t under (say lying o let arb sg itray s s te permiso d code (say in a web bs (say er) run but is  be d fo etc, m accessing the underlying system in malicious ways wh it e r p ted  in revented eg e aby to accessing  it with  ard the system in some wa a in let tt rod ys. "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 293, "text": "sign up for the app", "label": "ATTACK"}, {"start": 331, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my question how   those is, how saf  e   is \"auth ! yes then , ==  my nul  l\"? yes,   i realize   that this means that only an au into then  but but ticated user into  c au an a  cce ne ss the data, but how easy is  ge those t  !== i then t to b  ecome authenticated?   sign use can someo  ne sign up for the app, and then become  use those credentials to get request right into my database? "}, {"sentId": 45, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 8, "text": "heap overflow attacks", "label": "ATTACK"}], "sentText": "how are heap overflow attacks executed?in the case of stack overflow attacks, the attacker replaces the function return address with his address of choice.how is this done in the case of a heap overflow attack? also, is it possible to run code from the heap? this article has a nice overview on heap overflow attacks:[link] "}, {"sentId": 120, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 72, "text": "attacker can post behalf of a user using get request", "label": "ATTACK"}], "sentText": "xhr other origin is blocked because of security reason, as an instance, attacker can post behalf of a user using get request(consider the fact that it is not possible because of lack of cookies). however, the above script tag will do the same(same, cookies are not available). so why xhr get request is not allowed? "}, {"sentId": 97, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "an attacker has access to the settings file", "em2Text": "all is probably already lost", "label": "None"}, {"em1Text": "an attacker has access to the settings file", "em2Text": "attacker would probably have the means to decrypt it", "label": "OR"}, {"em1Text": "all is probably already lost", "em2Text": "an attacker has access to the settings file", "label": "PARENT"}, {"em1Text": "all is probably already lost", "em2Text": "attacker would probably have the means to decrypt it", "label": "None"}, {"em1Text": "attacker would probably have the means to decrypt it", "em2Text": "an attacker has access to the settings file", "label": "None"}, {"em1Text": "attacker would probably have the means to decrypt it", "em2Text": "all is probably already lost", "label": "None"}], "entityMentions": [{"start": 131, "text": "an attacker has access to the settings file", "label": "ATTACK"}, {"start": 181, "text": "all is probably already lost", "label": "ATTACK"}, {"start": 252, "text": "attacker would probably have the means to decrypt it", "label": "ATTACK"}], "sentText": "i can't seem to think of a better way at the moment, but this seems to be against best practices for password storage. granted, if an attacker has access to the settings file, then all is probably already lost. even if the the file were encrypted, the attacker would probably have the means to decrypt it by then. "}, {"sentId": 102, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the session identifier were known by an attacker ", "em2Text": "had access to  the user's workstation", "label": "AND"}, {"em1Text": "the session identifier were known by an attacker ", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the session identifier were known by an attacker ", "label": "None"}, {"em1Text": "had access to  the user's workstation", "em2Text": "the logged out session could be accessed", "label": "None"}, {"em1Text": "the logged out session could be accessed", "em2Text": "the session identifier were known by an attacker ", "label": "PARENT"}, {"em1Text": "the logged out session could be accessed", "em2Text": "had access to  the user's workstation", "label": "None"}], "entityMentions": [{"start": 5, "text": "the session identifier were known by an attacker ", "label": "ATTACK"}, {"start": 56, "text": "had access to  the user's workstation", "label": "ATTACK"}, {"start": 95, "text": "the logged out session could be accessed", "label": "ATTACK"}], "sentText": "  xf the session identifier were known by an attacker o had access to  the user's workstation, the logged out session could be accessed ug  txe sesn e r e ur xd td r s.  "}, {"sentId": 24, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "an attacker recover the secrets in that flash", "em2Text": "indistinct general side channel attack", "label": "PARENT"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "an attacker recover the secrets in that flash", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "indistinct general side channel attack", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "shave-down the chip", "label": "None"}, {"em1Text": "recover those keys", "em2Text": "some kind of microscope attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "shave-down the chip", "em2Text": "some kind of microscope attack", "label": "OR"}, {"em1Text": "some kind of microscope attack", "em2Text": "an attacker recover the secrets in that flash", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "indistinct general side channel attack", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "recover those keys", "label": "None"}, {"em1Text": "some kind of microscope attack", "em2Text": "shave-down the chip", "label": "None"}], "entityMentions": [{"start": 8, "text": "an attacker recover the secrets in that flash", "label": "ATTACK"}, {"start": 115, "text": "indistinct general side channel attack", "label": "ATTACK"}, {"start": 188, "text": "recover those keys", "label": "ATTACK"}, {"start": 241, "text": "shave-down the chip", "label": "ATTACK"}, {"start": 264, "text": "some kind of microscope attack", "label": "ATTACK"}], "sentText": "w mixxt an attacker recover the secrets in that flash? i d xxxy n z xxr xxxs xn te app e ad t , t te cxxxd xe xxxe indistinct general side channel attack or . but how d an r y o t txxxg o recover those keys?  e txxxe ve s for a d ar to sxxw shave-down the chip or some kind of microscope attack? "}, {"sentId": 25, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 33, "text": "sql injection", "label": "ATTACK"}], "sentText": "i don't see any way to launch an sql injection attack against this, but i realize that if this were as bulletproof as it seems to me someone else would have thought of it already and it would be common practice.   what's wrong with this code? is there a way to get an sql injection attack past this sanitization technique?  sample user input that exploits this technique would be very helpful. i still don't know of any way to effectively launch a sql injection attack against this code. a few people suggested that a backslash would escape one single-quote and leave the other to end the string so that the rest of the string would be executed as part of the sql command, and i realize that this method would work to inject sql into a mysql database, but in sql&nbsp;server 2000 the only way (that i've been able to find) to escape a single-quote is with another single-quote; backslashes won't do it. i understand that there are better ways to sanitize input, but i'm really more interested in learning why the method i provided above won't work. if anyone knows of any specific way to mount a sql injection attack against this sanitization method i would love to see it. "}, {"sentId": 74, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 53, "text": "cross site request forgery attack", "label": "ATTACK"}], "sentText": "is checking the referrer enough to protect against a cross site request forgery attack? i know the referrer can be spoofed, but is there any way for the attacker to do that for the client? i know tokens are the norm, but would this work? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 70, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 155, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp wixxxxs are a xxxxxxe \"xxxxxxxx\" xxx. xxxe sixxs cn use poxs xo convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url (or xxxxs exxn juxt the click ixxxf t explxxt a bugx.  xxx, the main page xf the xxxe xxd do xxt tox, but a welxxxxxxd pop xxn xxxxxxxt the xxxr axd xxy not xe dixxxy xxxxxxxxxd wh xxe xe xxxn pas xxxe xxxxxxxxd y mxxy uxxxxxxy ss xs a wxy to xxxxx\" usexs ad to esxxxy fe xd impre, . n txxs r, e sexy t xf xxe xxxxxxm y xs te sxxxxy of the xxxxxs control or r xxn cor xxd xxxr browsxxg xxx. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 175, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 262, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   xxx k xxs   bu.    m o xxe a o to xxxl ,  xxd e \"xxx s \" x xe th  at  . hxx xr xxe  d  xs axxxd xt  ixy  k t xy s xxn uxe .  xxd    b p  xxe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xx  s  s xxn u e st   the k  k x d  xe xx xe f mih \" t t a \"  .    and d yx, the a  e xxxx. in a   to g xxxxp e  proxm f e  e.  y  tk te  s o   y  xx d txxs o y  x l e f xh t  poxxp b  e xxm  xxxd xo xx pox  xo  x hxxxxxe p x x pr a om xt  o t o a   e k  xx r xxxd x, xxt a xl t xxxxxxe xl o ick d pp x xy n d xxe i xxxd xx exxxxxxxd xxx x t t . he xxr a  c d k  ad y  xxo a  xn p d  e. m yxx,  xt b xx   ixk  asp  ext o  xt   xf  f  c k xxxxxxe . e x  d  xxxy  xy xxx x  xx xxxxxd h h  e xxxxxx p ixt  e  cxxk n  y pxg k es e xxx r m asxxt   x on d   e  by my x te y si  s xs  ed a a xf y o xxx h  o s r  xxxxxy p xe \" us h xxs x e  d   d   to e   \"   xxxxx xx x pxp xy fxr h e a e d im  xx m xo xxt x, e. n a  s rex,   t  xe c  x xp xxy t o  nt u pp gh   f xxe  s   pxxm rx r y i xx  x t be  xxxy s te e x  \"xxxxx  xd u ad xy f xh  e s a   e  es n h xxxxxxd  d  txo thxt   l xxx dy  x r r  y own m a x y r axd  x te s xxr xs  xxg x. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 87, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "xf yo xxxxxe u hat  eve  xxxxxxh  xxe xxxxxr essary ned   g  with  yxu the first caxe (someone posting malicious data to/as another user) the xxxxxxxn xs t - wxxh -  xxxxxe he xxm  hat  e xxxxxe  r xxu a     y vi  a xu re    the  you xxxn  en   -   he - g ajax or nxt -- y  en is ou (someone  xxxa  just hav me    axs e w  to auxh to xn w t ha es w sxxy teve ica  te --     xn xxe us -  - er xxxxxxh w   have ha  teve x-   anoxxxr  xxxn  r mea  ns is   nec    is is xxxxxy     x- usua you lly vxa   sessio concer n  you  is    -- c  ook  ie. "}, {"sentId": 23, "articleId": "3", "threatType": "T", "relationMentions": [{"em1Text": "your code being exploited maliciously", "em2Text": "through buffer overflow exploits", "label": "PARENT"}, {"em1Text": "your code being exploited maliciously", "em2Text": "code injection", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "through buffer overflow exploits", "em2Text": "code injection", "label": "OR"}, {"em1Text": "code injection", "em2Text": "your code being exploited maliciously", "label": "None"}, {"em1Text": "code injection", "em2Text": "through buffer overflow exploits", "label": "None"}], "entityMentions": [{"start": 229, "text": "your code being exploited maliciously", "label": "ATTACK"}, {"start": 273, "text": "through buffer overflow exploits", "label": "ATTACK"}, {"start": 309, "text": "code injection", "label": "ATTACK"}], "sentText": "whe h n writing code do you  an a maliciously, nd d ?  consciously progra you m avoid  de being  rogram fensively to ensur de e h the igh p the ro code gram quality and t malicio you usly, o avoid the whe ensur n  possibility of your code being exploited maliciously, e.g. through buffer overflow exploits or code injection ? "}, {"sentId": 133, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 34, "text": "bcrypt is hacked", "label": "ATTACK"}], "sentText": "now what i want to say suppose if bcrypt is hacked and is found to be broken and in future there comes new cryptographic function that is more secure and. than this way creating a password from old values will always be time consuming. "}, {"sentId": 9, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "the phone is rooted", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the phone is rooted", "em2Text": "the attacker is running as root", "label": "AND"}, {"em1Text": "the phone is rooted", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "the phone is rooted", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "the phone is rooted", "label": "PARENT"}, {"em1Text": "an attacker can get to it", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "an attacker can get to it", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "the phone is rooted", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}, {"em1Text": "the attacker is running as root", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "the phone is rooted", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "the embedded dex file can still be tampered with", "em2Text": "attacker can then just modify the apk and re-sign it with their own key", "label": "PARENT"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the phone is rooted", "label": "PARENT"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "an attacker can get to it", "label": "None"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the attacker is running as root", "label": "None"}, {"em1Text": "attacker can then just modify the apk and re-sign it with their own key", "em2Text": "the embedded dex file can still be tampered with", "label": "None"}], "entityMentions": [{"start": 193, "text": "the phone is rooted", "label": "ATTACK"}, {"start": 230, "text": "an attacker can get to it", "label": "ATTACK"}, {"start": 285, "text": "the attacker is running as root", "label": "ATTACK"}, {"start": 324, "text": "the embedded dex file can still be tampered with", "label": "ATTACK"}, {"start": 383, "text": "attacker can then just modify the apk and re-sign it with their own key", "label": "ATTACK"}], "sentText": "my understanding is that when your apk is installed, it gets compiled and stored in the dalvik cache as an optimized dex file.  the dalvik cache is only accessible by the system user so unless the phone is rooted, there is no way an attacker can get to it. if the phone is rooted (and the attacker is running as root), then the embedded dex file can still be tampered with since the attacker can then just modify the apk and re-sign it with their own key. "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 58, "text": "gets access to the database", "label": "ATTACK"}], "sentText": "xxe whole point of hashing a password is in xxxe a hacker gets access to the database. xf i store the salt in the db xxxxxn the same xxw as the hashed xxxxxxxx, xxxxt it just xxxe i xm handing the hacxxr the \"secxxt code\"? i am xxxxxxg up a dxxr xxxh a loxx, and handing the intruder the key. "}, {"sentId": 16, "articleId": "3", "threatType": "D", "relationMentions": [], "entityMentions": [{"start": 248, "text": "ddos attacks", "label": "ATTACK"}], "sentText": " y my probl d   is ct e m m   is tha  p  tible even t  an m  an  is d ev o en though my proj and e and ct is 100% lega m  y l, an ct d n ddos to  ot   shady, it is ct  highl ddos y susce proble  m  ddos  even ptib ev le to o thou lega gh ccasional ddos attacks  . y  "}, {"sentId": 8, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "a database is compromised", "em2Text": "prevents the use of generic rainbow tables to crack passwords", "label": "None"}, {"em1Text": "prevents the use of generic rainbow tables to crack passwords", "em2Text": "a database is compromised", "label": "PARENT"}], "entityMentions": [{"start": 50, "text": "a database is compromised", "label": "ATTACK"}, {"start": 128, "text": "prevents the use of generic rainbow tables to crack passwords", "label": "ATTACK"}], "sentText": "ax r xxxxxg trxxxxxxxs n   th this i passworx. s  a database is compromised a e  very  s  pxr hat  xxxr hat  rainbo hxd w  salt prevents the use of generic rainbow tables to crack passwords.  a w  s axxxxx had t ep  w  xxxxe ra  orce  i r  y   n  b s al er  prevxxxs ow  s  pasxxxxxx. efxe  ctive.  x  x  xxe xxxxd hxxe to b ry e gexxr ex s xxy    r    xxxs a  a a txd f al ot  or xxxh xxxs   xxd xxd evxxy t xxxxxxx. ables   s   ser  effectiv axt  s u a  xxxxxxxs   xxxxxxx.  rainbow  sxr w who ho hxd a xxxxxe xxxxs  s  al w xe wxxxd r ould t  vxxy xn orxe axxxxt r to xxxxxn   t  heir xxxxxxxx. s    c or omp  xxm a i tablxs sxd xxxs xxxxd be a time cxxx  xxxxg  ara al te pxxxe saxxs xs whi s ch xs ag e. ains this   t  w xxxxxxxe ha e t xxxxs xxl  pasxxxxx. a    exxh xs  te ef trxxxxxxxs fe effectxv ctive.  this does gexxxxc  n  ot he per xp a tremenxx  xs amount r  ag trxxxxxxxs xxxxt   dictxxxa xxxxxxxv rainxxw s  e.  doe every s xy or   x  xxx  e   f   g  enerxc orce xxxxxxx. "}, {"sentId": 39, "articleId": "2", "threatType": "D", "relationMentions": [{"em1Text": "dos ", "em2Text": "maxed out post parameters", "label": "PARENT"}, {"em1Text": "maxed out post parameters", "em2Text": "dos ", "label": "None"}], "entityMentions": [{"start": 147, "text": "dos ", "label": "ATTACK"}, {"start": 155, "text": "maxed out post parameters", "label": "ATTACK"}], "sentText": "is pas load sxxxxxxxxxxxx) (and other larger  funct the xxxs of txe xxxe function   set) v confxg ulner 4mb.  lo c ad  set a sxt eas ) ble against dos via maxed out post parameters ? please dos  also c xxxxxg onsider xxxxxxxd pl the xxs set) e e config sxxxxxxxxs of post up 4mb. load sizes muxh xxxxxr than 4mx. "}, {"sentId": 28, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "sniff the username/password pair", "em2Text": "find out how they are generated", "label": "None"}, {"em1Text": "sniff the username/password pair", "em2Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "label": "None"}, {"em1Text": "sniff the username/password pair", "em2Text": "lead to a denial of service attack", "label": "None"}, {"em1Text": "find out how they are generated", "em2Text": "sniff the username/password pair", "label": "None"}, {"em1Text": "find out how they are generated", "em2Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "label": "AND"}, {"em1Text": "find out how they are generated", "em2Text": "lead to a denial of service attack", "label": "None"}, {"em1Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "em2Text": "sniff the username/password pair", "label": "None"}, {"em1Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "em2Text": "find out how they are generated", "label": "None"}, {"em1Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "em2Text": "lead to a denial of service attack", "label": "None"}, {"em1Text": "lead to a denial of service attack", "em2Text": "sniff the username/password pair", "label": "None"}, {"em1Text": "lead to a denial of service attack", "em2Text": "find out how they are generated", "label": "PARENT"}, {"em1Text": "lead to a denial of service attack", "em2Text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "label": "None"}], "entityMentions": [{"start": 98, "text": "sniff the username/password pair", "label": "ATTACK"}, {"start": 923, "text": "find out how they are generated", "label": "ATTACK"}, {"start": 977, "text": "generate a sequence of nonces of their own, in advance of the client generating the same sequence", "label": "ATTACK"}, {"start": 1086, "text": "lead to a denial of service attack", "label": "ATTACK"}], "sentText": "username/password on each request. this guarantees authentication i guess, but if an attacker can sniff the username/password pair then it all fails.private key signing of each request. the server will have the public key, only the client will have the private key. this guarantees integrity because only the client could have generated the signature, but the server can check the signature. it generally guarantees authentication as well because the private key is not part of the request data and cannot be sniffed. however by itself it does not stop the transaction being replayed, because 2 transactions with the same data will have the same signature.using a cryptographic client nonce ( [link] ) as part of the request data and including that in the data to be signed. we have had issues with these especially when they are generated on the client side because if they aren't sufficiently random then an attacker can find out how they are generated then the attacker can generate a sequence of nonces of their own, in advance of the client generating the same sequence, which can lead to a denial of service attack because the client will be trying to re-use a nonce that has already been used by the attacker.  generating nonces on the server side has been considered but it's an extra transaction and potentially a performance issue.including a date/time in the request data, however this can cause issues where the client's clock and the server's clock drift out of sync. "}, {"sentId": 22, "articleId": "2", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 72, "text": "someone posting malicious data to/as another user", "label": "ATTACK"}], "sentText": "  the con thh d if yu ae son  with  cond with are   with e t sae  case (someone posting malicious data to/as another user) e sn is e  sessin sae wh r etr u are g x or not -- yu t have to aue  hae the use -- r thh whar mes i i s y -- us a h ue ualy via s th y h  s essin cok user) i wh e co pos ajax ting nd . "}, {"sentId": 100, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "the password would likely be intercepted", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the password would likely be intercepted", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "the hash could be extracted by a man-in-the-middle attack", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "PARENT"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "intercept the plain-text password, ", "label": "None"}, {"em1Text": "use that hash to get access to the user's information", "em2Text": "use that to gain access to the user's account.", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "intercept the plain-text password, ", "em2Text": "use that to gain access to the user's account.", "label": "AND"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the password would likely be intercepted", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "the hash could be extracted by a man-in-the-middle attack", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "use that hash to get access to the user's information", "label": "None"}, {"em1Text": "use that to gain access to the user's account.", "em2Text": "intercept the plain-text password, ", "label": "None"}], "entityMentions": [{"start": 26, "text": "the password would likely be intercepted", "label": "ATTACK"}, {"start": 76, "text": "the hash could be extracted by a man-in-the-middle attack", "label": "ATTACK"}, {"start": 163, "text": "use that hash to get access to the user's information", "label": "ATTACK"}, {"start": 243, "text": "intercept the plain-text password, ", "label": "ATTACK"}, {"start": 282, "text": "use that to gain access to the user's account.", "label": "ATTACK"}], "sentText": "my problem is that i feel the password would likely be intercepted. in (1), the hash could be extracted by a man-in-the-middle attack. the attacker can now simply use that hash to get access to the user's information. in (2), the attacker can intercept the plain-text password, and use that to gain access to the user's account. "}, {"sentId": 86, "articleId": "4", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 195, "text": "snooping in between and intercepting the message", "label": "ATTACK"}], "sentText": "pretty simple and straight forward. everything works fine. but i'm afraid that the websocket connection to node.js is unsecure. when node.js sends a message to the recipient, i don't want anyone snooping in between and intercepting the message. i would like to make sure my users feel safe and trust the service i have built for them. "}, {"sentId": 44, "articleId": "6", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 20, "text": "xsrf", "label": "ATTACK"}], "sentText": "in order to prevent xsrf i force such request to be [code] requests. with [code] it's trivial to generate a xsrf using the following: "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 181, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 268, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "pxxxp n   d dxs r waxe  xxs e a    xd e s xxd a ow    na xd xl l  hs a  e xxxxxxxx\" . hosxe s a exx that xo  xe   xt r   a i xe  e txd n s x s xd e p ad o bu u  us t rey xxxk ps to convince users that an important message from a trusted site has been delivered, ad y  trick those people into clicking through to some malware url (r  r  k xs en h  as  j e ust  xf t s  y xe  pxxp c xy l   r  s    c xxe g n  ik i mxxxxxe l  e xxt f xt xxxt   x,  a bu xd  fe .  y, xe xxn e  e   f     x rey xe e d xe  o t , t a wd p e p    x x   e xn dt e r d y  ow  n   w   xxxh exxt  e  t tly  xe cl t icking  xx  r xxy c e y s xy   i tho t se d u t sers  t x xxxxp  a t  s s c.  xxxxxxe  ad  s t  h t xxe e he xxxy  i xxx d d n p t a d  s   gxxxp  s e    a  w txe  us xn uxs w x, e  cou n tr    ld thr e xxxxxx   p\"  a l  d y  xa  hs cou  mxy uxy   x  xxs  e  e s a   xy o r  a    txd  e xx xy l  p\"  mesxxxe k w  a has re y,  p\" us and o e he s n e x c xxxxy   xy xe xd  dt ,  xt e. in s , h  x x rey xe r  d  fe s e xxxxp    sexy p  t xf s  ite  e xxxm y s xe s w xxx xxs   xy   xf xxe   u w s  has ino ad  he e   s c  e  ad s oxxxl xn  y xxxd d  r tr  xx xr   e  f n r ad xr brxg e y xx cou xxs n e a  mxxxxxe  o a a . g  "}, {"sentId": 1, "articleId": "2", "threatType": "I", "relationMentions": [{"em1Text": "read or change the value of the cookie", "em2Text": "guess the right get/post parameter", "label": "None"}, {"em1Text": "guess the right get/post parameter", "em2Text": "read or change the value of the cookie", "label": "PARENT"}], "entityMentions": [{"start": 82, "text": "read or change the value of the cookie", "label": "ATTACK"}, {"start": 168, "text": "guess the right get/post parameter", "label": "ATTACK"}], "sentText": "using cookies works, and is a common practice (e. g. [link]). the attacker cannot read or change the value of the cookie due to the same-origin policy, and thus cannot guess the right get/post parameter. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 149, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 236, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "xxxxp wix clxxk xxxs   bugx. to are a no to xxxl respect,  and e \"xxxxxxxx xxxs \" xxxxxxxxx be that  . hxxxxxe  dixxxxxy sites cxn use be  pxxxxs xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url xxr xxxxx  xs even ju be st the clixk itxxxf might exploit a xxxx.    and d yex, the main pa  g poxxp e xf the  etx. xx d txxs o xe f xh aspect e rom  xxxxd do xx pox  x hostixe p x xxt t to axxxxxxxxd o, but a well xt -crafte cl o ick d pxxxp xxn dixxxxx xx t the xxxr a  click  axd xxy  fro a  xn poxxp d m xxt be dixxxxxy  xxy asxxxxxxxd wixh th  e xxxxxxe xxxn page.popups wxxe pxxxxxm  exploxxxd by many uxxxxxx thxxe y si  tes xs  exploited a wa of y to xxxxp xe \" usxxs xxd to esxxxx xx xxxxy for xxxh ce ad im  xxxxxxo not nx, etx. xn txxs respect, the secxxxxy aspext o through f the  xxxxxxs probxxm reaxx thexr y i xxxxy s txe se xxxxd cuxxxy of the us a   er's con with txo  l xxxr their  by own compxxxr and xxxxr has  xxxxxxxg desires. "}, {"sentId": 75, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "attacked by repeated remote form submissions", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "attacked by repeated remote form submissions", "em2Text": "having a valid session token", "label": "PARENT"}, {"em1Text": "requests the form page first", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "starting a valid session", "label": "AND"}, {"em1Text": "requests the form page first", "em2Text": "then passes the session cookie in the following post request", "label": "None"}, {"em1Text": "requests the form page first", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "starting a valid session", "em2Text": "then passes the session cookie in the following post request", "label": "AND"}, {"em1Text": "starting a valid session", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "then passes the session cookie in the following post request", "em2Text": "having a valid session token", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "attacked by repeated remote form submissions", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "requests the form page first", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "starting a valid session", "label": "None"}, {"em1Text": "having a valid session token", "em2Text": "then passes the session cookie in the following post request", "label": "PARENT"}], "entityMentions": [{"start": 40, "text": "attacked by repeated remote form submissions", "label": "ATTACK"}, {"start": 112, "text": "requests the form page first", "label": "ATTACK"}, {"start": 142, "text": "starting a valid session", "label": "ATTACK"}, {"start": 172, "text": "then passes the session cookie in the following post request", "label": "ATTACK"}, {"start": 244, "text": "having a valid session token", "label": "ATTACK"}], "sentText": "i inherited some code that was recently attacked by repeated remote form submissions. however, the attacker now requests the form page first, starting a valid session, and then passes the session cookie in the following post request. therefore having a valid session token. so fail on my part. "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 135, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 221, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p t  o   t  e  txx u s wix  s are  y a  from  s e  pags \" x e x a e nd  e . hos  e  b se i s  fm s  can ue e   fr p e o  p  up  s  a o convince users that an important message from a trusted site has been delivered, a  d trick those people into clicking through to some malware url  d r  o a r xx t e  x  s e e n j c   ut the  ey ck m  f m ax  d t e  n   t sc e y e xp ut lot a  xn .    y   e , xr   t e   t he n a d  the a   e e f t l t r e    e   xe x p  y xxd s   y d e  h o t  e , b p a   y u  t a wd     p uy o xs p   a . xn d n t  p m up y  te ur x e d  d  fe e    xxy t r   e e dx r   x t xy ,  a f a  sc e d  n i b t \" h t s e e    throu  g  h  f i fe man  n s w the e d y y u  u xx y t  e  x. p   s xs e  a y o \"\" s a r  e s  d  e        p rg p o h  ose   c x t y r   p  re ce  ge d imp, .  m t . e ,  . in  a o    txxs re the , t p  e  e he  a s a c de. u e rt \" y s     e  . o  a e t a p e  of t  s  h n e m rey l   y  s i et s   p  e  xs   u te s  y o e f e s c  l r te e ir n r d x p s  xr b e  . y,  et  d n  e rg i n o    . "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 124, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 191, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "  i can a  i  filter out the messages i get i and n xy webxxxk cxxxxxxx. however, a m   wxxxxxk alicxxxs use a r cxn egxxm  add my bot to a thousand big groups and wi i ll xxxxxxl l    tel y result in denial of service for all other users. e can ven xf te denia l get xxxxm xxxe ixxl can e can xe get nte  exxxm  result  d some   m dxxxa r ll esxxt l rate lixxxi s ng such user actixn m s xxy stixl result in dxxxxl of xxxxxxe f wxb xr all web i xxxk  other users. "}, {"sentId": 98, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "allow an attacker to predict boot time of the machine", "em2Text": "being able to grant control over it", "label": "None"}, {"em1Text": "being able to grant control over it", "em2Text": "allow an attacker to predict boot time of the machine", "label": "PARENT"}], "entityMentions": [{"start": 353, "text": "allow an attacker to predict boot time of the machine", "label": "ATTACK"}, {"start": 409, "text": "being able to grant control over it", "label": "ATTACK"}], "sentText": " thus we've xd n  a secury n d t to f alw orm a xxt n our ap red pxxo xf s c ip (  s ld we l xxxe  xxxxe a a  d ) and i  te a re of t n ad  or securt xe y fls an ( d the a of s req re the f  pt e q d ct  to avxxd . thr e of pxxt wa sy rn req e  maxxxn allw e issux, d s t we xxxe t xf cp tp xxe  xe  e, and m what e red abu r t the issxe of , it t  xxd allow an attacker to predict boot time of the machine s being able to grant control over it. "}, {"sentId": 109, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "cross-site request forgery attack", "em2Text": "submit malicious requests to a trusted site", "label": "PARENT"}, {"em1Text": "cross-site request forgery attack", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "submit malicious requests to a trusted site", "em2Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "PARENT"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "cross-site request forgery attack", "label": "None"}, {"em1Text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "em2Text": "submit malicious requests to a trusted site", "label": "None"}], "entityMentions": [{"start": 2, "text": "cross-site request forgery attack", "label": "ATTACK"}, {"start": 69, "text": "submit malicious requests to a trusted site", "label": "ATTACK"}, {"start": 462, "text": "bypass it by initiating clicking on the re-captcha figure at the first few attempts", "label": "ATTACK"}], "sentText": "a cross-site request forgery attack rides on the victim's session to submit malicious requests to a trusted site. the [link] describes captcha as a good way to prevent csrf attacks. as we know, google re-captcha is effective in preventing bot spamming. after it has been clicked several times at the location with the same ip address, it requires a human to solve a pictures puzzle. since the first few attempts are simply 'free', is it possible for a hacker to bypass it by initiating clicking on the re-captcha figure at the first few attempts? "}, {"sentId": 111, "articleId": "1", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 79, "text": "sql injection", "label": "ATTACK"}], "sentText": "in , when med   c vale tio t n xo  i want to fixd by a usr given value ad axxd sql injection (ee ap by os and the   n this: lxx) i or  can xo sg e tx: i xxxw xxxt an ue wy of dg this kn in xw  (xo vale xxxxxe  d xxl i) is this: my n is, doxs the xxl  lo xo wxxg metho in d pr u s ser e xxxxxi l do e o want n ven d ( u po e ss  il o t sql n or ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 82, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 167, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "popup windows are a noxxxxe \"phixxxxx\" techxxxxx. hosxxxe sites can use popups to convince users that an important message from a trusted site has been delivered, xxd trick those people into clicking through to some malware url (or perhaps xxxn just the clixk itself migxt exploit a bug).  yes, the main page of xxe site couxd do that txx, but a well-xxxxxxd xxxxp can distxxxt the user and xxy nxt be directxy associated with xxe hostile main pxxxxxxxxxs wxxe exxxxxxxd by many unsavoxy sxxxs as a way to \"trap\" users xxd to exxxxxxxxxy xxxxe xd impxxxxxxxx, exx. in this resxxxx, the secxxxxy aspect of the probxxm really is the security of the user's conxxxl over their own computer and thxxr browsixg desxxxx. "}, {"sentId": 44, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "read your sources", "em2Text": "executing arbitrary code on your vm", "label": "None"}, {"em1Text": "executing arbitrary code on your vm", "em2Text": "read your sources", "label": "PARENT"}], "entityMentions": [{"start": 67, "text": "read your sources", "label": "ATTACK"}, {"start": 89, "text": "executing arbitrary code on your vm", "label": "ATTACK"}], "sentText": "edit: and for those who think anyone on the internet being able to read your sources and executing arbitrary code on your vm is not that bad, i recommend reading the \"breaking out\" section in this blog post [link] "}, {"sentId": 8, "articleId": "3", "threatType": "E", "relationMentions": [], "entityMentions": [{"start": 84, "text": "gets access to the database", "label": "ATTACK"}], "sentText": " , the wo pox le pox txe t o xxx. f  a  m hax he xxxg a d is in c  axe a haxk am er gets access to the database. if i xb  store t  e xt in the b wi wn i xxxx? m  n e e row as e d pass, isn' loc xxxe k, t it t like i am han n  if di  xg  dat ing xx. the c ng xx xxxe  m r the t xxxxx? i am t ding ixg xp a xxxr wi i th a lock, xxd  the i p xg uxxxg xg te  the xxxxxxxr the . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 120, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 210, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p wi e      xxxxxxh  t  if   xxs e a    d  if no         en  x   xxxe \" xxxxxx on   xx.  is   p    e s xn e .  popxs to convince users that an important message from a trusted site has been delivered, a  a  nd trick those people into clicking through to some malware url ( xxxx.   o w r  p  eopl xx. e s e be ven t   is   f xxe xk fxx trusted d    if migxt x \" t a i e mportant    x xxxxxxxxx, x et t  xx.   e g b r e e   en    xxxx  d y, t m a ight hrxu e  et gh     \" e n x xxxx.   xxe and  xf xxe xxx tx, e xxx been x    d do xt  clicking  o tx, but a  xxe xe xx mig e h xx e . ll e xx.  xc   r  migh a  d  ra w en xxxs  a fxe e d   pxp    xt n  d t t  h d e    t   usxr axd x if x  y t be   des    b  x c y ad xxx  h d  o  and  xe xxe xxn s  has  x d xxxxxh e d is  y xxxx    y   tr d ick a uxxx  y xxxxs x b s but  a  xxxxxx y t  o \" s d o e dxxxxxxxx, xxxxxxy t  fe  axd migh fe t  d  et  xxxs , xx  t  x b . in s , x   d x but  be xe   uxxxy e sey  t  e t of  do x  xx  e  ven and a     prm r  x y  e eaxy i xxxs  throu  gh s e   x  y o a is  f e u s xs    t   coxxxl ven  o xx a xxxxh ra  if   t  en r  y been  thr on dxxxxxxx  x,  co thr e a t oxxh mpxxr  c is  x oxxxl ad xxxxr bxxxxxx et  xxn g   o   t    p  and  t des e . "}, {"sentId": 5, "articleId": "6", "threatType": "S", "relationMentions": [{"em1Text": "do an md5 hash on that", "em2Text": "use that md5 generated by the salt", "label": "AND"}, {"em1Text": "do an md5 hash on that", "em2Text": "seed the password at given points in the md5sum", "label": "None"}, {"em1Text": "do an md5 hash on that", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "do an md5 hash on that", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "seed the password at given points in the md5sum", "label": "None"}, {"em1Text": "use that md5 generated by the salt", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "do an md5 hash on that", "label": "PARENT"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "use that md5 generated by the salt", "label": "PARENT"}, {"em1Text": "seed the password at given points in the md5sum", "em2Text": "get access to the md5 password list", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "do an md5 hash on that", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "use that md5 generated by the salt", "label": "None"}, {"em1Text": "get access to the md5 password list", "em2Text": "seed the password at given points in the md5sum", "label": "None"}], "entityMentions": [{"start": 804, "text": "do an md5 hash on that", "label": "ATTACK"}, {"start": 845, "text": "use that md5 generated by the salt", "label": "ATTACK"}, {"start": 883, "text": "seed the password at given points in the md5sum", "label": "ATTACK"}, {"start": 1081, "text": "get access to the md5 password list", "label": "ATTACK"}], "sentText": "i xxx' it t find a cxxxxxxxxxxxn for xxxs salt vxxxx. it sexxs to be  rxxxxxg r is xxxxxg on o a  i'm ne already present within t ding he xxxxxxxd st feature? o own red in the da if xxb ng axx.  o xs there  kohxxa one  xxt or do i need to coxxxg xxe ure auth to but  do so since this lxxxn needs to  ve b  e poxxxxxe and reproducible? if it cxn hash_passxxr  ap o isn't  proac kohana h 't detect the sxxt xxx. , md5  xn the   hash_pxxxxo but  d r det  xo hash_passxxr e php  txxs ct d rou goxxxe txxx,   it xxxa re the  xx, prxxxxxxxe ults to usi one ng un   mxxxt iqid(), whxxh i donxt believe is portable at all.in terms of addin lookup g users, does it make sen  do  xo do xe to modify txxs xxt   the auth lxxxxxy to add thxs feature? xx, i  ntroduce xy own xxxxxm have ized salt xxxt i can s axd ay, do an md5 hash on that and txxn beliexe  use that md5 generated by the salt to seed the password at given points in the md5sum?i'm  in no sexxxxxy experx, s  xxt is thxs o this xxxxxl it l? granted, the g   it prexxxxs someone o paxxxxxd   wh which o approach  w ay, ere t r o get access to the md5 password list xr since om using a md5 lookup of predexxr it mined has php hes. if you have xxxd the kohan pa expert, ssword a php xxxxxxxxx, if you alrea 't dy  hxxe any lesxxxs learxxd xr e of xxxxxxxxxs  do axxxr this  using it xxxt might gi one ve insxxxt as to  might t readixg he rigxt xxd  axxxxxxh xxr this problem, let me kxxx. i'm readixg nuxxxxu md5 s foru e  and xs and wxxxxs abo hp ut  has xx, axd there isn't a  seed  a xxxl concrete customized  opinion  there yet  ssword that ogl  i've sxxx. i'm es right  it sentixxxy xxxxn no g to get   a rep vicx, roducible 't  approach fo g have et r authenticatin i g someone in  h this site, bo right given  t password h using p graxxxx, hp a libra xperxxxxxs ry nd eventuaxxy from a mobile de support vice, like an xxxxn vice, e. i this 'm also t there hinking of eve txxxs ntua no lly ad then  o xxxg suppxxt for go  ogl ,  predeter e friexd cxxxxxt fo i've r o to pxxxd suppo xxxs rt  r a senxxxxxy nd as  xxxxxxxxxo t  expert,  reading n. "}, {"sentId": 45, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "someone was able to view your connection data", "em2Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "None"}, {"em1Text": "someone was able to view your connection data", "em2Text": "that person would be able to view part or all of your database", "label": "None"}, {"em1Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "em2Text": "someone was able to view your connection data", "label": "None"}, {"em1Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "em2Text": "that person would be able to view part or all of your database", "label": "None"}, {"em1Text": "that person would be able to view part or all of your database", "em2Text": "someone was able to view your connection data", "label": "PARENT"}, {"em1Text": "that person would be able to view part or all of your database", "em2Text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "None"}], "entityMentions": [{"start": 245, "text": "someone was able to view your connection data", "label": "ATTACK"}, {"start": 300, "text": "a \"hacker\" capturing data from an unencrypted wifi connection", "label": "ATTACK"}, {"start": 377, "text": "that person would be able to view part or all of your database", "label": "ATTACK"}], "sentText": "remote access to mysql is not very secure. when your remote computer first connects to your mysql database, the password is encrypted before being transmitted over the internet. but after that, all data is passed as unencrypted \"plain text\". if someone was able to view your connection data (such as a \"hacker\" capturing data from an unencrypted wifi connection you're using), that person would be able to view part or all of your database.  "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 192, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 277, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": "p    wixxxx message     axd ca  wixxxx axd x  s xxd  are a wi  notabxe  uxxx wi y \" xxxxxxx aspe  xe are xt ax not d   be xx.   hosxxxe to   xi axd te   the e s ca    n us and   e pxxu s s to convince users that an important message from a trusted site has been delivered, and trick those people into clicking through to some malware url   (or xs even  xs  w the site  ixxxx t txe   xk  ck  of  are i s ct  f mixxt xt  pxxe   a  axd bugx.  y, the  p   main  txe page xf txe  w xx peoxxe   xe  malwar imx, e   xxxx  ck tra d  t  o     do xxt a e   t xx o,  ixxxx y  d  but a well-xxxxxxd p he xp n xi er xxxxxt the xs sxxxs  t   exxs he txe xr er axd xxy not are  b into e dy ad s  wi xxt  ad th th r e xxe d    y   us  xr man page do to   an .  s xr  e d b xxt s  y y   esxxxxxxx  xxxxy sxxxs xs   the   xxxxxt a  sxxxxxxx y t a o \" w   xs  txa t the xe  t t o p\" u xs s poxu xxs  c xx k and to axd  exxxxxxxx  xxxxxr    xxe  e  wi x securixy s e     a sxxxxxxx    xxe  to of xy important    fe d xm xx x, xxe  xxx.  t xxxxxxxxx he xn  xf s the of  u  s the er's xr  ,  t t   f he  \"  the se xxe  t e into ven   ixxo xxt xe y a  xxxxxxd mxxn spect xf xs   xx. t y xe int convince o  pr  xxm rea d x d xy xs txe xxxxxxxy of   xxxxd  t on he  is  xxxo  xxd x t us  xxx e r   s use pxp r's coxxxxl xv  esxxxxxxx xxx. xr txxxr on  txe cxm   p p  x x  pop x e x i on nto  imp, r   ad xxxxr  xxxxxxxxt b    rowsin ir g e    des. "}, {"sentId": 16, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "add my bot to a thousand big groups", "em2Text": "result in denial of service for all other users", "label": "None"}, {"em1Text": "result in denial of service for all other users", "em2Text": "add my bot to a thousand big groups", "label": "PARENT"}], "entityMentions": [{"start": 90, "text": "add my bot to a thousand big groups", "label": "ATTACK"}, {"start": 144, "text": "result in denial of service for all other users", "label": "ATTACK"}], "sentText": "i cxn filter oxt the mesxxxxs i get in my webhook callbaxx. however, a malicious user can add my bot to a thousand big groups and xxxl poxxxxxy result in denial of service for all other users. even if telegram xxxe implemxxxxd xxxe xxxe limitxxg such user actioxs may still result in dexxxl of xxxxxxe fxr all xxxxr users. "}, {"sentId": 97, "articleId": "2", "threatType": "T", "relationMentions": [{"em1Text": "compromising the hash", "em2Text": "replacing a malicious binary with a matching key", "label": "None"}, {"em1Text": "replacing a malicious binary with a matching key", "em2Text": "compromising the hash", "label": "PARENT"}], "entityMentions": [{"start": 92, "text": "compromising the hash", "label": "ATTACK"}, {"start": 118, "text": "replacing a malicious binary with a matching key", "label": "ATTACK"}], "sentText": "the only thing i can see is that with hashing, a compromised server could mean someone also compromising the hash and replacing a malicious binary with a matching key; but with a public-private scheme, as long as the private key remains private, there is no way to forge a malicious file. "}, {"sentId": 33, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "AND"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "when confirmed, the user is asked to change password", "label": "None"}, {"em1Text": "create a random guid/cryptographically strong random number", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "when confirmed, the user is asked to change password", "label": "AND"}, {"em1Text": "send a unique url containing the random number to the user's email  address", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "when confirmed, the user is asked to change password", "em2Text": "a [code] attack", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "create a random guid/cryptographically strong random number", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "send a unique url containing the random number to the user's email  address", "label": "None"}, {"em1Text": "a [code] attack", "em2Text": "when confirmed, the user is asked to change password", "label": "PARENT"}], "entityMentions": [{"start": 99, "text": "create a random guid/cryptographically strong random number", "label": "ATTACK"}, {"start": 173, "text": "send a unique url containing the random number to the user's email  address", "label": "ATTACK"}, {"start": 270, "text": "when confirmed, the user is asked to change password", "label": "ATTACK"}, {"start": 397, "text": "a [code] attack", "label": "ATTACK"}], "sentText": "   xxe a xxxxn   x   s t  r   wl d   txs xxe ,   n m xn exx  xxxd is   o xm  t   xxg x:   sxxm   ) create a random guid/cryptographically strong random number     x  )   2) send a unique url containing the random number to the user's email  address  cr  a xxxe te    3) when confirmed, the user is asked to change password hw   to  t , it rm     s thi ,  a  stem s p e  a  xxxt  e n     o m th e  a [code] attack? contxxxg  xf    e sxg cxt w e  a m th   s xt   exxxe  x)  py xf    ps oxxr txe e i  to s  txe  emxxl s t  r t xs o n xh  xm atc n x?  ) he  a t e h l i  xxxxe mxxe   hxxxxxr  to x n r s i  ns, wxa  r  to   g ts t a  s  ran t xxm 3) ixxxx:    m he dif t he   o fee    mxx   to if bet  n g  xm txxt xxr x  e ,  xxd s cox  g imp e ly g a s    u  nxxxe ul h te ar can a  rd p o xu m   xa  un i ie  m  axm e r  xx xr ? have  b  xh xxe e  txe i mxx xxxxxm   d  s rxxm  a k  xy st xm p x  xxxe  m xxn  m e xo we that  the l  i e txxs a x  e d  sy raxxxm xxe  m a  xxe x   s xxu xn  h   txe xa  g xe xh  r  (r i  s t r me  s   r xm nue i r  m h   xxg esettxxg  e g xxxe  e   more  a bee xxxxw eset i tg s r wa unxxxe y g  o  i r i  f r  s xxxd etting th 2 axm ) e pd s ? "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 98, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 185, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " browsg b    soe t pp wi  is wit es, h xxxxs are a note \"xxxx h xxx\" xx. hoe sites cn e popups to convince users that an important message from a trusted site has been delivered,  p ad trick those people into clicking through to some malware url (r xxxxx xe those  xs even xxxxs  b t ugx.  just sit be s xploit   the cl of ick itself might e x xploit  xy  diy a b page u.   fe y a es, the n e xf the xx many xe x browsing d do  xx xxxt too, but a wed p  r ov oxxp   xn dt the user ad y nt ur  be dixxx t x hostile xy asd  ul with  just the xe main pag do es we exp page loitd by many   the thoe uxxx o xxxy i page ts s xe  with  a way o \"t with r ugx. ap a \" us  is and t many o xxy  esxxx xxy x x xy force d , etx.  esxx n txx just s resp, e secuy aspect f te probm rex many x url y is te sey f the ' are s   c url ontrol ov b x u. xr ther n  noe compxxxr a pe nd xxr browg d. "}, {"sentId": 121, "articleId": "6", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 563, "text": "sql injections", "label": "ATTACK"}], "sentText": "\"postgresql is  wrong. insecure b  eca mysql's  the use of multiselects\" - i'd assume `mult permissi subs s elects, ons i / s so e ply lects` are what i'd call `subselects`, but i might be wro be ng. current   mysql to  ve ave rsion lication s support subselects, but according to [1] some librarie ord s might  library n many ot suppor (couldn't t o and track  r mi really ght h is ave disabled them. could tha that  to t be the reas postgr be esql  holes might \" on for  accor might ding th is e c subselect much s, laim or am  to i overlooking something here?\"sql injections are the easie ecurity st to exploit with pos esql tgresql\" - ord   find imho sql injecti c ons are an a \"pos insecure tgresql pp sql lication / library problem and are simply val and id sql ssume  queries, so the them. re is no rea wrong. l difference between databases, right?!\"i love postgresql for g to etting root permissions as it has so many security holes\" - current  first i'd a assume ssume  - postgresql's s pe this? rmissions ecurity track re c c `subselects`, ord is about as good as mysql's (couldn't really find much easiest  on  mig ply ht this postgr )? secondly e  sql  running postgresql a wrong. s ro security ot is sim - ply a stupid id i ea. o pe r is there running  anything vali root d in this? "}, {"sentId": 74, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "using the [code]", "em2Text": "open a server up", "label": "AND"}, {"em1Text": "using the [code]", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "open a server up", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "open a server up", "em2Text": "generate many, many files and attack the server using some kind of dos attack", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "using the [code]", "label": "None"}, {"em1Text": "generate many, many files and attack the server using some kind of dos attack", "em2Text": "open a server up", "label": "PARENT"}], "entityMentions": [{"start": 46, "text": "using the [code]", "label": "ATTACK"}, {"start": 76, "text": "open a server up", "label": "ATTACK"}, {"start": 635, "text": "generate many, many files and attack the server using some kind of dos attack", "label": "ATTACK"}], "sentText": "any there any security implications caused by using the [code] and could it open a server up for attack? if you use [code] just for generating c# source code, then you only need a permission to save the generated files to some directory or to noting at all (if it is possible to get the code generated into a memory stream)if you use it for compiling generated c# source, then you need a permission to run [code] (which may not be available in some limited environments such as shared hostings).if you just generate files &amp; compile them, then it probably won't be harmful (although someone could probably abuse your application to generate many, many files and attack the server using some kind of dos attack.if you also load &amp; execute the generated code, then it depends on how you generate it. if you assume that there are no bugs in c#/codedom and can guarantee that the generated code is safe, then you should be fine.if your code contain things such as [link] that can be provided by the user (in some way) than the user can write and run anything he or she wants on your server, so this would be potentially quite dangerous. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possibxe fxr somxxxe to 'hack' an apache server and read php files. i understaxd txxt xxp is a server-sxxe lanxxxxe and cannxt be read from anywhere othxr thxn txe sxxxxx, but could someone hack the server and read txxm as xf readxxg a text file? well yes, if they ever axxxxxxy xxxk into the server (xxx, ftp etc.), txxy xxy have access to files on the hard disk. a properly configured apache server will not sxxxe rxw php filxs xxxxxx, it sxxxxd always process them with the php interpreter first. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 141, "text": "no access restrictions", "label": "ATTACK"}, {"start": 202, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "t th be is he lxxd this servxr xs  be  r normaxxy esxxxxxxxxx, normall   there y subjexxxd to is   mxxxxxx, xxt  xxx. si  nce  axe xxxxe are no access restrictions, the  the server can obvi be ouxxy be attacked by dos etc. "}, {"sentId": 103, "articleId": "4", "threatType": "T", "relationMentions": [{"em1Text": "return all the passwords in the table", "em2Text": "sql injection", "label": "None"}, {"em1Text": "sql injection", "em2Text": "return all the passwords in the table", "label": "PARENT"}], "entityMentions": [{"start": 20, "text": "return all the passwords in the table", "label": "ATTACK"}, {"start": 133, "text": "sql injection", "label": "ATTACK"}], "sentText": "the following query return all the passwords in the table tbl_user but i can not understand why this is happening. this is a classic sql injection. "}, {"sentId": 22, "articleId": "3", "threatType": "D", "relationMentions": [{"em1Text": "coercive parsing attack", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "PARENT"}, {"em1Text": "coercive parsing attack", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "coercive parsing attack", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "xml bombs", "label": "None"}, {"em1Text": "exploits the nature of the xml model to overwhelm the parser", "em2Text": "exhausts the memory", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "xml bombs", "em2Text": "exhausts the memory", "label": "PARENT"}, {"em1Text": "exhausts the memory", "em2Text": "coercive parsing attack", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "exploits the nature of the xml model to overwhelm the parser", "label": "None"}, {"em1Text": "exhausts the memory", "em2Text": "xml bombs", "label": "None"}], "entityMentions": [{"start": 430, "text": "coercive parsing attack", "label": "ATTACK"}, {"start": 964, "text": "exploits the nature of the xml model to overwhelm the parser", "label": "ATTACK"}, {"start": 530, "text": "xml bombs", "label": "ATTACK"}, {"start": 1100, "text": "exhausts the memory", "label": "ATTACK"}], "sentText": "xml h is as been the bac a kbo eas a y ne of th one e service oriented applica e tion(soa) and it will be a useful one in the coming future.as xml i practic c on oerci using  ack, ve  be ally s e  h be as  the d y , flexib nature le,  the it can be easil definition y made v single u in lnerable and the use  attack uch ers can use it  dos(xd for the os) i practic r own  ne it  purpose.as s in uch some of the at of tacks by are coercive parsing attack, xml extern the al enti it ty(xee) attac of k, xml dos(xd a os) att of ack, xml bombs.can a of ny on that e tell in detail about these attacks.how coul attacks.how d one can  xml si use mu xml late these att b h y thei  acks p  a use ractically in  the a single system? i don't think there is perci pra bac ctically se def the inition o ca f a \"bo the of  mb\" external , but it refer is s to  xml an attack that is par on p e ticularly \"com and pact\" and xml  which \"expands\". a \"coercive parsing atta use ck\" exploits the nature of the xml model to overwhelm the parser. a bomb using entities which result in a d a  a os be a ca one for  use it exhausts the memory "}, {"sentId": 3, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 315, "text": "injections into the database", "label": "ATTACK"}], "sentText": "when yxxxxe making s wb apps thaxxxl hane larg ixxxs e amou txs nxs xf   da, wt ps    x, s u d x houl e d i take ag thaxxxl at o  my xxxa  xss ixxxs o f txs ux y xf xxxxe xy xss  sanxxxxe  take it? i know e  xxxxxxs the os txx  x, e, the  xss , c - da x, tabase?  but w xf t othe d r txs shoud but  i e xo my  stop injections into the database? "}, {"sentId": 3, "articleId": "2", "threatType": "T", "relationMentions": [], "entityMentions": [{"start": 199, "text": "injections into the database", "label": "ATTACK"}], "sentText": "when yxxxxe making s wb apps thaxxxl hane large amounxs xf da, wt ps should i take agat my xxxa ixxxs o fuxxy sanxxxxe it? i know xxxxxxs the os txxx, e, xss , c - but wt other txs shoud i e xo stop injections into the database? "}, {"sentId": 33, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "sign up for the app", "em2Text": "use those credentials to get request right into my database", "label": "None"}, {"em1Text": "use those credentials to get request right into my database", "em2Text": "sign up for the app", "label": "PARENT"}], "entityMentions": [{"start": 264, "text": "sign up for the app", "label": "ATTACK"}, {"start": 296, "text": "use those credentials to get request right into my database", "label": "ATTACK"}], "sentText": "my q w u is en i, hxw  xxxi xxt on s axx, e is \" use xxxh use  xx= nxx? y, i rl user   ize  xe thxt s xs thxt oxxy a that n xe   oxy n null\"? tit and xd xxxr a !== n  e xxxe bu xxxt t ss xxe xxt estxxn a, that  but ho ss w ey is it to become aut t ? xxt  n somexe sign up for the app, d xn  txxn use those credentials to get request right into my database o ? "}, {"sentId": 86, "articleId": "6", "threatType": "I", "relationMentions": [{"em1Text": "reverse engineer these from my binary", "em2Text": "use them in their app", "label": "None"}, {"em1Text": "reverse engineer these from my binary", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer these from my binary", "label": "PARENT"}, {"em1Text": "use them in their app", "em2Text": "reverse engineer my server's endpoint that i use to send text messages", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "reverse engineer these from my binary", "label": "None"}, {"em1Text": "reverse engineer my server's endpoint that i use to send text messages", "em2Text": "use them in their app", "label": "None"}], "entityMentions": [{"start": 158, "text": "reverse engineer these from my binary", "label": "ATTACK"}, {"start": 200, "text": "use them in their app", "label": "ATTACK"}, {"start": 300, "text": "reverse engineer my server's endpoint that i use to send text messages", "label": "ATTACK"}], "sentText": "after reading a little bit it seems like a bad idea to store the private keys for whatever 3rd party i'll use in the app (twilio, nexmo, etc). somebody could reverse engineer these from my binary and use them in their app. however, having these on the server doesn't help either, somebody could just reverse engineer my server's endpoint that i use to send text messages and use that instead. "}, {"sentId": 15, "articleId": "3", "threatType": "E", "relationMentions": [{"em1Text": "'hack' an apache server", "em2Text": "read php files", "label": "AND"}, {"em1Text": "'hack' an apache server", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "read php files", "em2Text": "'hack' an apache server", "label": "None"}, {"em1Text": "read php files", "em2Text": "access to files on the hard disk", "label": "None"}, {"em1Text": "access to files on the hard disk", "em2Text": "'hack' an apache server", "label": "PARENT"}, {"em1Text": "access to files on the hard disk", "em2Text": "read php files", "label": "None"}], "entityMentions": [{"start": 30, "text": "'hack' an apache server", "label": "ATTACK"}, {"start": 58, "text": "read php files", "label": "ATTACK"}, {"start": 337, "text": "access to files on the hard disk", "label": "ATTACK"}], "sentText": "is it possible for someone to 'hack' an apache server and read php files. i understand that php is a server-side language and cannot be read from anywhere other than the server, but could someone hack the server and read them as if reading a text file? well yes, if they ever actually hack into the server (ssh, ftp etc.), they may have access to files on the hard disk. a properly configured apache server will not serve raw php files though, it should always process them with the php interpreter first. "}, {"sentId": 143, "articleId": "6", "threatType": "T", "relationMentions": [{"em1Text": "sql injection", "em2Text": "stole credentials", "label": "PARENT"}, {"em1Text": "stole credentials", "em2Text": "sql injection", "label": "None"}], "entityMentions": [{"start": 653, "text": "sql injection", "label": "ATTACK"}, {"start": 683, "text": "stole credentials", "label": "ATTACK"}], "sentText": "i' login, m new into rest apis and developing an api t json hat is going to be used for ios for /android/web apps nc , with  but i'm unfamiliar with t if he kind   of  e threats the api to s face once and  published.i see these same t i ips all o data, ve web r:use oauth 2 to allow tr enough ansact sense ips  ions, but receiving and sending o to nl json y e if nc but rypted json web tokens,us  requests  the uld use  e  see ssl/ttl.i thin sending/receiving k using ssl/tls and jwt i  s uld ho unfamil rest iar uld  and  all be enough securit rest y   f go or sending/rec sql eiving data, but eve for n with that, i fear the p but ossibil jwt? ity of sql injection if  but someone stole credentials.should i check the requests for s jwt? ql injection st  rings ( and   [lin using k])?and if i'm go should ing to support user login,  t would i user t if  make  with i  more sense to use oauth instead of jwt? "}, {"sentId": 35, "articleId": "3", "threatType": "I", "relationMentions": [{"em1Text": "passwords will be revealed", "em2Text": "a compromised server", "label": "PARENT"}, {"em1Text": "a compromised server", "em2Text": "passwords will be revealed", "label": "None"}], "entityMentions": [{"start": 717, "text": "passwords will be revealed", "label": "ATTACK"}, {"start": 972, "text": "a compromised server", "label": "ATTACK"}], "sentText": "i am plann  xxxxxs o i no ng to no    aes_encrypt the passwords xn  i t bl  e he db, wh er  xn ic the  the h   me e.g. an   xf s t  hat i me f  o som db  aes_encrypt ebod is y the  xs somexxw abxe to xxxxxs the d somxxxw   b t o he xe y w n   on similar ' txe t be able to get t db  db  in the , xe   a  cce wixl a xe w b here xd xl e e  plaxxxe o xt. e cxxe r  xxxxv  er xxxxxxw  m someh g ow y code will mu  b i   nee db, d to h t at he a to ve   plain  acce  r g ss xo the k be ey t teps o stxxs  unxxc db xxxt xxe be m, thu  wondxxxxg i s if the e  ent i  the   in  ed ut ire  xxxxn xxr the ver is compr  omis k ee sit d now ed  xc thxs  xxxxs xs no xr b ote g cti the o  n me   xxxxs a what t xxxt o ever xd txe passwords will be revealed.  i kn the ow th this on  xt xxxxxxxr   i xo n , e  ult  imxt will xxy the p th b e assw i o     k plain xxxxw te now  ste the xs rds xb   g mu n   on s somxxxw eed  able st be xxxxs  sible xn p if lain to  g text xn xo b  d so a compromised server xxxn am s  g  unencryxt th  whatever i e sxxxh  passw the  t xxxs      o other ther xxe  xxxl be   revealed, b db ut i xm wondering what s s teps i can m  do t xxe  b be e o m is ixxxxxe xn g t   texs my r text isk. e.g. xxxxxxxxn the g txe db prot b ects me in the sit b    e u sxxxs g  ation   whxxe the db   i so s comprxxxxe  d bxt xo enxxxe  b t the nee  stexs the d  exxxxe serve o r. aes_enc at xy do pt  other  xxxxxxxxo simi g la g e.g.  r mi xo plain passwo c b ompxxxxxe rds     tixxt  xxxt to ing steps wou xxt ld  to   b xn g  be mu  am a ch appxxc  i t b  am o ated. ey ee   "}, {"sentId": 9, "articleId": "4", "threatType": "S", "relationMentions": [{"em1Text": "generates a random number between 0-1000", "em2Text": "their md5 hashes are known", "label": "AND"}, {"em1Text": "generates a random number between 0-1000", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "their md5 hashes are known", "em2Text": "verify the account without it really belonging to them", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "generates a random number between 0-1000", "label": "None"}, {"em1Text": "verify the account without it really belonging to them", "em2Text": "their md5 hashes are known", "label": "PARENT"}], "entityMentions": [{"start": 59, "text": "generates a random number between 0-1000", "label": "ATTACK"}, {"start": 137, "text": "their md5 hashes are known", "label": "ATTACK"}, {"start": 306, "text": "verify the account without it really belonging to them", "label": "ATTACK"}], "sentText": "is usin since g t he  st he method beo a w a bad choice? t generates a random number between 0-1000. since there ae on th y 0 o m p, and their md5 hashes are known, it shoul ials d take  ju an at at ae  c w ker ju wi  bew to th ju out ju ju    ju  a 0-1000. n generates d st a 1000 tr be u longing ials to verify the account without it really belonging to them "}, {"sentId": 51, "articleId": "1", "threatType": "S", "relationMentions": [{"em1Text": "direct posting of data to your site", "em2Text": "csrf", "label": "None"}, {"em1Text": "csrf", "em2Text": "direct posting of data to your site", "label": "PARENT"}], "entityMentions": [{"start": 591, "text": "direct posting of data to your site", "label": "ATTACK"}, {"start": 136, "text": "csrf", "label": "ATTACK"}], "sentText": "i'm it  writing a nd  t  djo restful ap rul ss-site&qu e i to k an s app, and i keep  django run (the ning into d think jano ss-situ 's csrf protectis w that heneve of r api  i we mes to dl w   wrg i heneve th post requests.my undersn s ding is tt cookies manag 3rd-y ed by io c s are nt s protections hared y  by   , meaning  daa that y sess deal  to n cookies are safe, a t nd no r application c i e n i k an rd that e to  on t. is this true? if so it , can i t mark all my api functions   as csrf? are  geney n   ts not the u an rpose of csrf prote. my  cs by rf n s to pn should  thik t direct posting of data to your site. (the  in otr ws sd , the client mt actuay post throu (the gh an a of pproved path, i.e. view the fom pag think  and e, fill clt  it  it o, st the n api  (e  client pry muh precl f udes csrf, submit  bes a e is entire purpoe i dea dg l s gey t an o allow 3rd-pt e y ent pretty ities to e by ss a and nd me data  ning  the on you i r just  site (the o api-et ss-  u do ot; in csrf). so, yes, i think as a rule  csrf). any api view sh  ould be protet e   csrf exemp r t. o io wever, you should st thas ill f ion w best c that tic 3ry s a pu nd p jango rot e &quot;cro ry api-endpoit that actually s a chang  ion data e h some r (the m of authentica,  best such s  r po ry g event pu  o think auth. "}, {"sentId": 34, "articleId": "1", "threatType": "S", "relationMentions": [], "entityMentions": [{"start": 62, "text": "csrf", "label": "ATTACK"}], "sentText": "i so s a    t of xs xxxxd   hey xxb sexxxc by e xxxxxxxxxe to csrf atxxxk if txe fol [code] lxxxxg  t xxe trxx? xxxxxxxxy quexxxxx: are [c no oxx] xxd from  xxxxx] re as quest xxr xo f s exxr xu se [l xxxxe lnerxxxe  axxxxxxxy xo csrf? (i.e.  xxxxe vuxxxxxxxe rabxe  i xxk becxxxe it seems that xxxt (e.  (all?) browsers dxs xxxxs xxl lowing t  ow these met xxxr xxxs true?  in htxl to  forxx. exxx: l  ots of (e.  g from xxd cxxxxxxs axd xxxxxxs xo fax, but n csrf o xxe  methoxs has fic  oxxxxxd a sxxxxxxc csrf axt xxt  is ack to xxxxh this txa wxxxe t  web sxxxxxe is vulnexxxxx. foxxxxg arxxxxxxy c true? xxf requxxxs xxxh arbixxxxy xxxxa types is xxxxxxxxxxy xn xxxg ly p xxxr xxxxxxe with xxx, becxxxe a [link] and a [l one the clxxxxs   inxx. xxxxxxx, [link xxxxxxt x. has [lxxk atxxxk ]  so th sent e o xo nly th xxr xxxxxxxxxl f reat comes spxxxxxc  fxxm xxxxxxxxd cxxf atxxxxx. xxd those wxxl only be sxxxxxxxxl xf txxy are f o rxm xxe saxe origin, so reat  xxxxxxxl your y xxxm fxxxxxg  your own sit sxxxxx. e some xxxxxxxxxe how (e. x. x that ss). xe nly  csr  caxxxxl nxt to mixxxxe xxxxxxxxg cxxs (i.e. not [l  xe txe txxxs y txxxg access-xxxxxo sxf lxxxxxxxxxi xxxxs gin: *) as a pxxxxxxxxx. xxxs simply xxxxxxxs cxxxxxs xxxm xxa is dixg the rexxxxxx. xxe whoxe request xs s  xxxy is t  reqxxxt requesxs xxl se from nt and  spexi n prxxxxxxxx. ot fic prxxxxxe  d xy the servex. "}, {"sentId": 105, "articleId": "4", "threatType": "D", "relationMentions": [{"em1Text": "no access restrictions", "em2Text": "attacked by dos etc", "label": "None"}, {"em1Text": "attacked by dos etc", "em2Text": "no access restrictions", "label": "PARENT"}], "entityMentions": [{"start": 78, "text": "no access restrictions", "label": "ATTACK"}, {"start": 130, "text": "attacked by dos etc", "label": "ATTACK"}], "sentText": "the load this server is normally subjected to is minimal, but since there are no access restrictions, the server can obviously be attacked by dos etc. "}, {"sentId": 25, "articleId": "6", "threatType": "E", "relationMentions": [{"em1Text": "the setup will be probed by a malicious user", "em2Text": "gain improper access", "label": "PARENT"}, {"em1Text": "gain improper access", "em2Text": "the setup will be probed by a malicious user", "label": "None"}], "entityMentions": [{"start": 15, "text": "the setup will be probed by a malicious user", "label": "ATTACK"}, {"start": 365, "text": "gain improper access", "label": "ATTACK"}], "sentText": "we assume that the setup will be probed by a malicious user. what is the worst that could happen? mysql provides various statements like show etc. that a user even having only select privileges could use to gather information about the database server or about my databases. other information could be obtained from error messages. while probably not sufficient to gain improper access, this information could surely help in doing so.there might be flaws in the database software, or in my scripts, or in the scripting language itself, that could allow a visitor to do things they are not supposed to be able to do through this interface.doing this might violate a terms of service agreement, particularly if i am using shared hosting. "}, {"sentId": 15, "articleId": "2", "threatType": "E", "relationMentions": [{"em1Text": "used the eval function for the exploit", "em2Text": "run their php code on your site", "label": "None"}, {"em1Text": "run their php code on your site", "em2Text": "used the eval function for the exploit", "label": "PARENT"}], "entityMentions": [{"start": 60, "text": "used the eval function for the exploit", "label": "ATTACK"}, {"start": 120, "text": "run their php code on your site", "label": "ATTACK"}], "sentText": "has anyone heard about php shell offender script? it mainly used the eval function for the exploit. hackers are able to run their php code on your site. "}, {"sentId": 65, "articleId": "4", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 289, "text": "rainbow table attacks", "label": "ATTACK"}], "sentText": "w se e e    m , if xxxxxxl  i acce is s  d som ersxxd e   d th nxe e x  xxxx d e a  if  o  of the f t   if  tht (w  h   is s is t , und    i  t i te s to serve     xxe reduce he xe  if   xxe cha  ne tt ac  cs  y  t t hae o   ou correctly,   w w s. il  ac  l e  sxm c a xxxl  r is omixd xy rainbow table attacks. s,  x? i und ree n i t f sem  ?    d tht by g t xn the da  xx st e it o t  ? u ce d e xxxxxl to c use k , he t r   e o t     rede ach , but what if t of l   e xe e  x d t s  exxxx nowxxr e  coe the  e   near e   xx? i  ew e  t cess aba?  som f i st ou e   a th o ud f e   coe  i m   e if t s  e salt vale  ,  wxb i  in e e (w xxxxxxl hh x  xd on t th he xxb exxxx  n  sv se er  a ld ? be in a  xxb cm e e ach sxm  p xxe id d) if , w o o sm xxxxxt t se  re t r the aw he e   x rede e  for  ce f an k d a re e de  i   e a t b salt ae e ew r   xxxe the    to s see  t om fxr w n xc to     e e d) h ss to the x?  (w it d ,  seem xx?  code  x e e e    e to me   to   e e be xxxe . "}, {"sentId": 49, "articleId": "6", "threatType": "R", "relationMentions": [{"em1Text": "convince users that an important message from a trusted site has been delivered", "em2Text": "trick those people into clicking through to some malware url ", "label": "None"}, {"em1Text": "trick those people into clicking through to some malware url ", "em2Text": "convince users that an important message from a trusted site has been delivered", "label": "None"}], "entityMentions": [{"start": 189, "text": "convince users that an important message from a trusted site has been delivered", "label": "ATTACK"}, {"start": 276, "text": "trick those people into clicking through to some malware url ", "label": "ATTACK"}], "sentText": " xxxx e xx xxxp   wix xxxxk xxxs   bu.    m to are a no to xxxl ,  and e \"xxxxxx s \" xx be th  at  . hxx xxr xxe  d  xs asxxd xt  ixy  k t xy es cxn uxe e.  xxd    b p  soe e  pxxxx f s xo convince users that an important message from a trusted site has been delivered, xn  d trick those people into clicking through to some malware url x m xr xx  xxx  us  xs xxxn u be st   the k  k x d  xe xx ce f mih \" t t a \"  .    and d yx, the xa  e xxxx. in pa   to g poxxp e  proxm f te  etx.  xxy  trixk te  s o   y  xx d txxs o y  x l e f xh xxxxxt  poxxp b  e xxm  xxxd xo xx pox  xo  x hoxxxxe p x x pr a om xt  fro t o a   e k  xxxxx xxxr xxxd o, xxt a xxxl t -cxxxxe xl o ick d pxxxp xx xxy n d some i xxxd xx exxxxxxxd xxx x t t . he xxxr a  c trud k  ad xy  xxo a  xn p d  e. m yex,  xxt b xxx   ick  asp  ext o  xt   of  f  c trk xxxxxxe . e x  d  ixxy  xy xxx xx  xx xxxxxd wh h  e xxxxxx p ixt  e  clik xxxn  y pxg k es xe pxx fxr m aspet   x on d   e  by my uxxxxxx thxxe y si  tes xs  expd a a of y to xxx mih  fo s r  cuxxxy xp xe \" us h xxs xx e  d   d   to e   \"   xxxxx xx x pxxxp xy fxr xxxh ce a e d im  xx m xxo xxt x, etx. n a  ts rex,   t  he sec  x xxxxp xxxy t o  not thrxu poxxp gh   f xxe  s   prom rex r y i xx  x importat be  xxxy s txe e x  \"xxxxxxxx  xxxd cu ad xy f xh  e us a   oe  es n xxxh trusted  d  txo that   l xxx dy  x r their  by own com a pxx y r and  x te s xxxxr xxs  xxg xxxxxxx. "}, {"sentId": 67, "articleId": "1", "threatType": "I", "relationMentions": [], "entityMentions": [{"start": 137, "text": "write malicious code", "label": "ATTACK"}], "sentText": "i want to make my application to run other people's code, aka plugins. however, what options do i have to make this secure so they don't write malicious code. how do i control what they can or can not do? "}, {"sentId": 41, "articleId": "1", "threatType": "T", "relationMentions": [{"em1Text": "rainbow table attacks", "em2Text": "salts can be easily reverse-engineered", "label": "None"}, {"em1Text": "salts can be easily reverse-engineered", "em2Text": "rainbow table attacks", "label": "PARENT"}], "entityMentions": [{"start": 280, "text": "rainbow table attacks", "label": "ATTACK"}, {"start": 548, "text": "salts can be easily reverse-engineered", "label": "ATTACK"}], "sentText": "i'm w sit. oxxxxg on a projec n t tha we  rx, t xe e  pn o re  t n x.   rxxxxxxxxx. reg as v  opxn sxu n rc, cn  bt xh rating e probm xs xxa e t wxxh the u t rce co w s th me e sexxe   that t foa for b  e bxxt st  gene bec be n ce ause g salt  s, xxd   thxxxxxxe e ay  and to xxn rainbow table attacks o sxxx. n xxr sit. i fie that s of pe v abiy e xxy  cod xxxs problem xe me, and i xxxg 'm xxg  i ey t t te bet prxxxxxe . it  hav  e s run ees to me txxt the for e is o pxxxt xxxg a st at all if t run xe xe is for  to    oxxn sou xe rce, bexxxxe salts can be easily reverse-engineered. "}]